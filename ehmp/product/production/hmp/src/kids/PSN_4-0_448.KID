KIDS Distribution saved on Apr 05, 2016@10:18:55
NATIONAL DRUG FILE
**KIDS**:PSN*4.0*448^

**INSTALL NAME**
PSN*4.0*448
"BLD",9519,0)
PSN*4.0*448^NATIONAL DRUG FILE^0^3160405^y
"BLD",9519,1,0)
^^3^3^3160220^
"BLD",9519,1,1,0)
This patch adds three components to the routine PSNAPIS, supported by
"BLD",9519,1,2,0)
Integration Control Registration (ICR) #2531, to provide  additional
"BLD",9519,1,3,0)
access to the NDC/UPN file (#50.67).
"BLD",9519,4,0)
^9.64PA^^
"BLD",9519,6)
2^
"BLD",9519,6.3)
4
"BLD",9519,"KRN",0)
^9.67PA^779.2^20
"BLD",9519,"KRN",.4,0)
.4
"BLD",9519,"KRN",.401,0)
.401
"BLD",9519,"KRN",.402,0)
.402
"BLD",9519,"KRN",.403,0)
.403
"BLD",9519,"KRN",.5,0)
.5
"BLD",9519,"KRN",.84,0)
.84
"BLD",9519,"KRN",3.6,0)
3.6
"BLD",9519,"KRN",3.8,0)
3.8
"BLD",9519,"KRN",9.2,0)
9.2
"BLD",9519,"KRN",9.8,0)
9.8
"BLD",9519,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",9519,"KRN",9.8,"NM",1,0)
PSNAPIS^^0^B46965553
"BLD",9519,"KRN",9.8,"NM","B","PSNAPIS",1)

"BLD",9519,"KRN",19,0)
19
"BLD",9519,"KRN",19.1,0)
19.1
"BLD",9519,"KRN",101,0)
101
"BLD",9519,"KRN",409.61,0)
409.61
"BLD",9519,"KRN",771,0)
771
"BLD",9519,"KRN",779.2,0)
779.2
"BLD",9519,"KRN",870,0)
870
"BLD",9519,"KRN",8989.51,0)
8989.51
"BLD",9519,"KRN",8989.52,0)
8989.52
"BLD",9519,"KRN",8994,0)
8994
"BLD",9519,"KRN","B",.4,.4)

"BLD",9519,"KRN","B",.401,.401)

"BLD",9519,"KRN","B",.402,.402)

"BLD",9519,"KRN","B",.403,.403)

"BLD",9519,"KRN","B",.5,.5)

"BLD",9519,"KRN","B",.84,.84)

"BLD",9519,"KRN","B",3.6,3.6)

"BLD",9519,"KRN","B",3.8,3.8)

"BLD",9519,"KRN","B",9.2,9.2)

"BLD",9519,"KRN","B",9.8,9.8)

"BLD",9519,"KRN","B",19,19)

"BLD",9519,"KRN","B",19.1,19.1)

"BLD",9519,"KRN","B",101,101)

"BLD",9519,"KRN","B",409.61,409.61)

"BLD",9519,"KRN","B",771,771)

"BLD",9519,"KRN","B",779.2,779.2)

"BLD",9519,"KRN","B",870,870)

"BLD",9519,"KRN","B",8989.51,8989.51)

"BLD",9519,"KRN","B",8989.52,8989.52)

"BLD",9519,"KRN","B",8994,8994)

"BLD",9519,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9519,"QUES",0)
^9.62^^
"BLD",9519,"REQB",0)
^9.611^1^1
"BLD",9519,"REQB",1,0)
PSN*4.0*296^2
"BLD",9519,"REQB","B","PSN*4.0*296",1)

"MBREQ")
0
"PKG",136,-1)
1^1
"PKG",136,0)
NATIONAL DRUG FILE^PSN^This is the National Drug File Package V 3.14
"PKG",136,22,0)
^9.49I^1^1
"PKG",136,22,1,0)
4.0^2981030^2981223^11595
"PKG",136,22,1,"PAH",1,0)
448^3160405^1
"PKG",136,22,1,"PAH",1,1,0)
^^3^3^3160405
"PKG",136,22,1,"PAH",1,1,1,0)
This patch adds three components to the routine PSNAPIS, supported by
"PKG",136,22,1,"PAH",1,1,2,0)
Integration Control Registration (ICR) #2531, to provide  additional
"PKG",136,22,1,"PAH",1,1,3,0)
access to the NDC/UPN file (#50.67).
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","PSNAPIS")
0^1^B46965553
"RTN","PSNAPIS",1,0)
PSNAPIS ;BIR/DMA-APIs for NDF ;03/14/2016
"RTN","PSNAPIS",2,0)
 ;;4.0;NATIONAL DRUG FILE;**2,3,47,70,169,108,262,296,448**;30 Oct 98;Build 4
"RTN","PSNAPIS",3,0)
PSA(NDC,LIST) ;ENTRY FOR DRUG ACCOUNTABILITY
"RTN","PSNAPIS",4,0)
 N Y,PN,PN1,P50,J
"RTN","PSNAPIS",5,0)
 S Y=$Q(^PSNDF(50.67,"NDC",NDC)) I $QS(Y,3)'=NDC Q 0
"RTN","PSNAPIS",6,0)
 S Y=^PSNDF(50.67,$QS(Y,4),0),Y=$P(Y,"^",6),PN=$P(^PSNDF(50.68,Y,0),"^"),PN1=$E(PN,1,30)
"RTN","PSNAPIS",7,0)
 S P50=0,J=0 F  S P50=$O(^PSDRUG("VAPN",PN1,P50)) Q:'P50  I $P(^PSDRUG(P50,"ND"),"^",2)=PN S LIST(P50)=$P(^PSDRUG(P50,0),"^"),J=J+1
"RTN","PSNAPIS",8,0)
 Q J
"RTN","PSNAPIS",9,0)
PSJING(DA1,K,LIST) ;ENTRY FOR INGREDIENTS
"RTN","PSNAPIS",10,0)
 N X,CT
"RTN","PSNAPIS",11,0)
 I 'K!('$D(^PSNDF(50.68,+K))) Q 0
"RTN","PSNAPIS",12,0)
 S DA=0 F CT=0:1 S DA=$O(^PSNDF(50.68,K,2,DA)) Q:'DA  S X=^(DA,0),LIST(+X)=+X_"^"_$P(^PS(50.416,+X,0),"^")_"^"_$P(X,"^",2)_"^" S:$P(X,"^",3)]"" LIST(+X)=LIST(+X)_$P($G(^PS(50.607,$P(X,"^",3),0)),"^")
"RTN","PSNAPIS",13,0)
 Q CT
"RTN","PSNAPIS",14,0)
PSJDF(DA,K) ;GET DOSE FORM
"RTN","PSNAPIS",15,0)
 N X,DF
"RTN","PSNAPIS",16,0)
 I 'K!('$D(^PSNDF(50.68,+K))) Q 0
"RTN","PSNAPIS",17,0)
 S X=$P(^PSNDF(50.68,K,0),"^",3),DF=$P($G(^PS(50.606,X,0)),"^")
"RTN","PSNAPIS",18,0)
 Q X_"^"_DF
"RTN","PSNAPIS",19,0)
PSJST(DA,K) ;ENTRY FOR STRENGTH
"RTN","PSNAPIS",20,0)
 I 'K!('$D(^PSNDF(50.68,K))) Q 0
"RTN","PSNAPIS",21,0)
 Q 1_"^"_$P(^PSNDF(50.68,K,0),"^",4)
"RTN","PSNAPIS",22,0)
CLASS(CL) ;ENTRY FOR OE/RR TO GET CLASS $D
"RTN","PSNAPIS",23,0)
 I CL']"" Q 0
"RTN","PSNAPIS",24,0)
 Q $D(^PS(50.605,"C",CL))>0
"RTN","PSNAPIS",25,0)
DRUG(DA) ;ENTRY FOR OE/RR TO GET DRUG $D
"RTN","PSNAPIS",26,0)
 I DA']"" Q 0
"RTN","PSNAPIS",27,0)
 Q $D(^PSNDF(50.6,"B",DA))!$D(^PSNDF(50.67,"T",DA))
"RTN","PSNAPIS",28,0)
PROD0(P1,P2) ;GET INFO IN THE FORM OF THE OLD 0 PRODUCT NODE
"RTN","PSNAPIS",29,0)
 N A,B
"RTN","PSNAPIS",30,0)
 I P2']"" Q ""
"RTN","PSNAPIS",31,0)
 S A=$G(^PSNDF(50.68,P2,0)),B=$G(^(1))
"RTN","PSNAPIS",32,0)
 Q $P(A,"^")_"^"_$P(A,"^",3,5)_"^^^"_$P(B,"^",5,6)
"RTN","PSNAPIS",33,0)
PROD2(P1,P2) ;GET OLD 2 NODE
"RTN","PSNAPIS",34,0)
 I P2']"" Q ""
"RTN","PSNAPIS",35,0)
 Q $P($G(^PSNDF(50.68,P2,1)),"^",1,3)_"^"_$P($G(^PSNDF(50.64,+$P(^PSNDF(50.68,P2,1),"^",4),0)),"^")
"RTN","PSNAPIS",36,0)
DCLASS(DA,K) ;GET CLASS FOR PRODUCT
"RTN","PSNAPIS",37,0)
 I K']"" Q ""
"RTN","PSNAPIS",38,0)
 S X=+$P($G(^PSNDF(50.68,+K,3)),"^"),Y=$P($G(^PS(50.605,X,0)),"^",2)
"RTN","PSNAPIS",39,0)
 Q X_"^"_Y
"RTN","PSNAPIS",40,0)
DCLCODE(DA,K) ;RETURN VA CLASS CODE
"RTN","PSNAPIS",41,0)
 I K']"" Q ""
"RTN","PSNAPIS",42,0)
 S X=+$P($G(^PSNDF(50.68,+K,3)),"^"),X=$P($G(^PS(50.605,X,0)),"^")
"RTN","PSNAPIS",43,0)
 Q X
"RTN","PSNAPIS",44,0)
VAGN(DA) ;GET VA GENERIC NAME
"RTN","PSNAPIS",45,0)
 I 'DA!'$D(^PSNDF(50.6,+DA,0)) Q 0
"RTN","PSNAPIS",46,0)
 Q $P(^PSNDF(50.6,+DA,0),"^")
"RTN","PSNAPIS",47,0)
FORMI(DA,K) ;GET FORMULARY INDICATOR FOR VA PRODUCT
"RTN","PSNAPIS",48,0)
 Q $P($G(^PSNDF(50.68,+K,5)),"^")
"RTN","PSNAPIS",49,0)
FORMR(DA,K) ;GET EXISTENCE OF FORMULARY RESTRICTIONS
"RTN","PSNAPIS",50,0)
 Q $O(^PSNDF(50.68,+K,6,0))]""
"RTN","PSNAPIS",51,0)
DFSU(DA,K) ;RETURN DOSE FORM, STRENGTH, AND UNITS FOR PDM AND CPRS
"RTN","PSNAPIS",52,0)
 N U1,UN
"RTN","PSNAPIS",53,0)
 I 'K!('$D(^PSNDF(50.68,+K,0))) Q 0
"RTN","PSNAPIS",54,0)
 S U1=+$P(^PSNDF(50.68,+K,0),"^",5),UN=$P($G(^PS(50.607,U1,0)),"^")
"RTN","PSNAPIS",55,0)
 Q $$PSJDF(DA,K)_"^"_$$PSJST(DA,K)_"^"_U1_"^"_UN
"RTN","PSNAPIS",56,0)
VAP(DA,LIST) ;GIVEN GENERIC RETURN ARRAY LIST(IEN)=IEN^PRODUCT^DF PTR^DOSE FOMR
"RTN","PSNAPIS",57,0)
 N PR,J,X
"RTN","PSNAPIS",58,0)
 I 'DA!'$D(^PSNDF(50.6,+DA)) Q 0
"RTN","PSNAPIS",59,0)
 S PR=0,J=0 F  S PR=$O(^PSNDF(50.6,"APRO",DA,PR)) Q:'PR  S X=^PSNDF(50.68,PR,0),DAT=$P($G(^(7)),"^",3) D
"RTN","PSNAPIS",60,0)
 .S LIST(PR)=PR_"^"_$P(X,"^")_"^"_$P(X,"^",3)_"^"_$P($G(^PS(50.606,+$P(X,"^",3),0)),"^")_"^"_$P(^PSNDF(50.68,PR,3),"^")_"^"_$P($G(^PS(50.605,+$P(^PSNDF(50.68,PR,3),"^"),0)),"^"),J=J+1 I DAT,(DAT<DT) S LIST(PR)=LIST(PR)_"^I"
"RTN","PSNAPIS",61,0)
 Q J
"RTN","PSNAPIS",62,0)
PSPT(DA,K,LIST) ;GIVEN PRODUCT K RETURN LIST(INE1^IEN2)=IEN1^PSIZE^IEN1^PTYPE
"RTN","PSNAPIS",63,0)
 N NDC,J,PT,PS
"RTN","PSNAPIS",64,0)
 I 'K!'$D(^PSNDF(50.68,+K)) Q 0
"RTN","PSNAPIS",65,0)
 S NDC=0 F J=0:1 S NDC=$O(^PSNDF(50.68,"ANDC",K,NDC)) Q:'NDC  S X=^PSNDF(50.67,NDC,0),PS=$P(X,"^",8),PT=$P(X,"^",9),LIST(PS_"^"_PT)=PS_"^"_$P($G(^PS(50.609,PS,0)),"^")_"^"_PT_"^"_$P($G(^PS(50.608,PT,0)),"^")
"RTN","PSNAPIS",66,0)
 Q J
"RTN","PSNAPIS",67,0)
DSS(DA,K,DATE) ;RETURN DSS FEEDER KEY
"RTN","PSNAPIS",68,0)
 S DATE=$G(DATE,999999)
"RTN","PSNAPIS",69,0)
 I DATE'<199810 Q $S($D(^PSNDF(50.68,+K)):$$RJ^XLFSTR(K,5,0),1:"00000")
"RTN","PSNAPIS",70,0)
 I $D(^PSNDF(50.6,+DA)),$D(^PSNDF(50.68,+K,7)) Q $$RJ^XLFSTR(DA,4,0)_$$RJ^XLFSTR($P(^PSNDF(50.68,+K,7),"^",9),3,0)
"RTN","PSNAPIS",71,0)
 Q "0000000"
"RTN","PSNAPIS",72,0)
CPRS(DA,K) ;CALL FOR CPRS
"RTN","PSNAPIS",73,0)
 N CL,X,DF,ST,UN
"RTN","PSNAPIS",74,0)
 I '$D(^PSNDF(50.68,+K)) Q 0
"RTN","PSNAPIS",75,0)
 S CL=$P($G(^PS(50.605,+$P(^PSNDF(50.68,K,3),"^"),0)),"^")
"RTN","PSNAPIS",76,0)
 S X=^PSNDF(50.68,K,0),DF=+$P(X,"^",3),ST=$P(X,"^",4),UN=+$P(X,"^",5)
"RTN","PSNAPIS",77,0)
 Q $P($G(^PS(50.606,DF,0)),"^")_"^"_CL_"^"_ST_"^"_$P($G(^PS(50.607,UN,0)),"^")
"RTN","PSNAPIS",78,0)
CIRN(NDC,LIST) ;CALL FOR CIRN
"RTN","PSNAPIS",79,0)
 N DA,X,A
"RTN","PSNAPIS",80,0)
 I NDC["-" S NDC=$$RJ^XLFSTR($P(NDC,"-"),6,0)_$$RJ^XLFSTR($P(NDC,"-",2),4,0)_$$RJ^XLFSTR($P(NDC,"-",3),2,0)
"RTN","PSNAPIS",81,0)
 K LIST S LIST="000000000000" F J=1:1:7 S LIST(J)=""
"RTN","PSNAPIS",82,0)
 S DA=$O(^PSNDF(50.67,"NDC",NDC,0)) Q:'DA  S X=^PSNDF(50.67,DA,0),LIST(7)=$P(X,"^",2)_"^"_$P(X,"^",4,6)_"^",A=0 F  S A=$O(^PSNDF(50.67,DA,1,A)) Q:'A  S LIST(7)=LIST(7)_^(A,0)_" "
"RTN","PSNAPIS",83,0)
 S LIST(6)=$P(X,"^",9),LIST(5)=$P(X,"^",8),A=$P(X,"^",6),X=^PSNDF(50.68,A,0)
"RTN","PSNAPIS",84,0)
 S LIST(2)=$P(X,"^",3)_"^^"_$P(^PSNDF(50.68,A,3),"^"),LIST(3)=$P(X,"^",4),LIST(4)=$P(X,"^",5)
"RTN","PSNAPIS",85,0)
 S LIST(0)=$P(X,"^",2),LIST(1)=^PSNDF(50.6,$P(X,"^",2),0),LIST=NDC
"RTN","PSNAPIS",86,0)
 F J=1:1:7 I LIST(J)="NO DATA" S LIST(J)=""
"RTN","PSNAPIS",87,0)
 Q
"RTN","PSNAPIS",88,0)
B() ;RETURNS THE GLOBAL ROOT OF THE "B" CROSSREFERENCE IN NDF
"RTN","PSNAPIS",89,0)
 Q "^PSNDF(50.6,""B"")"
"RTN","PSNAPIS",90,0)
T() ;RETURNS THE GLOBAL ROOT OF THE "T" CROSSREFERENCE IN NDF
"RTN","PSNAPIS",91,0)
 Q "^PSNDF(50.67,""T"")"
"RTN","PSNAPIS",92,0)
TTOG(TRADE,LIST) ;RETURNS LIST(IEN)=IEN_"^"GENERIC FOR EVERY ENTRY IN 50.6 WHICH MATCHES THE TRADE NAME
"RTN","PSNAPIS",93,0)
 I TRADE="" Q 0
"RTN","PSNAPIS",94,0)
 N X,CT
"RTN","PSNAPIS",95,0)
 I '$O(^PSNDF(50.67,"T",TRADE,0)) Q 0
"RTN","PSNAPIS",96,0)
 S (X,CT)=0 F  S X=$O(^PSNDF(50.67,"T",TRADE,X)) Q:'X  S Y=$P(^PSNDF(50.67,X,0),"^",6),Y=$P(^PSNDF(50.68,Y,0),"^",2) I '$D(LIST(Y)) S LIST(Y)=Y_"^"_$P(^PSNDF(50.6,Y,0),"^"),CT=CT+1
"RTN","PSNAPIS",97,0)
 Q CT
"RTN","PSNAPIS",98,0)
CLIST(DA,LIST) ;RETURNS LIST(IEN)=IEN IN 50.605^CLASS CODE
"RTN","PSNAPIS",99,0)
 I 'DA Q 0
"RTN","PSNAPIS",100,0)
 I '$D(^PSNDF(50.6,+DA)) Q 0
"RTN","PSNAPIS",101,0)
 N K,CT S (K,CT)=0 F  S K=$O(^PSNDF(50.6,"APRO",DA,K)) Q:'K  S IEN=$P(^PSNDF(50.68,K,3),"^") I '$D(LIST(IEN)) S LIST(IEN)=IEN_"^"_$P(^PS(50.605,IEN,0),"^"),CT=CT+1
"RTN","PSNAPIS",102,0)
 Q CT
"RTN","PSNAPIS",103,0)
TGTOG(NAME) ;GIVEN NAME TRY TO FIND IT IN T OR B CROSS REFERENCE AND RETURN IEN
"RTN","PSNAPIS",104,0)
 N X
"RTN","PSNAPIS",105,0)
 I NAME="" Q 0
"RTN","PSNAPIS",106,0)
 S X=$O(^PSNDF(50.6,"B",NAME,0)) I X Q X
"RTN","PSNAPIS",107,0)
 I '$O(^PSNDF(50.67,"T",NAME,0)) Q 0
"RTN","PSNAPIS",108,0)
 S X=$O(^PSNDF(50.67,"T",NAME,0)),X=$P(^PSNDF(50.67,X,0),"^",6),X=$P(^PSNDF(50.68,X,0),"^",2) Q X
"RTN","PSNAPIS",109,0)
TGTOG2(NAME,LIST) ;PARTIAL LOOKUP ON T OR B
"RTN","PSNAPIS",110,0)
 I NAME="" Q
"RTN","PSNAPIS",111,0)
 N NAM,X,Y,CT
"RTN","PSNAPIS",112,0)
 S CT=0
"RTN","PSNAPIS",113,0)
 S NAM=$E(NAME,1,$L(NAME)-1)_$C($A($E(NAME,$L(NAME)))-1)_"z" F  S NAM=$O(^PSNDF(50.6,"B",NAM)),X=0 Q:NAM'[NAME  F  S X=$O(^PSNDF(50.6,"B",NAM,X)) Q:'X  S LIST(X)=X_"^"_$P(^PSNDF(50.6,X,0),"^"),CT=CT+1
"RTN","PSNAPIS",114,0)
 S NAM=$E(NAME,1,$L(NAME)-1)_$C($A($E(NAME,$L(NAME)))-1)_"z" F  S NAM=$O(^PSNDF(50.67,"T",NAM)),X=0 Q:NAM'[NAME  F  S X=$O(^PSNDF(50.67,"T",NAM,X)) Q:'X  S Y=$P(^PSNDF(50.67,X,0),"^",6),Y=$P(^PSNDF(50.68,Y,0),"^",2) D
"RTN","PSNAPIS",115,0)
 .I '$D(LIST(Y)) S LIST(Y)=Y_"^"_$P(^PSNDF(50.6,Y,0),"^"),CT=CT+1
"RTN","PSNAPIS",116,0)
 Q CT
"RTN","PSNAPIS",117,0)
CIRN2(P1,P3,LIST) ;RETURN LIST OF NDCS FOR A PRODUCT
"RTN","PSNAPIS",118,0)
 I 'P3 Q 0
"RTN","PSNAPIS",119,0)
 I '$D(^PSNDF(50.68,+P3)) Q 0
"RTN","PSNAPIS",120,0)
 N D,N,J
"RTN","PSNAPIS",121,0)
 S N=0
"RTN","PSNAPIS",122,0)
 F J=0:1 S N=$O(^PSNDF(50.68,"ANDC",P3,N)) Q:'N  S LIST(J)=$P(^PSNDF(50.67,N,0),"^",2)
"RTN","PSNAPIS",123,0)
 Q J
"RTN","PSNAPIS",124,0)
CLASS2(IEN) ;RETURNS FIRST 2 PIECES OF ZERO NODE OF 50.605
"RTN","PSNAPIS",125,0)
 Q $P($G(^PS(50.605,+IEN,0)),"^",1,2)
"RTN","PSNAPIS",126,0)
CMOP(CODE) ;CODE = 5 CHARACTER CMOP CODE RETURNS PRODUCT NAME
"RTN","PSNAPIS",127,0)
 I CODE="" Q ""
"RTN","PSNAPIS",128,0)
 I '$O(^PSNDF(50.68,"C",CODE,0)) Q ""
"RTN","PSNAPIS",129,0)
 Q $P(^PSNDF(50.68,+$O(^PSNDF(50.68,"C",CODE,0)),0),"^")
"RTN","PSNAPIS",130,0)
FORMRX(DA,K,LIST) ;RETURN X=1 FOR RESTRICTIONS, 0 FOR NO
"RTN","PSNAPIS",131,0)
 I '$O(^PSNDF(50.68,+K,6,0)) Q 0
"RTN","PSNAPIS",132,0)
 M LIST=^PSNDF(50.68,+K,6) Q 1
"RTN","PSNAPIS",133,0)
DDIEX(DA,K) ;RETURN X=1 FOR EXCLUDE DDI CHECK, 0 FOR CONTINUE DDI CHECK
"RTN","PSNAPIS",134,0)
 I '$G(^PSNDF(50.68,+K,8)) Q 0
"RTN","PSNAPIS",135,0)
 I $G(^PSNDF(50.68,+K,8)) Q 1
"RTN","PSNAPIS",136,0)
OVRIDE(PSNPOV1,PSNPOV3) ;Return Override Dose Form Exclusion
"RTN","PSNAPIS",137,0)
 I '$G(PSNPOV3) Q ""
"RTN","PSNAPIS",138,0)
 Q $P($G(^PSNDF(50.68,+PSNPOV3,9)),"^")
"RTN","PSNAPIS",139,0)
FDAMG(IEN) ;RETURN URL FOR MED GUIDE OR NULL
"RTN","PSNAPIS",140,0)
 Q $P($G(^PSNDF(50.68,IEN,"MG")),"^")
"RTN","PSNAPIS",141,0)
POSDOS(IEN) ; Return Possible Dosage Auto-Creation Related fields
"RTN","PSNAPIS",142,0)
 Q $G(^PSNDF(50.68,IEN,"DOS"))
"RTN","PSNAPIS",143,0)
REDCOP(IEN,DATE) ; RETURN REDUCED COPAY FLAG (1/0)
"RTN","PSNAPIS",144,0)
 N FLG,II,PSNRED,Y1,Y2
"RTN","PSNAPIS",145,0)
 I '$O(^PSNDF(50.68,IEN,10,0)) Q 0
"RTN","PSNAPIS",146,0)
 S (FLG,II)=0 F  S II=$O(^PSNDF(50.68,IEN,10,II)) Q:'II  S PSNRED=$G(^(II,0)),Y1=$P(PSNRED,"^"),Y2=$P(PSNRED,"^",2) D
"RTN","PSNAPIS",147,0)
 .I Y1,Y2 I DATE'<Y1&(DATE'>Y2) S FLG=1
"RTN","PSNAPIS",148,0)
 .I Y1,'Y2 I DATE'<Y1 S FLG=1
"RTN","PSNAPIS",149,0)
 Q FLG
"RTN","PSNAPIS",150,0)
INTRAN(SCR) ; input transform lookup for fields that store NDC codes
"RTN","PSNAPIS",151,0)
 N D,DIC,Y
"RTN","PSNAPIS",152,0)
 S DIC("S")="I $P(^(0),U,7)=""""!($P(^(0),U,7)>DT)"
"RTN","PSNAPIS",153,0)
 I $G(SCR)'="" S DIC("S")=SCR
"RTN","PSNAPIS",154,0)
 S DIC="^PSNDF(50.67,",DIC(0)="EMQZ"
"RTN","PSNAPIS",155,0)
 S D="A" D IX^DIC
"RTN","PSNAPIS",156,0)
 I +$G(Y)>0 S X=$P(Y(0),"^",2)
"RTN","PSNAPIS",157,0)
 I $G(Y)=-1 K X
"RTN","PSNAPIS",158,0)
 Q
"RTN","PSNAPIS",159,0)
DRGCLS(IEN) ; return class and parent class for NDC
"RTN","PSNAPIS",160,0)
 N PSNP,PSNDC,PSNCLS
"RTN","PSNAPIS",161,0)
 S PSNCLS=""
"RTN","PSNAPIS",162,0)
 S PSNP=$P($G(^PSNDF(50.67,IEN,0)),"^",6) Q:'PSNP PSNCLS
"RTN","PSNAPIS",163,0)
 S PSNDC=$P($G(^PSNDF(50.68,PSNP,3)),"^") Q:'PSNDC PSNCLS
"RTN","PSNAPIS",164,0)
 S PSNCLS=$$GET1^DIQ(50.605,PSNDC,.01)_"^"_$$GET1^DIQ(50.605,PSNDC,2)
"RTN","PSNAPIS",165,0)
 Q PSNCLS
"RTN","PSNAPIS",166,0)
QLIST(SCR) ; executable help ("?" or "??") for fields that store NDC codes
"RTN","PSNAPIS",167,0)
 N D,DIC,DO,X
"RTN","PSNAPIS",168,0)
 S DIC("S")="I $P(^(0),U,7)=""""!($P(^(0),U,7)>DT)"
"RTN","PSNAPIS",169,0)
 I $G(SCR)'="" S DIC("S")=SCR
"RTN","PSNAPIS",170,0)
 S X="?",DIC="^PSNDF(50.67,",DIC(0)="EQS",D="NDC"
"RTN","PSNAPIS",171,0)
 D IX^DIC
"RTN","PSNAPIS",172,0)
 Q
"VER")
8.0^22.0
**END**
**END**
