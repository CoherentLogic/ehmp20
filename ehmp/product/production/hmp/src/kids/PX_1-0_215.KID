KIDS Distribution saved on Apr 11, 2016@11:54:55
PX 215
**KIDS**:PX*1.0*215^

**INSTALL NAME**
PX*1.0*215
"BLD",9545,0)
PX*1.0*215^PCE PATIENT CARE ENCOUNTER^0^3160411^y
"BLD",9545,1,0)
^^5^5^3160302^
"BLD",9545,1,1,0)
The Veterans Health Information Systems and Technology Architecture
"BLD",9545,1,2,0)
(VistA) Immunizations Enhancements (VIMM) 2.0 project, Increment 3, builds
"BLD",9545,1,3,0)
upon the file structures and standardized data introduced in Increments 1
"BLD",9545,1,4,0)
and 2 by adding functional enhancements to the existing VistA Patient Care
"BLD",9545,1,5,0)
Encounter (PCE) package.
"BLD",9545,4,0)
^9.64PA^9000010.12^8
"BLD",9545,4,811.1,0)
811.1
"BLD",9545,4,811.1,2,0)
^9.641^811.1^1
"BLD",9545,4,811.1,2,811.1,0)
PCE CODE MAPPING  (File-top level)
"BLD",9545,4,811.1,2,811.1,1,0)
^9.6411^^
"BLD",9545,4,811.1,222)
y^n^p^^^^n^^n
"BLD",9545,4,811.1,224)

"BLD",9545,4,920.05,0)
920.05
"BLD",9545,4,920.05,222)
y^y^f^^^^n
"BLD",9545,4,920.4,0)
920.4
"BLD",9545,4,920.4,2,0)
^9.641^920.4^1
"BLD",9545,4,920.4,2,920.4,0)
IMM CONTRAINDICATION REASONS  (File-top level)
"BLD",9545,4,920.4,2,920.4,1,0)
^9.6411^.05^1
"BLD",9545,4,920.4,2,920.4,1,.05,0)
CONCEPT CODING SYSTEM
"BLD",9545,4,920.4,222)
y^y^p^^^^n^^n
"BLD",9545,4,920.4,224)

"BLD",9545,4,920.6,0)
920.6
"BLD",9545,4,920.6,222)
y^y^f^^^^n
"BLD",9545,4,9000010.11,0)
9000010.11
"BLD",9545,4,9000010.11,222)
y^y^f^^^^n^^n
"BLD",9545,4,9000010.11,224)

"BLD",9545,4,9000010.12,0)
9000010.12
"BLD",9545,4,9000010.12,2,0)
^9.641^9000010.12^1
"BLD",9545,4,9000010.12,2,9000010.12,0)
V SKIN TEST  (File-top level)
"BLD",9545,4,9000010.12,2,9000010.12,1,0)
^9.6411^^
"BLD",9545,4,9000010.12,222)
y^n^p^^^^n^^n
"BLD",9545,4,9000010.12,224)

"BLD",9545,4,9000010.707,0)
9000010.707
"BLD",9545,4,9000010.707,222)
y^y^f^^^^n
"BLD",9545,4,9999999.41,0)
9999999.41
"BLD",9545,4,9999999.41,2,0)
^9.641^9999999.41^1
"BLD",9545,4,9999999.41,2,9999999.41,0)
IMMUNIZATION LOT  (File-top level)
"BLD",9545,4,9999999.41,2,9999999.41,1,0)
^9.6411^.18^1
"BLD",9545,4,9999999.41,2,9999999.41,1,.18,0)
NDC CODE (VA)
"BLD",9545,4,9999999.41,222)
y^y^p^^^^n^^n
"BLD",9545,4,9999999.41,224)

"BLD",9545,4,"APDD",811.1,811.1)

"BLD",9545,4,"APDD",920.4,920.4)

"BLD",9545,4,"APDD",920.4,920.4,.05)

"BLD",9545,4,"APDD",9000010.12,9000010.12)

"BLD",9545,4,"APDD",9999999.41,9999999.41)

"BLD",9545,4,"APDD",9999999.41,9999999.41,.18)

"BLD",9545,4,"B",811.1,811.1)

"BLD",9545,4,"B",920.05,920.05)

"BLD",9545,4,"B",920.4,920.4)

"BLD",9545,4,"B",920.6,920.6)

"BLD",9545,4,"B",9000010.11,9000010.11)

"BLD",9545,4,"B",9000010.12,9000010.12)

"BLD",9545,4,"B",9000010.707,9000010.707)

"BLD",9545,4,"B",9999999.41,9999999.41)

"BLD",9545,6)
2^
"BLD",9545,6.3)
10
"BLD",9545,"ABPKG")
n
"BLD",9545,"INI")

"BLD",9545,"INID")
^n^
"BLD",9545,"INIT")
POST^PXVP215
"BLD",9545,"KRN",0)
^9.67PA^779.2^20
"BLD",9545,"KRN",.4,0)
.4
"BLD",9545,"KRN",.401,0)
.401
"BLD",9545,"KRN",.402,0)
.402
"BLD",9545,"KRN",.403,0)
.403
"BLD",9545,"KRN",.5,0)
.5
"BLD",9545,"KRN",.84,0)
.84
"BLD",9545,"KRN",3.6,0)
3.6
"BLD",9545,"KRN",3.8,0)
3.8
"BLD",9545,"KRN",9.2,0)
9.2
"BLD",9545,"KRN",9.8,0)
9.8
"BLD",9545,"KRN",9.8,"NM",0)
^9.68A^35^32
"BLD",9545,"KRN",9.8,"NM",1,0)
PXAI^^0^B42819168
"BLD",9545,"KRN",9.8,"NM",3,0)
PXAPIIM^^0^B72372554
"BLD",9545,"KRN",9.8,"NM",4,0)
PXKENC^^0^B29334197
"BLD",9545,"KRN",9.8,"NM",5,0)
PXPXRM^^0^B125590932
"BLD",9545,"KRN",9.8,"NM",6,0)
PXPXRMI1^^0^B104225670
"BLD",9545,"KRN",9.8,"NM",7,0)
PXRPC^^0^B156917264
"BLD",9545,"KRN",9.8,"NM",8,0)
PXAIICR^^0^B5253575
"BLD",9545,"KRN",9.8,"NM",9,0)
PXAIICRV^^0^B12775865
"BLD",9545,"KRN",9.8,"NM",10,0)
PXKFICR^^0^B1725753
"BLD",9545,"KRN",9.8,"NM",11,0)
PXCEAE^^0^B33109650
"BLD",9545,"KRN",9.8,"NM",12,0)
PXCEAE1^^0^B29262597
"BLD",9545,"KRN",9.8,"NM",13,0)
PXCEICR^^0^B18593217
"BLD",9545,"KRN",9.8,"NM",14,0)
PXCEVFI1^^0^B31566267
"BLD",9545,"KRN",9.8,"NM",15,0)
PXCEVFI2^^0^B37818294
"BLD",9545,"KRN",9.8,"NM",16,0)
PXCEVFIL^^0^B44185519
"BLD",9545,"KRN",9.8,"NM",17,0)
PXCEVIMM^^0^B85247952
"BLD",9545,"KRN",9.8,"NM",18,0)
PXKFIMM^^0^B5142444
"BLD",9545,"KRN",9.8,"NM",19,0)
PXVUTIL^^0^B13284181
"BLD",9545,"KRN",9.8,"NM",20,0)
PXKMAIN^^0^B55424847
"BLD",9545,"KRN",9.8,"NM",21,0)
PXKMAIN2^^0^B25829818
"BLD",9545,"KRN",9.8,"NM",22,0)
PXKFPOV1^^0^B9458058
"BLD",9545,"KRN",9.8,"NM",24,0)
PXVRPC1^^0^B70359613
"BLD",9545,"KRN",9.8,"NM",25,0)
PXVRPC2^^0^B29476719
"BLD",9545,"KRN",9.8,"NM",26,0)
PXVRPC3^^0^B28618741
"BLD",9545,"KRN",9.8,"NM",27,0)
PXVRPC4^^0^B131321819
"BLD",9545,"KRN",9.8,"NM",28,0)
PXVZRT^^0^B82546869
"BLD",9545,"KRN",9.8,"NM",29,0)
PXVRPC5^^0^B35105697
"BLD",9545,"KRN",9.8,"NM",30,0)
PXKFCPT1^^0^B24656697
"BLD",9545,"KRN",9.8,"NM",31,0)
PXAIIMM^^0^B16045767
"BLD",9545,"KRN",9.8,"NM",32,0)
PXVNDC^^0^B1736379
"BLD",9545,"KRN",9.8,"NM",34,0)
PXVRESP^^0^B3798384
"BLD",9545,"KRN",9.8,"NM",35,0)
PXVRPC6^^0^B16158307
"BLD",9545,"KRN",9.8,"NM","B","PXAI",1)

"BLD",9545,"KRN",9.8,"NM","B","PXAIICR",8)

"BLD",9545,"KRN",9.8,"NM","B","PXAIICRV",9)

"BLD",9545,"KRN",9.8,"NM","B","PXAIIMM",31)

"BLD",9545,"KRN",9.8,"NM","B","PXAPIIM",3)

"BLD",9545,"KRN",9.8,"NM","B","PXCEAE",11)

"BLD",9545,"KRN",9.8,"NM","B","PXCEAE1",12)

"BLD",9545,"KRN",9.8,"NM","B","PXCEICR",13)

"BLD",9545,"KRN",9.8,"NM","B","PXCEVFI1",14)

"BLD",9545,"KRN",9.8,"NM","B","PXCEVFI2",15)

"BLD",9545,"KRN",9.8,"NM","B","PXCEVFIL",16)

"BLD",9545,"KRN",9.8,"NM","B","PXCEVIMM",17)

"BLD",9545,"KRN",9.8,"NM","B","PXKENC",4)

"BLD",9545,"KRN",9.8,"NM","B","PXKFCPT1",30)

"BLD",9545,"KRN",9.8,"NM","B","PXKFICR",10)

"BLD",9545,"KRN",9.8,"NM","B","PXKFIMM",18)

"BLD",9545,"KRN",9.8,"NM","B","PXKFPOV1",22)

"BLD",9545,"KRN",9.8,"NM","B","PXKMAIN",20)

"BLD",9545,"KRN",9.8,"NM","B","PXKMAIN2",21)

"BLD",9545,"KRN",9.8,"NM","B","PXPXRM",5)

"BLD",9545,"KRN",9.8,"NM","B","PXPXRMI1",6)

"BLD",9545,"KRN",9.8,"NM","B","PXRPC",7)

"BLD",9545,"KRN",9.8,"NM","B","PXVNDC",32)

"BLD",9545,"KRN",9.8,"NM","B","PXVRESP",34)

"BLD",9545,"KRN",9.8,"NM","B","PXVRPC1",24)

"BLD",9545,"KRN",9.8,"NM","B","PXVRPC2",25)

"BLD",9545,"KRN",9.8,"NM","B","PXVRPC3",26)

"BLD",9545,"KRN",9.8,"NM","B","PXVRPC4",27)

"BLD",9545,"KRN",9.8,"NM","B","PXVRPC5",29)

"BLD",9545,"KRN",9.8,"NM","B","PXVRPC6",35)

"BLD",9545,"KRN",9.8,"NM","B","PXVUTIL",19)

"BLD",9545,"KRN",9.8,"NM","B","PXVZRT",28)

"BLD",9545,"KRN",19,0)
19
"BLD",9545,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",9545,"KRN",19,"NM",1,0)
PXV EDIT DEFAULT RESPONSES^^0
"BLD",9545,"KRN",19,"NM",2,0)
PXTT TABLE MAINTENANCE^^2
"BLD",9545,"KRN",19,"NM",3,0)
PX PCE CODE MAPPING LIST^^0
"BLD",9545,"KRN",19,"NM","B","PX PCE CODE MAPPING LIST",3)

"BLD",9545,"KRN",19,"NM","B","PXTT TABLE MAINTENANCE",2)

"BLD",9545,"KRN",19,"NM","B","PXV EDIT DEFAULT RESPONSES",1)

"BLD",9545,"KRN",19.1,0)
19.1
"BLD",9545,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",9545,"KRN",101,0)
101
"BLD",9545,"KRN",101,"NM",0)
^9.68A^2^2
"BLD",9545,"KRN",101,"NM",1,0)
PXCE ADD/EDIT MENU^^2
"BLD",9545,"KRN",101,"NM",2,0)
PXCE ICR ADD^^0
"BLD",9545,"KRN",101,"NM","B","PXCE ADD/EDIT MENU",1)

"BLD",9545,"KRN",101,"NM","B","PXCE ICR ADD",2)

"BLD",9545,"KRN",409.61,0)
409.61
"BLD",9545,"KRN",771,0)
771
"BLD",9545,"KRN",779.2,0)
779.2
"BLD",9545,"KRN",870,0)
870
"BLD",9545,"KRN",8989.51,0)
8989.51
"BLD",9545,"KRN",8989.52,0)
8989.52
"BLD",9545,"KRN",8994,0)
8994
"BLD",9545,"KRN",8994,"NM",0)
^9.68A^14^14
"BLD",9545,"KRN",8994,"NM",1,0)
PX SAVE DATA^^0
"BLD",9545,"KRN",8994,"NM",2,0)
PXVIMM ADMIN ROUTE^^0
"BLD",9545,"KRN",8994,"NM",3,0)
PXVIMM ADMIN SITE^^0
"BLD",9545,"KRN",8994,"NM",4,0)
PXVIMM IMM DETAILED^^0
"BLD",9545,"KRN",8994,"NM",5,0)
PXVIMM IMM LOT^^0
"BLD",9545,"KRN",8994,"NM",6,0)
PXVIMM IMM MAN^^0
"BLD",9545,"KRN",8994,"NM",7,0)
PXVIMM IMM SHORT LIST^^0
"BLD",9545,"KRN",8994,"NM",8,0)
PXVIMM IMMDATA^^0
"BLD",9545,"KRN",8994,"NM",9,0)
PXVIMM INFO SOURCE^^0
"BLD",9545,"KRN",8994,"NM",10,0)
PXVIMM VIS^^0
"BLD",9545,"KRN",8994,"NM",11,0)
PXVIMM ICR LIST^^0
"BLD",9545,"KRN",8994,"NM",12,0)
PXVIMM VICR EVENTS^^0
"BLD",9545,"KRN",8994,"NM",13,0)
PXVIMM ADMIN CODES^^0
"BLD",9545,"KRN",8994,"NM",14,0)
PXVIMM IMM FORMAT^^0
"BLD",9545,"KRN",8994,"NM","B","PX SAVE DATA",1)

"BLD",9545,"KRN",8994,"NM","B","PXVIMM ADMIN CODES",13)

"BLD",9545,"KRN",8994,"NM","B","PXVIMM ADMIN ROUTE",2)

"BLD",9545,"KRN",8994,"NM","B","PXVIMM ADMIN SITE",3)

"BLD",9545,"KRN",8994,"NM","B","PXVIMM ICR LIST",11)

"BLD",9545,"KRN",8994,"NM","B","PXVIMM IMM DETAILED",4)

"BLD",9545,"KRN",8994,"NM","B","PXVIMM IMM FORMAT",14)

"BLD",9545,"KRN",8994,"NM","B","PXVIMM IMM LOT",5)

"BLD",9545,"KRN",8994,"NM","B","PXVIMM IMM MAN",6)

"BLD",9545,"KRN",8994,"NM","B","PXVIMM IMM SHORT LIST",7)

"BLD",9545,"KRN",8994,"NM","B","PXVIMM IMMDATA",8)

"BLD",9545,"KRN",8994,"NM","B","PXVIMM INFO SOURCE",9)

"BLD",9545,"KRN",8994,"NM","B","PXVIMM VICR EVENTS",12)

"BLD",9545,"KRN",8994,"NM","B","PXVIMM VIS",10)

"BLD",9545,"KRN","B",.4,.4)

"BLD",9545,"KRN","B",.401,.401)

"BLD",9545,"KRN","B",.402,.402)

"BLD",9545,"KRN","B",.403,.403)

"BLD",9545,"KRN","B",.5,.5)

"BLD",9545,"KRN","B",.84,.84)

"BLD",9545,"KRN","B",3.6,3.6)

"BLD",9545,"KRN","B",3.8,3.8)

"BLD",9545,"KRN","B",9.2,9.2)

"BLD",9545,"KRN","B",9.8,9.8)

"BLD",9545,"KRN","B",19,19)

"BLD",9545,"KRN","B",19.1,19.1)

"BLD",9545,"KRN","B",101,101)

"BLD",9545,"KRN","B",409.61,409.61)

"BLD",9545,"KRN","B",771,771)

"BLD",9545,"KRN","B",779.2,779.2)

"BLD",9545,"KRN","B",870,870)

"BLD",9545,"KRN","B",8989.51,8989.51)

"BLD",9545,"KRN","B",8989.52,8989.52)

"BLD",9545,"KRN","B",8994,8994)

"BLD",9545,"QDEF")
^^^^NO^^^^YES^^NO
"BLD",9545,"QUES",0)
^9.62^^
"BLD",9545,"REQB",0)
^9.611^5^4
"BLD",9545,"REQB",1,0)
PX*1.0*210^2
"BLD",9545,"REQB",2,0)
PX*1.0*195^2
"BLD",9545,"REQB",3,0)
PX*1.0*186^2
"BLD",9545,"REQB",5,0)
PSN*4.0*448^2
"BLD",9545,"REQB","B","PSN*4.0*448",5)

"BLD",9545,"REQB","B","PX*1.0*186",3)

"BLD",9545,"REQB","B","PX*1.0*195",2)

"BLD",9545,"REQB","B","PX*1.0*210",1)

"FIA",811.1)
PCE CODE MAPPING
"FIA",811.1,0)
^PXD(811.1,
"FIA",811.1,0,0)
811.1IV
"FIA",811.1,0,1)
y^n^f^^^^n^^n
"FIA",811.1,0,10)

"FIA",811.1,0,11)

"FIA",811.1,0,"RLRO")

"FIA",811.1,0,"VR")
1.0^PX
"FIA",811.1,811.1)
0
"FIA",920.05)
IMM DEFAULT RESPONSES
"FIA",920.05,0)
^PXV(920.05,
"FIA",920.05,0,0)
920.05P
"FIA",920.05,0,1)
y^y^f^^^^n
"FIA",920.05,0,10)

"FIA",920.05,0,11)

"FIA",920.05,0,"RLRO")

"FIA",920.05,0,"VR")
1.0^PX
"FIA",920.05,920.05)
0
"FIA",920.05,920.051)
0
"FIA",920.4)
IMM CONTRAINDICATION REASONS
"FIA",920.4,0)
^PXV(920.4,
"FIA",920.4,0,0)
920.4I
"FIA",920.4,0,1)
y^y^p^^^^n^^n
"FIA",920.4,0,10)

"FIA",920.4,0,11)

"FIA",920.4,0,"RLRO")

"FIA",920.4,0,"VR")
1.0^PX
"FIA",920.4,920.4)
1
"FIA",920.4,920.4,.05)

"FIA",920.6)
IMM ROUTES TO SITES
"FIA",920.6,0)
^PXV(920.6,
"FIA",920.6,0,0)
920.6P
"FIA",920.6,0,1)
y^y^f^^^^n
"FIA",920.6,0,10)

"FIA",920.6,0,11)

"FIA",920.6,0,"RLRO")

"FIA",920.6,0,"VR")
1.0^PX
"FIA",920.6,920.6)
0
"FIA",920.6,920.61)
0
"FIA",9000010.11)
V IMMUNIZATION
"FIA",9000010.11,0)
^AUPNVIMM(
"FIA",9000010.11,0,0)
9000010.11IP
"FIA",9000010.11,0,1)
y^y^f^^^^n^^n
"FIA",9000010.11,0,10)

"FIA",9000010.11,0,11)

"FIA",9000010.11,0,"RLRO")

"FIA",9000010.11,0,"VR")
1.0^PX
"FIA",9000010.11,9000010.11)
0
"FIA",9000010.11,9000010.1111)
0
"FIA",9000010.11,9000010.112)
0
"FIA",9000010.11,9000010.1126)
0
"FIA",9000010.11,9000010.1127)
0
"FIA",9000010.11,9000010.113)
0
"FIA",9000010.12)
V SKIN TEST
"FIA",9000010.12,0)
^AUPNVSK(
"FIA",9000010.12,0,0)
9000010.12IP
"FIA",9000010.12,0,1)
y^n^f^^^^n^^n
"FIA",9000010.12,0,10)

"FIA",9000010.12,0,11)

"FIA",9000010.12,0,"RLRO")

"FIA",9000010.12,0,"VR")
1.0^PX
"FIA",9000010.12,9000010.12)
0
"FIA",9000010.707)
V IMM CONTRA/REFUSAL EVENTS
"FIA",9000010.707,0)
^AUPNVICR(
"FIA",9000010.707,0,0)
9000010.707IV
"FIA",9000010.707,0,1)
y^y^f^^^^n
"FIA",9000010.707,0,10)

"FIA",9000010.707,0,11)

"FIA",9000010.707,0,"RLRO")

"FIA",9000010.707,0,"VR")
1.0^PX
"FIA",9000010.707,9000010.707)
0
"FIA",9999999.41)
IMMUNIZATION LOT
"FIA",9999999.41,0)
^AUTTIML(
"FIA",9999999.41,0,0)
9999999.41I
"FIA",9999999.41,0,1)
y^y^p^^^^n^^n
"FIA",9999999.41,0,10)

"FIA",9999999.41,0,11)

"FIA",9999999.41,0,"RLRO")

"FIA",9999999.41,0,"VR")
1.0^PX
"FIA",9999999.41,9999999.41)
1
"FIA",9999999.41,9999999.41,.18)

"INIT")
POST^PXVP215
"IX",920.05,920.05,"AC",0)
920.05^AC^Index that sorts on Institution and Immunization.^R^^R^IR^W^920.051^^^^^S
"IX",920.05,920.05,"AC",.1,0)
^^2^2^3160309^
"IX",920.05,920.05,"AC",.1,1,0)
This cross reference is used for sorting immunization type by institution 
"IX",920.05,920.05,"AC",.1,2,0)
(facility).
"IX",920.05,920.05,"AC",1)
S ^PXV(920.05,"AC",X(1),X(2),DA(1),DA)=""
"IX",920.05,920.05,"AC",2)
K ^PXV(920.05,"AC",X(1),X(2),DA(1),DA)
"IX",920.05,920.05,"AC",2.5)
K ^PXV(920.05,"AC")
"IX",920.05,920.05,"AC",11.1,0)
^.114IA^2^2
"IX",920.05,920.05,"AC",11.1,1,0)
1^C^^^^1
"IX",920.05,920.05,"AC",11.1,1,1.5)
S X=$P($G(^PXV(920.05,+$G(DA(1)),0)),"^")
"IX",920.05,920.05,"AC",11.1,2,0)
2^F^920.051^.01^^2^F
"IX",9000010.11,9000010.11,"ACR",0)
9000010.11^ACR^Clinical Reminders index.^MU^^R^IR^I^9000010.11^^^^^A
"IX",9000010.11,9000010.11,"ACR",.1,0)
^^12^12^3151109
"IX",9000010.11,9000010.11,"ACR",.1,1,0)
This cross-reference builds four indexes, two for finding all patients
"IX",9000010.11,9000010.11,"ACR",.1,2,0)
with a particular immunization and two for finding all the immunizations a
"IX",9000010.11,9000010.11,"ACR",.1,3,0)
patient has. 
"IX",9000010.11,9000010.11,"ACR",.1,4,0)
The indexes are stored in the Clinical Reminders index global as:
"IX",9000010.11,9000010.11,"ACR",.1,5,0)
^PXRMINDX(9000010.11,"IP",IMMUNIZATION,DFN,DATE,DAS)
"IX",9000010.11,9000010.11,"ACR",.1,6,0)
^PXRMINDX(9000010.11,"CVX","IP",CVX CODE,DFN,DATE,DAS) 
"IX",9000010.11,9000010.11,"ACR",.1,7,0)
and
"IX",9000010.11,9000010.11,"ACR",.1,8,0)
^PXRMINDX(9000010.11,"PI",DFN,IMMUNIZATION,DATE,DAS) 
"IX",9000010.11,9000010.11,"ACR",.1,9,0)
^PXRMINDX(9000010.11,"CVX","PI",DFN,CVX CODE,DATE,DAS) 
"IX",9000010.11,9000010.11,"ACR",.1,10,0)
respectively. 
"IX",9000010.11,9000010.11,"ACR",.1,11,0)
For all the details, see the Clinical Reminders Index Technical
"IX",9000010.11,9000010.11,"ACR",.1,12,0)
Guide/Programmer's Manual.
"IX",9000010.11,9000010.11,"ACR",1)
D SVFILE^PXPXRM(9000010.11,.X,.DA)
"IX",9000010.11,9000010.11,"ACR",2)
D KVFILE^PXPXRM(9000010.11,.X,.DA)
"IX",9000010.11,9000010.11,"ACR",2.5)
K ^PXRMINDX(9000010.11)
"IX",9000010.11,9000010.11,"ACR",11.1,0)
^.114IA^4^4
"IX",9000010.11,9000010.11,"ACR",11.1,1,0)
1^F^9000010.11^.01^^1^F
"IX",9000010.11,9000010.11,"ACR",11.1,2,0)
2^F^9000010.11^.02^^2^F
"IX",9000010.11,9000010.11,"ACR",11.1,3,0)
3^F^9000010.11^.03^^3^F
"IX",9000010.11,9000010.11,"ACR",11.1,4,0)
4^F^9000010.11^1201^^^F
"IX",9000010.11,9000010.11,"AH",0)
9000010.11^AH^Hours between administration and reading^MU^^R^IR^I^9000010.11^^^^^A
"IX",9000010.11,9000010.11,"AH",.1,0)
^^3^3^3150818^
"IX",9000010.11,9000010.11,"AH",.1,1,0)
This cross reference calculates the number of hours between the EVENT 
"IX",9000010.11,9000010.11,"AH",.1,2,0)
DATE AND TIME field (#1201) and the DATE/TIME READ field (#1403) and 
"IX",9000010.11,9000010.11,"AH",.1,3,0)
stores that value in the HOURS READ POST-INOCULATION field (#1406).
"IX",9000010.11,9000010.11,"AH",1)
D HRS^PXVUTIL Q
"IX",9000010.11,9000010.11,"AH",1.4)
S X=(X(1)'="")
"IX",9000010.11,9000010.11,"AH",2)
D HRS^PXVUTIL Q
"IX",9000010.11,9000010.11,"AH",2.4)
S X=(X(1)'="")
"IX",9000010.11,9000010.11,"AH",2.5)
Q
"IX",9000010.11,9000010.11,"AH",11.1,0)
^.114IA^3^3
"IX",9000010.11,9000010.11,"AH",11.1,1,0)
1^F^9000010.11^1403^^^F
"IX",9000010.11,9000010.11,"AH",11.1,2,0)
2^F^9000010.11^1201^^^F
"IX",9000010.11,9000010.11,"AH",11.1,3,0)
3^F^9000010.11^1406^^^F
"IX",9000010.12,9000010.12,"ACR",0)
9000010.12^ACR^Clinical Reminders index.^MU^^R^IR^I^9000010.12^^^^^A
"IX",9000010.12,9000010.12,"ACR",.1,0)
^^8^8^3081110
"IX",9000010.12,9000010.12,"ACR",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",9000010.12,9000010.12,"ACR",.1,2,0)
all patients with a particular skin test and one for finding all
"IX",9000010.12,9000010.12,"ACR",.1,3,0)
the skin tests a patient has.
"IX",9000010.12,9000010.12,"ACR",.1,4,0)
The indexes are stored in the Clinical Reminders index global as:
"IX",9000010.12,9000010.12,"ACR",.1,5,0)
 ^PXRMINDX(9000010.12,"IP",SKIN TEST,DFN,VISIT DATE,DAS) and
"IX",9000010.12,9000010.12,"ACR",.1,6,0)
 ^PXRMINDX(9000010.12,"PI",DFN,SKIN TEST,VISIT DATE,DAS)
"IX",9000010.12,9000010.12,"ACR",.1,7,0)
respectively.
"IX",9000010.12,9000010.12,"ACR",.1,8,0)
For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",9000010.12,9000010.12,"ACR",1)
D SVFILE^PXPXRM(9000010.12,.X,.DA)
"IX",9000010.12,9000010.12,"ACR",2)
D KVFILE^PXPXRM(9000010.12,.X,.DA)
"IX",9000010.12,9000010.12,"ACR",2.5)
K ^PXRMINDX(9000010.12)
"IX",9000010.12,9000010.12,"ACR",11.1,0)
^.114IA^3^3
"IX",9000010.12,9000010.12,"ACR",11.1,1,0)
1^F^9000010.12^.01^^1^F
"IX",9000010.12,9000010.12,"ACR",11.1,2,0)
2^F^9000010.12^.02^^2^F
"IX",9000010.12,9000010.12,"ACR",11.1,3,0)
3^F^9000010.12^.03^^3^F
"IX",9000010.12,9000010.12,"AH",0)
9000010.12^AH^Hours between placement and reading^MU^^R^IR^I^9000010.12^^^^^A
"IX",9000010.12,9000010.12,"AH",.1,0)
^^3^3^3150818^
"IX",9000010.12,9000010.12,"AH",.1,1,0)
This cross reference calculates the number of hours between the EVENT 
"IX",9000010.12,9000010.12,"AH",.1,2,0)
DATE AND TIME field (#1201) and the DATE READ field (#.06) and stores 
"IX",9000010.12,9000010.12,"AH",.1,3,0)
that value in the HOURS READ POST-PLACEMENT field (#1214).
"IX",9000010.12,9000010.12,"AH",1)
D HR^PXVUTL Q
"IX",9000010.12,9000010.12,"AH",1.4)
S X=(X(1)'="")
"IX",9000010.12,9000010.12,"AH",2)
D HR^PXVUTL Q
"IX",9000010.12,9000010.12,"AH",2.4)
S X=(X(1)'="")
"IX",9000010.12,9000010.12,"AH",2.5)
Q
"IX",9000010.12,9000010.12,"AH",11.1,0)
^.114IA^3^3
"IX",9000010.12,9000010.12,"AH",11.1,1,0)
1^F^9000010.12^.06^^^F
"IX",9000010.12,9000010.12,"AH",11.1,2,0)
2^F^9000010.12^1201^^^F
"IX",9000010.12,9000010.12,"AH",11.1,3,0)
3^F^9000010.12^1214^^^F
"IX",9000010.707,9000010.707,"AA",0)
9000010.707^AA^Index the patient, contraindication/refusal, inverted visit date.^MU^^R^IR^I^9000010.707^^^^^A
"IX",9000010.707,9000010.707,"AA",.1,0)
^^3^3^3160405^
"IX",9000010.707,9000010.707,"AA",.1,1,0)
This cross reference is used for sorting contraindication/refusal 
"IX",9000010.707,9000010.707,"AA",.1,2,0)
events in sequence by patient, contraindication/refusal, inverted visit
"IX",9000010.707,9000010.707,"AA",.1,3,0)
date, and internal entry number.
"IX",9000010.707,9000010.707,"AA",1)
S ^AUPNVICR("AA",X(1),X(2),(9999999-$P(^AUPNVSIT(X(3),0),".")),DA)=""
"IX",9000010.707,9000010.707,"AA",1.4)
S X=((X(1)'="")&(X(2)'="")&(X(3)'=""))
"IX",9000010.707,9000010.707,"AA",2)
K ^AUPNVICR("AA",X(1),X(2),(9999999-$P(^AUPNVSIT(X(3),0),".")),DA)
"IX",9000010.707,9000010.707,"AA",2.4)
S X=((X(1)'="")&(X(2)'="")&(X(3)'=""))
"IX",9000010.707,9000010.707,"AA",2.5)
K ^AUPNVICR("AA")
"IX",9000010.707,9000010.707,"AA",11.1,0)
^.114IA^3^3
"IX",9000010.707,9000010.707,"AA",11.1,1,0)
1^F^9000010.707^.02^^1^F
"IX",9000010.707,9000010.707,"AA",11.1,2,0)
2^F^9000010.707^.01^^2^F
"IX",9000010.707,9000010.707,"AA",11.1,3,0)
3^F^9000010.707^.03^^3^F
"IX",9000010.707,9000010.707,"AC",0)
9000010.707^AC^Index the Visit, Immunization, and Contraindication/Refusal fields.^R^^R^IR^I^9000010.707^^^^^S
"IX",9000010.707,9000010.707,"AC",.1,0)
^^2^2^3160309^^
"IX",9000010.707,9000010.707,"AC",.1,1,0)
This cross reference is used for sorting contraindications and refusals 
"IX",9000010.707,9000010.707,"AC",.1,2,0)
by immunization type within visits.
"IX",9000010.707,9000010.707,"AC",1)
S ^AUPNVICR("AC",X(1),X(2),X(3),DA)=""
"IX",9000010.707,9000010.707,"AC",2)
K ^AUPNVICR("AC",X(1),X(2),X(3),DA)
"IX",9000010.707,9000010.707,"AC",2.5)
K ^AUPNVICR("AC")
"IX",9000010.707,9000010.707,"AC",11.1,0)
^.114IA^3^3
"IX",9000010.707,9000010.707,"AC",11.1,1,0)
1^F^9000010.707^.03^^1^F
"IX",9000010.707,9000010.707,"AC",11.1,2,0)
2^F^9000010.707^.04^^2^F
"IX",9000010.707,9000010.707,"AC",11.1,3,0)
3^F^9000010.707^.01^^3^F
"IX",9000010.707,9000010.707,"ACR",0)
9000010.707^ACR^Clinical Reminders index.^MU^^R^IR^I^9000010.707^^^^^A
"IX",9000010.707,9000010.707,"ACR",.1,0)
^^12^12^3151203^
"IX",9000010.707,9000010.707,"ACR",.1,1,0)
This cross-reference builds four indexes, two for finding all patients
"IX",9000010.707,9000010.707,"ACR",.1,2,0)
with a particular immunization contraindication/refusal and two for
"IX",9000010.707,9000010.707,"ACR",.1,3,0)
finding all the immunization contraindication/refusals a patient has. The
"IX",9000010.707,9000010.707,"ACR",.1,4,0)
indexes are stored in the Clinical Reminders index global as:
"IX",9000010.707,9000010.707,"ACR",.1,5,0)
^PXRMINDX(9000010.707,"PIC",DFN,IMM,CONTRA/REFUSAL,START,STOP,DAS)
"IX",9000010.707,9000010.707,"ACR",.1,6,0)
^PXRMINDX(9000010.707,"PCI",DFN,CONTRA/REFUSAL,IMM,START,STOP,DAS)
"IX",9000010.707,9000010.707,"ACR",.1,7,0)
and
"IX",9000010.707,9000010.707,"ACR",.1,8,0)
^PXRMINDX(9000010.707,"ICP",IMM,CONTRA/REFUSAL,DFN,START,STOP,DAS)
"IX",9000010.707,9000010.707,"ACR",.1,9,0)
^PXRMINDX(9000010.707,"CIP",CONTRA/REFUSAL,IMM,DFN,START,STOP,DAS)
"IX",9000010.707,9000010.707,"ACR",.1,10,0)
respectively.
"IX",9000010.707,9000010.707,"ACR",.1,11,0)
For all the details, see the Clinical Reminders Index Technical 
"IX",9000010.707,9000010.707,"ACR",.1,12,0)
Guide/Programmer's Manual. 
"IX",9000010.707,9000010.707,"ACR",1)
D VICRFILE^PXPXRM(.X,.DA,"S")
"IX",9000010.707,9000010.707,"ACR",2)
D VICRFILE^PXPXRM(.X,.DA,"K")
"IX",9000010.707,9000010.707,"ACR",2.5)
K ^PXRMINDX(9000010.707)
"IX",9000010.707,9000010.707,"ACR",11.1,0)
^.114IA^6^6
"IX",9000010.707,9000010.707,"ACR",11.1,1,0)
1^F^9000010.707^.01^^1^F
"IX",9000010.707,9000010.707,"ACR",11.1,1,3)

"IX",9000010.707,9000010.707,"ACR",11.1,2,0)
2^F^9000010.707^.02^^2^F
"IX",9000010.707,9000010.707,"ACR",11.1,2,3)

"IX",9000010.707,9000010.707,"ACR",11.1,3,0)
3^F^9000010.707^.03^^3^F
"IX",9000010.707,9000010.707,"ACR",11.1,3,3)

"IX",9000010.707,9000010.707,"ACR",11.1,4,0)
4^F^9000010.707^.04^^4^F
"IX",9000010.707,9000010.707,"ACR",11.1,4,3)

"IX",9000010.707,9000010.707,"ACR",11.1,5,0)
5^F^9000010.707^1201^^^F
"IX",9000010.707,9000010.707,"ACR",11.1,5,3)

"IX",9000010.707,9000010.707,"ACR",11.1,6,0)
6^F^9000010.707^.05^^^F
"IX",9000010.707,9000010.707,"ACR",11.1,6,3)

"IX",9000010.707,9000010.707,"AE",0)
9000010.707^AE^Index the Patient, Immunization, and Contraindication/Refusal fields.^R^^R^IR^I^9000010.707^^^^^S
"IX",9000010.707,9000010.707,"AE",.1,0)
^^2^2^3160309^
"IX",9000010.707,9000010.707,"AE",.1,1,0)
This cross reference is used for sorting contraindications and refusals 
"IX",9000010.707,9000010.707,"AE",.1,2,0)
by immunization type for a patient.
"IX",9000010.707,9000010.707,"AE",1)
S ^AUPNVICR("AE",X(1),X(2),X(3),DA)=""
"IX",9000010.707,9000010.707,"AE",2)
K ^AUPNVICR("AE",X(1),X(2),X(3),DA)
"IX",9000010.707,9000010.707,"AE",2.5)
K ^AUPNVICR("AE")
"IX",9000010.707,9000010.707,"AE",11.1,0)
^.114IA^3^3
"IX",9000010.707,9000010.707,"AE",11.1,1,0)
1^F^9000010.707^.02^^1^F
"IX",9000010.707,9000010.707,"AE",11.1,1,3)
 
"IX",9000010.707,9000010.707,"AE",11.1,2,0)
2^F^9000010.707^.04^^2^F
"IX",9000010.707,9000010.707,"AE",11.1,2,3)
 
"IX",9000010.707,9000010.707,"AE",11.1,3,0)
3^F^9000010.707^.01^^3^F
"IX",9000010.707,9000010.707,"AE",11.1,3,3)
 
"KRN",19,9862,-1)
2^2
"KRN",19,9862,0)
PXTT TABLE MAINTENANCE^PCE Table Maintenance^^M^10000000020^^^^^^^^^^1
"KRN",19,9862,10,0)
^19.01PI^17^17
"KRN",19,9862,10,17,0)
14402^DEF
"KRN",19,9862,10,17,"^")
PXV EDIT DEFAULT RESPONSES
"KRN",19,9862,"U")
PCE TABLE MAINTENANCE
"KRN",19,9881,-1)
0^3
"KRN",19,9881,0)
PX PCE CODE MAPPING LIST^PCE Code Mapping List^^P^^^^^^^y^PCE PATIENT CARE ENCOUNTER
"KRN",19,9881,1,0)
^^13^13^3160314^
"KRN",19,9881,1,1,0)
This option allows the user to see the mapping between CPT codes
"KRN",19,9881,1,2,0)
and a related entry in a PCE supporting file.  For example, the 
"KRN",19,9881,1,3,0)
CPT code 90732 is related to the Immunization file entry PNEUMOCCOCAL.
"KRN",19,9881,1,4,0)
  
"KRN",19,9881,1,5,0)
PCE uses the code mapping relationships to populate multiple files from
"KRN",19,9881,1,6,0)
one data entry step.  For example, an entry of PNEUMOCCOCAL in the V
"KRN",19,9881,1,7,0)
Immunization file will also create a CPT entry, 90732 in the V CPT file
"KRN",19,9881,1,8,0)
which will then be passed to PIMS for use by IB, Workload, and DSS.
"KRN",19,9881,1,9,0)
 
"KRN",19,9881,1,10,0)
NOTE: As of patch PX*1.0*215, the PCE CODE MAPPING file (#811.1) has been 
"KRN",19,9881,1,11,0)
superseded. The mappings of immunizations and skin tests to CPT codes are
"KRN",19,9881,1,12,0)
now contained in the CODING SYSTEM multiple of the IMMUNIZATION 
"KRN",19,9881,1,13,0)
(#9999999.14) and SKIN TEST (#9999999.28) files themselves.
"KRN",19,9881,60)
PXD(811.1,
"KRN",19,9881,62)
0
"KRN",19,9881,63)
[PX CODE MAPPING PRINT]
"KRN",19,9881,64)
[PX CODE MAPPING]
"KRN",19,9881,"U")
PCE CODE MAPPING LIST
"KRN",19,14402,-1)
0^1
"KRN",19,14402,0)
PXV EDIT DEFAULT RESPONSES^Immunization Default Responses Enter/Edit^^R^^^^^^^^
"KRN",19,14402,1,0)
^^2^2^3160307^
"KRN",19,14402,1,1,0)
This option allows the user to enter or update information in the IMM
"KRN",19,14402,1,2,0)
DEFAULT RESPONSES file (#920.05).
"KRN",19,14402,25)
DEF^PXVRESP
"KRN",19,14402,"U")
IMMUNIZATION DEFAULT RESPONSES
"KRN",101,2918,-1)
2^1
"KRN",101,2918,0)
PXCE ADD/EDIT MENU^Add/Edit Menu^^M^1^^^^^^^507
"KRN",101,2918,10,0)
^101.01PA^18^18
"KRN",101,2918,10,18,0)
6162^CR^97^
"KRN",101,2918,10,18,"^")
PXCE ICR ADD
"KRN",101,6162,-1)
0^2
"KRN",101,6162,0)
PXCE ICR ADD^Contra/Refusal Event^^A^^^^^^^^PCE PATIENT CARE ENCOUNTER
"KRN",101,6162,1,0)
^^2^2^3151112^
"KRN",101,6162,1,1,0)
This action allows you to enter an immunization contraindication or
"KRN",101,6162,1,2,0)
refusal event.
"KRN",101,6162,4)
^^^CR
"KRN",101,6162,15)
D INIT^PXCEAE
"KRN",101,6162,20)
S PXCEFIEN="" D EN^PXCEVFIL("ICR")
"KRN",101,6162,99)
64019,42815
"KRN",8994,3453,-1)
0^1
"KRN",8994,3453,0)
PX SAVE DATA^SAVE^PXRPC^1^P^^^^^^1
"KRN",8994,3453,1,0)
^8994.01^3^3^3160328^^^^
"KRN",8994,3453,1,1,0)
The purpose of this RPC is to allow the calling application to save data 
"KRN",8994,3453,1,2,0)
to PCE, such as Immunization data. See the Integration Control 
"KRN",8994,3453,1,3,0)
Registration document for the full description of the data needed.
"KRN",8994,3453,2,0)
^8994.02A^4^4
"KRN",8994,3453,2,1,0)
PCELIST^2^10000^1^1
"KRN",8994,3453,2,1,1,0)
^^56^56^3160328^
"KRN",8994,3453,2,1,1,1,0)
PCELIST (n)= HDR ^ Encounter Inpatient? ^ Note has CPT codes? ^ Visit 
"KRN",8994,3453,2,1,1,2,0)
             string [Encounter location; Encounter date/time; Encounter
"KRN",8994,3453,2,1,1,3,0)
             Service category]  (REQUIRED)
"KRN",8994,3453,2,1,1,4,0)
        (n)=VST^DT^Encounter date/time
"KRN",8994,3453,2,1,1,5,0)
        (n)=VST^PT^Encounter patient (DFN) (n)=VST^HL^Encounter location
"KRN",8994,3453,2,1,1,6,0)
        (n)=VST^VC^ Encounter Service Category
"KRN",8994,3453,2,1,1,7,0)
 
"KRN",8994,3453,2,1,1,8,0)
        If  applicable:
"KRN",8994,3453,2,1,1,9,0)
              
"KRN",8994,3453,2,1,1,10,0)
        (n)=VST^PR^ Parent for secondary visit
"KRN",8994,3453,2,1,1,11,0)
        (n)=VST^OL^ Outside Location for Historical visits
"KRN",8994,3453,2,1,1,12,0)
        (n)=VST^SC^ Service Connected related?
"KRN",8994,3453,2,1,1,13,0)
        (n)=VST^AO^ Agent Orange related?
"KRN",8994,3453,2,1,1,14,0)
        (n)=VST^IR^ Ionizing Radiation related?
"KRN",8994,3453,2,1,1,15,0)
        (n)=VST^EC^ Environmental Contaminates related?
"KRN",8994,3453,2,1,1,16,0)
        (n)=VST^MST^ Military Sexual Trauma related?
"KRN",8994,3453,2,1,1,17,0)
        (n)=VST^HNC^ Head and/or Neck Cancer related?
"KRN",8994,3453,2,1,1,18,0)
        (n)=VST^CV^ Combat Vet related?
"KRN",8994,3453,2,1,1,19,0)
        (n)=VST^SHD^ Shipboard Hazard and Defense related?
"KRN",8994,3453,2,1,1,20,0)
        (n)=PRV(+:  add, -: delete) ^ Provider IEN ^^^ Provider Name ^
"KRN",8994,3453,2,1,1,21,0)
            Primary Provider?
"KRN",8994,3453,2,1,1,22,0)
        (n)=POV(+:  add, -: delete) ^ ICD diagnosis code ^ Category  ^ 
"KRN",8994,3453,2,1,1,23,0)
            Narrative (Diagnosis description) ^ Primary Diagnosis? ^
"KRN",8994,3453,2,1,1,24,0)
            Provider String ^ Add to Problem List? ^^^ Next comment
"KRN",8994,3453,2,1,1,25,0)
            sequence # if saving comments
"KRN",8994,3453,2,1,1,26,0)
        (n)=COM^COM (Comments) ^ Next comment sequence # ^ @ = no 
"KRN",8994,3453,2,1,1,27,0)
            comments added
"KRN",8994,3453,2,1,1,28,0)
        (n)=CPT (+:  add, -: delete) ^ Procedural  CPT code ^ Category ^ 
"KRN",8994,3453,2,1,1,29,0)
            Narrative (Procedure description) ^ Quantity ^ Provider IEN
"KRN",8994,3453,2,1,1,30,0)
            ^^^ [# of modifiers;  Modifier code/Modifier IEN ^ Next
"KRN",8994,3453,2,1,1,31,0)
            comment sequence # ^
"KRN",8994,3453,2,1,1,32,0)
        (n)=IMM (+:  add, -: delete) ^ Immunization IEN ^ Category ^ 
"KRN",8994,3453,2,1,1,33,0)
            Narrative (Immunization description/name) ^ Series ^
"KRN",8994,3453,2,1,1,34,0)
            Encounter Provider ^ Reaction ^ Contraindicated? ^ ^
"KRN",8994,3453,2,1,1,35,0)
            Next comment sequence # ^ CVX Code ^ Event Info Source HL7 
"KRN",8994,3453,2,1,1,36,0)
            Code;IEN ^ Dose;Units;Units IEN ^ Route Name;HL7 Code;IEN ^
"KRN",8994,3453,2,1,1,37,0)
            Admin Site Name;HL7 Code;IEN ^ Lot#;IEN ^ Manufacturer ^
"KRN",8994,3453,2,1,1,38,0)
            Expiration Date ^ Event Date and Time ^ Ordering Provider ^
"KRN",8994,3453,2,1,1,39,0)
            VIS IEN/VIS Date; VIS IEN n/VIS Date n ^ Remarks Start Seq
"KRN",8994,3453,2,1,1,40,0)
            #;Remarks End Seq # ^ Warning Ack ^ Override Reason (Seq #)
"KRN",8994,3453,2,1,1,41,0)
        (n)=SK (+:  add, -: delete) ^ Skin Test IEN ^ Category ^ 
"KRN",8994,3453,2,1,1,42,0)
            Narrative (Skin Test description/name) ^ Results ^^ Reading
"KRN",8994,3453,2,1,1,43,0)
            ^^^ Next comment sequence #
"KRN",8994,3453,2,1,1,44,0)
        (n)=PED (+:  add, -: delete) ^ Patient Education IEN ^ Category ^ 
"KRN",8994,3453,2,1,1,45,0)
            Narrative (Patient Education description/name) ^ Level of
"KRN",8994,3453,2,1,1,46,0)
            understanding ^^^^^ ^^ Next comment sequence #
"KRN",8994,3453,2,1,1,47,0)
        (n)=HF (+:  add, -: delete) ^ Health Factor IEN ^ Category ^ 
"KRN",8994,3453,2,1,1,48,0)
            Narrative (Health Factor description/name) ^ Level ^^^^^ Next
"KRN",8994,3453,2,1,1,49,0)
            comment sequence # ^ Get Reminder
"KRN",8994,3453,2,1,1,50,0)
        (n)=XAM(+:  add, -: delete) ^ Exam IEN ^ Category ^ Narrative 
"KRN",8994,3453,2,1,1,51,0)
            (Exam description/name) ^ Results ^^^^^ Next comment sequence
"KRN",8994,3453,2,1,1,52,0)
            #
"KRN",8994,3453,2,1,1,53,0)
        (n)=ICR (+:  add, -: delete) ^ Variable Pointer IMM
"KRN",8994,3453,2,1,1,54,0)
            Contraindication Reasons/IMM Refusal Reasons ^ Category ^
"KRN",8994,3453,2,1,1,55,0)
            Narrative ^ Immunization IEN ^ Warn Until Date ^ Event
"KRN",8994,3453,2,1,1,56,0)
            Date/Time ^ Enc Provider IEN ^ ^ Next comment sequence #
"KRN",8994,3453,2,2,0)
LOC^1^40^0^2
"KRN",8994,3453,2,2,1,0)
^^2^2^3140225^
"KRN",8994,3453,2,2,1,1,0)
This is the hospital location. This is not used when the information is 
"KRN",8994,3453,2,2,1,2,0)
from an outside source.
"KRN",8994,3453,2,3,0)
PKGNAME^1^60^1^3
"KRN",8994,3453,2,3,1,0)
^^2^2^3140225^
"KRN",8994,3453,2,3,1,1,0)
The package name that is sending the data to PCE. This should be the 
"KRN",8994,3453,2,3,1,2,0)
full package name, such as PATIENT CARE ENCOUNTERS. 
"KRN",8994,3453,2,4,0)
SRC^1^60^1^4
"KRN",8994,3453,2,4,1,0)
^8994.021^1^1^3160328^^^^
"KRN",8994,3453,2,4,1,1,0)
The source of the data - such as VLER E-HEALTH EXCHANGE.
"KRN",8994,3453,2,"B","LOC",2)

"KRN",8994,3453,2,"B","PCELIST",1)

"KRN",8994,3453,2,"B","PKGNAME",3)

"KRN",8994,3453,2,"B","SRC",4)

"KRN",8994,3453,2,"PARAMSEQ",1,1)

"KRN",8994,3453,2,"PARAMSEQ",2,2)

"KRN",8994,3453,2,"PARAMSEQ",3,3)

"KRN",8994,3453,2,"PARAMSEQ",4,4)

"KRN",8994,3453,3,0)
^8994.03^8^8^3160328^^^^
"KRN",8994,3453,3,1,0)
The only return will be the one passed back to the calling application.
"KRN",8994,3453,3,2,0)
 
"KRN",8994,3453,3,3,0)
A -2 indicates that the routine PXAI found an issue even though the 
"KRN",8994,3453,3,4,0)
original input values appeared to be correct.
"KRN",8994,3453,3,5,0)
 
"KRN",8994,3453,3,6,0)
A -3 indicates that the input parameters were not properly defined.
"KRN",8994,3453,3,7,0)
 
"KRN",8994,3453,3,8,0)
A 1 indicate success.
"KRN",8994,3558,-1)
0^9
"KRN",8994,3558,0)
PXVIMM INFO SOURCE^IMMSRC^PXVRPC2^2
"KRN",8994,3558,1,0)
^8994.01^1^1^3160216^^^^
"KRN",8994,3558,1,1,0)
Returns entries from the IMMUNIZATION INFO SOURCE file (920.1).
"KRN",8994,3558,2,0)
^8994.02A^1^1
"KRN",8994,3558,2,1,0)
FILTER^1^^0^1
"KRN",8994,3558,2,1,1,0)
^8994.021^11^11^3160216^^
"KRN",8994,3558,2,1,1,1,0)
Filter. Possible values are:
"KRN",8994,3558,2,1,1,2,0)
   R:XXX - Return entry with IEN XXX.
"KRN",8994,3558,2,1,1,3,0)
   H:XXX - Return entry with HL7 Code XXX.
"KRN",8994,3558,2,1,1,4,0)
   N:XXX - Return entry with #.01 field equal to XXX
"KRN",8994,3558,2,1,1,5,0)
   S:X   - Return all entries with a status of X.
"KRN",8994,3558,2,1,1,6,0)
           Possible values of X:
"KRN",8994,3558,2,1,1,7,0)
              A - Active Entries
"KRN",8994,3558,2,1,1,8,0)
              I - Inactive Entries
"KRN",8994,3558,2,1,1,9,0)
              B - Both active and inactive entries
"KRN",8994,3558,2,1,1,10,0)
 
"KRN",8994,3558,2,1,1,11,0)
Defaults to "S:B".
"KRN",8994,3558,2,"B","FILTER",1)

"KRN",8994,3558,2,"PARAMSEQ",1,1)

"KRN",8994,3558,3,0)
^8994.03^14^14^3151005^^
"KRN",8994,3558,3,1,0)
Returns:
"KRN",8994,3558,3,2,0)
   PXVRSLT(0)=Count of elements returned (0 if nothing found)
"KRN",8994,3558,3,3,0)
   PXVRSLT(n)=IEN^Name^HL7 Code^Status (1:Active, 0:Inactive)
"KRN",8994,3558,3,4,0)
  
"KRN",8994,3558,3,5,0)
When filtering based off IEN, HL7 Code, or #.01 field, only one entry will
"KRN",8994,3558,3,6,0)
be returned in PXVRSLT(1).
"KRN",8994,3558,3,7,0)
 
"KRN",8994,3558,3,8,0)
When filtering based off status, multiple entries can be returned. The
"KRN",8994,3558,3,9,0)
first entry will be returned in subscript 1, and subscripts will be
"KRN",8994,3558,3,10,0)
incremented by 1 for further entries. Entries will be sorted
"KRN",8994,3558,3,11,0)
alphabetically.
"KRN",8994,3558,3,12,0)
 
"KRN",8994,3558,3,13,0)
If no entries are found based off the filtering criteria, PXVRSLT(0) will
"KRN",8994,3558,3,14,0)
equal 0, and there will be no data returned in the subsequent subscripts.
"KRN",8994,3559,-1)
0^2
"KRN",8994,3559,0)
PXVIMM ADMIN ROUTE^IMMROUTE^PXVRPC2^2
"KRN",8994,3559,1,0)
^8994.01^1^1^3160328^^^^
"KRN",8994,3559,1,1,0)
Returns entries from the IMM ADMINISTRATION ROUTE file (920.2).
"KRN",8994,3559,2,0)
^8994.02A^3^2
"KRN",8994,3559,2,1,0)
FILTER^1^^0^1
"KRN",8994,3559,2,1,1,0)
^8994.021^11^11^3160328^^
"KRN",8994,3559,2,1,1,1,0)
Filter. Possible values are:
"KRN",8994,3559,2,1,1,2,0)
   R:XXX - Return entry with IEN XXX.
"KRN",8994,3559,2,1,1,3,0)
   H:XXX - Return entry with HL7 Code XXX.
"KRN",8994,3559,2,1,1,4,0)
   N:XXX - Return entry with #.01 field equal to XXX
"KRN",8994,3559,2,1,1,5,0)
   S:X   - Return all entries with a status of X.
"KRN",8994,3559,2,1,1,6,0)
           Possible values of X:
"KRN",8994,3559,2,1,1,7,0)
              A - Active Entries
"KRN",8994,3559,2,1,1,8,0)
              I - Inactive Entries
"KRN",8994,3559,2,1,1,9,0)
              B - Both active and inactive entries
"KRN",8994,3559,2,1,1,10,0)
 
"KRN",8994,3559,2,1,1,11,0)
Defaults to "S:B".
"KRN",8994,3559,2,3,0)
PXVSITES^1^^0^2
"KRN",8994,3559,2,3,1,0)
^8994.021^1^1^3160216^^^
"KRN",8994,3559,2,3,1,1,0)
Controls if the available sites for a give route are returned.
"KRN",8994,3559,2,"B","FILTER",1)

"KRN",8994,3559,2,"B","PXVSITES",3)

"KRN",8994,3559,2,"PARAMSEQ",1,1)

"KRN",8994,3559,2,"PARAMSEQ",2,3)

"KRN",8994,3559,3,0)
^8994.03^13^13^3160328^^^
"KRN",8994,3559,3,1,0)
PXVRSLT(0)=Count of elements returned (0 if nothing found)
"KRN",8994,3559,3,2,0)
PXVRSLT(n)=IEN^Name^HL7 Code^Status (1:Active, 0:Inactive)
"KRN",8994,3559,3,3,0)
 
"KRN",8994,3559,3,4,0)
If PXVSITES=1, the sites for a given route will also be returned.
"KRN",8994,3559,3,5,0)
   o If only a subset of sites are selectable for a route, that list will
"KRN",8994,3559,3,6,0)
     be returned in:
"KRN",8994,3559,3,7,0)
       PXVRSLT(n+1)=SITE^Site IEN 1
"KRN",8994,3559,3,8,0)
       PXVRSLT(n+2)=SITE^Site IEN 2
"KRN",8994,3559,3,9,0)
       PXVRSLT(n+x)=SITE^Site IEN x
"KRN",8994,3559,3,10,0)
   o If all sites are selectable for a route, the RPC will return:
"KRN",8994,3559,3,11,0)
       PXVRSLT(n+1)=SITE^ALL
"KRN",8994,3559,3,12,0)
   o If no sites are selectable for a route, the RPC will return:
"KRN",8994,3559,3,13,0)
       PXVRSLT(n+1)=SITE^NONE
"KRN",8994,3559,3,14,0)
equal 0, and there will be no data returned in the subsequent subscripts.
"KRN",8994,3560,-1)
0^3
"KRN",8994,3560,0)
PXVIMM ADMIN SITE^IMMSITE^PXVRPC2^2
"KRN",8994,3560,1,0)
^8994.01^1^1^3160216^^
"KRN",8994,3560,1,1,0)
Returns entries from the IMM ADMINISTRATION SITE (BODY) file (920.3).
"KRN",8994,3560,2,0)
^8994.02A^1^1
"KRN",8994,3560,2,1,0)
FILTER^1^^0^1
"KRN",8994,3560,2,1,1,0)
^^11^11^3151001^
"KRN",8994,3560,2,1,1,1,0)
Filter. Possible values are:
"KRN",8994,3560,2,1,1,2,0)
   R:XXX - Return entry with IEN XXX.
"KRN",8994,3560,2,1,1,3,0)
   H:XXX - Return entry with HL7 Code XXX.
"KRN",8994,3560,2,1,1,4,0)
   N:XXX - Return entry with #.01 field equal to XXX
"KRN",8994,3560,2,1,1,5,0)
   S:X   - Return all entries with a status of X.
"KRN",8994,3560,2,1,1,6,0)
           Possible values of X:
"KRN",8994,3560,2,1,1,7,0)
              A - Active Entries
"KRN",8994,3560,2,1,1,8,0)
              I - Inactive Entries
"KRN",8994,3560,2,1,1,9,0)
              B - Both active and inactive entries
"KRN",8994,3560,2,1,1,10,0)
 
"KRN",8994,3560,2,1,1,11,0)
Defaults to "S:B".
"KRN",8994,3560,2,"B","FILTER",1)

"KRN",8994,3560,2,"PARAMSEQ",1,1)

"KRN",8994,3560,3,0)
^8994.03^14^14^3151001^^
"KRN",8994,3560,3,1,0)
Returns:
"KRN",8994,3560,3,2,0)
   PXVRSLT(0)=Count of elements returned (0 if nothing found)
"KRN",8994,3560,3,3,0)
   PXVRSLT(n)=IEN^Name^HL7 Code^Status (1:Active, 0:Inactive)
"KRN",8994,3560,3,4,0)
  
"KRN",8994,3560,3,5,0)
When filtering based off IEN, HL7 Code, or #.01 field, only one entry will
"KRN",8994,3560,3,6,0)
be returned in PXVRSLT(1).
"KRN",8994,3560,3,7,0)
 
"KRN",8994,3560,3,8,0)
When filtering based off status, multiple entries can be returned. The
"KRN",8994,3560,3,9,0)
first entry will be returned in subscript 1, and subscripts will be
"KRN",8994,3560,3,10,0)
incremented by 1 for further entries. Entries will be sorted
"KRN",8994,3560,3,11,0)
alphabetically.
"KRN",8994,3560,3,12,0)
 
"KRN",8994,3560,3,13,0)
If no entries are found based off the filtering criteria, PXVRSLT(0) will
"KRN",8994,3560,3,14,0)
equal 0, and there will be no data returned in the subsequent subscripts.
"KRN",8994,3561,-1)
0^5
"KRN",8994,3561,0)
PXVIMM IMM LOT^ILOT^PXVRPC1^4^^^^1
"KRN",8994,3561,1,0)
^8994.01^2^2^3160201^^^^
"KRN",8994,3561,1,1,0)
This RPC returns information from the IMMUNIZATION LOT file 
"KRN",8994,3561,1,2,0)
(#9999999.41).
"KRN",8994,3561,2,0)
^8994.02A^2^2
"KRN",8994,3561,2,1,0)
FILTER^1^30^0^1
"KRN",8994,3561,2,1,1,0)
^8994.021^9^9^3151120^^^^
"KRN",8994,3561,2,1,1,1,0)
This input parameter is used to specify the IMMUNIZATION LOT file 
"KRN",8994,3561,2,1,1,2,0)
records to be returned. Possible values:
"KRN",8994,3561,2,1,1,3,0)
   R:XXX - return entry with ien XXX
"KRN",8994,3561,2,1,1,4,0)
   N:XXX - return entry with lot number XXX
"KRN",8994,3561,2,1,1,5,0)
   S:A   - return list of all active lot numbers
"KRN",8994,3561,2,1,1,6,0)
   S:I   - return list of all inactive lot num
"KRN",8994,3561,2,1,1,7,0)
   S:B   - return list of all lot numbers, active and inactive
"KRN",8994,3561,2,1,1,8,0)
 
"KRN",8994,3561,2,1,1,9,0)
If this parameter is null, it defaults to "S:B".
"KRN",8994,3561,2,2,0)
PXVI^1^1^0^2
"KRN",8994,3561,2,2,1,0)
^8994.021^4^4^3160201^^^
"KRN",8994,3561,2,2,1,1,0)
This optional input parameter is used to return an alternate array with 
"KRN",8994,3561,2,2,1,2,0)
record data in a caret delimited string. If this parameter is null or 0, 
"KRN",8994,3561,2,2,1,3,0)
the return defaults to the other array.
"KRN",8994,3561,2,2,1,4,0)
   1 - return alternate array with internal values in delimited string
"KRN",8994,3561,2,"B","FILTER",1)

"KRN",8994,3561,2,"B","PXVI",2)

"KRN",8994,3561,2,"PARAMSEQ",1,1)

"KRN",8994,3561,2,"PARAMSEQ",2,2)

"KRN",8994,3561,3,0)
^8994.03^64^64^3160201^^^
"KRN",8994,3561,3,1,0)
Returns with PXVI not equal to 1:
"KRN",8994,3561,3,2,0)
   PXVRETRN  - returned information is stored in ^TMP("PXVLST",$J))
"KRN",8994,3561,3,3,0)
             - return info format: Data Element Name^Data Element Value
"KRN",8994,3561,3,4,0)
             -       error format: -1^error message
"KRN",8994,3561,3,5,0)
  
"KRN",8994,3561,3,6,0)
For each record returned in the global array, the top value returned will
"KRN",8994,3561,3,7,0)
indicate the record number in the array and the total number of records 
"KRN",8994,3561,3,8,0)
returned, e.g., "RECORD^1 OF 3".
"KRN",8994,3561,3,9,0)
  
"KRN",8994,3561,3,10,0)
This RPC returns the internal entry number (IEN) of the record and data in
"KRN",8994,3561,3,11,0)
external format from the following data fields in the IMMUNIZATION LOT
"KRN",8994,3561,3,12,0)
file:
"KRN",8994,3561,3,13,0)
   - LOT NUMBER (#.01)
"KRN",8994,3561,3,14,0)
   - MANUFACTURER (#.02)
"KRN",8994,3561,3,15,0)
   - STATUS (#.03)
"KRN",8994,3561,3,16,0)
   - VACCINE (#.04)
"KRN",8994,3561,3,17,0)
   - EXPIRATION DATE (#.09)
"KRN",8994,3561,3,18,0)
   - DOSES UNUSED (#.12)
"KRN",8994,3561,3,19,0)
   - LOW SUPPLY ALERT (#.15)
"KRN",8994,3561,3,20,0)
   - NDC CODE (VA) (#.18)
"KRN",8994,3561,3,21,0)
  
"KRN",8994,3561,3,22,0)
  Example Global Array Returned:
"KRN",8994,3561,3,23,0)
   ^TMP("PXVLST",$J,"P92A8769LN 1",0)="RECORD^1 OF 1"
"KRN",8994,3561,3,24,0)
                                .001)="IEN^6"
"KRN",8994,3561,3,25,0)
                                 .01)="LOT NUMBER^P92A8769LN"
"KRN",8994,3561,3,26,0)
                                 .02)="MANUFACTURER^SCLAVO, INC."
"KRN",8994,3561,3,27,0)
                                 .03)="STATUS^ACTIVE"
"KRN",8994,3561,3,28,0)
                                 .04)="VACCINE^ANTHRAX"
"KRN",8994,3561,3,29,0)
                                 .09)="EXPIRATION DATE^DEC 31, 2016"
"KRN",8994,3561,3,30,0)
                                 .12)="DOSES UNUSED^94"
"KRN",8994,3561,3,31,0)
                                 .15)="LOW SUPPLY ALERT^10"
"KRN",8994,3561,3,32,0)
                                 .18)="NDC CODE (VA)^"
"KRN",8994,3561,3,33,0)
     
"KRN",8994,3561,3,34,0)
  Example Global Array Returned if No Records Found:
"KRN",8994,3561,3,35,0)
   ^TMP("PXVLST",$J,0)="0 RECORDS"
"KRN",8994,3561,3,36,0)
  
"KRN",8994,3561,3,37,0)
  Example error messages:
"KRN",8994,3561,3,38,0)
   ^TMP("PXVLST",$J,0)="-1^Invalid input value"
"KRN",8994,3561,3,39,0)
   ^TMP("PXVLST",$J,0)="-1^Invalid input for immunization lot IEN"
"KRN",8994,3561,3,40,0)
   ^TMP("PXVLST",$J,0)="-1^Invalid input for lot number"
"KRN",8994,3561,3,41,0)
 
"KRN",8994,3561,3,42,0)
Returns with PXVI equal to 1:
"KRN",8994,3561,3,43,0)
   PXVRETRN  - returned information is stored in ^TMP("PXVLST",$J))
"KRN",8994,3561,3,44,0)
 
"KRN",8994,3561,3,45,0)
   Each record is a caret-delimited list of values. Within the 
"KRN",8994,3561,3,46,0)
   caret-delimited list, for fields with different internal and external
"KRN",8994,3561,3,47,0)
   values, both the internal and external values are included, delimited
"KRN",8994,3561,3,48,0)
   by a tilde (~) as indicated below:
"KRN",8994,3561,3,49,0)
    Piece# Field# Field Name
"KRN",8994,3561,3,50,0)
    ------ ------ ----------
"KRN",8994,3561,3,51,0)
    1             IEN             
"KRN",8994,3561,3,52,0)
    2      .01    LOT NUMBER
"KRN",8994,3561,3,53,0)
    3      .02    MANUFACTURER  (Internal~External)
"KRN",8994,3561,3,54,0)
    4      .03    STATUS (Internal~External)
"KRN",8994,3561,3,55,0)
    5      .04    VACCINE (Internal~External)
"KRN",8994,3561,3,56,0)
    6      .09    EXPIRATION DATE (Internal~External)
"KRN",8994,3561,3,57,0)
    7      .12    DOSES UNUSED
"KRN",8994,3561,3,58,0)
    8      .15    LOW SUPPLY ALERT
"KRN",8994,3561,3,59,0)
    9      .18    NDC CODE (VA) (Internal~External)
"KRN",8994,3561,3,60,0)
  
"KRN",8994,3561,3,61,0)
  Example Alternate Global Array:
"KRN",8994,3561,3,62,0)
   ^TMP("PXVLST",$J,0)=1 RECORD 
"KRN",8994,3561,3,63,0)
                     6)="6^P92A8769LN^49~SCLAVO, INC.^0~ACTIVE^41~ANTHRAX^
"KRN",8994,3561,3,64,0)
                          3161231~DEC 31, 2016^93^10^~"
"KRN",8994,3562,-1)
0^6
"KRN",8994,3562,0)
PXVIMM IMM MAN^IMAN^PXVRPC1^4^^^^1
"KRN",8994,3562,1,0)
^8994.01^2^2^3160201^^^^
"KRN",8994,3562,1,1,0)
This RPC returns information from the IMM MANUFACTURER file 
"KRN",8994,3562,1,2,0)
(#9999999.04).
"KRN",8994,3562,2,0)
^8994.02A^3^3
"KRN",8994,3562,2,1,0)
FILTER^1^80^0^1
"KRN",8994,3562,2,1,1,0)
^8994.021^10^10^3151006^^
"KRN",8994,3562,2,1,1,1,0)
This input parameter is used to specify the IMMUNIZATION LOT file 
"KRN",8994,3562,2,1,1,2,0)
records to be returned. Possible values:
"KRN",8994,3562,2,1,1,3,0)
   R:XXX - return entry with ien XXX
"KRN",8994,3562,2,1,1,4,0)
   M:XXX - return entry with MVX code XXX
"KRN",8994,3562,2,1,1,5,0)
   N:XXX - return entry with imm manufacturer name XXX   
"KRN",8994,3562,2,1,1,6,0)
   S:A   - return list of all active manufacturers
"KRN",8994,3562,2,1,1,7,0)
   S:I   - return list of all inactive manufacturers
"KRN",8994,3562,2,1,1,8,0)
   S:B   - return list of all manufacturers, active and inactive
"KRN",8994,3562,2,1,1,9,0)
  
"KRN",8994,3562,2,1,1,10,0)
If this parameter is null, it defaults to "S:B".
"KRN",8994,3562,2,2,0)
PXVDATE^1^7^0^2
"KRN",8994,3562,2,2,1,0)
^8994.021^3^3^3160201^^^
"KRN",8994,3562,2,2,1,1,0)
This optional input parameter is used in determining status. Input 
"KRN",8994,3562,2,2,1,2,0)
should be in VA FileMan date format. The default value is the current 
"KRN",8994,3562,2,2,1,3,0)
date.
"KRN",8994,3562,2,3,0)
PXVI^1^1^0^3
"KRN",8994,3562,2,3,1,0)
^^4^4^3160201^
"KRN",8994,3562,2,3,1,1,0)
This optional input parameter is used to return an alternate array with 
"KRN",8994,3562,2,3,1,2,0)
record data in a caret delimited string. If this parameter is null or 0, 
"KRN",8994,3562,2,3,1,3,0)
the return defaults to the other array.
"KRN",8994,3562,2,3,1,4,0)
   1 - return alternate array with internal values in delimited string
"KRN",8994,3562,2,"B","FILTER",1)

"KRN",8994,3562,2,"B","PXVDATE",2)

"KRN",8994,3562,2,"B","PXVI",3)

"KRN",8994,3562,2,"PARAMSEQ",1,1)

"KRN",8994,3562,2,"PARAMSEQ",2,2)

"KRN",8994,3562,2,"PARAMSEQ",3,3)

"KRN",8994,3562,3,0)
^^52^52^3160201^
"KRN",8994,3562,3,1,0)
Returns with PXVI not equal to 1:
"KRN",8994,3562,3,2,0)
   PXVRETRN  - returned information is stored in ^TMP("PXVLST",$J))
"KRN",8994,3562,3,3,0)
             - return info format: Data Element Name^Data Element Value
"KRN",8994,3562,3,4,0)
             -       error format: -1^error message
"KRN",8994,3562,3,5,0)
 
"KRN",8994,3562,3,6,0)
For each record returned in the global array, the top value returned will
"KRN",8994,3562,3,7,0)
indicate the record number in the array and the total number of records 
"KRN",8994,3562,3,8,0)
returned, e.g., "RECORD^1 OF 3".
"KRN",8994,3562,3,9,0)
 
"KRN",8994,3562,3,10,0)
This RPC returns the internal entry number (IEN) of the record and data
"KRN",8994,3562,3,11,0)
in external format from the following data fields in the IMM
"KRN",8994,3562,3,12,0)
MANUFACTURER file:
"KRN",8994,3562,3,13,0)
  - NAME (#.01)
"KRN",8994,3562,3,14,0)
  - MVX (#.02)
"KRN",8994,3562,3,15,0)
  - INACTIVE FLAG (#.03)
"KRN",8994,3562,3,16,0)
  - CDC NOTES (#201)
"KRN",8994,3562,3,17,0)
  - STATUS (computed by Data Standardization utility)
"KRN",8994,3562,3,18,0)
 
"KRN",8994,3562,3,19,0)
  Example Global Array Returned:
"KRN",8994,3562,3,20,0)
  ^TMP("PXVLST",$J,"WYETH-AYERST 1",0)="RECORD^1 OF 1"
"KRN",8994,3562,3,21,0)
                                 .001)="IEN^55"
"KRN",8994,3562,3,22,0)
                                  .01)="NAME^WYETH-AYERST"
"KRN",8994,3562,3,23,0)
                                  .02)="MVX CODE^WA"
"KRN",8994,3562,3,24,0)
                                  .03)="INACTIVE FLAG^INACTIVE"
"KRN",8994,3562,3,25,0)
                                  201)="CDC NOTES^became WAL, now owned by
"KRN",8994,3562,3,26,0)
                                        Pfizer"
"KRN",8994,3562,3,27,0)
                             "STATUS")="STATUS^INACTIVE"
"KRN",8994,3562,3,28,0)
 
"KRN",8994,3562,3,29,0)
  Example Global Array Returned if No Records Found:
"KRN",8994,3562,3,30,0)
  ^TMP("PXVLST",$J,0)="0 RECORDS"
"KRN",8994,3562,3,31,0)
 
"KRN",8994,3562,3,32,0)
  Example error messages:
"KRN",8994,3562,3,33,0)
  ^TMP("PXVLST",$J,0)="-1^Invalid input value"
"KRN",8994,3562,3,34,0)
  ^TMP("PXVLST",$J,0)="-1^Invalid input for manufacturer IEN"
"KRN",8994,3562,3,35,0)
  ^TMP("PXVLST",$J,0)="-1^Invalid input for MVX code"
"KRN",8994,3562,3,36,0)
  ^TMP("PXVLST",$J,0)="-1^Invalid input for manufacturer name"
"KRN",8994,3562,3,37,0)
 
"KRN",8994,3562,3,38,0)
Returns with PXVI equal to 1:
"KRN",8994,3562,3,39,0)
   PXVRETRN  - returned information is stored in ^TMP("PXVLST",$J))
"KRN",8994,3562,3,40,0)
 
"KRN",8994,3562,3,41,0)
   Each record is a caret-delimited list of values. Within the 
"KRN",8994,3562,3,42,0)
   caret-delimited list, for fields with different internal and external
"KRN",8994,3562,3,43,0)
   values, both the internal and external values are included, delimited
"KRN",8994,3562,3,44,0)
   by a tilde (~) as indicated below:
"KRN",8994,3562,3,45,0)
    Piece# Field# Field Name
"KRN",8994,3562,3,46,0)
    ------ ------ ----------
"KRN",8994,3562,3,47,0)
    1             IEN             
"KRN",8994,3562,3,48,0)
    2      .01    NAME
"KRN",8994,3562,3,49,0)
    3      .02    MVX CODE
"KRN",8994,3562,3,50,0)
    4      .03    INACTIVE FLAG (Internal~External)
"KRN",8994,3562,3,51,0)
    5      201    CDC NOTES
"KRN",8994,3562,3,52,0)
    6             STATUS (computed by Data Standardization utility)
"KRN",8994,3563,-1)
0^10
"KRN",8994,3563,0)
PXVIMM VIS^IVIS^PXVRPC1^4^^^^1
"KRN",8994,3563,1,0)
^8994.01^2^2^3151102^^^^
"KRN",8994,3563,1,1,0)
This RPC returns information from the VACCINE INFORMATION STATEMENT file 
"KRN",8994,3563,1,2,0)
(#920).
"KRN",8994,3563,2,0)
^8994.02A^2^2
"KRN",8994,3563,2,1,0)
FILTER^1^55^0^1
"KRN",8994,3563,2,1,1,0)
^^9^9^3151006^
"KRN",8994,3563,2,1,1,1,0)
This input parameter is used to specify the VACCINE INFORMATION 
"KRN",8994,3563,2,1,1,2,0)
STATEMENT file records to be returned.
"KRN",8994,3563,2,1,1,3,0)
   R:XXX - return entry with ien XXX
"KRN",8994,3563,2,1,1,4,0)
   N:XXX - return entry with VIS name XXX   
"KRN",8994,3563,2,1,1,5,0)
   S:A   - return list of all active VISs
"KRN",8994,3563,2,1,1,6,0)
   S:I   - return list of all inactive VISs
"KRN",8994,3563,2,1,1,7,0)
   S:B   - return list of all VISs, active and inactive
"KRN",8994,3563,2,1,1,8,0)
 
"KRN",8994,3563,2,1,1,9,0)
If this parameter is null, it defaults to "S:B".
"KRN",8994,3563,2,2,0)
PXVDATE^1^7^0^2
"KRN",8994,3563,2,2,1,0)
^8994.021^3^3^3151008^^
"KRN",8994,3563,2,2,1,1,0)
This optional input parameter is used in determining status. Input 
"KRN",8994,3563,2,2,1,2,0)
should be in VA FileMan date format. The default value is the current 
"KRN",8994,3563,2,2,1,3,0)
date.
"KRN",8994,3563,2,"B","FILTER",1)

"KRN",8994,3563,2,"B","PXVDATE",2)

"KRN",8994,3563,2,"PARAMSEQ",1,1)

"KRN",8994,3563,2,"PARAMSEQ",2,2)

"KRN",8994,3563,3,0)
^^52^52^3151102^
"KRN",8994,3563,3,1,0)
Returns:
"KRN",8994,3563,3,2,0)
  PXVRETRN  - returned information is stored in ^TMP("PXVLST",$J))
"KRN",8994,3563,3,3,0)
            - return info format: Data Element Name^Data Element Value
"KRN",8994,3563,3,4,0)
            -       error format: -1^error message
"KRN",8994,3563,3,5,0)
 
"KRN",8994,3563,3,6,0)
For each record returned in the global array, the top value returned will 
"KRN",8994,3563,3,7,0)
indicate the record number in the array and the total number of records 
"KRN",8994,3563,3,8,0)
returned, e.g., "RECORD^1 OF 3".
"KRN",8994,3563,3,9,0)
 
"KRN",8994,3563,3,10,0)
This RPC returns the internal entry number (IEN) of the record and data
"KRN",8994,3563,3,11,0)
in external format from the following data fields in the VACCINE
"KRN",8994,3563,3,12,0)
INFORMATION STATEMENT file:
"KRN",8994,3563,3,13,0)
  - NAME (#.01)
"KRN",8994,3563,3,14,0)
  - EDITION DATE (#.02)
"KRN",8994,3563,3,15,0)
  - EDITION STATUS (#.03)
"KRN",8994,3563,3,16,0)
  - LANGUAGE (#.04)
"KRN",8994,3563,3,17,0)
  - VIS TEXT (#2) (word-processing)
"KRN",8994,3563,3,18,0)
  - 2D BAR CODE (#100)
"KRN",8994,3563,3,19,0)
  - VIS URL (#101)
"KRN",8994,3563,3,20,0)
  - STATUS (computed by Data Standardization utility)
"KRN",8994,3563,3,21,0)
 
"KRN",8994,3563,3,22,0)
Example Global Array Returned:
"KRN",8994,3563,3,23,0)
(Stored in ^TMP("PXVLST",$J,"SHINGLES VIS 1",)
"KRN",8994,3563,3,24,0)
   0)="RECORD^1 OF 1"
"KRN",8994,3563,3,25,0)
 .001)="IEN^27"
"KRN",8994,3563,3,26,0)
 .01)="NAME^SHINGLES VIS"
"KRN",8994,3563,3,27,0)
 .02)="EDITION DATE^OCT 06, 2009"
"KRN",8994,3563,3,28,0)
 .03)="EDITION STATUS^CURRENT"
"KRN",8994,3563,3,29,0)
 .04)="LANGUAGE^ENGLISH"
"KRN",8994,3563,3,30,0)
 2,1)="VIS TEXT 1^Shingles  Vaccine: What you need to know "
"KRN",8994,3563,3,31,0)
   2)="VIS TEXT 2^ "
"KRN",8994,3563,3,32,0)
   3)="VIS TEXT 3^1. What is shingles?"
"KRN",8994,3563,3,33,0)
   4)="VIS TEXT 4^ "
"KRN",8994,3563,3,34,0)
   5)="VIS TEXT 5^Shingles is a painful skin rash, often with blisters. It
"KRN",8994,3563,3,35,0)
       is also called "
"KRN",8994,3563,3,36,0)
   .
"KRN",8994,3563,3,37,0)
   .
"KRN",8994,3563,3,38,0)
   .
"KRN",8994,3563,3,39,0)
   117)="VIS TEXT 117^ "
"KRN",8994,3563,3,40,0)
   118)="VIS TEXT 118^Department of Health and Human Services"
"KRN",8994,3563,3,41,0)
   119)="VIS TEXT 119^Centers for Disease Control and Prevention"
"KRN",8994,3563,3,42,0)
 100)="2D BAR CODE^253088698300020211091006"
"KRN",8994,3563,3,43,0)
 101)="VIS URL^http://www.immunize.org/vis/shingles.pdf"
"KRN",8994,3563,3,44,0)
 "STATUS")="STATUS^ACTIVE"
"KRN",8994,3563,3,45,0)
 
"KRN",8994,3563,3,46,0)
Example Global Array Returned if No Records Found:
"KRN",8994,3563,3,47,0)
 ^TMP("PXVLST",$J,0)="0 RECORDS"
"KRN",8994,3563,3,48,0)
 
"KRN",8994,3563,3,49,0)
Example error messages:
"KRN",8994,3563,3,50,0)
 ^TMP("PXVLST",$J,0)="-1^Invalid input value"
"KRN",8994,3563,3,51,0)
 ^TMP("PXVLST",$J,0)="-1^Invalid input for VIS IEN"
"KRN",8994,3563,3,52,0)
 ^TMP("PXVLST",$J,0)="-1^Invalid input for VIS name"
"KRN",8994,3564,-1)
0^8
"KRN",8994,3564,0)
PXVIMM IMMDATA^IMMDATA^PXVRPC3^4^^^^1
"KRN",8994,3564,1,0)
^8994.01^1^1^3151120^^^
"KRN",8994,3564,1,1,0)
Returns entries from the IMMUNIZATION file (9999999.14).
"KRN",8994,3564,2,0)
^8994.02A^2^2
"KRN",8994,3564,2,1,0)
FILTER^1^^0^1
"KRN",8994,3564,2,1,1,0)
^^8^8^3151021^
"KRN",8994,3564,2,1,1,1,0)
This parameter is used to specify the IMMUNIZATION file records to be 
"KRN",8994,3564,2,1,1,2,0)
returned. Possible values:
"KRN",8994,3564,2,1,1,3,0)
   R:XXX - return entry with ien XXX
"KRN",8994,3564,2,1,1,4,0)
   S:A   - return list of active immunizations
"KRN",8994,3564,2,1,1,5,0)
   S:H   - return list of [selectable for] historic immunizations
"KRN",8994,3564,2,1,1,6,0)
   S:*   - return all records regardless of their status
"KRN",8994,3564,2,1,1,7,0)
 
"KRN",8994,3564,2,1,1,8,0)
If this parameter is null, it defaults to "S:A".
"KRN",8994,3564,2,2,0)
SUBFILES^1^1^0^2
"KRN",8994,3564,2,2,1,0)
^8994.021^1^1^3151120^^
"KRN",8994,3564,2,2,1,1,0)
A value of 1 or Y indicates that all subfile multiples should be included.
"KRN",8994,3564,2,"B","FILTER",1)

"KRN",8994,3564,2,"B","SUBFILES",2)

"KRN",8994,3564,2,"PARAMSEQ",1,1)

"KRN",8994,3564,2,"PARAMSEQ",2,2)

"KRN",8994,3564,3,0)
^8994.03^28^28^3151120^^
"KRN",8994,3564,3,1,0)
The first record of the returned array contains the count of records 
"KRN",8994,3564,3,2,0)
being returned.
"KRN",8994,3564,3,3,0)
Each record is a caret-delimited list of values.
"KRN",8994,3564,3,4,0)
Piece# Field# Field Name
"KRN",8994,3564,3,5,0)
------ ------ ----------
"KRN",8994,3564,3,6,0)
1             IEN
"KRN",8994,3564,3,7,0)
2      .01    NAME
"KRN",8994,3564,3,8,0)
3      .02    SHORT NAME
"KRN",8994,3564,3,9,0)
4      .03    CVX CODE
"KRN",8994,3564,3,10,0)
5      .05    MAX # IN SERIES
"KRN",8994,3564,3,11,0)
6      .07    INACTIVE FLAG
"KRN",8994,3564,3,12,0)
7      8801   MNEMONIC
"KRN",8994,3564,3,13,0)
8      8802   ACRONYM
"KRN",8994,3564,3,14,0)
9      8803   SELECTABLE FOR HISTORIC
"KRN",8994,3564,3,15,0)
(These subfiles are included when the SUBFILES parameter is set to 1)
"KRN",8994,3564,3,16,0)
(Each multiple is separated by the pipe (|) character)
"KRN",8994,3564,3,17,0)
10     2      CDC FULL VACCINE NAME
"KRN",8994,3564,3,18,0)
11     3      CODING SYSTEM
"KRN",8994,3564,3,19,0)
              (For each CODING SYSTEM, there are multiple CODE values.)
"KRN",8994,3564,3,20,0)
              (CODING SYSTEM1~CODE1;;CODE2|CODING SYSTEM2~CODE3;;CODE4)
"KRN",8994,3564,3,21,0)
12     4      VACCINE INFORMATION STATEMENT
"KRN",8994,3564,3,22,0)
              (VIS1-IEN~VIS1-NAME|VIS2-IEN~VIS2-NAME)
"KRN",8994,3564,3,23,0)
13     5      CDC PRODUCT NAME
"KRN",8994,3564,3,24,0)
14     7      VACCINE GROUP NAME
"KRN",8994,3564,3,25,0)
15     10     SYNONYM
"KRN",8994,3564,3,26,0)
16     99.991 EFFECTIVE DATE/TIME
"KRN",8994,3564,3,27,0)
              (There are date/time and status fields in each multiple.) 
"KRN",8994,3564,3,28,0)
              (EFFECTIVE DATE/TIME1~STATUS1|EFFECTIVE DATE/TIME2~STATUS2)
"KRN",8994,3565,-1)
0^11
"KRN",8994,3565,0)
PXVIMM ICR LIST^GETICR^PXVRPC5^2
"KRN",8994,3565,1,0)
^8994.01^2^2^3160216^^
"KRN",8994,3565,1,1,0)
Returns entries from the IMM CONTRAINDICATION REASONS (#920.4) and IMM
"KRN",8994,3565,1,2,0)
REFUSAL REASONS (#920.5) files.
"KRN",8994,3565,2,0)
^8994.02A^2^2
"KRN",8994,3565,2,1,0)
PXFILE^1^^0^1
"KRN",8994,3565,2,1,1,0)
^^6^6^3160129^
"KRN",8994,3565,2,1,1,1,0)
Which file to pull from.
"KRN",8994,3565,2,1,1,2,0)
(Optional; Leave this null to pull entries from both files)
"KRN",8994,3565,2,1,1,3,0)
Possible values are: 
"KRN",8994,3565,2,1,1,4,0)
   "920.4" - Only return entries from IMM CONTRAINDICATION REASONS
"KRN",8994,3565,2,1,1,5,0)
             (#920.4)
"KRN",8994,3565,2,1,1,6,0)
   "920.5" - Only return entries from IMM REFUSAL REASONS (#920.5)
"KRN",8994,3565,2,2,0)
FILTER^1^^0^2
"KRN",8994,3565,2,2,1,0)
^^13^13^3160129^
"KRN",8994,3565,2,2,1,1,0)
Filter (Optional; Defaults to "S:A")
"KRN",8994,3565,2,2,1,2,0)
Possible values are:
"KRN",8994,3565,2,2,1,3,0)
   R:X   - Return entry with IEN X (PXFILE must be passed in with this 
"KRN",8994,3565,2,2,1,4,0)
           option).
"KRN",8994,3565,2,2,1,5,0)
   C:X^Y - Return entry with Concept Code^Coding System X^Y (used only for
"KRN",8994,3565,2,2,1,6,0)
           #920.4).
"KRN",8994,3565,2,2,1,7,0)
   H:X   - Return entry with HL7 Code X (used only for #920.5).
"KRN",8994,3565,2,2,1,8,0)
   N:X   - Return entry with #.01 field equal to X
"KRN",8994,3565,2,2,1,9,0)
   I:X   - Return all active entries that are selectable for Immunization 
"KRN",8994,3565,2,2,1,10,0)
           IEN X.
"KRN",8994,3565,2,2,1,11,0)
   S:A   - Return all active entries.
"KRN",8994,3565,2,2,1,12,0)
   S:I   - Return all inactive entries.
"KRN",8994,3565,2,2,1,13,0)
   S:B   - Return all entries (both active and inactive).
"KRN",8994,3565,2,"B","FILTER",2)

"KRN",8994,3565,2,"B","PXFILE",1)

"KRN",8994,3565,2,"PARAMSEQ",1,1)

"KRN",8994,3565,2,"PARAMSEQ",2,2)

"KRN",8994,3565,3,0)
^^6^6^3160129^
"KRN",8994,3565,3,1,0)
PXRSLT(0)=Count of elements returned (0 if nothing found)
"KRN",8994,3565,3,2,0)
For 920.4 Entry:
"KRN",8994,3565,3,3,0)
   PXRSLT(n)=IEN;PXV(920.4,^Name^Status (1:Active, 0:Inactive)^Code|Coding
"KRN",8994,3565,3,4,0)
             System^NIP004^Contraindication/Precaution
"KRN",8994,3565,3,5,0)
For 920.5 Entry:
"KRN",8994,3565,3,6,0)
   PXRSLT(n)=IEN;PXV(920.5,^Name^Status (1:Active, 0:Inactive)^HL7 Code
"KRN",8994,3566,-1)
0^12
"KRN",8994,3566,0)
PXVIMM VICR EVENTS^GETVICR^PXVRPC5^2
"KRN",8994,3566,1,0)
^8994.01^4^4^3160405^^^^
"KRN",8994,3566,1,1,0)
Returns "active" entries from the V IMM CONTRA/REFUSAL EVENTS file 
"KRN",8994,3566,1,2,0)
(#9000010.707) that are related to the given patient and immunization.
"KRN",8994,3566,1,3,0)
"Active" is defined as entries where the Event Date and Time is >= PXDATE 
"KRN",8994,3566,1,4,0)
and the Warn Until Date is null or greater than PXDATE.
"KRN",8994,3566,2,0)
^8994.02A^4^4
"KRN",8994,3566,2,1,0)
DFN^1^^1^1
"KRN",8994,3566,2,1,1,0)
^^1^1^3160129^
"KRN",8994,3566,2,1,1,1,0)
Pointer to file #2.
"KRN",8994,3566,2,2,0)
PXVIMM^1^^1^2
"KRN",8994,3566,2,2,1,0)
^^1^1^3160129^
"KRN",8994,3566,2,2,1,1,0)
Pointer to #9999999.14.
"KRN",8994,3566,2,3,0)
PXDATE^1^^0^3
"KRN",8994,3566,2,3,1,0)
^^1^1^3160308^
"KRN",8994,3566,2,3,1,1,0)
Used to determine if entry is "active" (Optional; Defaults to TODAY)
"KRN",8994,3566,2,4,0)
PXFORMAT^1^^0^4
"KRN",8994,3566,2,4,1,0)
^8994.021^4^4^3160405^^
"KRN",8994,3566,2,4,1,1,0)
Format that return array should be returned (Optional; Defaults to "L")
"KRN",8994,3566,2,4,1,2,0)
Possible values are: 
"KRN",8994,3566,2,4,1,3,0)
   "L": Return a caret-delimited list of entries.
"KRN",8994,3566,2,4,1,4,0)
   "W": Returns a warning message.
"KRN",8994,3566,2,"B","DFN",1)

"KRN",8994,3566,2,"B","PXDATE",3)

"KRN",8994,3566,2,"B","PXFORMAT",4)

"KRN",8994,3566,2,"B","PXVIMM",2)

"KRN",8994,3566,2,"PARAMSEQ",1,1)

"KRN",8994,3566,2,"PARAMSEQ",2,2)

"KRN",8994,3566,2,"PARAMSEQ",3,3)

"KRN",8994,3566,2,"PARAMSEQ",4,4)

"KRN",8994,3566,3,0)
^^9^9^3160405^
"KRN",8994,3566,3,1,0)
PXRSLT(0)=Count of elements returned (0 if nothing found)
"KRN",8994,3566,3,2,0)
If PXFORMAT="L":
"KRN",8994,3566,3,3,0)
   PXRSLT(n)="VICR" ^ V IMM Contra/Refusal Events IEN ^ Visit IEN ^
"KRN",8994,3566,3,4,0)
             Contra/Refusal variable pointer | Contra/Refusal Name ^
"KRN",8994,3566,3,5,0)
             Immunization IEN | Name ^ Warn Until Date ^ D/T Recorded ^
"KRN",8994,3566,3,6,0)
             Event D/T ^ Encounter Provider IEN | Name
"KRN",8994,3566,3,7,0)
   PXRSLT(n)="COM" ^ Comments
"KRN",8994,3566,3,8,0)
If PXFORMAT["W":
"KRN",8994,3566,3,9,0)
   PXRSLT(n)=Warning text
"KRN",8994,3567,-1)
0^7
"KRN",8994,3567,0)
PXVIMM IMM SHORT LIST^IMMSHORT^PXVRPC4^2
"KRN",8994,3567,1,0)
^^1^1^3160129^
"KRN",8994,3567,1,1,0)
Returns a short list of immunizations.
"KRN",8994,3567,2,0)
^8994.02A^2^2
"KRN",8994,3567,2,1,0)
FILTER^1^^0^1
"KRN",8994,3567,2,1,1,0)
^8994.021^6^6^3160129^^
"KRN",8994,3567,2,1,1,1,0)
Filter (Optional; Defaults to "B")
"KRN",8994,3567,2,1,1,2,0)
Possible values are: ;               
"KRN",8994,3567,2,1,1,3,0)
   "A": Only return active entries
"KRN",8994,3567,2,1,1,4,0)
   "H": Only return entries marked as Selectable for Historic
"KRN",8994,3567,2,1,1,5,0)
   "B": Return both active entries and those marked as Selectable for
"KRN",8994,3567,2,1,1,6,0)
        Historic
"KRN",8994,3567,2,2,0)
PXDATE^1^^0^2
"KRN",8994,3567,2,2,1,0)
^^3^3^3160129^
"KRN",8994,3567,2,2,1,1,0)
Date (optional; defaults to TODAY)
"KRN",8994,3567,2,2,1,2,0)
Used for determining immunization status (both for filtering and for
"KRN",8994,3567,2,2,1,3,0)
return value)
"KRN",8994,3567,2,"B","FILTER",1)

"KRN",8994,3567,2,"B","PXDATE",2)

"KRN",8994,3567,2,"PARAMSEQ",1,1)

"KRN",8994,3567,2,"PARAMSEQ",2,2)

"KRN",8994,3567,3,0)
^^20^20^3160129^
"KRN",8994,3567,3,1,0)
PXRTRN(x)
"KRN",8994,3567,3,2,0)
   Note: Status (in the 5th piece) is determined as follows:
"KRN",8994,3567,3,3,0)
     - If PXDATE is today, the status is based off the Inactive Flag
"KRN",8994,3567,3,4,0)
       (#.07)
"KRN",8994,3567,3,5,0)
     - If PXDATE is different than today, we will look when an update was
"KRN",8994,3567,3,6,0)
       last made to the Immunization file (based off the Audits). If there
"KRN",8994,3567,3,7,0)
       have not been any changes since PXDATE, we will get the status
"KRN",8994,3567,3,8,0)
       based off the Inactive Flag, otherwise, we will get the status for
"KRN",8994,3567,3,9,0)
       that date by calling GETSTAT^XTID.
"KRN",8994,3567,3,10,0)
   1: "IMM"
"KRN",8994,3567,3,11,0)
   2: #9999999.14 IEN
"KRN",8994,3567,3,12,0)
   3: Name (#.01)
"KRN",8994,3567,3,13,0)
   4: CVX Code (#.03)
"KRN",8994,3567,3,14,0)
   5: Status (1: Active; 0: Inactive)
"KRN",8994,3567,3,15,0)
   6: Selectable for Historic (#8803)
"KRN",8994,3567,3,16,0)
   7: Mnemonic (#8801)
"KRN",8994,3567,3,17,0)
   8: Acronym (#8802)
"KRN",8994,3567,3,18,0)
PXRTRN(x)
"KRN",8994,3567,3,19,0)
   1: "CDC"
"KRN",8994,3567,3,20,0)
   2: CDC Product Name (#9999999.145, #.01)
"KRN",8994,3568,-1)
0^4
"KRN",8994,3568,0)
PXVIMM IMM DETAILED^IMMRPC^PXVRPC4^4^^^^1
"KRN",8994,3568,1,0)
^8994.01^1^1^3160310^^^^
"KRN",8994,3568,1,1,0)
Returns a detailed Immunization record
"KRN",8994,3568,2,0)
^8994.02A^2^2
"KRN",8994,3568,2,1,0)
PXIMM^1^^1^1
"KRN",8994,3568,2,1,1,0)
^^1^1^3160129^
"KRN",8994,3568,2,1,1,1,0)
Pointer to #9999999.14 (Required)
"KRN",8994,3568,2,2,0)
PXDATE^1^^0^2
"KRN",8994,3568,2,2,1,0)
^8994.021^2^2^3160310^^^^
"KRN",8994,3568,2,2,1,1,0)
Immunization status and Codes will be based off this date
"KRN",8994,3568,2,2,1,2,0)
(Optional; Defaults to NOW)
"KRN",8994,3568,2,"B","PXDATE",2)

"KRN",8994,3568,2,"B","PXIMM",1)

"KRN",8994,3568,2,"PARAMSEQ",1,1)

"KRN",8994,3568,2,"PARAMSEQ",2,2)

"KRN",8994,3568,3,0)
^^78^78^3160310^
"KRN",8994,3568,3,1,0)
^TMP("PXVIMMRPC",$J,0)
"KRN",8994,3568,3,2,0)
   1:  1 - Immunization was found. The "1" node will be returned, but the
"KRN",8994,3568,3,3,0)
           other nodes are optional.
"KRN",8994,3568,3,4,0)
      -1 - Immunization was not found; no other nodes will be returned
"KRN",8994,3568,3,5,0)
^TMP("PXVIMMRPC",$J,1)
"KRN",8994,3568,3,6,0)
   Note: Status (in the 5th piece) is determined as follows:
"KRN",8994,3568,3,7,0)
     - If PXDATE is today, the status is based off the Inactive Flag
"KRN",8994,3568,3,8,0)
       (#.07)
"KRN",8994,3568,3,9,0)
     - If PXDATE is different than today, we will look when an update was
"KRN",8994,3568,3,10,0)
       last made to the Immunization file (based off the Audits). If there
"KRN",8994,3568,3,11,0)
       have not been any changes since PXDATE, we will get the status
"KRN",8994,3568,3,12,0)
       based off the Inactive Flag, otherwise, we will get the status for
"KRN",8994,3568,3,13,0)
       that date by calling GETSTAT^XTID.
"KRN",8994,3568,3,14,0)
   1: "IMM"
"KRN",8994,3568,3,15,0)
   2: #9999999.14 IEN
"KRN",8994,3568,3,16,0)
   3: Name (#.01)
"KRN",8994,3568,3,17,0)
   4: CVX Code (#.03)
"KRN",8994,3568,3,18,0)
   5: Status (1: Active; 0: Inactive)
"KRN",8994,3568,3,19,0)
   6: Selectable for Historic (#8803)
"KRN",8994,3568,3,20,0)
   7: Mnemonic (#8801)
"KRN",8994,3568,3,21,0)
   8: Acronym (#8802)
"KRN",8994,3568,3,22,0)
   9: Max # In Series (#.05)
"KRN",8994,3568,3,23,0)
  10: Combination Immunization (Y/N) (#.2)
"KRN",8994,3568,3,24,0)
  11: Reading Required (#.51)
"KRN",8994,3568,3,25,0)
^TMP("PXVIMMRPC",$J,x)
"KRN",8994,3568,3,26,0)
   1: "VIS"
"KRN",8994,3568,3,27,0)
   2: #920 IEN
"KRN",8994,3568,3,28,0)
   3: Name (#920,#.01)
"KRN",8994,3568,3,29,0)
   4: Edition Date (#920,#.02)
"KRN",8994,3568,3,30,0)
   5: Edition Status (#920,#.03)
"KRN",8994,3568,3,31,0)
   6: Language (#920, #.04)
"KRN",8994,3568,3,32,0)
   7: 2D Bar Code (#100)
"KRN",8994,3568,3,33,0)
^TMP("PXVIMMRPC",$J,x)
"KRN",8994,3568,3,34,0)
   1: "CDC"
"KRN",8994,3568,3,35,0)
   2: CDC Product Name (#9999999.145, #.01)
"KRN",8994,3568,3,36,0)
^TMP("PXVIMMRPC",$J,x)
"KRN",8994,3568,3,37,0)
   1: "GROUP"
"KRN",8994,3568,3,38,0)
   2: Vaccine Group Name (#9999999.147, #.01)
"KRN",8994,3568,3,39,0)
^TMP("PXVIMMRPC",$J,x)
"KRN",8994,3568,3,40,0)
   1: "SYNONYM"
"KRN",8994,3568,3,41,0)
   2: Synonym (#9999999.141, #.01)
"KRN",8994,3568,3,42,0)
^TMP("PXVIMMRPC",$J,x)
"KRN",8994,3568,3,43,0)
   Note: Only active codes (based off PXDATE) are returned.
"KRN",8994,3568,3,44,0)
   1: "CS"
"KRN",8994,3568,3,45,0)
   2: Coding System (#9999999.143, #.01)
"KRN",8994,3568,3,46,0)
   3: Code (#9999999.1431,#.01)
"KRN",8994,3568,3,47,0)
   4: Variable pointer. e.g., IEN;ICPT(
"KRN",8994,3568,3,48,0)
   5: Short Description
"KRN",8994,3568,3,49,0)
^TMP("PXVIMMRPC",$J,x)
"KRN",8994,3568,3,50,0)
   Note: Only active lots are returned.
"KRN",8994,3568,3,51,0)
         Also, the Expiration date must be >= PXDATE
"KRN",8994,3568,3,52,0)
   1: "LOT"
"KRN",8994,3568,3,53,0)
   2: #9999999.41 IEN
"KRN",8994,3568,3,54,0)
   3: Lot Number (#9999999.41, #.01)
"KRN",8994,3568,3,55,0)
   4: Manufacturer (#9999999.04, #.01)
"KRN",8994,3568,3,56,0)
   5: Expiration Date (#9999999.41, #.09)
"KRN",8994,3568,3,57,0)
   6: Doses Unused (#9999999.41, #.12)
"KRN",8994,3568,3,58,0)
   7: Low Supply Alert (#9999999.41, #.15)
"KRN",8994,3568,3,59,0)
   8: NDC Code (#9999999.41, #.18)
"KRN",8994,3568,3,60,0)
^TMP("PXVIMMRPC",$J,x)
"KRN",8994,3568,3,61,0)
   Note: Only active contraindications are returned
"KRN",8994,3568,3,62,0)
   1: "CONTRA"
"KRN",8994,3568,3,63,0)
   2: #920.4 variable pointer: IEN;PXV(920.4,
"KRN",8994,3568,3,64,0)
   3: Name (#920.4, #.01)
"KRN",8994,3568,3,65,0)
   4: Status (1:Active, 0:Inactive)
"KRN",8994,3568,3,66,0)
   5: Code|Coding System (#920.4, #.02 and .05)
"KRN",8994,3568,3,67,0)
   6: NIP004 (#920.4, #.04)
"KRN",8994,3568,3,68,0)
   7: Contraindication/Precaution (#920.4, #.06)
"KRN",8994,3568,3,69,0)
^TMP("PXVIMMRPC",$J,x)
"KRN",8994,3568,3,70,0)
   1: "DEF"
"KRN",8994,3568,3,71,0)
   2: Default Route (#920.051, #1302)
"KRN",8994,3568,3,72,0)
   3: Default Site (#920.051, #1303)
"KRN",8994,3568,3,73,0)
   4: Default Dose (#920.051, #1312)
"KRN",8994,3568,3,74,0)
   5: Default Dose Units (#920.051, #1313)
"KRN",8994,3568,3,75,0)
   6: Default Dose Units (external format) (#920.051, #1313)
"KRN",8994,3568,3,76,0)
^TMP("PXVIMMRPC",$J,x)
"KRN",8994,3568,3,77,0)
   1: "DEFC"
"KRN",8994,3568,3,78,0)
   2: Default Comments (#920.051, #81101)
"KRN",8994,3569,-1)
0^13
"KRN",8994,3569,0)
PXVIMM ADMIN CODES^IMMADMCD^PXVRPC4^2
"KRN",8994,3569,1,0)
^^1^1^3160217^
"KRN",8994,3569,1,1,0)
Returns immunization administration CPT codes.
"KRN",8994,3569,2,0)
^8994.02A^1^1
"KRN",8994,3569,2,1,0)
PXDATE^1^^0^1
"KRN",8994,3569,2,1,1,0)
^^1^1^3160217^
"KRN",8994,3569,2,1,1,1,0)
Code status will be based off this date. (Optional; Defaults to TODAY).
"KRN",8994,3569,2,"B","PXDATE",1)

"KRN",8994,3569,2,"PARAMSEQ",1,1)

"KRN",8994,3569,3,0)
^^7^7^3160217^
"KRN",8994,3569,3,1,0)
PXRSLT(0) = Count of elements returned (0 if nothing found)
"KRN",8994,3569,3,2,0)
PXRSLT(n) =
"KRN",8994,3569,3,3,0)
   Note: Only active codes (based off PXDATE) are returned.
"KRN",8994,3569,3,4,0)
   1: "CPT-ADM" or "CPT-ADD"
"KRN",8994,3569,3,5,0)
   2: Code
"KRN",8994,3569,3,6,0)
   3: Variable pointer. e.g., IEN;ICPT(
"KRN",8994,3569,3,7,0)
   4: Short Description
"KRN",8994,3570,-1)
0^14
"KRN",8994,3570,0)
PXVIMM IMM FORMAT^GETTEXT^PXVRPC6^2
"KRN",8994,3570,1,0)
^8994.01^2^2^3160331^^
"KRN",8994,3570,1,1,0)
This RPC takes an input array of immunization properties set from the GUI.
"KRN",8994,3570,1,2,0)
It returns a formatted text of an immunization for use in documentation.
"KRN",8994,3570,2,0)
^8994.02A^1^1
"KRN",8994,3570,2,1,0)
INPUT^2^^1^1
"KRN",8994,3570,2,1,1,0)
^^12^12^3160331^
"KRN",8994,3570,2,1,1,1,0)
INPUT(n)=IMM ^ Imm IEN ^  ^ Date Administered (for immunizations) / Date 
"KRN",8994,3570,2,1,1,2,0)
         Contra-Refusal Event Documented (for contra/refusals) ^ Warn
"KRN",8994,3570,2,1,1,3,0)
         Until Date (for contra/refusals) ^ Series ^ Refusal reason ^
"KRN",8994,3570,2,1,1,4,0)
         Contraindication Reason ^ Ordered By ^ Administered By (for VA 
"KRN",8994,3570,2,1,1,5,0)
         administered) / Documented By (for historical) ^ Document Type
"KRN",8994,3570,2,1,1,6,0)
         ("Historical"/"Administered") ^ Information Source
"KRN",8994,3570,2,1,1,7,0)
     (n)=LOC ^ File #44 IEN ^  ^  ^ Outside Location (for historicals)
"KRN",8994,3570,2,1,1,8,0)
     (n)=ROUTE ^ Route ^ Site ^ Dosage
"KRN",8994,3570,2,1,1,9,0)
     (n)=VIS ^ VIS Name ^ Edition Date ^ Language
"KRN",8994,3570,2,1,1,10,0)
     (n)=LOT ^ Lot # ^ Manufacturer ^ Exp Date
"KRN",8994,3570,2,1,1,11,0)
     (n)=COM ^ Comment
"KRN",8994,3570,2,1,1,12,0)
     (n)=OVER ^ Override Reason
"KRN",8994,3570,2,"B","INPUT",1)

"KRN",8994,3570,2,"PARAMSEQ",1,1)

"KRN",8994,3570,3,0)
^8994.03^1^1^3160331^^
"KRN",8994,3570,3,1,0)
Formatted text of an immunization for use in documentation.
"MBREQ")
0
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",507,-1)
1^1
"PKG",507,0)
PCE PATIENT CARE ENCOUNTER^PX^Patient Care Encounter
"PKG",507,22,0)
^9.49I^1^1
"PKG",507,22,1,0)
1.0^2960812^2960912^10958
"PKG",507,22,1,"PAH",1,0)
215^3160411^1
"PKG",507,22,1,"PAH",1,1,0)
^^5^5^3160411
"PKG",507,22,1,"PAH",1,1,1,0)
The Veterans Health Information Systems and Technology Architecture
"PKG",507,22,1,"PAH",1,1,2,0)
(VistA) Immunizations Enhancements (VIMM) 2.0 project, Increment 3, builds
"PKG",507,22,1,"PAH",1,1,3,0)
upon the file structures and standardized data introduced in Increments 1
"PKG",507,22,1,"PAH",1,1,4,0)
and 2 by adding functional enhancements to the existing VistA Patient Care
"PKG",507,22,1,"PAH",1,1,5,0)
Encounter (PCE) package.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
33
"RTN","PXAI")
0^1^B42819168
"RTN","PXAI",1,0)
PXAI ;ISL/JVS,ISA/KWP,ESW - PCE DRIVING RTN FOR 'DATA2PCE' API ;11/12/15  09:21
"RTN","PXAI",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**15,74,69,102,111,112,130,164,168,215**;Aug 12, 1996;Build 10
"RTN","PXAI",3,0)
 Q
"RTN","PXAI",4,0)
 ;
"RTN","PXAI",5,0)
 ;+  1       2       3        4        5       6      7      8       9
"RTN","PXAI",6,0)
DATA2PCE(PXADATA,PXAPKG,PXASOURC,PXAVISIT,PXAUSER,PXANOT,ERRRET,PXAPREDT,PXAPROB,PXACCNT) ;+API to pass data for add/edit/delete to PCE.
"RTN","PXAI",7,0)
 ;+  PXADATA  (required)
"RTN","PXAI",8,0)
 ;+  PXAPKG   (required)
"RTN","PXAI",9,0)
 ;+  PXASOURC (required)
"RTN","PXAI",10,0)
 ;+  PXAVISIT (optional) is pointer to a visit for which the data is to
"RTN","PXAI",11,0)
 ;+        be related.  If the visit is not known then there must be
"RTN","PXAI",12,0)
 ;+        the ENCOUNTER nodes needed to lookup/create the visit.
"RTN","PXAI",13,0)
 ;+  PXAUSER  (optional) this is a pointer to the user adding the data.
"RTN","PXAI",14,0)
 ;+  PXANOT   (optional) set to 1 if errors are to be displayed to the screen should only be set while writing and debugging the initial code.
"RTN","PXAI",15,0)
 ;+  ERRRET   (optional) passed by reference.  If present will return PXKERROR
"RTN","PXAI",16,0)
 ;+                      array elements to the caller.
"RTN","PXAI",17,0)
 ;+  PXAPREDT  (optional) Set to 1 if you want to edit the Primary Provider
"RTN","PXAI",18,0)
 ;+            only use if for the moment that editing is being done. (dangerous)
"RTN","PXAI",19,0)
 ;+  PXAPROB   (optional) A dotted variable name. When errors and
"RTN","PXAI",20,0)
 ;+             warnings occur, They will be passed back in the form
"RTN","PXAI",21,0)
 ;+            of an array with the general description of the problem.
"RTN","PXAI",22,0)
 ;+ IF ERROR1 - (GENERAL ERRORS)
"RTN","PXAI",23,0)
 ;+      PXAPROB($J,SUBSCRIPT,"ERROR1",PASSED IN 'FILE',PASSED IN FIELD,
"RTN","PXAI",24,0)
 ;+              SUBSCRIPT FROM PXADATA)
"RTN","PXAI",25,0)
 ;+      PXAPROB(23432234,2,"ERROR1","PROVIDER","NAME",7)="BECAUSE..."
"RTN","PXAI",26,0)
 ;+ IF WARNING2 - (GENERAL WARNINGS)
"RTN","PXAI",27,0)
 ;+      PXAPROB($J,SUBSCRIPT,"WARNING2",PASSED IN 'FILE',PASSED IN FIELD,
"RTN","PXAI",28,0)
 ;+              SUBSCRIPT FROM PXADATA)
"RTN","PXAI",29,0)
 ;+      PXAPROB(23432234,3,"WARNING2","PROCEDURE","QTY",3)="BECAUSE..."
"RTN","PXAI",30,0)
 ;+ IF WARNING3 - (WARNINGS FOR SERVICE CONNECTION)
"RTN","PXAI",31,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"AO")=REASON
"RTN","PXAI",32,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"EC")=REASON
"RTN","PXAI",33,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"IR")=REASON
"RTN","PXAI",34,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"SC")=REASON
"RTN","PXAI",35,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"MST")=REASON
"RTN","PXAI",36,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"HNC")=REASON
"RTN","PXAI",37,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"CV")=REASON
"RTN","PXAI",38,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"SHAD")=REASON
"RTN","PXAI",39,0)
 ;+ IF ERROR4 - (PROBLEM LIST ERRORS)
"RTN","PXAI",40,0)
 ;+      PXAPROB($J,6,"ERROR4","PX/DL",(SUBSCRIPT FROM PXADATA))=REASON
"RTN","PXAI",41,0)
 ;+ PXACCNT    (optional)  passed by reference.  Returns the PFSS Account Reference if known.
"RTN","PXAI",42,0)
 ;              Returned as null if the PFSS Account Reference is located in the Order file(#100)
"RTN","PXAI",43,0)
 ;+
"RTN","PXAI",44,0)
 ;+
"RTN","PXAI",45,0)
 ;+ Returns:
"RTN","PXAI",46,0)
 ;+   1  if no errors and process completely
"RTN","PXAI",47,0)
 ;+  -1  if errors occurred but processed completely as possible
"RTN","PXAI",48,0)
 ;+  -2  if could not get a visit
"RTN","PXAI",49,0)
 ;+  -3  if called incorrectly
"RTN","PXAI",50,0)
 ;
"RTN","PXAI",51,0)
NEW ;--NEW VARIABLES
"RTN","PXAI",52,0)
 N NOVSIT,PXAK,DFN,PXAERRF,PXADEC,PXELAP,PXASUB
"RTN","PXAI",53,0)
 N PATIENT,VALQUIET,PRIMFND
"RTN","PXAI",54,0)
 K PXAERROR,PXKERROR,PXAERR,PRVDR
"RTN","PXAI",55,0)
 S PXASUB=0,VALQUIET=1
"RTN","PXAI",56,0)
 ; needs to look up if not passed. 
"RTN","PXAI",57,0)
 I '$G(PXAVISIT),'$D(@PXADATA@("ENCOUNTER")) Q -3
"RTN","PXAI",58,0)
 I $G(PXAUSER)<1 S PXAUSER=DUZ
"RTN","PXAI",59,0)
 ;
"RTN","PXAI",60,0)
 K ^TMP("PXK",$J),^TMP("DIERR",$J),^TMP("PXAIADDPRV",$J)
"RTN","PXAI",61,0)
SOR ;--SOURCE
"RTN","PXAI",62,0)
 I PXAPKG=+PXAPKG S PXAPKG=PXAPKG
"RTN","PXAI",63,0)
 E  S PXAPKG=$$PKG2IEN^VSIT(PXAPKG)
"RTN","PXAI",64,0)
 I PXASOURC=+PXASOURC S PXASOURC=PXASOURC
"RTN","PXAI",65,0)
 E  S PXASOURC=$$SOURCE^PXAPIUTL(PXASOURC)
"RTN","PXAI",66,0)
 ;
"RTN","PXAI",67,0)
 D TMPSOURC^PXAPIUTL(PXASOURC) ;-SAVES & CREATES ^TMP("PXK",$J,"SOR")
"RTN","PXAI",68,0)
VST ;--VISIT
"RTN","PXAI",69,0)
 ;--KILL VISIT
"RTN","PXAI",70,0)
 I $G(PXAVISIT) D VPTR^PXAIVSTV I $G(PXAERRF) D ERR Q -2
"RTN","PXAI",71,0)
 D VST^PXAIVST
"RTN","PXAI",72,0)
 I $G(PXAVISIT)<0 Q -2
"RTN","PXAI",73,0)
 I $G(PXAERRF) D ERR K PXAERR Q -2
"RTN","PXAI",74,0)
PRV ;--PROVIDER
"RTN","PXAI",75,0)
 S PATIENT=$P($G(^AUPNVSIT(PXAVISIT,0)),"^",5)
"RTN","PXAI",76,0)
 S (PXAK,PRIMFND)=0
"RTN","PXAI",77,0)
 F  S PXAK=$O(@PXADATA@("PROVIDER",PXAK)) Q:(PRIMFND)!(PXAK="")  D
"RTN","PXAI",78,0)
 .I $D(@PXADATA@("PROVIDER",PXAK,"PRIMARY")) D
"RTN","PXAI",79,0)
 ..S PRIMFND=$G(@PXADATA@("PROVIDER",PXAK,"PRIMARY"))
"RTN","PXAI",80,0)
 I 'PRIMFND D  ;Check for each provider's status as Primary or Secondary
"RTN","PXAI",81,0)
 .S PXAK=0 F  S PXAK=$O(@PXADATA@("PROVIDER",PXAK)) Q:PXAK=""  D
"RTN","PXAI",82,0)
 ..I '$D(@PXADATA@("PROVIDER",PXAK,"PRIMARY")) D PROVDRST
"RTN","PXAI",83,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("PROVIDER",PXAK)) Q:PXAK=""  D
"RTN","PXAI",84,0)
 . D PRV^PXAIPRV I $G(PXAERRF) D ERR
"RTN","PXAI",85,0)
 K PRI ;--FLAG FOR PRIMARY PROVIDER
"RTN","PXAI",86,0)
 K PXAERR
"RTN","PXAI",87,0)
POV ;--DIAGNOSIS
"RTN","PXAI",88,0)
 S (PXAK,PRIMFND)=0
"RTN","PXAI",89,0)
 F  S PXAK=$O(@PXADATA@("DX/PL",PXAK)) Q:(PXAK="")  D  Q:PRIMFND
"RTN","PXAI",90,0)
 .I +$G(@PXADATA@("DX/PL",PXAK,"PRIMARY"))=1 D
"RTN","PXAI",91,0)
 ..S PRIMFND=$G(@PXADATA@("DX/PL",PXAK,"DIAGNOSIS"))
"RTN","PXAI",92,0)
 I $D(@PXADATA@("DX/PL")) D POVPRM(PXAVISIT,PRIMFND,.PXADATA) D
"RTN","PXAI",93,0)
 .S PXAK=0 F  S PXAK=$O(@PXADATA@("DX/PL",PXAK))  Q:PXAK=""  D
"RTN","PXAI",94,0)
 ..D POV^PXAIPOV I $G(PXAERRF) D ERR
"RTN","PXAI",95,0)
 K PXAERR
"RTN","PXAI",96,0)
 ;
"RTN","PXAI",97,0)
CPT ;--PROCEDURE
"RTN","PXAI",98,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("PROCEDURE",PXAK))  Q:PXAK=""  D
"RTN","PXAI",99,0)
 . D CPT^PXAICPT I $G(PXAERRF) D ERR
"RTN","PXAI",100,0)
 K PXAERR
"RTN","PXAI",101,0)
 ;
"RTN","PXAI",102,0)
EDU ;--PATIENT EDUCATION
"RTN","PXAI",103,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("PATIENT ED",PXAK))  Q:PXAK=""  D
"RTN","PXAI",104,0)
 . D EDU^PXAIPED I $G(PXAERRF) D ERR
"RTN","PXAI",105,0)
 K PXAERR
"RTN","PXAI",106,0)
 ;
"RTN","PXAI",107,0)
EXAM ;--EXAMINATION
"RTN","PXAI",108,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("EXAM",PXAK))  Q:PXAK=""  D
"RTN","PXAI",109,0)
 . D EXAM^PXAIXAM I $G(PXAERRF) D ERR
"RTN","PXAI",110,0)
 K PXAERR
"RTN","PXAI",111,0)
 ;
"RTN","PXAI",112,0)
HF ;--HEALTH FACTOR
"RTN","PXAI",113,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("HEALTH FACTOR",PXAK))  Q:PXAK=""  D
"RTN","PXAI",114,0)
 . D HF^PXAIHF I $G(PXAERRF) D ERR
"RTN","PXAI",115,0)
 K PXAERR
"RTN","PXAI",116,0)
 ;
"RTN","PXAI",117,0)
IMM ;--IMMUNIZATION
"RTN","PXAI",118,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("IMMUNIZATION",PXAK))  Q:PXAK=""  D
"RTN","PXAI",119,0)
 . D IMM^PXAIIMM I $G(PXAERRF) D ERR
"RTN","PXAI",120,0)
 K PXAERR
"RTN","PXAI",121,0)
 ;
"RTN","PXAI",122,0)
SKIN ;--SKIN TEST
"RTN","PXAI",123,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("SKIN TEST",PXAK))  Q:PXAK=""  D
"RTN","PXAI",124,0)
 . D SKIN^PXAISK I $G(PXAERRF) D ERR
"RTN","PXAI",125,0)
 K PXAERR
"RTN","PXAI",126,0)
 ;
"RTN","PXAI",127,0)
ICR ;--IMM CONTRAINDICATION/REFUSAL
"RTN","PXAI",128,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("IMM CONTRA/REFUSAL",PXAK))  Q:PXAK=""  D
"RTN","PXAI",129,0)
 . D ICR^PXAIICR I $G(PXAERRF) D ERR
"RTN","PXAI",130,0)
 K PXAERR
"RTN","PXAI",131,0)
 ;
"RTN","PXAI",132,0)
 ;
"RTN","PXAI",133,0)
 D OTHER^PXAIPRV
"RTN","PXAI",134,0)
 ;
"RTN","PXAI",135,0)
 ;
"RTN","PXAI",136,0)
 I $D(^TMP("PXK",$J)) D
"RTN","PXAI",137,0)
 . D EN1^PXKMAIN
"RTN","PXAI",138,0)
 . M ERRRET=PXKERROR
"RTN","PXAI",139,0)
 . D PRIM^PXAIPRV K PRVDR
"RTN","PXAI",140,0)
 . D EVENT^PXKMAIN
"RTN","PXAI",141,0)
 S PXACCNT=$P($G(^AUPNVSIT(PXAVISIT,0)),"^",26) ;PX*1.0*164 ;Sets the PFSS Account Reference, if any
"RTN","PXAI",142,0)
 K ^TMP("PXK",$J),PXAERR,PXKERROR
"RTN","PXAI",143,0)
 Q $S($G(PXAERRF):-1,1:1)
"RTN","PXAI",144,0)
 ;
"RTN","PXAI",145,0)
 ;
"RTN","PXAI",146,0)
EXIT ;--EXIT AND CLEAN UP
"RTN","PXAI",147,0)
 D EVENT^PXKMAIN
"RTN","PXAI",148,0)
 K ^TMP("PXK",$J),PRVDR
"RTN","PXAI",149,0)
 K PXAERR
"RTN","PXAI",150,0)
 Q
"RTN","PXAI",151,0)
 ;-----------------SUBROUTINES-----------------------
"RTN","PXAI",152,0)
ERR ;
"RTN","PXAI",153,0)
 ;
"RTN","PXAI",154,0)
 ;
"RTN","PXAI",155,0)
 I '$D(PXADI("DIALOG")) Q
"RTN","PXAI",156,0)
 N NODE,SCREEN
"RTN","PXAI",157,0)
 S PXAERR(1)=$G(PXADATA),PXAERR(2)=$G(PXAPKG),PXAERR(3)=$G(PXASOURC)
"RTN","PXAI",158,0)
 S PXAERR(4)=$G(PXAVISIT),PXAERR(5)=$G(PXAUSER)_"  "_$P($G(^VA(200,PXAUSER,0)),"^",1)
"RTN","PXAI",159,0)
 I $G(PXANOT)=1 D EXTERNAL
"RTN","PXAI",160,0)
 E  D INTERNAL
"RTN","PXAI",161,0)
 D ARRAY^PXAICPTV
"RTN","PXAI",162,0)
 K PXADI("DIALOG")
"RTN","PXAI",163,0)
 Q
"RTN","PXAI",164,0)
 ;
"RTN","PXAI",165,0)
EXTERNAL ;---SEND ERRORS TO SCREEN
"RTN","PXAI",166,0)
 W !,"-----------------------------------------------------------------"
"RTN","PXAI",167,0)
 D BLD^DIALOG($G(PXADI("DIALOG")),.PXAERR,"","SCREEN","F")
"RTN","PXAI",168,0)
 D MSG^DIALOG("ESW","",50,10,"SCREEN")
"RTN","PXAI",169,0)
 ;
"RTN","PXAI",170,0)
 Q
"RTN","PXAI",171,0)
INTERNAL ;---SET ERRORS TO GLOBAL ARRAY
"RTN","PXAI",172,0)
 S NODE=PXADATA
"RTN","PXAI",173,0)
 D BLD^DIALOG($G(PXADI("DIALOG")),.PXAERR,.PXAERR,NODE,"F")
"RTN","PXAI",174,0)
 S NODE=$NA(@PXADATA@("DIERR",$J)) D MSG^DIALOG("ESW","",50,10,NODE)
"RTN","PXAI",175,0)
 Q
"RTN","PXAI",176,0)
 ;
"RTN","PXAI",177,0)
PROVDRST ; Check provider status (Primary or Secondary)
"RTN","PXAI",178,0)
 N PRVIEN,DETS,DIC,DR,DA,DIQ,PRI,PRVPRIM
"RTN","PXAI",179,0)
 I $G(PXAK)="" QUIT
"RTN","PXAI",180,0)
 S PRVIEN=0
"RTN","PXAI",181,0)
 F  S PRVIEN=$O(^AUPNVPRV("AD",PXAVISIT,PRVIEN)) Q:PRVIEN=""  D
"RTN","PXAI",182,0)
 .S DETS=$G(^AUPNVPRV(PRVIEN,0))
"RTN","PXAI",183,0)
 .I $P(DETS,U)=$G(@PXADATA@("PROVIDER",PXAK,"NAME")) D
"RTN","PXAI",184,0)
 ..S DIC=9000010.06,DR=.04,DA=PRVIEN
"RTN","PXAI",185,0)
 ..S DIQ="PRVPRIM(",DIQ(0)="EI" D EN^DIQ1
"RTN","PXAI",186,0)
 ..S PRI=$E($G(PRVPRIM(9000010.06,DA,DR,"E")),1,1)
"RTN","PXAI",187,0)
 ..S @PXADATA@("PROVIDER",PXAK,"PRIMARY")=$S(PRI="P":1,1:0)
"RTN","PXAI",188,0)
 Q
"RTN","PXAI",189,0)
POVPRM(VISIT,PRIMFND,POVARR) ;
"RTN","PXAI",190,0)
 N PRVIEN,DETS,STOP,LPXAK,ORDX,NDX,ORDXP
"RTN","PXAI",191,0)
 S PRVIEN=0
"RTN","PXAI",192,0)
 ;create array of existing DX; ORDX - pointer to ^ICD9(
"RTN","PXAI",193,0)
 F  S PRVIEN=$O(^AUPNVPOV("AD",PXAVISIT,PRVIEN)) Q:PRVIEN=""  D
"RTN","PXAI",194,0)
 .S DETS=$G(^AUPNVPOV(PRVIEN,0)),ORDX=$P(DETS,U)
"RTN","PXAI",195,0)
 .S ORDX(ORDX)=PRVIEN I $P(DETS,U,12)="P" S ORDXP(ORDX)=""
"RTN","PXAI",196,0)
 ; create array of passed DX; NDX - pointer to ^ICD9(
"RTN","PXAI",197,0)
 S PXAK=0 F  S PXAK=$O(@POVARR@("DX/PL",PXAK)) Q:PXAK=""  D
"RTN","PXAI",198,0)
 .S NDX=$G(@POVARR@("DX/PL",PXAK,"DIAGNOSIS")) S NDX(NDX)=PXAK
"RTN","PXAI",199,0)
 ; force entry of originally primary diagnosis with "S" flag
"RTN","PXAI",200,0)
 I PRIMFND S ORDX="" D
"RTN","PXAI",201,0)
 .F  S ORDX=$O(ORDXP(ORDX)) Q:ORDX=""  I PRIMFND'=ORDX D
"RTN","PXAI",202,0)
 ..I $D(NDX(ORDX)) S @POVARR@("DX/PL",NDX(ORDX),"PRIMARY")=0
"RTN","PXAI",203,0)
 ..E  D
"RTN","PXAI",204,0)
 ...S LPXAK=$O(@POVARR@("DX/PL",""),-1)
"RTN","PXAI",205,0)
 ...S @POVARR@("DX/PL",LPXAK+1,"DIAGNOSIS")=ORDX
"RTN","PXAI",206,0)
 ...S @POVARR@("DX/PL",LPXAK+1,"PRIMARY")=0
"RTN","PXAI",207,0)
 Q
"RTN","PXAI",208,0)
 ;
"RTN","PXAIICR")
0^8^B5253575
"RTN","PXAIICR",1,0)
PXAIICR ;BPFO/LMT - Set the IMM CONTRA/REFUSAL nodes ;11/18/15  11:34
"RTN","PXAIICR",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**215**;Aug 12, 1996;Build 10
"RTN","PXAIICR",3,0)
 ;
"RTN","PXAIICR",4,0)
ICR ;Main entry point.
"RTN","PXAIICR",5,0)
 ;
"RTN","PXAIICR",6,0)
 K PXAERR
"RTN","PXAIICR",7,0)
 S PXAERR(8)=PXAK
"RTN","PXAIICR",8,0)
 S PXAERR(7)="IMM CONTRA/REFUSAL"
"RTN","PXAIICR",9,0)
 ;
"RTN","PXAIICR",10,0)
 N IND,PXAA
"RTN","PXAIICR",11,0)
 S IND=""
"RTN","PXAIICR",12,0)
 F  S IND=$O(@PXADATA@("IMM CONTRA/REFUSAL",PXAK,IND)) Q:IND=""  D
"RTN","PXAIICR",13,0)
 . S PXAA(IND)=@PXADATA@("IMM CONTRA/REFUSAL",PXAK,IND)
"RTN","PXAIICR",14,0)
 ;
"RTN","PXAIICR",15,0)
 ;Validate the data.
"RTN","PXAIICR",16,0)
 N STOP
"RTN","PXAIICR",17,0)
 D VAL^PXAIICRV
"RTN","PXAIICR",18,0)
 I $G(STOP) Q
"RTN","PXAIICR",19,0)
 ;
"RTN","PXAIICR",20,0)
SETVARA ;Set the after visit variables.
"RTN","PXAIICR",21,0)
 N AFTER0,AFTER12,AFTER811,AFTER812
"RTN","PXAIICR",22,0)
 ;
"RTN","PXAIICR",23,0)
 S $P(AFTER0,U,1)=$G(PXAA("CONTRA/REFUSAL"))
"RTN","PXAIICR",24,0)
 I $G(PXAA("DELETE")) S $P(AFTER0,U,1)="@"
"RTN","PXAIICR",25,0)
 S $P(AFTER0,U,2)=$G(PATIENT)
"RTN","PXAIICR",26,0)
 S $P(AFTER0,U,3)=$G(PXAVISIT)
"RTN","PXAIICR",27,0)
 S $P(AFTER0,U,4)=$G(PXAA("IMMUN"))
"RTN","PXAIICR",28,0)
 S $P(AFTER0,U,5)=$G(PXAA("WARN UNTIL DATE"))
"RTN","PXAIICR",29,0)
 S $P(AFTER12,U,1)=$G(PXAA("EVENT D/T"))
"RTN","PXAIICR",30,0)
 S $P(AFTER12,U,4)=$G(PXAA("ENC PROVIDER"))
"RTN","PXAIICR",31,0)
 S $P(AFTER811,U,1)=$G(PXAA("COMMENT"))
"RTN","PXAIICR",32,0)
 ;
"RTN","PXAIICR",33,0)
 ;--PACKAGE AND SOURCE
"RTN","PXAIICR",34,0)
 S $P(AFTER812,"^",2)=$G(PXAPKG)
"RTN","PXAIICR",35,0)
 S $P(AFTER812,"^",3)=$G(PXASOURC)
"RTN","PXAIICR",36,0)
 ;
"RTN","PXAIICR",37,0)
 S ^TMP("PXK",$J,"ICR",PXAK,0,"AFTER")=AFTER0
"RTN","PXAIICR",38,0)
 S ^TMP("PXK",$J,"ICR",PXAK,12,"AFTER")=AFTER12
"RTN","PXAIICR",39,0)
 S ^TMP("PXK",$J,"ICR",PXAK,811,"AFTER")=AFTER811
"RTN","PXAIICR",40,0)
 S ^TMP("PXK",$J,"ICR",PXAK,812,"AFTER")=AFTER812
"RTN","PXAIICR",41,0)
 ;
"RTN","PXAIICR",42,0)
SETVARB ;Set the before variables.
"RTN","PXAIICR",43,0)
 N BEFOR0,BEFOR12,BEFOR811,BEFOR812,IENB
"RTN","PXAIICR",44,0)
 ;
"RTN","PXAIICR",45,0)
 S IENB=""
"RTN","PXAIICR",46,0)
 S IENB=$O(^AUPNVICR("AC",+$G(PXAVISIT),+$G(PXAA("IMMUN")),$G(PXAA("CONTRA/REFUSAL")),IENB))
"RTN","PXAIICR",47,0)
 ;
"RTN","PXAIICR",48,0)
 I $G(IENB) D
"RTN","PXAIICR",49,0)
 . S BEFOR0=$G(^AUPNVICR(IENB,0))
"RTN","PXAIICR",50,0)
 . S BEFOR12=$G(^AUPNVICR(IENB,12))
"RTN","PXAIICR",51,0)
 . S BEFOR811=$G(^AUPNVICR(IENB,811))
"RTN","PXAIICR",52,0)
 . S BEFOR812=$G(^AUPNVICR(IENB,812))
"RTN","PXAIICR",53,0)
 E  S (BEFOR0,BEFOR12,BEFOR811,BEFOR812)=""
"RTN","PXAIICR",54,0)
 ;
"RTN","PXAIICR",55,0)
 S ^TMP("PXK",$J,"ICR",PXAK,0,"BEFORE")=BEFOR0
"RTN","PXAIICR",56,0)
 S ^TMP("PXK",$J,"ICR",PXAK,12,"BEFORE")=BEFOR12
"RTN","PXAIICR",57,0)
 S ^TMP("PXK",$J,"ICR",PXAK,811,"BEFORE")=BEFOR811
"RTN","PXAIICR",58,0)
 S ^TMP("PXK",$J,"ICR",PXAK,812,"BEFORE")=BEFOR812
"RTN","PXAIICR",59,0)
 S ^TMP("PXK",$J,"ICR",PXAK,"IEN")=IENB
"RTN","PXAIICR",60,0)
 ;
"RTN","PXAIICR",61,0)
 Q
"RTN","PXAIICRV")
0^9^B12775865
"RTN","PXAIICRV",1,0)
PXAIICRV ;BPFO/LMT - VALIDATE IMM CONTRA/REFUSAL DATA ;12/31/15  14:57
"RTN","PXAIICRV",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**215**;Aug 12, 1996;Build 10
"RTN","PXAIICRV",3,0)
 ;
"RTN","PXAIICRV",4,0)
VAL ;Make sure the required fields are present.
"RTN","PXAIICRV",5,0)
 ;
"RTN","PXAIICRV",6,0)
 N PXFLD,PXFLDNAME,PXFLDNUM,PXFILE,PXOK,PXVAL,PXFLGERR
"RTN","PXAIICRV",7,0)
 ;
"RTN","PXAIICRV",8,0)
 S PXFILE=9000010.707
"RTN","PXAIICRV",9,0)
 ;
"RTN","PXAIICRV",10,0)
 ; Validate Required fields
"RTN","PXAIICRV",11,0)
 F PXFLD="CONTRA/REFUSAL^.01","IMMUN^.04" D  Q:$G(STOP)=1
"RTN","PXAIICRV",12,0)
 . S PXFLDNAME=$P(PXFLD,"^",1)
"RTN","PXAIICRV",13,0)
 . S PXFLDNUM=$P(PXFLD,"^",2)
"RTN","PXAIICRV",14,0)
 . S PXVAL=$G(PXAA(PXFLDNAME))
"RTN","PXAIICRV",15,0)
 . I PXVAL="" D  Q:$G(STOP)=1
"RTN","PXAIICRV",16,0)
 . . S STOP=1
"RTN","PXAIICRV",17,0)
 . . S PXAERRF=1
"RTN","PXAIICRV",18,0)
 . . S PXADI("DIALOG")=8390001.001
"RTN","PXAIICRV",19,0)
 . . S PXAERR(9)=PXFLDNAME
"RTN","PXAIICRV",20,0)
 . . S PXAERR(10)="AFTER"
"RTN","PXAIICRV",21,0)
 . . S PXAERR(11)=$G(PXAA(PXFLDNAME))
"RTN","PXAIICRV",22,0)
 . . S PXAERR(12)="You are missing the required field: "_PXFLDNAME
"RTN","PXAIICRV",23,0)
 . ;
"RTN","PXAIICRV",24,0)
 . I $G(STOP)=1 Q
"RTN","PXAIICRV",25,0)
 . ;
"RTN","PXAIICRV",26,0)
 . S PXOK=$$VALFLD(PXFILE,PXFLDNUM,PXVAL)
"RTN","PXAIICRV",27,0)
 . I 'PXOK D ERRMSG(8390001.001,1,PXVAL,PXFLDNAME)
"RTN","PXAIICRV",28,0)
 . ;
"RTN","PXAIICRV",29,0)
 . I ($G(STOP)=1)!(PXFLDNUM'=.04) Q
"RTN","PXAIICRV",30,0)
 . ;
"RTN","PXAIICRV",31,0)
 . I '$$IMMCRSEL^PXVUTIL(PXAA("CONTRA/REFUSAL"),PXAA("IMMUN")) D
"RTN","PXAIICRV",32,0)
 . . S STOP=1
"RTN","PXAIICRV",33,0)
 . . S PXAERRF=1
"RTN","PXAIICRV",34,0)
 . . S PXADI("DIALOG")=8390001.001
"RTN","PXAIICRV",35,0)
 . . S PXAERR(9)=PXFLDNAME
"RTN","PXAIICRV",36,0)
 . . S PXAERR(10)="AFTER"
"RTN","PXAIICRV",37,0)
 . . S PXAERR(11)=PXAA("IMMUN")
"RTN","PXAIICRV",38,0)
 . . S PXAERR(12)="IMMUNIZATION #"_PXAA("IMMUN")_" is NOT selectable for this "_$S(PXAA("CONTRA/REFUSAL")[920.4:"Contraindication",1:"Refusal")_" Reason"
"RTN","PXAIICRV",39,0)
 ;
"RTN","PXAIICRV",40,0)
 I $G(STOP)=1 Q
"RTN","PXAIICRV",41,0)
 I $G(PXAA("DELETE"))=1 Q  ; don't bother checking optional fields if this is a deletion
"RTN","PXAIICRV",42,0)
 ;
"RTN","PXAIICRV",43,0)
 ; Validate optional fields
"RTN","PXAIICRV",44,0)
 F PXFLD="WARN UNTIL DATE^.05^1","EVENT D/T^1201^0","ENC PROVIDER^1204^0" D  Q:$G(STOP)=1
"RTN","PXAIICRV",45,0)
 . ;
"RTN","PXAIICRV",46,0)
 . S PXFLDNAME=$P(PXFLD,"^",1)
"RTN","PXAIICRV",47,0)
 . S PXFLDNUM=$P(PXFLD,"^",2)
"RTN","PXAIICRV",48,0)
 . S PXFLGERR=$P(PXFLD,"^",3) ; if validation fails, flag this is as error (1) or warning (0)
"RTN","PXAIICRV",49,0)
 . ;
"RTN","PXAIICRV",50,0)
 . S PXVAL=$G(PXAA(PXFLDNAME))
"RTN","PXAIICRV",51,0)
 . I PXVAL="" Q
"RTN","PXAIICRV",52,0)
 . ;
"RTN","PXAIICRV",53,0)
 . S PXOK=$$VALFLD(PXFILE,PXFLDNUM,PXVAL)
"RTN","PXAIICRV",54,0)
 . I 'PXOK D
"RTN","PXAIICRV",55,0)
 . . I PXFLGERR D ERRMSG(8390001.001,1,PXVAL,PXFLDNAME)
"RTN","PXAIICRV",56,0)
 . . I 'PXFLGERR D ERRMSG(8390001.002,0,PXVAL,PXFLDNAME)
"RTN","PXAIICRV",57,0)
 . . I $G(STOP)=1 Q
"RTN","PXAIICRV",58,0)
 . . K PXAA(PXFLDNAME) ; Don't file this field, as it's invalid
"RTN","PXAIICRV",59,0)
 ;
"RTN","PXAIICRV",60,0)
 Q
"RTN","PXAIICRV",61,0)
 ;
"RTN","PXAIICRV",62,0)
VALFLD(PXFILE,PXFLDNUM,PXVAL) ;
"RTN","PXAIICRV",63,0)
 ;
"RTN","PXAIICRV",64,0)
 ; Validate field and return:
"RTN","PXAIICRV",65,0)
 ;
"RTN","PXAIICRV",66,0)
 ;    1   - Field is valid
"RTN","PXAIICRV",67,0)
 ;    0   - Field is invalid
"RTN","PXAIICRV",68,0)
 ;
"RTN","PXAIICRV",69,0)
 N PXOK,PXEXT,PXFLDTYP,PXRSLT,PXERR
"RTN","PXAIICRV",70,0)
 ;
"RTN","PXAIICRV",71,0)
 S PXOK=1
"RTN","PXAIICRV",72,0)
 ;
"RTN","PXAIICRV",73,0)
 I PXVAL="@" Q PXOK
"RTN","PXAIICRV",74,0)
 ;
"RTN","PXAIICRV",75,0)
 S PXFLDTYP=$$GET1^DID(PXFILE,PXFLDNUM,,"TYPE",,"PXERR")
"RTN","PXAIICRV",76,0)
 I PXFLDNUM=.01,PXFLDTYP="VARIABLE-POINTER" D
"RTN","PXAIICRV",77,0)
 . I PXVAL[920.4 S PXVAL="C.`"_(+PXVAL)
"RTN","PXAIICRV",78,0)
 . I PXVAL[920.5 S PXVAL="R.`"_(+PXVAL)
"RTN","PXAIICRV",79,0)
 I PXFLDTYP="POINTER" D
"RTN","PXAIICRV",80,0)
 . S PXVAL="`"_PXVAL
"RTN","PXAIICRV",81,0)
 ;
"RTN","PXAIICRV",82,0)
 S PXEXT=""
"RTN","PXAIICRV",83,0)
 D CHK^DIE(PXFILE,PXFLDNUM,"",PXVAL,.PXRSLT,"PXERR")
"RTN","PXAIICRV",84,0)
 I $G(PXRSLT)="^" S PXOK=0
"RTN","PXAIICRV",85,0)
 ;
"RTN","PXAIICRV",86,0)
 Q PXOK
"RTN","PXAIICRV",87,0)
 ;
"RTN","PXAIICRV",88,0)
ERRMSG(PXDLG,PXSTOP,PXVAL,PXFLDNAME) ;
"RTN","PXAIICRV",89,0)
 ;
"RTN","PXAIICRV",90,0)
 S STOP=$G(PXSTOP,0)
"RTN","PXAIICRV",91,0)
 S PXAERRF=1
"RTN","PXAIICRV",92,0)
 S PXADI("DIALOG")=$G(PXDLG,"8390001.002")
"RTN","PXAIICRV",93,0)
 I $G(PXAERR(9))'="" D
"RTN","PXAIICRV",94,0)
 . S PXAERR(9)=PXAERR(9)_", "
"RTN","PXAIICRV",95,0)
 . S PXAERR(11)=PXAERR(11)_", "
"RTN","PXAIICRV",96,0)
 . S PXAERR(12)=PXAERR(12)_" "
"RTN","PXAIICRV",97,0)
 S PXAERR(9)=$G(PXAERR(9))_PXFLDNAME
"RTN","PXAIICRV",98,0)
 S PXAERR(11)=$G(PXAERR(11))_PXVAL
"RTN","PXAIICRV",99,0)
 S PXAERR(12)=$G(PXAERR(12))_"'"_PXVAL_"' is not a valid value for field "_PXFLDNAME_"."
"RTN","PXAIICRV",100,0)
 ;
"RTN","PXAIICRV",101,0)
 Q
"RTN","PXAIIMM")
0^31^B16045767
"RTN","PXAIIMM",1,0)
PXAIIMM ;ISL/PKR - Set the IMMUNIZATION nodes. ;02/04/16  09:21
"RTN","PXAIIMM",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**45,124,209,210,215**;Aug 12, 1996;Build 10
"RTN","PXAIIMM",3,0)
 ;
"RTN","PXAIIMM",4,0)
IMM ;Main entry point.
"RTN","PXAIIMM",5,0)
 ;
"RTN","PXAIIMM",6,0)
 K PXAERR
"RTN","PXAIIMM",7,0)
 S PXAERR(8)=PXAK
"RTN","PXAIIMM",8,0)
 S PXAERR(7)="IMMUNIZATION"
"RTN","PXAIIMM",9,0)
 ;
"RTN","PXAIIMM",10,0)
 N IND,PXAA
"RTN","PXAIIMM",11,0)
 S IND=""
"RTN","PXAIIMM",12,0)
 F  S IND=$O(@PXADATA@("IMMUNIZATION",PXAK,IND)) Q:IND=""  D
"RTN","PXAIIMM",13,0)
 . I IND?1(1"VIS",1"REMARKS") D  Q
"RTN","PXAIIMM",14,0)
 . . M PXAA(IND)=@PXADATA@("IMMUNIZATION",PXAK,IND)
"RTN","PXAIIMM",15,0)
 . S PXAA(IND)=@PXADATA@("IMMUNIZATION",PXAK,IND)
"RTN","PXAIIMM",16,0)
 ;
"RTN","PXAIIMM",17,0)
 ;Validate the data.
"RTN","PXAIIMM",18,0)
 N STOP
"RTN","PXAIIMM",19,0)
 D VAL^PXAIIMMV
"RTN","PXAIIMM",20,0)
 I $G(STOP) Q
"RTN","PXAIIMM",21,0)
 ;
"RTN","PXAIIMM",22,0)
SETVARA ;Set the after visit variables.
"RTN","PXAIIMM",23,0)
 N AFTER0,AFTER12,AFTER13,AFTER16,AFTER811,AFTER812
"RTN","PXAIIMM",24,0)
 S $P(AFTER0,U,1)=$G(PXAA("IMMUN"))
"RTN","PXAIIMM",25,0)
 I $G(PXAA("DELETE")) S $P(AFTER0,U,1)="@"
"RTN","PXAIIMM",26,0)
 S $P(AFTER0,U,2)=$G(PATIENT)
"RTN","PXAIIMM",27,0)
 S $P(AFTER0,U,3)=$G(PXAVISIT)
"RTN","PXAIIMM",28,0)
 S $P(AFTER0,U,4)=$G(PXAA("SERIES"))
"RTN","PXAIIMM",29,0)
 S $P(AFTER0,U,6)=$G(PXAA("REACTION"))
"RTN","PXAIIMM",30,0)
 S $P(AFTER0,U,7)=$G(PXAA("CONTRAINDICATED"))
"RTN","PXAIIMM",31,0)
 S $P(AFTER12,U,1)=$G(PXAA("EVENT D/T"))
"RTN","PXAIIMM",32,0)
 S $P(AFTER12,U,4)=$G(PXAA("ENC PROVIDER"))
"RTN","PXAIIMM",33,0)
 S $P(AFTER811,U,1)=$G(PXAA("COMMENT"))
"RTN","PXAIIMM",34,0)
 ;
"RTN","PXAIIMM",35,0)
 ;--PACKAGE AND SOURCE
"RTN","PXAIIMM",36,0)
 S $P(AFTER812,"^",2)=$G(PXAPKG)
"RTN","PXAIIMM",37,0)
 S $P(AFTER812,"^",3)=$G(PXASOURC)
"RTN","PXAIIMM",38,0)
 ;
"RTN","PXAIIMM",39,0)
 ;--Add new fields for VIMM 2.0 - PX*1*209/210/215
"RTN","PXAIIMM",40,0)
 S $P(AFTER12,U,2)=$G(PXAA("ORD PROVIDER"))
"RTN","PXAIIMM",41,0)
 S $P(AFTER12,U,7)=$G(PXAA("LOT NUM"))
"RTN","PXAIIMM",42,0)
 S $P(AFTER12,U,20)=$G(PXAA("WARNING ACK"))
"RTN","PXAIIMM",43,0)
 S $P(AFTER13,U)=$G(PXAA("INFO SOURCE"))
"RTN","PXAIIMM",44,0)
 S $P(AFTER13,U,2)=$G(PXAA("ADMIN ROUTE"))
"RTN","PXAIIMM",45,0)
 S $P(AFTER13,U,3)=$G(PXAA("ANATOMIC LOC"))
"RTN","PXAIIMM",46,0)
 S $P(AFTER13,U,4)=$G(PXAA("DIAGNOSIS"))
"RTN","PXAIIMM",47,0)
 S $P(AFTER13,U,12)=$G(PXAA("DOSE"))
"RTN","PXAIIMM",48,0)
 S $P(AFTER13,U,13)=$G(PXAA("DOSE UNITS"))
"RTN","PXAIIMM",49,0)
 S $P(AFTER16,U,1)=$G(PXAA("OVERRIDE REASON"))
"RTN","PXAIIMM",50,0)
 ;
"RTN","PXAIIMM",51,0)
 S ^TMP("PXK",$J,"IMM",PXAK,0,"AFTER")=AFTER0
"RTN","PXAIIMM",52,0)
 S ^TMP("PXK",$J,"IMM",PXAK,12,"AFTER")=AFTER12
"RTN","PXAIIMM",53,0)
 S ^TMP("PXK",$J,"IMM",PXAK,13,"AFTER")=AFTER13
"RTN","PXAIIMM",54,0)
 S ^TMP("PXK",$J,"IMM",PXAK,16,"AFTER")=AFTER16
"RTN","PXAIIMM",55,0)
 S ^TMP("PXK",$J,"IMM",PXAK,811,"AFTER")=AFTER811
"RTN","PXAIIMM",56,0)
 S ^TMP("PXK",$J,"IMM",PXAK,812,"AFTER")=AFTER812
"RTN","PXAIIMM",57,0)
 ;
"RTN","PXAIIMM",58,0)
 ; Add multiple data to PXK AFTER - PX*1*210
"RTN","PXAIIMM",59,0)
 N FLD,SEQ,SUB
"RTN","PXAIIMM",60,0)
 ;
"RTN","PXAIIMM",61,0)
 F FLD="VIS","REMARKS" D
"RTN","PXAIIMM",62,0)
 . ;
"RTN","PXAIIMM",63,0)
 . S SUB=$S(FLD="VIS":2,1:11)
"RTN","PXAIIMM",64,0)
 . ;
"RTN","PXAIIMM",65,0)
 . ; Delete multiple
"RTN","PXAIIMM",66,0)
 . I $G(PXAA(FLD))="@" D  Q
"RTN","PXAIIMM",67,0)
 . . S ^TMP("PXK",$J,"IMM",PXAK,SUB,0,"AFTER")="@"
"RTN","PXAIIMM",68,0)
 . ;
"RTN","PXAIIMM",69,0)
 . S SEQ=0
"RTN","PXAIIMM",70,0)
 . F  S SEQ=$O(PXAA(FLD,SEQ)) Q:'SEQ  D
"RTN","PXAIIMM",71,0)
 . . S ^TMP("PXK",$J,"IMM",PXAK,SUB,SEQ,"AFTER")=$G(PXAA(FLD,SEQ,0))
"RTN","PXAIIMM",72,0)
 ;
"RTN","PXAIIMM",73,0)
 ; Add DIAGNOSIS 2 thru 8 to OTHER DIAGNOSIS multiple
"RTN","PXAIIMM",74,0)
 N DIAGNUM,DIAGSTR
"RTN","PXAIIMM",75,0)
 ;
"RTN","PXAIIMM",76,0)
 S SEQ=0
"RTN","PXAIIMM",77,0)
 ;
"RTN","PXAIIMM",78,0)
 F DIAGNUM=2:1:8 D
"RTN","PXAIIMM",79,0)
 . S DIAGSTR="DIAGNOSIS "_DIAGNUM
"RTN","PXAIIMM",80,0)
 . I $G(PXAA(DIAGSTR))'="" D
"RTN","PXAIIMM",81,0)
 . . S SEQ=SEQ+1
"RTN","PXAIIMM",82,0)
 . . S ^TMP("PXK",$J,"IMM",PXAK,3,SEQ,"AFTER")=PXAA(DIAGSTR)
"RTN","PXAIIMM",83,0)
 ;
"RTN","PXAIIMM",84,0)
SETVARB ;Set the before variables.
"RTN","PXAIIMM",85,0)
 N BEFOR0,BEFOR12,BEFOR13,BEFOR16,BEFOR811,BEFOR812
"RTN","PXAIIMM",86,0)
 N IENB,PXAAX,PXBCNT,PXBKY,PXBSKY,PXBSAM
"RTN","PXAIIMM",87,0)
 D IMM^PXBGIMM(PXAVISIT)
"RTN","PXAIIMM",88,0)
 ;
"RTN","PXAIIMM",89,0)
 S IENB=""
"RTN","PXAIIMM",90,0)
 I PXBCNT>0 D
"RTN","PXAIIMM",91,0)
 . S PXAAX("IMMUN")=$P($G(^AUTTIMM(PXAA("IMMUN"),0)),U,1)
"RTN","PXAIIMM",92,0)
 . S IENB=$O(PXBKY(PXAAX("IMMUN"),IENB))
"RTN","PXAIIMM",93,0)
 I $G(IENB) D
"RTN","PXAIIMM",94,0)
 . S BEFOR0=$G(^AUPNVIMM(IENB,0))
"RTN","PXAIIMM",95,0)
 . S BEFOR12=$G(^AUPNVIMM(IENB,12))
"RTN","PXAIIMM",96,0)
 . S BEFOR13=$G(^AUPNVIMM(IENB,13))
"RTN","PXAIIMM",97,0)
 . S BEFOR16=$G(^AUPNVIMM(IENB,16))
"RTN","PXAIIMM",98,0)
 . S BEFOR811=$G(^AUPNVIMM(IENB,811))
"RTN","PXAIIMM",99,0)
 . S BEFOR812=$G(^AUPNVIMM(IENB,812))
"RTN","PXAIIMM",100,0)
 E  S (BEFOR0,BEFOR11,BEFOR12,BEFOR13,BEFOR16,BEFOR811,BEFOR812)=""
"RTN","PXAIIMM",101,0)
 ;
"RTN","PXAIIMM",102,0)
 S ^TMP("PXK",$J,"IMM",PXAK,0,"BEFORE")=BEFOR0
"RTN","PXAIIMM",103,0)
 S ^TMP("PXK",$J,"IMM",PXAK,12,"BEFORE")=BEFOR12
"RTN","PXAIIMM",104,0)
 S ^TMP("PXK",$J,"IMM",PXAK,13,"BEFORE")=BEFOR13
"RTN","PXAIIMM",105,0)
 S ^TMP("PXK",$J,"IMM",PXAK,16,"BEFORE")=BEFOR16
"RTN","PXAIIMM",106,0)
 S ^TMP("PXK",$J,"IMM",PXAK,811,"BEFORE")=BEFOR811
"RTN","PXAIIMM",107,0)
 S ^TMP("PXK",$J,"IMM",PXAK,812,"BEFORE")=BEFOR812
"RTN","PXAIIMM",108,0)
 S ^TMP("PXK",$J,"IMM",PXAK,"IEN")=IENB
"RTN","PXAIIMM",109,0)
 ;
"RTN","PXAIIMM",110,0)
 ; Add multiple data to PXK BEFORE
"RTN","PXAIIMM",111,0)
 I $G(IENB) D
"RTN","PXAIIMM",112,0)
 . N IENSUB,SUB
"RTN","PXAIIMM",113,0)
 . F SUB=2,3,11 D
"RTN","PXAIIMM",114,0)
 . . S IENSUB=0
"RTN","PXAIIMM",115,0)
 . . F  S IENSUB=$O(^AUPNVIMM(IENB,SUB,IENSUB)) Q:'IENSUB  D
"RTN","PXAIIMM",116,0)
 . . . S ^TMP("PXK",$J,"IMM",PXAK,SUB,IENSUB,"BEFORE")=$G(^AUPNVIMM(IENB,SUB,IENSUB,0))
"RTN","PXAIIMM",117,0)
 ;
"RTN","PXAIIMM",118,0)
 Q
"RTN","PXAPIIM")
0^3^B72372554
"RTN","PXAPIIM",1,0)
PXAPIIM ;BP/LMT - PCE Immunization APIs ;04/06/16  08:12
"RTN","PXAPIIM",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**210,215**;Aug 12, 1996;Build 10
"RTN","PXAPIIM",3,0)
 ;
"RTN","PXAPIIM",4,0)
 ; Reference to NAME in file .85 is supported by ICR #6062
"RTN","PXAPIIM",5,0)
 ;
"RTN","PXAPIIM",6,0)
 Q
"RTN","PXAPIIM",7,0)
 ;
"RTN","PXAPIIM",8,0)
VIS(PXRESULT,PXVIS,PXDATE) ;Called from VIS^PXAPI
"RTN","PXAPIIM",9,0)
 ;
"RTN","PXAPIIM",10,0)
 ;Input:
"RTN","PXAPIIM",11,0)
 ;  PXRESULT  (required) Return value (passed by reference)
"RTN","PXAPIIM",12,0)
 ;     PXVIS  (required) Pointer to #920
"RTN","PXAPIIM",13,0)
 ;    PXDATE  (optional; defaults to NOW) The date in FileMan format.
"RTN","PXAPIIM",14,0)
 ;                       Used to check the status of the VIS on that date.
"RTN","PXAPIIM",15,0)
 ;Returns:
"RTN","PXAPIIM",16,0)
 ;  PXRESULT("NAME") = VIS Name
"RTN","PXAPIIM",17,0)
 ;  PXRESULT("EDITION DATE") = FileManager Internal Format for date/time
"RTN","PXAPIIM",18,0)
 ;  PXRESULT("EDITION STATUS") = code^value (C^CURRENT or H^HISTORIC)
"RTN","PXAPIIM",19,0)
 ;  PXRESULT("LANGUAGE") = IEN ^ Language (e.g., 1^ENGLISH)
"RTN","PXAPIIM",20,0)
 ;  PXRESULT("2D BAR CODE") = Barcode from the CDC VIS barcode lookup table
"RTN","PXAPIIM",21,0)
 ;  PXRESULT("VIS URL") = Internet URL for this VIS
"RTN","PXAPIIM",22,0)
 ;  PXRESULT("STATUS") = Status based on PXDATE (1^ACTIVE or 0^INACTIVE)
"RTN","PXAPIIM",23,0)
 ;
"RTN","PXAPIIM",24,0)
 N PXDATA,PXFILE,PXIENS,PXLANG,PXSTATUS
"RTN","PXAPIIM",25,0)
 ;
"RTN","PXAPIIM",26,0)
 S PXFILE=920
"RTN","PXAPIIM",27,0)
 S PXIENS=PXVIS_","
"RTN","PXAPIIM",28,0)
 D GETS^DIQ(PXFILE,PXIENS,"*","EI","PXDATA")
"RTN","PXAPIIM",29,0)
 ;
"RTN","PXAPIIM",30,0)
 S PXRESULT("NAME")=$G(PXDATA(PXFILE,PXIENS,.01,"E"))
"RTN","PXAPIIM",31,0)
 S PXRESULT("EDITION DATE")=$G(PXDATA(PXFILE,PXIENS,.02,"I"))
"RTN","PXAPIIM",32,0)
 S PXRESULT("EDITION STATUS")=$G(PXDATA(PXFILE,PXIENS,.03,"I"))_U_$G(PXDATA(PXFILE,PXIENS,.03,"E"))
"RTN","PXAPIIM",33,0)
 S PXRESULT("2D BAR CODE")=$G(PXDATA(PXFILE,PXIENS,100,"E"))
"RTN","PXAPIIM",34,0)
 S PXRESULT("VIS URL")=$G(PXDATA(PXFILE,PXIENS,101,"E"))
"RTN","PXAPIIM",35,0)
 ;
"RTN","PXAPIIM",36,0)
 S PXLANG=$G(PXDATA(PXFILE,PXIENS,.04,"I"))
"RTN","PXAPIIM",37,0)
 I PXLANG D
"RTN","PXAPIIM",38,0)
 . S PXLANG=PXLANG_U_$$GET1^DIQ(.85,PXLANG_",","NAME")  ;ICR 6062
"RTN","PXAPIIM",39,0)
 S PXRESULT("LANGUAGE")=PXLANG
"RTN","PXAPIIM",40,0)
 ;
"RTN","PXAPIIM",41,0)
 S PXSTATUS=$$GETSTAT^XTID(PXFILE,.01,PXIENS,$G(PXDATE))
"RTN","PXAPIIM",42,0)
 S PXRESULT("STATUS")=$P(PXSTATUS,U,1)_U_$P(PXSTATUS,U,3)
"RTN","PXAPIIM",43,0)
 ;
"RTN","PXAPIIM",44,0)
 Q
"RTN","PXAPIIM",45,0)
 ;
"RTN","PXAPIIM",46,0)
IMMGRP(PXRESULT,PXIMM) ;
"RTN","PXAPIIM",47,0)
 ;
"RTN","PXAPIIM",48,0)
 ; Returns a list of immunizations that share the same CVX code and Vaccine Group
"RTN","PXAPIIM",49,0)
 ; Name(s) as PXIMM, as well as Contraindications that are limited to PXIMM.
"RTN","PXAPIIM",50,0)
 ;
"RTN","PXAPIIM",51,0)
 ;Input:
"RTN","PXAPIIM",52,0)
 ;  PXRESULT  (required) Return value (passed by reference)
"RTN","PXAPIIM",53,0)
 ;     PXIMM  (required) Pointer to #9999999.14
"RTN","PXAPIIM",54,0)
 ;
"RTN","PXAPIIM",55,0)
 ;Returns:
"RTN","PXAPIIM",56,0)
 ;  PXRESULT("CVX",CVX_CODE,IMM_IEN) = Immunization Name
"RTN","PXAPIIM",57,0)
 ;  PXRESULT("VG",GROUP_NAME,IMM_IEN) = Immunization Name
"RTN","PXAPIIM",58,0)
 ;  PXRESULT("ICR",CONTRA_VIEN) = Contraindication Name
"RTN","PXAPIIM",59,0)
 ;
"RTN","PXAPIIM",60,0)
 N PXCVX,PXICRIEN,PXICRNAME,PXIMMB,PXNAME,PXVGIEN,PXVGNAME
"RTN","PXAPIIM",61,0)
 ;
"RTN","PXAPIIM",62,0)
 I '$G(PXIMM) Q
"RTN","PXAPIIM",63,0)
 ;
"RTN","PXAPIIM",64,0)
 S PXNAME=$P($G(^AUTTIMM(PXIMM,0)),U,1)
"RTN","PXAPIIM",65,0)
 ;
"RTN","PXAPIIM",66,0)
 S PXCVX=$P($G(^AUTTIMM(PXIMM,0)),U,3)
"RTN","PXAPIIM",67,0)
 I PXCVX'="" D
"RTN","PXAPIIM",68,0)
 . S PXIMMB=0
"RTN","PXAPIIM",69,0)
 . F  S PXIMMB=$O(^AUTTIMM("C",PXCVX,PXIMMB)) Q:'PXIMMB  D
"RTN","PXAPIIM",70,0)
 . . S PXNAME=$P($G(^AUTTIMM(PXIMMB,0)),U,1)
"RTN","PXAPIIM",71,0)
 . . S PXRESULT("CVX",PXCVX,PXIMMB)=PXNAME
"RTN","PXAPIIM",72,0)
 ;
"RTN","PXAPIIM",73,0)
 S PXVGIEN=0
"RTN","PXAPIIM",74,0)
 F  S PXVGIEN=$O(^AUTTIMM(PXIMM,7,PXVGIEN)) Q:'PXVGIEN  D
"RTN","PXAPIIM",75,0)
 . S PXVGNAME=$P($G(^AUTTIMM(PXIMM,7,PXVGIEN,0)),U,1)
"RTN","PXAPIIM",76,0)
 . I PXVGNAME="" Q
"RTN","PXAPIIM",77,0)
 . S PXIMMB=0
"RTN","PXAPIIM",78,0)
 . F  S PXIMMB=$O(^AUTTIMM("I",PXVGNAME,PXIMMB)) Q:'PXIMMB  D
"RTN","PXAPIIM",79,0)
 . . S PXNAME=$P($G(^AUTTIMM(PXIMMB,0)),U,1)
"RTN","PXAPIIM",80,0)
 . . S PXRESULT("VG",PXVGNAME,PXIMMB)=PXNAME
"RTN","PXAPIIM",81,0)
 ;
"RTN","PXAPIIM",82,0)
 S PXICRIEN=0
"RTN","PXAPIIM",83,0)
 F  S PXICRIEN=$O(^PXV(920.4,"D",PXIMM,PXICRIEN)) Q:'PXICRIEN  D
"RTN","PXAPIIM",84,0)
 . S PXICRNAME=$P($G(^PXV(920.4,PXICRIEN,0)),U,1)
"RTN","PXAPIIM",85,0)
 . S PXRESULT("ICR",PXICRIEN_";PXV(920.4,")=PXICRNAME
"RTN","PXAPIIM",86,0)
 ;
"RTN","PXAPIIM",87,0)
 Q
"RTN","PXAPIIM",88,0)
 ;
"RTN","PXAPIIM",89,0)
IMMSTAT(PXIMM) ;
"RTN","PXAPIIM",90,0)
 ;
"RTN","PXAPIIM",91,0)
 ;Returns Immunization status
"RTN","PXAPIIM",92,0)
 ;
"RTN","PXAPIIM",93,0)
 ;Input:
"RTN","PXAPIIM",94,0)
 ;  PXIMM - (required) Pointer to #9999999.14
"RTN","PXAPIIM",95,0)
 ;
"RTN","PXAPIIM",96,0)
 ;Returns:
"RTN","PXAPIIM",97,0)
 ;  A: Active
"RTN","PXAPIIM",98,0)
 ;  H: Inactive, but Selectable for Historic
"RTN","PXAPIIM",99,0)
 ;  I: Inactive
"RTN","PXAPIIM",100,0)
 ;
"RTN","PXAPIIM",101,0)
 I '$G(PXIMM) Q ""
"RTN","PXAPIIM",102,0)
 I '$D(^AUTTIMM(PXIMM)) Q ""
"RTN","PXAPIIM",103,0)
 I $P($G(^AUTTIMM(PXIMM,0)),U,7)="" Q "A"
"RTN","PXAPIIM",104,0)
 I $P($G(^AUTTIMM(PXIMM,6)),U,1)="Y" Q "H"
"RTN","PXAPIIM",105,0)
 Q "I"
"RTN","PXAPIIM",106,0)
 ;
"RTN","PXAPIIM",107,0)
IMMNODEF() ; Returns "IMMUNIZATION, NO DEFAULT SELECTED" entry
"RTN","PXAPIIM",108,0)
 N PXIMM
"RTN","PXAPIIM",109,0)
 S PXIMM=$O(^AUTTIMM("AVUID",5237389,0))
"RTN","PXAPIIM",110,0)
 I 'PXIMM S PXIMM=$O(^AUTTIMM("B","IMMUNIZATION, NO DEFAULT SELECTED",0))
"RTN","PXAPIIM",111,0)
 Q PXIMM
"RTN","PXAPIIM",112,0)
 ;
"RTN","PXAPIIM",113,0)
IMMBYNM(PXNAME) ; Finds Immunization that matches on PXNAME and returns IEN
"RTN","PXAPIIM",114,0)
 N PXIMM
"RTN","PXAPIIM",115,0)
 I $G(PXNAME)="" Q 0
"RTN","PXAPIIM",116,0)
 S PXIMM=$O(^AUTTIMM("B",PXNAME,0))
"RTN","PXAPIIM",117,0)
 I PXIMM Q PXIMM
"RTN","PXAPIIM",118,0)
 S PXIMM=$O(^AUTTIMM("G",PXNAME,0))
"RTN","PXAPIIM",119,0)
 I PXIMM Q PXIMM
"RTN","PXAPIIM",120,0)
 S PXIMM=$O(^AUTTIMM("H",PXNAME,0))
"RTN","PXAPIIM",121,0)
 I PXIMM Q PXIMM
"RTN","PXAPIIM",122,0)
 Q 0
"RTN","PXAPIIM",123,0)
 ;
"RTN","PXAPIIM",124,0)
PATICR(PXRESULT,DFN,PXIMM,PXBDT,PXEDT) ;
"RTN","PXAPIIM",125,0)
 ;
"RTN","PXAPIIM",126,0)
 ; Finds all of a patient's contraindications/refusals using the following criteria:
"RTN","PXAPIIM",127,0)
 ;   1. Any current-dated contraindication/refusal for PXIMM AND any immunization
"RTN","PXAPIIM",128,0)
 ;      that shares the same CVX code.
"RTN","PXAPIIM",129,0)
 ;   2. Any current-dated refusals for an immunization that shares the same vaccine
"RTN","PXAPIIM",130,0)
 ;      group as PXIMM.
"RTN","PXAPIIM",131,0)
 ;   3. Any current-dated contraindications where the contraindication has PXIMM
"RTN","PXAPIIM",132,0)
 ;      listed in the "Immunization Limited To" multiple.
"RTN","PXAPIIM",133,0)
 ;
"RTN","PXAPIIM",134,0)
 ;   * If PXBDT and PXEDT are null, then "current-dated" means where STOP >= TODAY.
"RTN","PXAPIIM",135,0)
 ;   * If PXBDT and PXEDT are defined, then "current-dated" means where START
"RTN","PXAPIIM",136,0)
 ;     <= PXEDT, and STOP is >= PXBDT.
"RTN","PXAPIIM",137,0)
 ;
"RTN","PXAPIIM",138,0)
 ;Input:
"RTN","PXAPIIM",139,0)
 ;  PXRESULT - (required) Return value (passed by reference)
"RTN","PXAPIIM",140,0)
 ;       DFN - (required) Pointer to #2
"RTN","PXAPIIM",141,0)
 ;     PXIMM - (required) Pointer to #9999999.14
"RTN","PXAPIIM",142,0)
 ;     PXBDT - (optional; defaults to TODAY) Begin Search Date
"RTN","PXAPIIM",143,0)
 ;     PXEDT - (optional; defaults to 9999999) End Search Date
"RTN","PXAPIIM",144,0)
 ;
"RTN","PXAPIIM",145,0)
 ;Returns:
"RTN","PXAPIIM",146,0)
 ;  PXRESULT(DAS) = Visit IEN ^ Contra/Refusal variable pointer | Contra/Refusal Name
"RTN","PXAPIIM",147,0)
 ;                  ^ Immunization IEN | Name ^ Warn Until Date ^ D/T Recorded ^ Event D/T
"RTN","PXAPIIM",148,0)
 ;                  ^ Encounter Provider IEN | Name
"RTN","PXAPIIM",149,0)
 ;  PXRESULT(DAS,"COMMENTS") = Comments
"RTN","PXAPIIM",150,0)
 ;
"RTN","PXAPIIM",151,0)
 ;  * DAS = Pointer to #9000010.707
"RTN","PXAPIIM",152,0)
 ;
"RTN","PXAPIIM",153,0)
 N PXCVX,PXDAS,PXDATA,PXFILE,PXICR,PXIMMB,PXIMMGRP,PXSEARCH,PXSEARCHBY,PXSUB,PXVGN,PXX
"RTN","PXAPIIM",154,0)
 ;
"RTN","PXAPIIM",155,0)
 I '$G(DFN)!('$G(PXIMM)) Q
"RTN","PXAPIIM",156,0)
 ;
"RTN","PXAPIIM",157,0)
 S PXFILE=9000010.707
"RTN","PXAPIIM",158,0)
 ;
"RTN","PXAPIIM",159,0)
 I $G(PXEDT)="" S PXEDT=9999999
"RTN","PXAPIIM",160,0)
 I $G(PXBDT)="" S PXBDT=DT
"RTN","PXAPIIM",161,0)
 I PXBDT S PXBDT=PXBDT-.0000001
"RTN","PXAPIIM",162,0)
 ;
"RTN","PXAPIIM",163,0)
 D IMMGRP(.PXIMMGRP,PXIMM)
"RTN","PXAPIIM",164,0)
 ;
"RTN","PXAPIIM",165,0)
 ; >> Search based off criteria #1 & #2:
"RTN","PXAPIIM",166,0)
 ;
"RTN","PXAPIIM",167,0)
 ; PXSEARCH("ALL") - assists in searching based off criteria #1
"RTN","PXAPIIM",168,0)
 S PXSEARCH("ALL",PXIMM)=""
"RTN","PXAPIIM",169,0)
 S PXCVX=$O(PXIMMGRP("CVX",""))
"RTN","PXAPIIM",170,0)
 I PXCVX'="" D
"RTN","PXAPIIM",171,0)
 . S PXIMMB=0
"RTN","PXAPIIM",172,0)
 . F  S PXIMMB=$O(PXIMMGRP("CVX",PXCVX,PXIMMB)) Q:'PXIMMB  D
"RTN","PXAPIIM",173,0)
 . . S PXSEARCH("ALL",PXIMMB)=""
"RTN","PXAPIIM",174,0)
 ;
"RTN","PXAPIIM",175,0)
 ; PXSEARCH("REFUSALS") - assists in searching based off criteria #2
"RTN","PXAPIIM",176,0)
 S PXVGN=""
"RTN","PXAPIIM",177,0)
 F  S PXVGN=$O(PXIMMGRP("VG",PXVGN)) Q:PXVGN=""  D
"RTN","PXAPIIM",178,0)
 . S PXIMMB=0
"RTN","PXAPIIM",179,0)
 . F  S PXIMMB=$O(PXIMMGRP("VG",PXVGN,PXIMMB)) Q:'PXIMMB  D
"RTN","PXAPIIM",180,0)
 . . I '$D(PXSEARCH("ALL",PXIMMB)) S PXSEARCH("REFUSALS",PXIMMB)=""
"RTN","PXAPIIM",181,0)
 ;
"RTN","PXAPIIM",182,0)
 F PXSEARCHBY="ALL","REFUSALS" D
"RTN","PXAPIIM",183,0)
 . S PXIMMB=0
"RTN","PXAPIIM",184,0)
 . F  S PXIMMB=$O(PXSEARCH(PXSEARCHBY,PXIMMB)) Q:'PXIMMB  D
"RTN","PXAPIIM",185,0)
 . . S PXICR=""
"RTN","PXAPIIM",186,0)
 . . F  S PXICR=$O(^PXRMINDX(PXFILE,"PIC",DFN,PXIMMB,PXICR)) Q:'PXICR  D
"RTN","PXAPIIM",187,0)
 . . . I PXSEARCHBY="REFUSALS",PXICR'[920.5 Q
"RTN","PXAPIIM",188,0)
 . . . S PXSUB(1)=PXFILE,PXSUB(2)="PIC",PXSUB(3)=DFN,PXSUB(4)=PXIMMB,PXSUB(5)=PXICR
"RTN","PXAPIIM",189,0)
 . . . D SEARCH(.PXRESULT,.PXSUB,.PXBDT,.PXEDT)
"RTN","PXAPIIM",190,0)
 ;
"RTN","PXAPIIM",191,0)
 ; >> Search based off criteria #3:
"RTN","PXAPIIM",192,0)
 ;
"RTN","PXAPIIM",193,0)
 S PXICR=""
"RTN","PXAPIIM",194,0)
 F  S PXICR=$O(PXIMMGRP("ICR",PXICR)) Q:'PXICR  D
"RTN","PXAPIIM",195,0)
 . S PXIMMB=0
"RTN","PXAPIIM",196,0)
 . F  S PXIMMB=$O(^PXRMINDX(PXFILE,"PCI",DFN,PXICR,PXIMMB)) Q:'PXIMMB  D
"RTN","PXAPIIM",197,0)
 . . S PXSUB(1)=PXFILE,PXSUB(2)="PCI",PXSUB(3)=DFN,PXSUB(4)=PXICR,PXSUB(5)=PXIMMB
"RTN","PXAPIIM",198,0)
 . . D SEARCH(.PXRESULT,.PXSUB,.PXBDT,.PXEDT)
"RTN","PXAPIIM",199,0)
 ;
"RTN","PXAPIIM",200,0)
 ; >> Setup return array fields:
"RTN","PXAPIIM",201,0)
 S PXDAS=0
"RTN","PXAPIIM",202,0)
 F  S PXDAS=$O(PXRESULT(PXDAS)) Q:'PXDAS  D
"RTN","PXAPIIM",203,0)
 . D VICR^PXPXRM(PXDAS,.PXDATA)
"RTN","PXAPIIM",204,0)
 . S PXX=$G(PXDATA("VISIT"))
"RTN","PXAPIIM",205,0)
 . S PXX=PXX_U_$P($G(PXDATA("CONTRA/REFUSAL")),U,1)_"|"_$P($G(PXDATA("CONTRA/REFUSAL")),U,2)
"RTN","PXAPIIM",206,0)
 . S PXX=PXX_U_$P($G(PXDATA("IMMUN")),U,1)_"|"_$P($G(PXDATA("IMMUN")),U,2)
"RTN","PXAPIIM",207,0)
 . S PXX=PXX_U_$G(PXDATA("WARN UNTIL DATE"))
"RTN","PXAPIIM",208,0)
 . S PXX=PXX_U_$G(PXDATA("D/T RECORDED"))
"RTN","PXAPIIM",209,0)
 . S PXX=PXX_U_$G(PXDATA("EVENT D/T"))
"RTN","PXAPIIM",210,0)
 . S PXX=PXX_U_$P($G(PXDATA("ENC PROVIDER")),U,1)_"|"_$P($G(PXDATA("ENC PROVIDER")),U,2)
"RTN","PXAPIIM",211,0)
 . S PXRESULT(PXDAS)=PXX
"RTN","PXAPIIM",212,0)
 . S PXRESULT(PXDAS,"COMMENTS")=$G(PXDATA("COMMENTS"))
"RTN","PXAPIIM",213,0)
 ;
"RTN","PXAPIIM",214,0)
 Q
"RTN","PXAPIIM",215,0)
 ;
"RTN","PXAPIIM",216,0)
SEARCH(PXRESULT,PXSUB,PXBDT,PXEDT) ; Helper function for PATICR
"RTN","PXAPIIM",217,0)
 ;
"RTN","PXAPIIM",218,0)
 N PXDAS,PXSTART,PXSTOP
"RTN","PXAPIIM",219,0)
 ;
"RTN","PXAPIIM",220,0)
 S PXSTART=0
"RTN","PXAPIIM",221,0)
 F  S PXSTART=$O(^PXRMINDX(PXSUB(1),PXSUB(2),PXSUB(3),PXSUB(4),PXSUB(5),PXSTART)) Q:'PXSTART!(PXEDT<PXSTART)  D
"RTN","PXAPIIM",222,0)
 . S PXSTOP=PXBDT
"RTN","PXAPIIM",223,0)
 . F  S PXSTOP=$O(^PXRMINDX(PXSUB(1),PXSUB(2),PXSUB(3),PXSUB(4),PXSUB(5),PXSTART,PXSTOP)) Q:'PXSTOP  D
"RTN","PXAPIIM",224,0)
 . . S PXDAS=0
"RTN","PXAPIIM",225,0)
 . . F  S PXDAS=$O(^PXRMINDX(PXSUB(1),PXSUB(2),PXSUB(3),PXSUB(4),PXSUB(5),PXSTART,PXSTOP,PXDAS)) Q:'PXDAS  D
"RTN","PXAPIIM",226,0)
 . . . S PXRESULT(PXDAS)=""
"RTN","PXAPIIM",227,0)
 ;
"RTN","PXAPIIM",228,0)
 Q
"RTN","PXAPIIM",229,0)
 ;
"RTN","PXAPIIM",230,0)
SITES(PXRSLT,PXROUTE,PXSORTBY) ;
"RTN","PXAPIIM",231,0)
 ;
"RTN","PXAPIIM",232,0)
 ;Returns list of selectable Sites for a given Route
"RTN","PXAPIIM",233,0)
 ;
"RTN","PXAPIIM",234,0)
 ;Input:
"RTN","PXAPIIM",235,0)
 ;   PXROUTE - (required) Pointer to #920.2
"RTN","PXAPIIM",236,0)
 ;  PXSORTBY - (optional; defaults to "N")
"RTN","PXAPIIM",237,0)
 ;                 "N" - Sort by Name
"RTN","PXAPIIM",238,0)
 ;                 "R" - Sort by IEN
"RTN","PXAPIIM",239,0)
 ;
"RTN","PXAPIIM",240,0)
 ;Returns:
"RTN","PXAPIIM",241,0)
 ; - If only a subset of sites are selectable for this route,
"RTN","PXAPIIM",242,0)
 ;   that list will be returned in PXRSLT.
"RTN","PXAPIIM",243,0)
 ;    o If PXSORTBY="N" - PXRSLT(Site_Name)=920_3_IEN ^ HL7 Code
"RTN","PXAPIIM",244,0)
 ;    o If PXSORTBY="R" - PXRSLT(920_3_IEN)=Site_Name ^ HL7 Code
"RTN","PXAPIIM",245,0)
 ; - If all sites are selectable for this route, the API will return:
"RTN","PXAPIIM",246,0)
 ;   PXRSLT("ALL")=""
"RTN","PXAPIIM",247,0)
 ; - If no sites are selectable for this route, the API will return:
"RTN","PXAPIIM",248,0)
 ;   PXRSLT("NONE")=""
"RTN","PXAPIIM",249,0)
 ;
"RTN","PXAPIIM",250,0)
 N PXI,PXSITE,PXSITEHL,PXSITENM
"RTN","PXAPIIM",251,0)
 ;
"RTN","PXAPIIM",252,0)
 I '$G(PXROUTE) Q
"RTN","PXAPIIM",253,0)
 I '$D(^PXV(920.2,PXROUTE,0)) Q
"RTN","PXAPIIM",254,0)
 I $G(PXSORTBY)'?1(1"N",1"R") S PXSORTBY="N"
"RTN","PXAPIIM",255,0)
 ;
"RTN","PXAPIIM",256,0)
 I $D(^PXV(920.6,PXROUTE)) D
"RTN","PXAPIIM",257,0)
 . S PXI=0
"RTN","PXAPIIM",258,0)
 . F  S PXI=$O(^PXV(920.6,PXROUTE,1,PXI)) Q:'PXI  D
"RTN","PXAPIIM",259,0)
 . . S PXSITE=$P($G(^PXV(920.6,PXROUTE,1,PXI,0)),U,1)
"RTN","PXAPIIM",260,0)
 . . S PXSITENM=$P($G(^PXV(920.3,+PXSITE,0)),U,1)
"RTN","PXAPIIM",261,0)
 . . S PXSITEHL=$P($G(^PXV(920.3,PXSITE,0)),U,2)
"RTN","PXAPIIM",262,0)
 . . I PXSITENM="" Q
"RTN","PXAPIIM",263,0)
 . . I PXSORTBY="N" S PXRSLT(PXSITENM)=PXSITE_U_PXSITEHL
"RTN","PXAPIIM",264,0)
 . . I PXSORTBY="R" S PXRSLT(PXSITE)=PXSITENM_U_PXSITEHL
"RTN","PXAPIIM",265,0)
 . ;
"RTN","PXAPIIM",266,0)
 . ; if this route exists in 920.6, but is not mapped to any sites
"RTN","PXAPIIM",267,0)
 . ; then no sites should be selectable for this route (e.g., Oral)
"RTN","PXAPIIM",268,0)
 . I '$D(PXRSLT) S PXRSLT("NONE")=""
"RTN","PXAPIIM",269,0)
 ;
"RTN","PXAPIIM",270,0)
 ; If no mapping exists, all entries are selectable
"RTN","PXAPIIM",271,0)
 I '$D(^PXV(920.6,PXROUTE)) D
"RTN","PXAPIIM",272,0)
 . S PXRSLT("ALL")=""
"RTN","PXAPIIM",273,0)
 ;
"RTN","PXAPIIM",274,0)
 Q
"RTN","PXAPIIM",275,0)
 ;
"RTN","PXAPIIM",276,0)
IMMDEF(PXRSLT,PXIMM,PXINST) ;
"RTN","PXAPIIM",277,0)
 ;
"RTN","PXAPIIM",278,0)
 N PXIEN,PXPRNT,PXSTA
"RTN","PXAPIIM",279,0)
 ;
"RTN","PXAPIIM",280,0)
 I '$G(PXIMM)!('$G(PXINST)) Q
"RTN","PXAPIIM",281,0)
 I $D(PXINST(PXINST)) Q  ; Used to prevent infinite recursion
"RTN","PXAPIIM",282,0)
 ;
"RTN","PXAPIIM",283,0)
 S PXIEN=$O(^PXV(920.05,"AC",PXINST,PXIMM,0))
"RTN","PXAPIIM",284,0)
 ;
"RTN","PXAPIIM",285,0)
 I PXIEN D  Q
"RTN","PXAPIIM",286,0)
 . M PXRSLT=^PXV(920.05,PXIEN,1,PXIMM)
"RTN","PXAPIIM",287,0)
 ;
"RTN","PXAPIIM",288,0)
 ; If site did not create defaults, make recursive
"RTN","PXAPIIM",289,0)
 ; call for parent Institution; if parent has defaults,
"RTN","PXAPIIM",290,0)
 ; inherit from parent.
"RTN","PXAPIIM",291,0)
 I 'PXIEN D  Q
"RTN","PXAPIIM",292,0)
 . S PXSTA=$$STA^XUAF4(PXINST)
"RTN","PXAPIIM",293,0)
 . I PXSTA="" Q
"RTN","PXAPIIM",294,0)
 . S PXPRNT=$$PRNT^XUAF4(PXSTA)
"RTN","PXAPIIM",295,0)
 . ;
"RTN","PXAPIIM",296,0)
 . ; If parent = self, we reached the top of the chain
"RTN","PXAPIIM",297,0)
 . I $P(PXPRNT,U,2)=PXSTA Q
"RTN","PXAPIIM",298,0)
 . I (+PXPRNT)=PXINST Q
"RTN","PXAPIIM",299,0)
 . I 'PXPRNT Q
"RTN","PXAPIIM",300,0)
 . ;
"RTN","PXAPIIM",301,0)
 . ; Used to prevent infinite recursion
"RTN","PXAPIIM",302,0)
 . S PXINST(PXINST)=""
"RTN","PXAPIIM",303,0)
 . ;
"RTN","PXAPIIM",304,0)
 . S PXINST=+PXPRNT
"RTN","PXAPIIM",305,0)
 . D IMMDEF(.PXRSLT,PXIMM,.PXINST)
"RTN","PXAPIIM",306,0)
 ;
"RTN","PXAPIIM",307,0)
 Q
"RTN","PXCEAE")
0^11^B33109650
"RTN","PXCEAE",1,0)
PXCEAE ;ISL/dee,ISA/KWP - Main routine for the List Manager display of a visit and related v-files ;11/17/2015
"RTN","PXCEAE",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**37,67,99,147,156,172,195,215**;Aug 12, 1996;Build 10
"RTN","PXCEAE",3,0)
 ;; ;
"RTN","PXCEAE",4,0)
 Q
"RTN","PXCEAE",5,0)
EN ;+ -- main entry point for PXCE DISPLAY VISIT
"RTN","PXCEAE",6,0)
 Q:$G(PXCEVIEN)'>0
"RTN","PXCEAE",7,0)
 ;The selection list for the AICS' package interface used in help messages
"RTN","PXCEAE",8,0)
 N PXCEHLST
"RTN","PXCEAE",9,0)
 ;
"RTN","PXCEAE",10,0)
 N PXCEAEVW S PXCEAEVW="B"
"RTN","PXCEAE",11,0)
 N PXCEVDEL S PXCEVDEL=0
"RTN","PXCEAE",12,0)
 ;
"RTN","PXCEAE",13,0)
 I '$D(PXCEPAT) N PXCEPAT D
"RTN","PXCEAE",14,0)
 . S PXCEPAT=$P($G(^AUPNVSIT(PXCEVIEN,0)),"^",5)
"RTN","PXCEAE",15,0)
 ; next 3 lines PX*1.0*172
"RTN","PXCEAE",16,0)
 N PXREC,PXPTSSN,PXDUZ S PXDUZ=DUZ,PXPTSSN=$P($G(^DPT(PXCEPAT,0)),U,9)
"RTN","PXCEAE",17,0)
 D SEC^PXCEEXP(.PXREC,PXDUZ,PXPTSSN)
"RTN","PXCEAE",18,0)
 I PXREC W !!,"Security regulations prohibit computer access to your own medical record." H 3 Q
"RTN","PXCEAE",19,0)
 S PXCECAT="AEP" D PATINFO^PXCEPAT(.PXCEPAT) K PXCECAT
"RTN","PXCEAE",20,0)
 ;
"RTN","PXCEAE",21,0)
 I '$D(PXCEHLOC) N PXCEHLOC S PXCEHLOC=$P($G(^AUPNVSIT(PXCEVIEN,0)),"^",22)
"RTN","PXCEAE",22,0)
 ;Get Visit date/time if exists - PX*195
"RTN","PXCEAE",23,0)
 I '$D(PXCEAPDT) N PXCEAPDT S PXCEAPDT=$P($G(^AUPNVSIT(PXCEVIEN,0)),"^")
"RTN","PXCEAE",24,0)
 ;+If not called from encounter viewer lock ^PXLCKUSR
"RTN","PXCEAE",25,0)
 ;+and create ^XTMP("PXLCKUSR",VISIEN)=DUZ
"RTN","PXCEAE",26,0)
 I PXCEKEYS'["V" D
"RTN","PXCEAE",27,0)
 .N PXRESVAL,PXVISIEN,PXMSG,PXUSR
"RTN","PXCEAE",28,0)
 .S PXMSG="",PXVISIEN=PXCEVIEN
"RTN","PXCEAE",29,0)
 .I $D(^XTMP("PXLCKUSR",PXVISIEN)) S PXUSR=$G(^VA(200,^XTMP("PXLCKUSR",PXVISIEN),0)),PXUSR=$S(PXUSR="":"Unknown",1:$P(PXUSR,"^")),PXMSG="Encounter Locked by "_PXUSR
"RTN","PXCEAE",30,0)
 .S PXRESVAL=$$LOCK^PXUALOCK("^PXLCKUSR("_PXVISIEN_")",5,0,PXMSG,0)
"RTN","PXCEAE",31,0)
 .I 'PXRESVAL Q
"RTN","PXCEAE",32,0)
 .S PXRESVAL=$$CREATE^PXUAXTMP("PXLCKUSR",PXVISIEN,365,"PCE Encounter Lock",DUZ)
"RTN","PXCEAE",33,0)
 .I 'PXRESVAL D UNLOCK^PXUALOCK("^PXLCKUSR("_PXVISIEN_")") Q
"RTN","PXCEAE",34,0)
 .D EN^VALM("PXCE ADD/EDIT MENU")
"RTN","PXCEAE",35,0)
 .D UNLOCK^PXUALOCK("^PXLCKUSR("_PXVISIEN_")"),DELETE^PXUAXTMP("PXLCKUSR",PXVISIEN)
"RTN","PXCEAE",36,0)
 I PXCEKEYS["V",$D(^TMP("VALM DATA",$J,VALMEVL,"EXP")),^("EXP")]"" X ^("EXP")
"RTN","PXCEAE",37,0)
 Q
"RTN","PXCEAE",38,0)
 ;
"RTN","PXCEAE",39,0)
GETVIEN ;Ask the user which visit.
"RTN","PXCEAE",40,0)
 N PXCEVIDX
"RTN","PXCEAE",41,0)
 S PXCEVIDX=+$P(XQORNOD(0),"^",3)
"RTN","PXCEAE",42,0)
 S:PXCEVIDX'>0 PXCEVIDX=$$SEL1^PXCE("")
"RTN","PXCEAE",43,0)
 Q:PXCEVIDX'>0
"RTN","PXCEAE",44,0)
 S PXCEVIEN=$G(^TMP("PXCEIDX",$J,PXCEVIDX))
"RTN","PXCEAE",45,0)
 ;Check that it is not related to a no show or canceled apppointment
"RTN","PXCEAE",46,0)
 D APPCHECK^PXCESDAM(.PXCEVIEN)
"RTN","PXCEAE",47,0)
 Q:'$D(PXCEVIEN)
"RTN","PXCEAE",48,0)
 ;Cannot edit future visits
"RTN","PXCEAE",49,0)
 I $P(+^AUPNVSIT(PXCEVIEN,0),".")>DT D  Q
"RTN","PXCEAE",50,0)
 . W !!,$C(7),"Can not update future encounters."
"RTN","PXCEAE",51,0)
 . D WAIT^PXCEHELP
"RTN","PXCEAE",52,0)
 . K PXCEVIEN
"RTN","PXCEAE",53,0)
 ;Check if the visit can be associated with an appointment.
"RTN","PXCEAE",54,0)
 S PXCEAPPM=$G(^DPT($P(^AUPNVSIT(PXCEVIEN,0),"^",5),"S",+^AUPNVSIT(PXCEVIEN,0),0))
"RTN","PXCEAE",55,0)
 I $P(PXCEVIEN,"^",7)="E" D  I 'Y K PXCEVIEN Q
"RTN","PXCEAE",56,0)
 . W !!,"This is a historical encounter for documenting a clinical encounter only"
"RTN","PXCEAE",57,0)
 . W !,"and will not be used by Scheduling, Billing or Workload credit."
"RTN","PXCEAE",58,0)
 . D PAUSE^PXCEHELP
"RTN","PXCEAE",59,0)
 Q
"RTN","PXCEAE",60,0)
 ;
"RTN","PXCEAE",61,0)
HDR ; -- header code
"RTN","PXCEAE",62,0)
 I '$D(^AUPNVSIT(PXCEVIEN,0)) S VALMQUIT=1 Q
"RTN","PXCEAE",63,0)
 K VALMHDR
"RTN","PXCEAE",64,0)
 N VISIT0
"RTN","PXCEAE",65,0)
 ;
"RTN","PXCEAE",66,0)
 ;PATIENT
"RTN","PXCEAE",67,0)
 S VISIT0=^AUPNVSIT(PXCEVIEN,0)
"RTN","PXCEAE",68,0)
 S VALMHDR(1)=$E(PXCEPAT("NAME"),1,26)
"RTN","PXCEAE",69,0)
 S VALMHDR(1)=$E(VALMHDR(1)_$E("    ",1,(27-$L(VALMHDR(1))))_PXCEPAT("SSN")_"                                           ",1,40)
"RTN","PXCEAE",70,0)
 S VALMHDR(1)=VALMHDR(1)_"Clinic:  "_$S($P(VISIT0,"^",22)>0:$P(^SC($P(VISIT0,"^",22),0),"^"),1:"")
"RTN","PXCEAE",71,0)
 ;
"RTN","PXCEAE",72,0)
 ;DATE
"RTN","PXCEAE",73,0)
 S VALMHDR(2)=$E("Encounter Date  "_$S($P(VISIT0,"^",1)>0:$$DATE^PXCEDATE($P(VISIT0,"^",1)),1:"")_"                                           ",1,40)
"RTN","PXCEAE",74,0)
 S VALMHDR(2)=VALMHDR(2)_"Clinic Stop:  "_$S($P(VISIT0,"^",8)>0:$$DISPLY08^PXCECSTP($P(VISIT0,"^",8)),1:"")
"RTN","PXCEAE",75,0)
 ;
"RTN","PXCEAE",76,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXCEAE",77,0)
 ;
"RTN","PXCEAE",78,0)
 Q
"RTN","PXCEAE",79,0)
 ;
"RTN","PXCEAE",80,0)
KEYS(PXCEPROT,PXCEEND) ;Set up ^XQORM("KEY") array so that can edit an item by having its 
"RTN","PXCEAE",81,0)
 ;  number be and action to edit it.
"RTN","PXCEAE",82,0)
 N PXCEPIEN,PXCEINDX
"RTN","PXCEAE",83,0)
 S PXCEPIEN=$O(^ORD(101,"B",PXCEPROT,0))_"^1"
"RTN","PXCEAE",84,0)
 F PXCEINDX=1:1:PXCEEND S XQORM("KEY",PXCEINDX)=PXCEPIEN
"RTN","PXCEAE",85,0)
 ;
"RTN","PXCEAE",86,0)
 Q
"RTN","PXCEAE",87,0)
 ;
"RTN","PXCEAE",88,0)
INIT ; -- init variables and list array
"RTN","PXCEAE",89,0)
 D BUILD^PXCEAE1(PXCEVIEN,PXCEAEVW,"^TMP(""PXCEAE"",$J)","^TMP(""PXCEAEIX"",$J)")
"RTN","PXCEAE",90,0)
 I '$D(VALMBCK) K VALMHDR S VALMBCK="R"
"RTN","PXCEAE",91,0)
 Q
"RTN","PXCEAE",92,0)
 ;
"RTN","PXCEAE",93,0)
HELP ; -- help code
"RTN","PXCEAE",94,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","PXCEAE",95,0)
 Q
"RTN","PXCEAE",96,0)
 ;
"RTN","PXCEAE",97,0)
EXIT ; -- exit code
"RTN","PXCEAE",98,0)
 ;
"RTN","PXCEAE",99,0)
 ;Check for incomplete ENCOUNTER if not already removed.
"RTN","PXCEAE",100,0)
 N PXQUIT
"RTN","PXCEAE",101,0)
 S PXQUIT=1
"RTN","PXCEAE",102,0)
 D:'$G(PXCEEXIT) CHECK^PXCEVFI5
"RTN","PXCEAE",103,0)
 ;
"RTN","PXCEAE",104,0)
 D CLEAN^VALM10
"RTN","PXCEAE",105,0)
 K ^TMP("PXCEAE",$J),^TMP("PXCEAEIX",$J)
"RTN","PXCEAE",106,0)
 D EVENT^PXKMAIN
"RTN","PXCEAE",107,0)
 K PXCEVIEN,PXCEAPPM
"RTN","PXCEAE",108,0)
 Q
"RTN","PXCEAE",109,0)
 ;
"RTN","PXCEAE",110,0)
EXPND ; -- expand code
"RTN","PXCEAE",111,0)
 S PXCEAEVW=$S(PXCEAEVW="B":"D",1:"B")
"RTN","PXCEAE",112,0)
 D BUILD^PXCEAE1(PXCEVIEN,PXCEAEVW,"^TMP(""PXCEAE"",$J)","^TMP(""PXCEAEIX"",$J)")
"RTN","PXCEAE",113,0)
 D DONE^PXCE
"RTN","PXCEAE",114,0)
 Q
"RTN","PXCEAE",115,0)
 ;
"RTN","PXCEAE",116,0)
EDIT ; -- edit a V-File entry
"RTN","PXCEAE",117,0)
 N PXCEFIDX
"RTN","PXCEAE",118,0)
 S PXCEFIDX=+$P(XQORNOD(0),"^",3)
"RTN","PXCEAE",119,0)
 D DOMANY(PXCEFIDX,"E","EN^PXCEVFIL(PXCECAT)")
"RTN","PXCEAE",120,0)
 Q
"RTN","PXCEAE",121,0)
 ;
"RTN","PXCEAE",122,0)
DEL ; -- delete a V-File entries
"RTN","PXCEAE",123,0)
 I PXCEKEYS'["D",PXCEKEYS'["d" W !!!,$C(7),"Error: You do not have delete access." D WAIT^PXCEHELP Q
"RTN","PXCEAE",124,0)
 D DOMANY(0,"D","DEL^PXCEVFI2(PXCECAT)")
"RTN","PXCEAE",125,0)
 Q
"RTN","PXCEAE",126,0)
 ;
"RTN","PXCEAE",127,0)
DOMANY(PXCEFIDX,WHATDO,WHATTODO) ;Process one or more V-File entries
"RTN","PXCEAE",128,0)
 ;WHATDO is E for edit and D for delete
"RTN","PXCEAE",129,0)
 ;WHATTODO is the routine to call
"RTN","PXCEAE",130,0)
 ;
"RTN","PXCEAE",131,0)
 I WHATDO="D" N PXCEDELV S PXCEDELV=0
"RTN","PXCEAE",132,0)
 D FULL^VALM1
"RTN","PXCEAE",133,0)
 I WHATDO="E" D
"RTN","PXCEAE",134,0)
 . S:PXCEFIDX'>0 PXCEFIDX=$$SEL^PXCEAE2("Edit",1)
"RTN","PXCEAE",135,0)
 E  I WHATDO="D" D
"RTN","PXCEAE",136,0)
 . S:PXCEFIDX'>0 PXCEFIDX=$$SEL^PXCEAE2("Delete",2)
"RTN","PXCEAE",137,0)
 E  W "??",$C(7) Q
"RTN","PXCEAE",138,0)
 Q:+PXCEFIDX'>0
"RTN","PXCEAE",139,0)
 N PXCEINDX,PXCEFIX1,PXCEFIX2
"RTN","PXCEAE",140,0)
 F PXCEINDX=1:1 S PXCEFIX1=$P(PXCEFIDX,",",PXCEINDX) Q:PXCEFIX1']""  D
"RTN","PXCEAE",141,0)
 . I $L(PXCEFIX1,"-")=1 D
"RTN","PXCEAE",142,0)
 .. I WHATDO="D",PXCEFIX1=1 S PXCEDELV=1
"RTN","PXCEAE",143,0)
 .. E  D DO1(PXCEFIX1,WHATDO,WHATTODO)
"RTN","PXCEAE",144,0)
 . E  F PXCEFIX2=$P(PXCEFIX1,"-",1):1:$P(PXCEFIX1,"-",2) D
"RTN","PXCEAE",145,0)
 .. I WHATDO="D",PXCEFIX2=1 S PXCEDELV=1
"RTN","PXCEAE",146,0)
 .. E  D DO1(PXCEFIX2,WHATDO,WHATTODO)
"RTN","PXCEAE",147,0)
 I WHATDO="D",PXCEDELV D DO1(1,WHATDO,WHATTODO)
"RTN","PXCEAE",148,0)
 D INIT
"RTN","PXCEAE",149,0)
 Q
"RTN","PXCEAE",150,0)
 ;
"RTN","PXCEAE",151,0)
DO1(PXCEFIDX,WHATDO,WHATTODO) ;Process one V-File entry
"RTN","PXCEAE",152,0)
 ;PXCEFIDX is and index into ^TMP("PXCEAEIX",$J, which tells the V-File
"RTN","PXCEAE",153,0)
 ;  and the IEN to process
"RTN","PXCEAE",154,0)
 ;WHATDO is E for edit and D for delete
"RTN","PXCEAE",155,0)
 ;WHATTODO is the routine to call
"RTN","PXCEAE",156,0)
 ;
"RTN","PXCEAE",157,0)
 N PXCEONE,PXCECAT,PXCEFIEN
"RTN","PXCEAE",158,0)
 S PXCEONE=$G(^TMP("PXCEAEIX",$J,PXCEFIDX))
"RTN","PXCEAE",159,0)
 S PXCEFIEN=+PXCEONE
"RTN","PXCEAE",160,0)
 S PXCECAT=$P(PXCEONE,"^",2)
"RTN","PXCEAE",161,0)
 I PXCECAT="CSTP",WHATDO="E" W !!!,$C(7),"You cannot edit stop codes." S PXCENOER=1 D WAIT^PXCEHELP Q
"RTN","PXCEAE",162,0)
 I PXCECAT="VST",$P(^AUPNVSIT(PXCEFIEN,0),"^",7)="E" S PXCECAT="HIST"
"RTN","PXCEAE",163,0)
 D @$S("~VST~HIST~CSTP~CPT~IMM~PED~POV~PRV~SK~TRT~HF~XAM~ICR~"[("~"_PXCECAT_"~"):WHATTODO,1:"QUIT") ; PX*1*215
"RTN","PXCEAE",164,0)
 Q
"RTN","PXCEAE",165,0)
 ;
"RTN","PXCEAE",166,0)
QUIT Q
"RTN","PXCEAE",167,0)
 ;
"RTN","PXCEAE1")
0^12^B29262597
"RTN","PXCEAE1",1,0)
PXCEAE1 ;ISL/dee,ISA/KWP,SLC/ajb - Builds the List Manager display of a visit and related v-files ;11/16/2015
"RTN","PXCEAE1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,73,199,201,210,215**;Aug 12, 1996;Build 10
"RTN","PXCEAE1",3,0)
 ;; ;
"RTN","PXCEAE1",4,0)
 Q
"RTN","PXCEAE1",5,0)
 ;
"RTN","PXCEAE1",6,0)
BUILD(VISITIEN,AEVIEW,ARRAY,ARRAYIX) ;
"RTN","PXCEAE1",7,0)
 ;AEVIEW is "B" for brief display and "D" for expanded display.
"RTN","PXCEAE1",8,0)
 I '$D(^AUPNVSIT(VISITIEN)) S VALMBCK="Q" Q
"RTN","PXCEAE1",9,0)
 N PXCECNT
"RTN","PXCEAE1",10,0)
 D FULL^VALM1
"RTN","PXCEAE1",11,0)
 D CLEAN^VALM10
"RTN","PXCEAE1",12,0)
 K @ARRAYIX
"RTN","PXCEAE1",13,0)
 S (VALMCNT,PXCECNT)=0
"RTN","PXCEAE1",14,0)
 ;
"RTN","PXCEAE1",15,0)
 ;
"RTN","PXCEAE1",16,0)
 N IEN,FILE,VFILE,VROUTINE
"RTN","PXCEAE1",17,0)
 F FILE="SIT","CSTP","PRV","POV","CPT","TRT","IMM","PED","SK","HF","XAM","ICR" D  ; PX*1*215
"RTN","PXCEAE1",18,0)
 . S VROUTINE="PXCE"_$S(FILE="IMM":"VIMM",1:FILE)
"RTN","PXCEAE1",19,0)
 . S VFILE=$P($T(FORMAT^@VROUTINE),"~",5)
"RTN","PXCEAE1",20,0)
 . I FILE="SIT" D
"RTN","PXCEAE1",21,0)
 .. S IEN=VISITIEN
"RTN","PXCEAE1",22,0)
 .. D AFILE(IEN,FILE,VFILE,VROUTINE,ARRAY,ARRAYIX,.VALMCNT,.PXCECNT,AEVIEW)
"RTN","PXCEAE1",23,0)
 .. S VALMCNT=VALMCNT+1
"RTN","PXCEAE1",24,0)
 .. S @ARRAY@(VALMCNT,0)=""
"RTN","PXCEAE1",25,0)
 . E  D
"RTN","PXCEAE1",26,0)
 .. S IEN=""
"RTN","PXCEAE1",27,0)
 .. F  S IEN=$O(@VFILE@("AD",VISITIEN,IEN)) Q:'IEN  D AFILE(IEN,FILE,VFILE,VROUTINE,ARRAY,ARRAYIX,.VALMCNT,.PXCECNT,AEVIEW)
"RTN","PXCEAE1",28,0)
 S @ARRAYIX@(0)=PXCECNT
"RTN","PXCEAE1",29,0)
 I VALMCNT=0 S VALMBCK="Q"
"RTN","PXCEAE1",30,0)
 Q
"RTN","PXCEAE1",31,0)
 ;
"RTN","PXCEAE1",32,0)
AFILE(IEN,FILE,VFILE,VROUTINE,ARRAY,ARRAYIX,VALMCNT,PXCECNT,AEVIEW) ;
"RTN","PXCEAE1",33,0)
 N ENTRY,NODE,NODES,NODECNT
"RTN","PXCEAE1",34,0)
 S PXCECNT=PXCECNT+1
"RTN","PXCEAE1",35,0)
 S NODES=$P($T(FORMAT^@VROUTINE),"~",3)
"RTN","PXCEAE1",36,0)
 F NODECNT=1:1 S NODE=$P(NODES,",",NODECNT) Q:NODE']""  S ENTRY(NODE)=$G(@VFILE@(IEN,NODE))
"RTN","PXCEAE1",37,0)
 D DISPLAY(.ENTRY,VROUTINE,ARRAY,ARRAYIX,.VALMCNT,PXCECNT,AEVIEW)
"RTN","PXCEAE1",38,0)
 I FILE="SIT" S @ARRAYIX@(PXCECNT)=VISITIEN_"^VST"
"RTN","PXCEAE1",39,0)
 E  S @ARRAYIX@(PXCECNT)=IEN_"^"_FILE
"RTN","PXCEAE1",40,0)
 Q
"RTN","PXCEAE1",41,0)
 ;
"RTN","PXCEAE1",42,0)
DISPLAY(ENTRY,PXCECODE,ARRAY,ARRAYIX,LINE,COUNT,VIEW) ; -- display the data
"RTN","PXCEAE1",43,0)
 N PXCEFILE,PXCELINE,PXCETEXT,PXCEINT,PXCEEXT
"RTN","PXCEAE1",44,0)
 S PXCEFILE=$P($T(FORMAT^@PXCECODE),"~",2)
"RTN","PXCEAE1",45,0)
 F PXCELINE=1:1 S PXCETEXT=$P($T(FORMAT+PXCELINE^@PXCECODE),";;",2) Q:PXCETEXT']""  D
"RTN","PXCEAE1",46,0)
 . ; save original PXCETEXT for multiple diagnosis ouput ; ajb
"RTN","PXCEAE1",47,0)
 . I VFILE="^AUPNVIMM",+PXCETEXT=3 N TMPTXT S TMPTXT=PXCETEXT ; ajb
"RTN","PXCEAE1",48,0)
 . I VFILE="^AUPNVIMM",+PXCETEXT=2 N TMPTXT S TMPTXT=PXCETEXT ; PX*1*210
"RTN","PXCEAE1",49,0)
 . S (PXCEEXT,PXCEINT)=$P(ENTRY($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))
"RTN","PXCEAE1",50,0)
 . ; get entries from diagnosis multiple ; ajb
"RTN","PXCEAE1",51,0)
 . I VFILE="^AUPNVIMM",+PXCETEXT=3 D  S:PXCEINT="" PXCEINT="^" S PXCEEXT=PXCEINT ; ajb
"RTN","PXCEAE1",52,0)
 . . N CNT,NIEN S (CNT,NIEN)=0 F  S NIEN=$O(^AUPNVIMM(IEN,3,NIEN)) Q:'+NIEN  D  ; ajb
"RTN","PXCEAE1",53,0)
 . . . S CNT=CNT+1,$P(PXCEINT,U,CNT)=$G(^AUPNVIMM(IEN,3,NIEN,0)) ; ajb
"RTN","PXCEAE1",54,0)
 . ; ajb - above / PX*1*210 - below
"RTN","PXCEAE1",55,0)
 . ; get entries from vis offered/given to patient multiple ; PX*1*210
"RTN","PXCEAE1",56,0)
 . I VFILE="^AUPNVIMM",+PXCETEXT=2 D  S:PXCEINT="" PXCEINT="^" S PXCEEXT=PXCEINT
"RTN","PXCEAE1",57,0)
 . . N CNT,NIEN S (CNT,NIEN)=0 F  S NIEN=$O(^AUPNVIMM(IEN,2,NIEN)) Q:'+NIEN  D
"RTN","PXCEAE1",58,0)
 . . . S CNT=CNT+1,$P(PXCEINT,U,CNT)=$P($G(^AUPNVIMM(IEN,2,NIEN,0)),"^")
"RTN","PXCEAE1",59,0)
 . ; PX*1*210
"RTN","PXCEAE1",60,0)
 . I PXCETEXT'["CPT Modifier",PXCEINT="" Q  ;Q:PXCEINT=""
"RTN","PXCEAE1",61,0)
 . Q:$P(PXCETEXT,"~",10)="N"
"RTN","PXCEAE1",62,0)
 . I VIEW'="D",$P(PXCETEXT,"~",10)="D" Q
"RTN","PXCEAE1",63,0)
 . I PXCECODE="PXCECSTP",$P(PXCETEXT,"~",3)=.01 Q
"RTN","PXCEAE1",64,0)
 . I VFILE="^AUPNVIMM",+PXCETEXT=2,+PXCEINT D VIS Q
"RTN","PXCEAE1",65,0)
 . I $P(PXCETEXT,"~",6)]"" D  Q:PXCEEXT=""
"RTN","PXCEAE1",66,0)
 .. ;I PXCECODE["CPT",$P(PXCETEXT,"~",6)["DNAR" B  
"RTN","PXCEAE1",67,0)
 .. S @("PXCEEXT="_$P(PXCETEXT,"~",6)_"("""_$S($P(PXCETEXT,"~",3)=.01:ENTRY($P(PXCETEXT,"~",1)),1:PXCEINT)_""")")
"RTN","PXCEAE1",68,0)
 . E  D
"RTN","PXCEAE1",69,0)
 .. N PXCEDILF,DIERR,PXCEI
"RTN","PXCEAE1",70,0)
 .. S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,$P(PXCETEXT,"~",3),"",PXCEINT,"PXCEDILF")
"RTN","PXCEAE1",71,0)
 .. S PXCEEXT=$S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCEAE1",72,0)
 . ; get ICD info for multiple diagnosis ; ajb
"RTN","PXCEAE1",73,0)
 . I VFILE="^AUPNVIMM",+PXCETEXT=3,+PXCEINT D  ; ajb
"RTN","PXCEAE1",74,0)
 . . S PXCEEXT="" ; ajb
"RTN","PXCEAE1",75,0)
 . . N CNT F CNT=1:1:$L(PXCEINT,U) S $P(PXCEEXT,U,CNT)=$$DISPLY01^PXCEPOV($P(PXCEINT,U,CNT)) ; ajb
"RTN","PXCEAE1",76,0)
 . N TEMP S TEMP=PXCEEXT
"RTN","PXCEAE1",77,0)
 . N PXI F PXI=1:1 Q:$P(TEMP,"^",PXI)=""  S PXCEEXT=$P(TEMP,"^",PXI) D ADDLINE S:+$D(TMPTXT) PXCETEXT=TMPTXT ; replace modified with original for multiple diagnosis ; ajb
"RTN","PXCEAE1",78,0)
 Q
"RTN","PXCEAE1",79,0)
ADDLINE ;
"RTN","PXCEAE1",80,0)
 S LINE=LINE+1
"RTN","PXCEAE1",81,0)
 I PXCELINE=1!(PXCECODE="PXCECSTP") S @ARRAY@(LINE,0)=$J(COUNT,3)_" "
"RTN","PXCEAE1",82,0)
 E  S @ARRAY@(LINE,0)="    "
"RTN","PXCEAE1",83,0)
 I $P(PXCETEXT,"~",5)["Diagnosis" D
"RTN","PXCEAE1",84,0)
 . N PXDATE,PXACSREC,PXACS
"RTN","PXCEAE1",85,0)
 . S PXDATE=$S($D(PXCEVIEN)=1:$$CSDATE^PXDXUTL(PXCEVIEN),$D(PXCEAPDT)=1:PXCEAPDT,1:DT)
"RTN","PXCEAE1",86,0)
 . S PXACSREC=$$ACTDT^PXDXUTL(PXDATE),PXACS=$P(PXACSREC,"^",3)
"RTN","PXCEAE1",87,0)
 . I PXACS["-" S PXACS=$P(PXACS,"-",1,2)
"RTN","PXCEAE1",88,0)
 . I $P(PXCETEXT,"~",5)'["ICD Code or Diagnosis" D
"RTN","PXCEAE1",89,0)
 .. S $P(PXCETEXT,"~",5)=$P($P(PXCETEXT,"~",5),"Diagnosis",1)_PXACS_" Diagnosis"_$P($P(PXCETEXT,"~",5),"Diagnosis",2)
"RTN","PXCEAE1",90,0)
 . I $P(PXCETEXT,"~",5)["ICD Code or Diagnosis" D
"RTN","PXCEAE1",91,0)
 .. S $P(PXCETEXT,"~",5)=PXACS_$P($P(PXCETEXT,"~",5),"ICD",2)
"RTN","PXCEAE1",92,0)
 S @ARRAY@(LINE,0)=@ARRAY@(LINE,0)_$P(PXCETEXT,"~",5)
"RTN","PXCEAE1",93,0)
 I ($L(@ARRAY@(LINE,0))+$L(PXCEEXT))'>80 D
"RTN","PXCEAE1",94,0)
 . S @ARRAY@(LINE,0)=@ARRAY@(LINE,0)_PXCEEXT
"RTN","PXCEAE1",95,0)
 E  D
"RTN","PXCEAE1",96,0)
 . N PXCEWRAP,PXCECOUN,PXCEHEAD
"RTN","PXCEAE1",97,0)
 . S PXCEHEAD=$L(@ARRAY@(LINE,0))
"RTN","PXCEAE1",98,0)
 . D WRAP^PXCEVFI4(PXCEEXT,80-PXCEHEAD,.PXCEWRAP)
"RTN","PXCEAE1",99,0)
 . S @ARRAY@(LINE,0)=@ARRAY@(LINE,0)_$G(PXCEWRAP(1))
"RTN","PXCEAE1",100,0)
 . S PXCECOUN=1
"RTN","PXCEAE1",101,0)
 . F  S PXCECOUN=$O(PXCEWRAP(PXCECOUN)) Q:PXCECOUN']""  D
"RTN","PXCEAE1",102,0)
 .. S LINE=LINE+1
"RTN","PXCEAE1",103,0)
 .. S @ARRAY@(LINE,0)=$J("",PXCEHEAD)_PXCEWRAP(PXCECOUN)
"RTN","PXCEAE1",104,0)
 Q
"RTN","PXCEAE1",105,0)
VIS ; get vaccine information statement info ; adm
"RTN","PXCEAE1",106,0)
 S PXCEEXT=""
"RTN","PXCEAE1",107,0)
 N CNT F CNT=1:1:$L(PXCEINT,U) S $P(PXCEEXT,U,CNT)=$$DISPVIS^PXCEVIS($P(PXCEINT,U,CNT))
"RTN","PXCEAE1",108,0)
 N TEMP S TEMP=PXCEEXT
"RTN","PXCEAE1",109,0)
 N PXI F PXI=1:1 Q:$P(TEMP,"^",PXI)=""  S PXCEEXT=$P(TEMP,"^",PXI) D ADDLINE S:+$D(TMPTXT) PXCETEXT=TMPTXT
"RTN","PXCEAE1",110,0)
 Q
"RTN","PXCEAE1",111,0)
 ;
"RTN","PXCEICR")
0^13^B18593217
"RTN","PXCEICR",1,0)
PXCEICR ;BHM/ADM - EDIT/DISPLAY CONTRAINDICATION/REFUSAL ;02/01/2016
"RTN","PXCEICR",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**215**;Aug 12, 1996;Build 10
"RTN","PXCEICR",3,0)
 ;
"RTN","PXCEICR",4,0)
 Q
"RTN","PXCEICR",5,0)
 ;
"RTN","PXCEICR",6,0)
 ;Line with the line label "FORMAT"
"RTN","PXCEICR",7,0)
 ;;Long name~File Number~Node Subscripts~Allow Duplicate entries (1=yes, 0=no)~File global name
"RTN","PXCEICR",8,0)
 ;     1         2             3                   4                                   5
"RTN","PXCEICR",9,0)
 ;
"RTN","PXCEICR",10,0)
 ;Following lines:
"RTN","PXCEICR",11,0)
 ;;Node~Piece~,Field Number~Edit Label~Display Label~Display Routine~Edit Routine~Help Text for DIR("?")~Set of PXCEKEYS that can Edit~D if Detail Display Only~
"RTN","PXCEICR",12,0)
 ;  1  ~  2  ~      3      ~     4    ~        5    ~        6      ~     7      ~       8              ~          9                  ~       10
"RTN","PXCEICR",13,0)
 ;The Display & Edit routines are for special cases.
"RTN","PXCEICR",14,0)
 ;  (The .01 field cannot have a special edit.)
"RTN","PXCEICR",15,0)
 ;
"RTN","PXCEICR",16,0)
FORMAT ;;Imm Contraindication/Refusal Event~9000010.707~0,12,801,811,812~1~^AUPNVICR
"RTN","PXCEICR",17,0)
 ;;0~1~.01~Contraindication/Refusal:  ~Contra/Refusal Event:  ~~~~~B
"RTN","PXCEICR",18,0)
 ;;0~4~.04~Immunization:  ~Immunization:  ~~EIMM^PXCEICR~~~D
"RTN","PXCEICR",19,0)
 ;;12~1~1201~Event Date and Time: ~Event Date and Time: ~~~~~D
"RTN","PXCEICR",20,0)
 ;;12~4~1204~Encounter Provider:  ~Encounter Provider:  ~~EPROV12^PXCEPRV~~~D
"RTN","PXCEICR",21,0)
 ;;0~5~.05~Warning Until Date:  ~Warning Until Date:  ~~~~~D
"RTN","PXCEICR",22,0)
 ;;0~6~.06~Date/Time Recorded: ~Date/Time Recorded:  ~~~~~D
"RTN","PXCEICR",23,0)
 ;;811~1~81101~Comments:  ~Comments:  ~~~~~D
"RTN","PXCEICR",24,0)
 ;;
"RTN","PXCEICR",25,0)
 ;
"RTN","PXCEICR",26,0)
 ;********************************
"RTN","PXCEICR",27,0)
 ;Display text for the .01 field
"RTN","PXCEICR",28,0)
 ;(Must have is called by ASK^PXCEVFI2 and DEL^PXCEVFI2.)
"RTN","PXCEICR",29,0)
DISPLY01(PXCEICR) ;
"RTN","PXCEICR",30,0)
 N DIERR,PXCEDILF,PXCEINT,PXCEEXT
"RTN","PXCEICR",31,0)
 S PXCEINT=$P(PXCEICR,"^",1)
"RTN","PXCEICR",32,0)
 S PXCEEXT=$$EXTERNAL^DILFD(9000010.707,.01,"",PXCEINT,"PXCEDILF")
"RTN","PXCEICR",33,0)
 Q $S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCEICR",34,0)
 ;
"RTN","PXCEICR",35,0)
EIMM ; Edit Immunization
"RTN","PXCEICR",36,0)
 N DA,DIR,DTOUT,DUOUT,X,Y
"RTN","PXCEICR",37,0)
 I $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))'="" D
"RTN","PXCEICR",38,0)
 . N DIERR,PXCEDILF,PXCEINT,PXCEEXT
"RTN","PXCEICR",39,0)
 . S PXCEINT=$P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))
"RTN","PXCEICR",40,0)
 . S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,$P(PXCETEXT,"~",3),"",PXCEINT,"PXCEDILF")
"RTN","PXCEICR",41,0)
 . S DIR("B")=$S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCEICR",42,0)
 S DIR(0)="PA^9999999.14:QEM"
"RTN","PXCEICR",43,0)
 S DIR("S")="I $$IMMCRSEL^PXVUTIL($P($G(PXCEAFTR(0)),U,1),Y)"
"RTN","PXCEICR",44,0)
 S DIR("A")=$P(PXCETEXT,"~",4)
"RTN","PXCEICR",45,0)
 S:$P(PXCETEXT,"~",8)]"" DIR("?")=$P(PXCETEXT,"~",8)
"RTN","PXCEICR",46,0)
 D ^DIR
"RTN","PXCEICR",47,0)
 I X="@" S Y="@"
"RTN","PXCEICR",48,0)
 E  I $D(DTOUT)!$D(DUOUT) S PXCEEND=1
"RTN","PXCEICR",49,0)
 S $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))=$P(Y,"^")
"RTN","PXCEICR",50,0)
 Q
"RTN","PXCEICR",51,0)
 ;
"RTN","PXCEICR",52,0)
CONTRA ;
"RTN","PXCEICR",53,0)
 Q:'$G(PXCEPAT)!'+$G(PXD)
"RTN","PXCEICR",54,0)
 N PXCNT,PXD1,PXEXT,PXIEN,PXRESULT,PXVJFLG,PXWUD
"RTN","PXCEICR",55,0)
 S (PXVACK,PXCNT)=0,PXD1=+PXD,PXJUST=""
"RTN","PXCEICR",56,0)
 D PATICR^PXAPIIM(.PXRESULT,PXCEPAT,PXD1)
"RTN","PXCEICR",57,0)
 I '$O(PXRESULT(0)) Q
"RTN","PXCEICR",58,0)
 S PXIEN=0 F  S PXIEN=$O(PXRESULT(PXIEN)) Q:'PXIEN  D CHK
"RTN","PXCEICR",59,0)
 I PXCNT S PXCONTRA=1 D
"RTN","PXCEICR",60,0)
 . I $P($G(PXCEAFTR("12")),"^",20) D JUST I PXVJFLG S PXVACK=1 Q
"RTN","PXCEICR",61,0)
 . K DIR S DIR("A",1)=""
"RTN","PXCEICR",62,0)
 . S DIR("A")="Acknowledge warning and proceed with administration",DIR(0)="Y",DIR("B")="NO"
"RTN","PXCEICR",63,0)
 . S DIR("?",1)="Enter YES to acknowledge a warning of contraindication/refusal events"
"RTN","PXCEICR",64,0)
 . S DIR("?")="associated with this immunization and to proceed with administration." D ^DIR K DIR
"RTN","PXCEICR",65,0)
 . I $D(DTOUT)!$D(DUOUT)!'Y Q
"RTN","PXCEICR",66,0)
 . I Y D JUST I PXVJFLG S PXVACK=1 Q
"RTN","PXCEICR",67,0)
 Q
"RTN","PXCEICR",68,0)
CHK ;
"RTN","PXCEICR",69,0)
 S PXWUD=$P(PXRESULT(PXIEN),"^",4) I $G(PXWUD),$G(PXWUD)<DT Q
"RTN","PXCEICR",70,0)
 S PXCNT=PXCNT+1 I PXCNT=1 D WARN
"RTN","PXCEICR",71,0)
 S PXEXT=$P($P(PXRESULT(PXIEN),"^",2),"|",2)
"RTN","PXCEICR",72,0)
 I $G(PXWUD) S Y=PXWUD D DD^%DT S PXEXT=PXEXT_"  (Until "_Y_")"
"RTN","PXCEICR",73,0)
 D EN^DDIOL(PXEXT,,"!,?4")
"RTN","PXCEICR",74,0)
 N PXC S PXC=$G(PXRESULT(PXIEN,"COMMENTS")) I $L(PXC) S PXC="COMMENT: "_PXC D EN^DDIOL(PXC,,"!,?6")
"RTN","PXCEICR",75,0)
 Q
"RTN","PXCEICR",76,0)
WARN ;
"RTN","PXCEICR",77,0)
 N PXX S PXX=$C(7)_"WARNING!" D EN^DDIOL(PXX,,"!!")
"RTN","PXCEICR",78,0)
 D EN^DDIOL("Contraindication/refusal event(s) associated with this immunization:",,"!,?2")
"RTN","PXCEICR",79,0)
 Q
"RTN","PXCEICR",80,0)
JUST ; enter comment concerning override of warning
"RTN","PXCEICR",81,0)
 S PXVJFLG=0
"RTN","PXCEICR",82,0)
 K DIR I $D(PXCEAFTR("16")) S DIR("B")=$P(PXCEAFTR("16"),"^")
"RTN","PXCEICR",83,0)
 S DIR("A")="Warning Override Justification",DIR(0)="9000010.11,1601" D ^DIR K DIR
"RTN","PXCEICR",84,0)
 I $D(DTOUT)!$D(DUOUT) S:Y="^" PXJUST="@" Q
"RTN","PXCEICR",85,0)
 I Y="" D EN^DDIOL("Override justification entry is required to proceed with administration.",,"!,?2") G JUST
"RTN","PXCEICR",86,0)
 S PXJUST=Y,PXVJFLG=1
"RTN","PXCEICR",87,0)
 Q
"RTN","PXCEVFI1")
0^14^B31566267
"RTN","PXCEVFI1",1,0)
PXCEVFI1 ;ISL/dee,esw - Routine to edit a visit or v-file entry ;03/02/2016
"RTN","PXCEVFI1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**23,73,112,136,143,124,184,185,210,215**;Aug 12, 1996;Build 10
"RTN","PXCEVFI1",3,0)
 Q
"RTN","PXCEVFI1",4,0)
 ;
"RTN","PXCEVFI1",5,0)
EDIT ; -- edit the V-File stored in "AFTER"
"RTN","PXCEVFI1",6,0)
 N DIR,DA,X,Y,C,PXCEINP,PXCEIN01,PXCEEND,PXD,PXCONTRA,PXJUST,PXVACK
"RTN","PXCEVFI1",7,0)
 N PXCELINE,PXCETEXT,PXCEDIRB,PXCEMOD
"RTN","PXCEVFI1",8,0)
 N PXCEKEY,PXCEIKEY,PXCENKEY,PXMDCNT
"RTN","PXCEVFI1",9,0)
 W !
"RTN","PXCEVFI1",10,0)
 G:PXCECAT="VST"!(PXCECAT="APPM")!(PXCECAT="CSTP") REST
"RTN","PXCEVFI1",11,0)
 ;
"RTN","PXCEVFI1",12,0)
EDIT01 ;
"RTN","PXCEVFI1",13,0)
 I PXCECAT="CPT"!(PXCECAT="POV")!(PXCECAT="SK")!(PXCECAT="IMM") D SC^PXCEVFI2($P(^AUPNVSIT(PXCEVIEN,0),U,5))
"RTN","PXCEVFI1",14,0)
 S PXCETEXT=$P($T(FORMAT+1^@PXCECODE),";;",2)
"RTN","PXCEVFI1",15,0)
 K DIR,DA,X,Y,C,PXCEDIRB
"RTN","PXCEVFI1",16,0)
 I $P(PXCEAFTR(0),"^",1) D
"RTN","PXCEVFI1",17,0)
 . N DIEER,PXCEDILF,PXCEEXT
"RTN","PXCEVFI1",18,0)
 . S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,.01,"",$P(PXCEAFTR(0),"^",1),"PXCEDILF")
"RTN","PXCEVFI1",19,0)
 . S PXCEDIRB=$S('$D(DIERR):PXCEEXT,1:$P(PXCEAFTR(0),"^",1))
"RTN","PXCEVFI1",20,0)
 E  S PXCEDIRB=""
"RTN","PXCEVFI1",21,0)
 I $P(PXCETEXT,"~",7)]"" D
"RTN","PXCEVFI1",22,0)
 . D @$P(PXCETEXT,"~",7)
"RTN","PXCEVFI1",23,0)
 E  D
"RTN","PXCEVFI1",24,0)
 . I PXCEDIRB'="" S DIR("B")=PXCEDIRB
"RTN","PXCEVFI1",25,0)
 . S DIR(0)=PXCEFILE_",.01OA"
"RTN","PXCEVFI1",26,0)
 . S DIR("A")=$P(PXCETEXT,"~",4)
"RTN","PXCEVFI1",27,0)
 . S:$P(PXCETEXT,"~",8)]"" DIR("?")=$P(PXCETEXT,"~",8)
"RTN","PXCEVFI1",28,0)
 . I PXCECAT="IMM" D
"RTN","PXCEVFI1",29,0)
 . . S DIR(0)="PAO^9999999.14:QEM"
"RTN","PXCEVFI1",30,0)
 . . S DIR("S")="I $$IMMSEL^PXVUTIL(Y,$G(PXCEVIEN))"
"RTN","PXCEVFI1",31,0)
 . D ^DIR
"RTN","PXCEVFI1",32,0)
 I X="@" D  G ENDEDIT
"RTN","PXCEVFI1",33,0)
 . N DIRUT
"RTN","PXCEVFI1",34,0)
 . I $P(PXCEAFTR(0),"^",1)="" D
"RTN","PXCEVFI1",35,0)
 .. W !,"There is no entry to delete."
"RTN","PXCEVFI1",36,0)
 .. D WAIT^PXCEHELP
"RTN","PXCEVFI1",37,0)
 . E  D DEL^PXCEVFI2(PXCECAT)
"RTN","PXCEVFI1",38,0)
 I $D(DIRUT),$P(PXCEAFTR(0),"^",1)="" S PXCELOOP=1
"RTN","PXCEVFI1",39,0)
 I $D(DIRUT) S PXCEQUIT=1 Q
"RTN","PXCEVFI1",40,0)
 S (PXCEINP,PXD)=Y
"RTN","PXCEVFI1",41,0)
 S PXCEIN01=X
"RTN","PXCEVFI1",42,0)
 I $P(Y,"^",2)'=PXCEDIRB,$$DUP(PXCEINP) G EDIT01
"RTN","PXCEVFI1",43,0)
 I PXCECAT="IMM" D  Q:PXCEQUIT  ; PX*1*215
"RTN","PXCEVFI1",44,0)
 . S (PXCONTRA,PXVACK)=0,PXJUST="" D CONTRA^PXCEICR
"RTN","PXCEVFI1",45,0)
 . I 'PXCONTRA S $P(PXCEAFTR(12),"^",20)="@",$P(PXCEAFTR(16),"^",1)="@" Q
"RTN","PXCEVFI1",46,0)
 . I PXCONTRA,'PXVACK S PXCEQUIT=1 Q
"RTN","PXCEVFI1",47,0)
 . I PXCONTRA,PXVACK D
"RTN","PXCEVFI1",48,0)
 ..S $P(PXCEAFTR(12),"^",20)=1
"RTN","PXCEVFI1",49,0)
 ..S $P(PXCEAFTR(16),"^",1)=PXJUST
"RTN","PXCEVFI1",50,0)
 ;--File new CPT code and retrieve IEN
"RTN","PXCEVFI1",51,0)
 I PXCECAT="CPT" D
"RTN","PXCEVFI1",52,0)
 . S PXMDCNT=$$CODM^ICPTCOD(+Y,"^TMP(""PXMODARR"",$J",PXCESOR,+^TMP("PXK",$J,"VST",1,0,"AFTER"))
"RTN","PXCEVFI1",53,0)
 . K ^TMP("PXMODARR",$J)
"RTN","PXCEVFI1",54,0)
 . I $P(PXCEAFTR(0),"^",1)'=""!(PXMDCNT'>0) Q
"RTN","PXCEVFI1",55,0)
 . N PXCEFIEN
"RTN","PXCEVFI1",56,0)
 . D NEWCODE^PXCECPT
"RTN","PXCEVFI1",57,0)
 . S ^TMP("PXK",$J,PXCECATS,1,"IEN")=PXCEFIEN
"RTN","PXCEVFI1",58,0)
 I PXCECAT="PRV",$P(PXCEAFTR(0),"^",1)>0,PXCEDIRB]"" S $P(PXCEAFTR(0),"^",6)=""
"RTN","PXCEVFI1",59,0)
 S $P(PXCEAFTR(0),"^",1)=$P(PXCEINP,"^")
"RTN","PXCEVFI1",60,0)
 K DIR,DA
"RTN","PXCEVFI1",61,0)
 ;following code added per PX*185
"RTN","PXCEVFI1",62,0)
 I $D(XQORNOD(0)) I $P(XQORNOD(0),U,4)="HF" D
"RTN","PXCEVFI1",63,0)
 .N HFIEN,NODE
"RTN","PXCEVFI1",64,0)
 .S HFIEN=$P(PXCEINP,U),NODE=$G(^AUTTHF(HFIEN,0))
"RTN","PXCEVFI1",65,0)
 .Q:'$D(NODE)
"RTN","PXCEVFI1",66,0)
 .I $P(NODE,U,8)'="Y" W !!,"WARNING:  This Health Factor is currently not set to",!?10,"display on a Health Summary report.",!!
"RTN","PXCEVFI1",67,0)
 .K HFIEN,NODE
"RTN","PXCEVFI1",68,0)
 .Q
"RTN","PXCEVFI1",69,0)
 ;
"RTN","PXCEVFI1",70,0)
REST S PXCEEND=0
"RTN","PXCEVFI1",71,0)
 F PXCELINE=2:1 S PXCETEXT=$P($T(FORMAT+PXCELINE^@PXCECODE),";;",2) Q:PXCETEXT']""  D  Q:PXCEEND
"RTN","PXCEVFI1",72,0)
 . I $P(PXCETEXT,"~",3)=.06,PXCECAT="ICR" Q  ; PX*1*215
"RTN","PXCEVFI1",73,0)
 . I $P(PXCETEXT,"~",3)=1220,PXCECAT="IMM" Q  ; PX*1*215
"RTN","PXCEVFI1",74,0)
 . I $P(PXCETEXT,"~",3)=1601,PXCECAT="IMM" Q  ; PX*1*215
"RTN","PXCEVFI1",75,0)
 . I $P(PXCETEXT,"~",3)=1214,PXCECAT="SK" Q  ; PX*1*210
"RTN","PXCEVFI1",76,0)
 . I $P(PXCETEXT,"~",3)=1406,PXCECAT="IMM" Q  ; PX*1*210
"RTN","PXCEVFI1",77,0)
 . I $P(PXCETEXT,"~",3)=1403 D  Q:PXCEEND  ; PX*1*210
"RTN","PXCEVFI1",78,0)
 .. I PXCECAT'="IMM" S PXCEEND=1 Q  ; PX*1*210
"RTN","PXCEVFI1",79,0)
 .. I +$G(PXD),'$P($G(^AUTTIMM(+PXD,.5)),"^") S PXCEEND=1 Q  ; PX*1*210
"RTN","PXCEVFI1",80,0)
 . I $P(PXCETEXT,"~",9)]"",$P(PXCETEXT,"~",3)'=80201 S PXCEKEY="" D  Q:PXCEKEY'=1
"RTN","PXCEVFI1",81,0)
 .. S PXCENKEY=$L($P(PXCETEXT,"~",9))
"RTN","PXCEVFI1",82,0)
 .. F PXCEIKEY=1:1:PXCENKEY I PXCEKEYS[$E($P(PXCETEXT,"~",9),PXCEIKEY) S PXCEKEY=1 Q
"RTN","PXCEVFI1",83,0)
 . K DIR,DA,X,Y,C
"RTN","PXCEVFI1",84,0)
 . I $P(PXCETEXT,"~",7)]"" D
"RTN","PXCEVFI1",85,0)
 .. D @$P(PXCETEXT,"~",7)
"RTN","PXCEVFI1",86,0)
 . E  D
"RTN","PXCEVFI1",87,0)
 .. I $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))'="" D
"RTN","PXCEVFI1",88,0)
 ... N DIERR,PXCEDILF,PXCEINT,PXCEEXT
"RTN","PXCEVFI1",89,0)
 ... S PXCEINT=$P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))
"RTN","PXCEVFI1",90,0)
 ... S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,$P(PXCETEXT,"~",3),"",PXCEINT,"PXCEDILF")
"RTN","PXCEVFI1",91,0)
 ... S DIR("B")=$S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCEVFI1",92,0)
 .. S DIR(0)=PXCEFILE_","_$P(PXCETEXT,"~",3)_"A"
"RTN","PXCEVFI1",93,0)
 .. S DIR("A")=$P(PXCETEXT,"~",4)
"RTN","PXCEVFI1",94,0)
 .. I PXCECAT="IMM",$G(DIR("B"))="" D DEF ; PX*1*215
"RTN","PXCEVFI1",95,0)
 .. S:$P(PXCETEXT,"~",8)]"" DIR("?")=$P(PXCETEXT,"~",8)
"RTN","PXCEVFI1",96,0)
 .. D ^DIR
"RTN","PXCEVFI1",97,0)
 .. K DIR,DA
"RTN","PXCEVFI1",98,0)
 .. I X="@" S Y="@"
"RTN","PXCEVFI1",99,0)
 .. E  I $D(DTOUT)!$D(DUOUT) S PXCEEND=1 S:PXCECAT="SIT"!(PXCECAT="APPM")!(PXCECAT="HIST")!(PXCECAT="CPT") PXCEQUIT=1 Q
"RTN","PXCEVFI1",100,0)
 .. S $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))=$P(Y,"^")
"RTN","PXCEVFI1",101,0)
 . I ($P(PXCETEXT,"~",3)=1202!($P(PXCETEXT,"~",3)=1204)) D:+Y>0 PROVIDER^PXCEVFI4(+Y)
"RTN","PXCEVFI1",102,0)
 ;
"RTN","PXCEVFI1",103,0)
ENDEDIT ;
"RTN","PXCEVFI1",104,0)
 Q
"RTN","PXCEVFI1",105,0)
 ;
"RTN","PXCEVFI1",106,0)
DUP(PXCEINP) ; -- Check for dup entries.
"RTN","PXCEVFI1",107,0)
 Q:PXCECAT="SIT"!(PXCECAT="APPM")!(PXCECAT="HIST") 0
"RTN","PXCEVFI1",108,0)
 ;
"RTN","PXCEVFI1",109,0)
 N PXCEDUP,PXCEINDX,X,Y
"RTN","PXCEVFI1",110,0)
 S PXCEDUP=0
"RTN","PXCEVFI1",111,0)
 S PXCEINDX=""
"RTN","PXCEVFI1",112,0)
 F  S PXCEINDX=$O(@(PXCEAUPN_"(""AD"",PXCEVIEN,PXCEINDX)")) Q:'PXCEINDX!PXCEDUP  S:+@(PXCEAUPN_"(PXCEINDX,0)")=+PXCEINP&(PXCEINDX'=PXCEFIEN) PXCEDUP=1
"RTN","PXCEVFI1",113,0)
 I PXCEDUP D
"RTN","PXCEVFI1",114,0)
 . I PXCEDUP
"RTN","PXCEVFI1",115,0)
 . W !,$P(PXCEINP,"^",2)," is already a "_PXCECATT_" for this Encounter."
"RTN","PXCEVFI1",116,0)
 . I PXCECAT="POV" W !!,"Duplicate Diagnosis Not Allowed." Q  ;PX/112
"RTN","PXCEVFI1",117,0)
 . I PXCECAT="CPT",$$GET1^DIQ(357.69,$P(PXCEINP,"^",2),.01)>0 D  Q
"RTN","PXCEVFI1",118,0)
 . . W !,"No duplicate E&M codes allowed."   ;PX/136
"RTN","PXCEVFI1",119,0)
 . I $P($T(FORMAT^@PXCECODE),"~",4) D
"RTN","PXCEVFI1",120,0)
 .. N DIR,DA
"RTN","PXCEVFI1",121,0)
 .. S DIR(0)="Y"
"RTN","PXCEVFI1",122,0)
 .. S DIR("A")="Do you want to add another "_$P(PXCEINP,"^",2)_""
"RTN","PXCEVFI1",123,0)
 .. S DIR("B")="NO"
"RTN","PXCEVFI1",124,0)
 .. D ^DIR
"RTN","PXCEVFI1",125,0)
 .. S PXCEDUP='+Y
"RTN","PXCEVFI1",126,0)
 Q PXCEDUP
"RTN","PXCEVFI1",127,0)
 ;
"RTN","PXCEVFI1",128,0)
DEF ; get default response from file #920.05; PX*1*215
"RTN","PXCEVFI1",129,0)
 N PXVDEF,PXVFAC,PXVIMM,PXCEEXT
"RTN","PXCEVFI1",130,0)
 Q:'$D(PXCEVIEN)
"RTN","PXCEVFI1",131,0)
 S PXVFAC=$$INST^PXVRESP(PXCEVIEN) Q:'PXVFAC
"RTN","PXCEVFI1",132,0)
 S PXVIMM=+$G(PXD) Q:'PXVIMM
"RTN","PXCEVFI1",133,0)
 S PXVDEF=$P($G(^PXV(920.05,PXVFAC,1,PXVIMM,$P(PXCETEXT,"~",1))),"^",$P(PXCETEXT,"~",2))
"RTN","PXCEVFI1",134,0)
 S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,$P(PXCETEXT,"~",3),"",PXVDEF,"PXCEDILF")
"RTN","PXCEVFI1",135,0)
 I PXCEEXT'="" S DIR("B")=PXCEEXT
"RTN","PXCEVFI1",136,0)
 Q
"RTN","PXCEVFI2")
0^15^B37818294
"RTN","PXCEVFI2",1,0)
PXCEVFI2 ;ISL/dee,ESW - Supporting routines for editing a visit or v-file entry ;12/03/2015
"RTN","PXCEVFI2",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,73,95,96,124,158,184,215**;Aug 12, 1996;Build 10
"RTN","PXCEVFI2",3,0)
 ;
"RTN","PXCEVFI2",4,0)
 Q
"RTN","PXCEVFI2",5,0)
ASK(PXCVIEN,PXCFIEN,PXCEAUPN,PXCCATT,PXCCODE) ; -- Display a selection list from one V-File for this visit
"RTN","PXCEVFI2",6,0)
 N PXCEINDX,PXCECNT,PXCEASK,PXCEREF
"RTN","PXCEVFI2",7,0)
 N DIR,DA,X,Y
"RTN","PXCEVFI2",8,0)
 S PXCEINDX=""
"RTN","PXCEVFI2",9,0)
 F PXCECNT=0:1 S PXCEINDX=$O(@(PXCEAUPN_"(""AD"",PXCVIEN,PXCEINDX)")) Q:'PXCEINDX  D
"RTN","PXCEVFI2",10,0)
 . I PXCECNT=0&(PXCCATT="Diagnosis") D SC($P(^AUPNVSIT(PXCEVIEN,0),U,5))
"RTN","PXCEVFI2",11,0)
 . I PXCECNT=0&(PXCCATT="CPT") D SC($P(^AUPNVSIT(PXCEVIEN,0),U,5))
"RTN","PXCEVFI2",12,0)
 . W:PXCECNT=0 !!,"--- "_PXCCATT_" ---",!
"RTN","PXCEVFI2",13,0)
 . S PXCEASK(PXCECNT+1)=PXCEINDX
"RTN","PXCEVFI2",14,0)
 . W !,$J(PXCECNT+1,3),?6,@("$$DISPLY01^"_PXCCODE_"("_PXCEAUPN_"(PXCEINDX,0))")
"RTN","PXCEVFI2",15,0)
 Q:PXCECNT'>0
"RTN","PXCEVFI2",16,0)
ASKLOOP S DIR(0)="FAO^1:"_$L(PXCECNT)
"RTN","PXCEVFI2",17,0)
 I PXCECAT="IMM" D
"RTN","PXCEVFI2",18,0)
 . S DIR("A",1)="Enter 1-"_PXCECNT_" to Edit, 'A' to Add, or"
"RTN","PXCEVFI2",19,0)
 . S DIR("A")=" 'C' to document a Contraindication/Refusal: "
"RTN","PXCEVFI2",20,0)
 . S DIR("?",1)="Enter the number of the "_PXCCATT_" you wish to edit, A to add a"
"RTN","PXCEVFI2",21,0)
 . S DIR("?")="new "_PXCCATT_", or 'C' to document a Contraindication/Refusal."
"RTN","PXCEVFI2",22,0)
 E  D
"RTN","PXCEVFI2",23,0)
 . S DIR("A")="Enter 1-"_PXCECNT_" to Edit, or 'A' to Add: "
"RTN","PXCEVFI2",24,0)
 . S DIR("?")="Enter the number of the "_PXCCATT_" you wish to edit or A to add a new "_PXCCATT_"."
"RTN","PXCEVFI2",25,0)
 D ^DIR
"RTN","PXCEVFI2",26,0)
 K DIR,DA
"RTN","PXCEVFI2",27,0)
 I $D(DIRUT) S PXCEQUIT=1 Q
"RTN","PXCEVFI2",28,0)
 Q:"Aa"[Y
"RTN","PXCEVFI2",29,0)
 I "Cc"[Y S PXVICR=1 Q
"RTN","PXCEVFI2",30,0)
 G:Y<1!(Y>PXCECNT) ASKLOOP
"RTN","PXCEVFI2",31,0)
 G:$G(PXCEASK(Y))'>0 ASKLOOP
"RTN","PXCEVFI2",32,0)
 S PXCFIEN=$G(PXCEASK(Y))
"RTN","PXCEVFI2",33,0)
 Q
"RTN","PXCEVFI2",34,0)
 ;
"RTN","PXCEVFI2",35,0)
SAVE ; -- Save this edited and quit editing.
"RTN","PXCEVFI2",36,0)
 I PXCECAT="CSTP" S PXCEFIEN=$$STOPCODE^PXUTLSTP(PXCESOR,$P(PXCEAFTR(0),"^",8),PXCEVIEN)
"RTN","PXCEVFI2",37,0)
 E  D
"RTN","PXCEVFI2",38,0)
 . N PXCENODS,PXCEFOR,PXCENODE,PXCESEQ
"RTN","PXCEVFI2",39,0)
 . S PXCENODS=$P($T(FORMAT^@PXCECODE),"~",3)
"RTN","PXCEVFI2",40,0)
 . F PXCEFOR=1:1 S PXCENODE=$P(PXCENODS,",",PXCEFOR) Q:PXCENODE']""  D
"RTN","PXCEVFI2",41,0)
 .. I PXCENODE=1,PXCECATS="CPT" D  Q
"RTN","PXCEVFI2",42,0)
 ... S PXCESEQ=""
"RTN","PXCEVFI2",43,0)
 ... F  S PXCESEQ=$O(PXCEAFTR(PXCENODE,PXCESEQ)) Q:PXCESEQ=""  D
"RTN","PXCEVFI2",44,0)
 .... S ^TMP("PXK",$J,PXCECATS,1,PXCENODE,PXCESEQ,"AFTER")=PXCEAFTR(PXCENODE,PXCESEQ)
"RTN","PXCEVFI2",45,0)
 .. S ^TMP("PXK",$J,PXCECATS,1,PXCENODE,"AFTER")=PXCEAFTR(PXCENODE)
"RTN","PXCEVFI2",46,0)
 . I PXCECAT="SK",$G(^TMP("PXK",$J,PXCECATS,1,"IEN"))]"" D SAVE^PXCESK
"RTN","PXCEVFI2",47,0)
 . D EN1^PXKMAIN
"RTN","PXCEVFI2",48,0)
 . I PXCECAT="SIT"!(PXCECAT="APPM")!(PXCECAT="HIST") S PXCEVIEN=^TMP("PXK",$J,"VST",1,"IEN")
"RTN","PXCEVFI2",49,0)
 Q
"RTN","PXCEVFI2",50,0)
 ;
"RTN","PXCEVFI2",51,0)
DEL(PXCECAT) ; -- Delete this V-File entry from the List if all the visit information.
"RTN","PXCEVFI2",52,0)
 I PXCEFIEN'>0!(PXCEVIEN'>0) W !!,$C(7),"Error: Cannot delete this an unknown V-File entry." D PAUSE^PXCEHELP Q
"RTN","PXCEVFI2",53,0)
 I PXCEKEYS'["D",PXCEKEYS'["d" W !!,$C(7),"Error: You do not have delete access." D PAUSE^PXCEHELP Q
"RTN","PXCEVFI2",54,0)
 ;
"RTN","PXCEVFI2",55,0)
 N PXCENODS,PXCEFOR,PXCENODE,PXCECATS,PXCECATT,PXCECODE,PXCEAUPN,PXCEQUIT
"RTN","PXCEVFI2",56,0)
 S PXCECODE="PXCE"_$S(PXCECAT="IMM":"VIMM",1:PXCECAT)
"RTN","PXCEVFI2",57,0)
 S PXCECATS=$S(PXCECAT="CSTP":"VST",PXCECAT="HIST":"VST",1:PXCECAT)
"RTN","PXCEVFI2",58,0)
 S PXCEAUPN=$P($T(FORMAT^@PXCECODE),"~",5)
"RTN","PXCEVFI2",59,0)
 S PXCECATT=$P($P($T(FORMAT^@PXCECODE),";;",2),"~",1)
"RTN","PXCEVFI2",60,0)
 ;
"RTN","PXCEVFI2",61,0)
 I '$D(@(PXCEAUPN_"(PXCEFIEN)")) Q
"RTN","PXCEVFI2",62,0)
 I $P($G(@(PXCEAUPN_"(PXCEFIEN,812)")),"^",1) D  Q
"RTN","PXCEVFI2",63,0)
 . W !!,"Error on deleting "_PXCECATT_" ",@("$$DISPLY01^"_PXCECODE_"(@(PXCEAUPN_""(PXCEFIEN,0)""))")
"RTN","PXCEVFI2",64,0)
 . W !,"Error: You cannot delete this entry it has been ""Verified""." D WAIT^PXCEHELP
"RTN","PXCEVFI2",65,0)
 I PXCEKEYS'["D" D  Q:PXCEQUIT
"RTN","PXCEVFI2",66,0)
 . N PXCECHK
"RTN","PXCEVFI2",67,0)
 . S PXCEQUIT=0
"RTN","PXCEVFI2",68,0)
 . I PXCECATS="VST" S PXCECHK=$P($G(@(PXCEAUPN_"(PXCEFIEN,0)")),"^",23)
"RTN","PXCEVFI2",69,0)
 . E  S PXCECHK=$P($P($P($G(@(PXCEAUPN_"(PXCEFIEN,801)")),"^",2),";",1)," ",2)
"RTN","PXCEVFI2",70,0)
 . I DUZ'=PXCECHK D
"RTN","PXCEVFI2",71,0)
 .. S PXCEQUIT=1
"RTN","PXCEVFI2",72,0)
 .. N NODE0
"RTN","PXCEVFI2",73,0)
 .. S NODE0=@(PXCEAUPN_"(PXCEFIEN,0)")
"RTN","PXCEVFI2",74,0)
 .. W !!,"Error on deleting "_PXCECATT_" ",@("$$DISPLY01^"_PXCECODE_"(NODE0)")
"RTN","PXCEVFI2",75,0)
 .. W !,"Error: You cannot delete an entry you did not create." D WAIT^PXCEHELP
"RTN","PXCEVFI2",76,0)
 ;
"RTN","PXCEVFI2",77,0)
 I PXCECAT="CSTP" D
"RTN","PXCEVFI2",78,0)
 . W !!,"Deleting "_PXCECATT_" "
"RTN","PXCEVFI2",79,0)
 . W @("$$DISPLY01^"_PXCECODE_"($G(@(PXCEAUPN_""(PXCEFIEN,0)"")))")
"RTN","PXCEVFI2",80,0)
 . Q:'$$SURE^PXCEAE2
"RTN","PXCEVFI2",81,0)
 . N PXCERESU
"RTN","PXCEVFI2",82,0)
 . S PXCERESU=$$STOPCODE^PXUTLSTP(PXCESOR,"@",PXCEVIEN,PXCEFIEN)
"RTN","PXCEVFI2",83,0)
 . S:$D(PXCELOOP) PXCELOOP=1
"RTN","PXCEVFI2",84,0)
 E  I PXCECATS="VST" D
"RTN","PXCEVFI2",85,0)
 . W !!,"Deleting "_PXCECATT_" "
"RTN","PXCEVFI2",86,0)
 . W @("$$DISPLY01^"_PXCECODE_"($G(@(PXCEAUPN_""(PXCEFIEN,0)"")))")
"RTN","PXCEVFI2",87,0)
 . Q:'$$SURE^PXCEAE2
"RTN","PXCEVFI2",88,0)
 . N PXCERESU
"RTN","PXCEVFI2",89,0)
 . S PXCERESU=$$KILL^VSITKIL(PXCEVIEN)
"RTN","PXCEVFI2",90,0)
 . I PXCERESU D
"RTN","PXCEVFI2",91,0)
 .. I PXCERESU=1,$O(^SCE("AVSIT",PXCEVIEN,"")) Q
"RTN","PXCEVFI2",92,0)
 .. W !,$C(7),"Could not delete the encounter.  There are still users of it." D WAIT^PXCEHELP
"RTN","PXCEVFI2",93,0)
 . I 'PXCERESU S PXCEVDEL=1 S:$D(PXCELOOP) (PXCELOOP,PXCEQUIT,PXCENOER)=1
"RTN","PXCEVFI2",94,0)
 . D EVENT^PXKMAIN
"RTN","PXCEVFI2",95,0)
 ;
"RTN","PXCEVFI2",96,0)
 E  D
"RTN","PXCEVFI2",97,0)
 . K ^TMP("PXK",$J)
"RTN","PXCEVFI2",98,0)
 . S ^TMP("PXK",$J,"VST",1,"IEN")=PXCEVIEN
"RTN","PXCEVFI2",99,0)
 . F PXCENODE=0,21,150,800,811,812 D
"RTN","PXCEVFI2",100,0)
 .. S (^TMP("PXK",$J,"VST",1,PXCENODE,"AFTER"),^TMP("PXK",$J,"VST",1,PXCENODE,"BEFORE"))=$G(^AUPNVSIT(PXCEVIEN,PXCENODE))
"RTN","PXCEVFI2",101,0)
 . ;
"RTN","PXCEVFI2",102,0)
 . S ^TMP("PXK",$J,"SOR")=PXCESOR
"RTN","PXCEVFI2",103,0)
 . S ^TMP("PXK",$J,PXCECATS,1,"IEN")=PXCEFIEN
"RTN","PXCEVFI2",104,0)
 . ;
"RTN","PXCEVFI2",105,0)
 . S PXCENODS=$P($T(FORMAT^@PXCECODE),"~",3)
"RTN","PXCEVFI2",106,0)
 . F PXCEFOR=1:1 S PXCENODE=$P(PXCENODS,",",PXCEFOR) Q:PXCENODE']""  D
"RTN","PXCEVFI2",107,0)
 .. S ^TMP("PXK",$J,PXCECATS,1,PXCENODE,"BEFORE")=$G(@(PXCEAUPN_"(PXCEFIEN,PXCENODE)"))
"RTN","PXCEVFI2",108,0)
 . ;
"RTN","PXCEVFI2",109,0)
 . N DIK,DA
"RTN","PXCEVFI2",110,0)
 . W !!,"Deleting "_PXCECATT_" "
"RTN","PXCEVFI2",111,0)
 . W @("$$DISPLY01^"_PXCECODE_"(^TMP(""PXK"",$J,PXCECATS,1,0,""BEFORE""))")
"RTN","PXCEVFI2",112,0)
 . Q:'$$SURE^PXCEAE2  ;DELQUIT
"RTN","PXCEVFI2",113,0)
 . S PXCENODS=$P($T(FORMAT^@PXCECODE),"~",3)
"RTN","PXCEVFI2",114,0)
 . F PXCEFOR=1:1 S PXCENODE=$P(PXCENODS,",",PXCEFOR) Q:PXCENODE']""  S ^TMP("PXK",$J,PXCECATS,1,PXCENODE,"AFTER")=$S(PXCENODE=0:"@",1:"")
"RTN","PXCEVFI2",115,0)
 . D EN1^PXKMAIN
"RTN","PXCEVFI2",116,0)
 . S:$D(PXCELOOP) PXCELOOP=1
"RTN","PXCEVFI2",117,0)
 . I $D(PXCENOER)#2 S PXCENOER=1
"RTN","PXCEVFI2",118,0)
 ;
"RTN","PXCEVFI2",119,0)
DELQUIT ;
"RTN","PXCEVFI2",120,0)
 K ^TMP("PXK",$J)
"RTN","PXCEVFI2",121,0)
 Q
"RTN","PXCEVFI2",122,0)
 ;
"RTN","PXCEVFI2",123,0)
SC(PXDFN) ;Service Connected Help
"RTN","PXCEVFI2",124,0)
 ; Input  -- DFN      Patient file IEN  
"RTN","PXCEVFI2",125,0)
 ; Output -- Help
"RTN","PXCEVFI2",126,0)
 N I,SDCNT,SDDC,SDRD0
"RTN","PXCEVFI2",127,0)
 W !!,"Patient's Service Connection and Rated Disabilities:"
"RTN","PXCEVFI2",128,0)
 W !!,$S($P($G(^DPT(PXDFN,.3)),"^")="Y":"        SC Percent: "_$P(^(.3),"^",2)_"%",1:" Service Connected: No")
"RTN","PXCEVFI2",129,0)
 W !,"Rated Disabilities: "
"RTN","PXCEVFI2",130,0)
 I $P($G(^DPT(PXDFN,"VET")),"^")'="Y",$S('$D(^DIC(391,+$G(^DPT(PXDFN,"TYPE")),0)):1,$P(^(0),"^",2):0,1:1) W "Not a Veteran" Q
"RTN","PXCEVFI2",131,0)
 S (SDCNT,I)=0
"RTN","PXCEVFI2",132,0)
 F  S I=$O(^DPT(PXDFN,.372,I)) Q:'I  I $P($G(^(I,0)),"^",3) S SDRD0=^(0) D
"RTN","PXCEVFI2",133,0)
 .S SDCNT=SDCNT+1
"RTN","PXCEVFI2",134,0)
 .S SDDC=$S('$D(^DIC(31,+SDRD0,0)):"",$P(^(0),"^",4)]"":$P(^(0),"^",4),1:$P(^(0),"^"))
"RTN","PXCEVFI2",135,0)
 .W:SDCNT>1 !
"RTN","PXCEVFI2",136,0)
 .W ?20,$P($G(^DIC(31,+SDRD0,0)),"^",3),?25,SDDC,"  (",$P(SDRD0,"^",2),"%-",$S($P(SDRD0,"^",3):"SC",1:""),")"
"RTN","PXCEVFI2",137,0)
 I 'SDCNT W $S('$O(^DPT(PXDFN,.372,0)):"None Stated",1:"No Service Connected Disabilities Listed")
"RTN","PXCEVFI2",138,0)
 ;
"RTN","PXCEVFIL")
0^16^B44185519
"RTN","PXCEVFIL",1,0)
PXCEVFIL ;ISL/dee - Main routine to edit a visit or v-file entry ;11/18/2015
"RTN","PXCEVFIL",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**9,30,22,73,88,89,104,147,124,169,210,215**;Aug 12, 1996;Build 10
"RTN","PXCEVFIL",3,0)
 ;
"RTN","PXCEVFIL",4,0)
 Q
"RTN","PXCEVFIL",5,0)
EN(PXCECAT) ; -- main entry point for PXCE pxcecat EDIT
"RTN","PXCEVFIL",6,0)
 I PXCECAT="SIT"!(PXCECAT="HIST") D PATINFO^PXCEPAT(.PXCEPAT) Q:$D(DIRUT)
"RTN","PXCEVFIL",7,0)
 I PXCECAT'="SIT",PXCECAT'="APPM",PXCECAT'="HIST" Q:'$D(PXCEFIEN)!'$D(PXCEVIEN)!'$D(PXCEPAT)
"RTN","PXCEVFIL",8,0)
 E  Q:(PXCEVIEW["P"&'$D(PXCEPAT))!(PXCEVIEW["H"&'$D(PXCEHLOC))!("~H~P~"'[("~"_$P(PXCEVIEW,"^")_"~"))
"RTN","PXCEVFIL",9,0)
 I PXCECAT="CSTP",$L($T(DATE^SCDXUTL)),$$DATE^SCDXUTL(+$G(^AUPNVSIT(PXCEVIEN,0))) W !!,$C(7),"Stop Codes can not be added to encounters after "_$$FMDATE^SCDXUTL Q
"RTN","PXCEVFIL",10,0)
 N PXCEQUIT
"RTN","PXCEVFIL",11,0)
 I "~CPT~CSTP~"[PXCECAT D  Q:PXCEQUIT
"RTN","PXCEVFIL",12,0)
 . S PXCEQUIT=0
"RTN","PXCEVFIL",13,0)
 . I $P($G(^AUPNVSIT(PXCEVIEN,0)),"^",7)="E" D  Q:$G(PXCEQUIT)
"RTN","PXCEVFIL",14,0)
 .. I PXCECAT="CSTP" W !!,$C(7),"Historical Encounters cannot have Stop Codes." D WAIT^PXCEHELP S PXCEQUIT=1 Q
"RTN","PXCEVFIL",15,0)
 K PXCEQUIT
"RTN","PXCEVFIL",16,0)
 D FULL^VALM1
"RTN","PXCEVFIL",17,0)
 ;
"RTN","PXCEVFIL",18,0)
 N PXCEVFIL,PXCELOOP,PXCENOER
"RTN","PXCEVFIL",19,0)
 N PXCECODE,PXCEAUPN,PXCECATS,PXCECATT,PXCEFILE,PXVICR ; PX*1*215
"RTN","PXCEVFIL",20,0)
 N PXCEPSCC
"RTN","PXCEVFIL",21,0)
 S PXCECATS=$S(PXCECAT="SIT":"VST",PXCECAT="APPM":"VST",PXCECAT="HIST":"VST",PXCECAT="CSTP":"VST",1:PXCECAT)
"RTN","PXCEVFIL",22,0)
 S PXCECODE="PXCE"_$S(PXCECAT="IMM":"VIMM",1:PXCECAT)
"RTN","PXCEVFIL",23,0)
 S PXCEAUPN=$P($T(FORMAT^@PXCECODE),"~",5)
"RTN","PXCEVFIL",24,0)
 S PXCECATT=$P($P($T(FORMAT^@PXCECODE),";;",2),"~",1)
"RTN","PXCEVFIL",25,0)
 S PXCEFILE=$P($T(FORMAT^@PXCECODE),"~",2)
"RTN","PXCEVFIL",26,0)
 S (PXCEQUIT,PXVICR)=0
"RTN","PXCEVFIL",27,0)
 I '$D(PXCAAFTR),PXCECAT'="SIT",PXCECAT'="APPM",PXCECAT'="HIST",PXCEFIEN'>0 D ASK^PXCEVFI2(PXCEVIEN,.PXCEFIEN,PXCEAUPN,PXCECATT,PXCECODE)
"RTN","PXCEVFIL",28,0)
 Q:PXCEQUIT
"RTN","PXCEVFIL",29,0)
 I PXVICR S PXCEFIEN="" D EN("ICR") Q  ; PX*1*215
"RTN","PXCEVFIL",30,0)
 I PXCECAT'="SIT",PXCECAT'="APPM",PXCECAT'="HIST" S PXCELOOP=+PXCEFIEN
"RTN","PXCEVFIL",31,0)
 E  S PXCELOOP=1,PXCEFIEN=PXCEVIEN
"RTN","PXCEVFIL",32,0)
 I PXCECAT="CSTP" D
"RTN","PXCEVFIL",33,0)
 . I $$VSTAPPT^PXUTL1(PXCEPAT,+^AUPNVSIT(PXCEVIEN,0),PXCEHLOC,PXCEVIEN) S PXCELOOP=0
"RTN","PXCEVFIL",34,0)
 . E  S PXCELOOP=1
"RTN","PXCEVFIL",35,0)
 I $D(PXCAAFTR) S PXCELOOP=1
"RTN","PXCEVFIL",36,0)
 F  D DOONE Q:PXCELOOP
"RTN","PXCEVFIL",37,0)
 K PXCEFIEN
"RTN","PXCEVFIL",38,0)
 Q
"RTN","PXCEVFIL",39,0)
 ;
"RTN","PXCEVFIL",40,0)
DOONE ;
"RTN","PXCEVFIL",41,0)
 N PXCEUP,PXELAP
"RTN","PXCEVFIL",42,0)
 N PXCEAFTR
"RTN","PXCEVFIL",43,0)
 D INIT
"RTN","PXCEVFIL",44,0)
 Q:PXCEQUIT
"RTN","PXCEVFIL",45,0)
DOONE2 ;
"RTN","PXCEVFIL",46,0)
 K PXKERROR
"RTN","PXCEVFIL",47,0)
 S PXCENOER=0
"RTN","PXCEVFIL",48,0)
 I PXCECAT="IMM" S PXVNEWDA="" ; PX*1*210
"RTN","PXCEVFIL",49,0)
 D EDIT^PXCEVFI1
"RTN","PXCEVFIL",50,0)
 I 'PXCEQUIT,PXCECAT="SIT",$P($G(PXCEAFTR(0)),"^")]"",$P($G(PXCEAFTR(0)),"^",22)]"" D
"RTN","PXCEVFIL",51,0)
 . I $D(^DPT(DFN,"S",$P(PXCEAFTR(0),"^"),0)),$P($G(^DPT(DFN,"S",$P(PXCEAFTR(0),"^"),0)),"^")=$P(PXCEAFTR(0),"^",22),$P(^DPT(DFN,"S",$P(PXCEAFTR(0),"^"),0),"^",2)["C" D
"RTN","PXCEVFIL",52,0)
 .. S PXCEQUIT=1,$P(PXCEAFTR(0),"^")=""
"RTN","PXCEVFIL",53,0)
 .. W !,$C(7),"Cannot create encounter for appointment date/time and clinic that was previously cancelled, NOTHING was STORED"
"RTN","PXCEVFIL",54,0)
 .. D WAIT^PXCEHELP
"RTN","PXCEVFIL",55,0)
 I ($P(PXCEAFTR(0),"^")]"") D
"RTN","PXCEVFIL",56,0)
 . I PXCEQUIT D
"RTN","PXCEVFIL",57,0)
 .. I 'PXCEFIEN,PXCECAT="CPT" D
"RTN","PXCEVFIL",58,0)
 ... D REMOVE(^TMP("PXK",$J,PXCECAT,1,"IEN"))
"RTN","PXCEVFIL",59,0)
 .. I 'PXCENOER D
"RTN","PXCEVFIL",60,0)
 ... I PXCEFIEN>0 D
"RTN","PXCEVFIL",61,0)
 .... D:PXCECAT="CPT" MODUPD
"RTN","PXCEVFIL",62,0)
 .... W !,$C(7),"The last entry did not have all of the required data and NOTHING was CHANGED."
"RTN","PXCEVFIL",63,0)
 ... E  W !,$C(7),"The last entry did not have all of the required data and NOTHING was STORED."
"RTN","PXCEVFIL",64,0)
 ... D WAIT^PXCEHELP
"RTN","PXCEVFIL",65,0)
 . E  D SAVE^PXCEVFI2
"RTN","PXCEVFIL",66,0)
 I PXCECAT="IMM",$G(PXVNEWDA) D EVIS^PXCEVIS K PXVNEWDA ; PX*1*210
"RTN","PXCEVFIL",67,0)
 D EXIT
"RTN","PXCEVFIL",68,0)
 Q
"RTN","PXCEVFIL",69,0)
 ;
"RTN","PXCEVFIL",70,0)
INIT ; -- init variables and list array
"RTN","PXCEVFIL",71,0)
 N PXCENODS,PXCEFOR,PXCENODE
"RTN","PXCEVFIL",72,0)
 K ^TMP("PXK",$J),PXCEAFTR
"RTN","PXCEVFIL",73,0)
 S ^TMP("PXK",$J,"SOR")=PXCESOR
"RTN","PXCEVFIL",74,0)
 S ^TMP("PXK",$J,"VST",1,"IEN")=PXCEVIEN
"RTN","PXCEVFIL",75,0)
 I PXCECAT="SIT"!(PXCECAT="APPM")!(PXCECAT="HIST") D
"RTN","PXCEVFIL",76,0)
 . I PXCEVIEN>0 L +@(PXCEAUPN_"(PXCEVIEN)"):5 E  W !!,$C(7),"Cannot edit at this time, try again later." D PAUSE^PXCEHELP S PXCEQUIT=1 Q
"RTN","PXCEVFIL",77,0)
 . F PXCENODE=0,21,150,800,811,812 D
"RTN","PXCEVFIL",78,0)
 .. S PXCEAFTR(PXCENODE)=$S(PXCEVIEN>0:$G(^AUPNVSIT(PXCEVIEN,PXCENODE)),1:"")
"RTN","PXCEVFIL",79,0)
 .. S ^TMP("PXK",$J,"VST",1,PXCENODE,"BEFORE")=PXCEAFTR(PXCENODE)
"RTN","PXCEVFIL",80,0)
 E  D
"RTN","PXCEVFIL",81,0)
 . I PXCEFIEN>0 L +@(PXCEAUPN_"(PXCEFIEN)"):5 E  W !!,$C(7),"Cannot edit at this time, try again later." D PAUSE^PXCEHELP S PXCEQUIT=1 Q
"RTN","PXCEVFIL",82,0)
 . F PXCENODE=0,21,150,800,811,812 D
"RTN","PXCEVFIL",83,0)
 .. S ^TMP("PXK",$J,"VST",1,PXCENODE,"BEFORE")=$G(^AUPNVSIT(+PXCEVIEN,PXCENODE))
"RTN","PXCEVFIL",84,0)
 .. S ^TMP("PXK",$J,"VST",1,PXCENODE,"AFTER")=^TMP("PXK",$J,"VST",1,PXCENODE,"BEFORE")
"RTN","PXCEVFIL",85,0)
 . ;
"RTN","PXCEVFIL",86,0)
 . S ^TMP("PXK",$J,PXCECATS,1,"IEN")=PXCEFIEN
"RTN","PXCEVFIL",87,0)
 . S PXCENODS=$P($T(FORMAT^@PXCECODE),"~",3)
"RTN","PXCEVFIL",88,0)
 . F PXCEFOR=1:1 S PXCENODE=$P(PXCENODS,",",PXCEFOR) Q:PXCENODE']""  D
"RTN","PXCEVFIL",89,0)
 .. I PXCEFIEN>0 D
"RTN","PXCEVFIL",90,0)
 ... I PXCECAT="CPT",PXCENODE=1 D
"RTN","PXCEVFIL",91,0)
 .... ;Retrieve CPT Modifiers from multiple field
"RTN","PXCEVFIL",92,0)
 .... S PXCESEQ=0
"RTN","PXCEVFIL",93,0)
 .... F  S PXCESEQ=$O(@(PXCEAUPN_"(PXCEFIEN,PXCENODE,PXCESEQ)")) Q:'PXCESEQ  D
"RTN","PXCEVFIL",94,0)
 ..... S ^TMP("PXK",$J,PXCECATS,1,PXCENODE,PXCESEQ,"BEFORE")=$G(@(PXCEAUPN_"(PXCEFIEN,PXCENODE,PXCESEQ,0)"))
"RTN","PXCEVFIL",95,0)
 ..... S PXCEAFTR(PXCENODE,PXCESEQ)=^TMP("PXK",$J,PXCECATS,1,PXCENODE,PXCESEQ,"BEFORE")
"RTN","PXCEVFIL",96,0)
 ... E  D
"RTN","PXCEVFIL",97,0)
 .... S ^TMP("PXK",$J,PXCECATS,1,PXCENODE,"BEFORE")=$G(@(PXCEAUPN_"(PXCEFIEN,PXCENODE)"))
"RTN","PXCEVFIL",98,0)
 .... S PXCEAFTR(PXCENODE)=^TMP("PXK",$J,PXCECATS,1,PXCENODE,"BEFORE")
"RTN","PXCEVFIL",99,0)
 .. E  D
"RTN","PXCEVFIL",100,0)
 ... I PXCECAT="CPT",PXCENODE=1 D  Q
"RTN","PXCEVFIL",101,0)
 .... S ^TMP("PXK",$J,PXCECATS,1,PXCENODE,1,"BEFORE")=""
"RTN","PXCEVFIL",102,0)
 ... S ^TMP("PXK",$J,PXCECATS,1,PXCENODE,"BEFORE")=""
"RTN","PXCEVFIL",103,0)
 ... S PXCEAFTR(PXCENODE)=^TMP("PXK",$J,PXCECATS,1,PXCENODE,"BEFORE")
"RTN","PXCEVFIL",104,0)
 Q:PXCEQUIT
"RTN","PXCEVFIL",105,0)
 ;
"RTN","PXCEVFIL",106,0)
 I PXCEAUPN'="^AUPNVSIT" D
"RTN","PXCEVFIL",107,0)
 . ;Set the Patient and Visit pointers in the V-File.
"RTN","PXCEVFIL",108,0)
 . S:'$P(PXCEAFTR(0),"^",2) $P(PXCEAFTR(0),"^",2)=PXCEPAT
"RTN","PXCEVFIL",109,0)
 . S:'$P(PXCEAFTR(0),"^",3) $P(PXCEAFTR(0),"^",3)=PXCEVIEN
"RTN","PXCEVFIL",110,0)
 . I $P(PXCEAFTR(0),"^",1)="" D
"RTN","PXCEVFIL",111,0)
 .. S:'$P(PXCEAFTR(812),"^",2) $P(PXCEAFTR(812),"^",2)=PXCEPKG
"RTN","PXCEVFIL",112,0)
 .. S:'$P(PXCEAFTR(812),"^",3) $P(PXCEAFTR(812),"^",3)=PXCESOR
"RTN","PXCEVFIL",113,0)
 E  D
"RTN","PXCEVFIL",114,0)
 . ;If new visit set package and source.
"RTN","PXCEVFIL",115,0)
 . I $P(PXCEAFTR(0),"^",1)="" D
"RTN","PXCEVFIL",116,0)
 .. S:'$P(PXCEAFTR(812),"^",2) $P(PXCEAFTR(812),"^",2)=PXCEPKG
"RTN","PXCEVFIL",117,0)
 .. S:'$P(PXCEAFTR(812),"^",3) $P(PXCEAFTR(812),"^",3)=PXCESOR
"RTN","PXCEVFIL",118,0)
 . ;Set the Patient in the Visit for new visit.
"RTN","PXCEVFIL",119,0)
 . I $G(PXCEAPDT)>0 D
"RTN","PXCEVFIL",120,0)
 .. S:'$P(PXCEAFTR(0),"^",1) $P(PXCEAFTR(0),"^",1)=PXCEAPDT
"RTN","PXCEVFIL",121,0)
 .. I '$P(PXCEAFTR(0),"^",21) D
"RTN","PXCEVFIL",122,0)
 ... ;Get the ELIGIBILITY for the appointment
"RTN","PXCEVFIL",123,0)
 ... N PXCEELIG
"RTN","PXCEVFIL",124,0)
 ... S PXCEELIG=$$ELIGIBIL^PXCEVSIT(PXCEPAT,PXCEHLOC,PXCEAPDT)
"RTN","PXCEVFIL",125,0)
 ... S:PXCEELIG>0 $P(PXCEAFTR(0),"^",21)=PXCEELIG
"RTN","PXCEVFIL",126,0)
 . S:'$P(PXCEAFTR(0),"^",5)&($G(PXCEPAT)>0) $P(PXCEAFTR(0),"^",5)=PXCEPAT
"RTN","PXCEVFIL",127,0)
 . S:'$P(PXCEAFTR(0),"^",22)&($G(PXCEHLOC)>0) $P(PXCEAFTR(0),"^",22)=PXCEHLOC
"RTN","PXCEVFIL",128,0)
 Q
"RTN","PXCEVFIL",129,0)
 ;
"RTN","PXCEVFIL",130,0)
EXIT ; -- exit code
"RTN","PXCEVFIL",131,0)
 I PXCECAT="SIT"!(PXCECAT="APPM")!(PXCECAT="HIST") L:PXCEVIEN>0 -@(PXCEAUPN_"(PXCEVIEN)"):30
"RTN","PXCEVFIL",132,0)
 E  L:PXCEFIEN>0 -@(PXCEAUPN_"(PXCEFIEN)"):30
"RTN","PXCEVFIL",133,0)
 S PXCEFIEN=""
"RTN","PXCEVFIL",134,0)
 K ^TMP("PXK",$J)
"RTN","PXCEVFIL",135,0)
 K PXCEAFTR
"RTN","PXCEVFIL",136,0)
 S PXCEQUIT=0
"RTN","PXCEVFIL",137,0)
 Q
"RTN","PXCEVFIL",138,0)
 ;
"RTN","PXCEVFIL",139,0)
MODUPD ;Update the MODIFIER list for the currently edited CPT code when all
"RTN","PXCEVFIL",140,0)
 ;the reqired data is not entered.
"RTN","PXCEVFIL",141,0)
 ;
"RTN","PXCEVFIL",142,0)
 N SQ,DA,DIC,DIK,X
"RTN","PXCEVFIL",143,0)
 S SQ=""
"RTN","PXCEVFIL",144,0)
 F  S SQ=$O(PXCEAFTR(1,SQ)) Q:'SQ  D
"RTN","PXCEVFIL",145,0)
 .S DA(1)=PXCEFIEN,DA=SQ
"RTN","PXCEVFIL",146,0)
 .S DIK="^AUPNVCPT("_DA(1)_","_1_","
"RTN","PXCEVFIL",147,0)
 .D ^DIK
"RTN","PXCEVFIL",148,0)
 F  S SQ=$O(^TMP("PXK",$J,"CPT",1,1,SQ)) Q:'SQ  D
"RTN","PXCEVFIL",149,0)
 .S X=^TMP("PXK",$J,"CPT",1,1,SQ,"BEFORE")
"RTN","PXCEVFIL",150,0)
 .Q:X']""
"RTN","PXCEVFIL",151,0)
 .K DD,DO
"RTN","PXCEVFIL",152,0)
 .S DA(1)=PXCEFIEN
"RTN","PXCEVFIL",153,0)
 .S DIC="^AUPNVCPT("_DA(1)_","_1_","
"RTN","PXCEVFIL",154,0)
 .S DIC(0)="L",DIC("P")=$P(^DD(9000010.18,1,0),"^",2)
"RTN","PXCEVFIL",155,0)
 .D FILE^DICN
"RTN","PXCEVFIL",156,0)
 Q
"RTN","PXCEVFIL",157,0)
 ;
"RTN","PXCEVFIL",158,0)
REMOVE(DA) ;REMOVE INCOMPLETE CPT ENTRY
"RTN","PXCEVFIL",159,0)
 N DIK
"RTN","PXCEVFIL",160,0)
 S DIK="^AUPNVCPT("
"RTN","PXCEVFIL",161,0)
 I $G(DA) D ^DIK ;PX*1*124
"RTN","PXCEVFIL",162,0)
 Q
"RTN","PXCEVIMM")
0^17^B85247952
"RTN","PXCEVIMM",1,0)
PXCEVIMM ;ISL/dee,SLC/ajb - Used to edit and display V IMMUNIZATION ;01/12/2016
"RTN","PXCEVIMM",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**27,124,199,201,210,215**;Aug 12, 1996;Build 10
"RTN","PXCEVIMM",3,0)
 ;;
"RTN","PXCEVIMM",4,0)
 Q
"RTN","PXCEVIMM",5,0)
 ;
"RTN","PXCEVIMM",6,0)
 ;Line with the line label "FORMAT"
"RTN","PXCEVIMM",7,0)
 ;;Long name~File Number~Node Subscripts~Allow Duplicate entries (1=yes, 0=no)~File global name
"RTN","PXCEVIMM",8,0)
 ;     1         2             3                   4                                   5
"RTN","PXCEVIMM",9,0)
 ;
"RTN","PXCEVIMM",10,0)
 ;Following lines:
"RTN","PXCEVIMM",11,0)
 ;;Node~Piece~,Field Number~Edit Label~Display Label~Display Routine~Edit Routine~Help Text for DIR("?")~Set of PXCEKEYS that can Edit~D if Detail Display Only~
"RTN","PXCEVIMM",12,0)
 ;  1  ~  2  ~      3      ~     4    ~        5    ~        6      ~     7      ~       8              ~          9                  ~       10
"RTN","PXCEVIMM",13,0)
 ;The Display & Edit routines are for special cases.
"RTN","PXCEVIMM",14,0)
 ;  (The .01 field cannot have a special edit.)
"RTN","PXCEVIMM",15,0)
 ;
"RTN","PXCEVIMM",16,0)
FORMAT ;;Immunization~9000010.11~0,2,3,11,12,13,14,15,16,811,812~0~^AUPNVIMM
"RTN","PXCEVIMM",17,0)
 ;;0~1~.01~Immunization:  ~Immunization:  ~~~~~B
"RTN","PXCEVIMM",18,0)
 ;;12~7~1207~Lot Number:  ~Lot Number:  ~$$DISPLN^PXCEVIMM~~~~D
"RTN","PXCEVIMM",19,0)
 ;;12~2~1202~Ordering Provider:  ~Ordering Provider:  ~~EPROV12^PXCEPRV~~~D
"RTN","PXCEVIMM",20,0)
 ;;12~4~1204~Encounter Provider:  ~Encounter Provider:  ~~EPROV12^PXCEPRV~~~D
"RTN","PXCEVIMM",21,0)
 ;;0~4~.04~Series:  ~Series:  ~~~~~D
"RTN","PXCEVIMM",22,0)
 ;;0~6~.06~Reaction:  ~Reaction:  ~~~~~D
"RTN","PXCEVIMM",23,0)
 ;;0~7~.07~Repeat Contraindicated:  ~Repeat Contraindicated:  ~~ECONTRAI^PXCEVIMM~~~D
"RTN","PXCEVIMM",24,0)
 ;;12~1~1201~Administered Date and Time:  ~Administered Date and Time:  ~~~~~D
"RTN","PXCEVIMM",25,0)
 ;;12~20~1220~Warning Acknowledged:  ~Warning Acknowledged:  ~~~~~D
"RTN","PXCEVIMM",26,0)
 ;;16~1~1601~Warning Override Reason:  ~Warning Override Reason:  ~~~~~D
"RTN","PXCEVIMM",27,0)
 ;;13~12~1312~Dose:  ~Dose:  ~~~~~D
"RTN","PXCEVIMM",28,0)
 ;;13~13~1313~Dose Units:  ~Dose Units:  ~~~~~D
"RTN","PXCEVIMM",29,0)
 ;;13~2~1302~Route of Administration:  ~Route of Administration:  ~~~~~D
"RTN","PXCEVIMM",30,0)
 ;;13~3~1303~Site of Administration (Body):  ~Site of Administration (Body):  ~~~~~D
"RTN","PXCEVIMM",31,0)
 ;;2~0~2~VIS Offered/Given:  ~VIS:  ~$$DISPVIS^PXCEVIS~EVIS^PXCEVIS~~~D
"RTN","PXCEVIMM",32,0)
 ;;811~1~81101~Comments:  ~Comments:  ~~~~~D
"RTN","PXCEVIMM",33,0)
 ;;13~4~1304~Primary Diagnosis:  ~Primary Diagnosis:  ~$$DISPLY01^PXCEPOV~EPOV^PXCEVIMM~~S~
"RTN","PXCEVIMM",34,0)
 ;;3~2~.01~Other Diagnosis:  ~Other Diagnosis:  ~$$DISPLY01^PXCEPOV~EPOV2^PXCEVIMM~~S~
"RTN","PXCEVIMM",35,0)
 ;;14~3~1403~Date and Time Read:  ~Date/Time Read:  ~~EREADDT^PXCEVIMM~~~D
"RTN","PXCEVIMM",36,0)
 ;;14~2~1402~Reading in Millimeters (mm):  ~Reading in Millimeters (mm):  ~~~~~D
"RTN","PXCEVIMM",37,0)
 ;;14~1~1401~Results:  ~Results:  ~~~~~D
"RTN","PXCEVIMM",38,0)
 ;;14~4~1404~Reader:  ~Reader:  ~~EPROV12^PXCEPRV~~~D
"RTN","PXCEVIMM",39,0)
 ;;14~5~1405~Date and Time Reading Recorded:  ~Reading Recorded:  ~~~~~D
"RTN","PXCEVIMM",40,0)
 ;;14~6~1406~Hours Read Post-Inoculation:  ~Hours Read Post-Inoculation:  ~~~~~D
"RTN","PXCEVIMM",41,0)
 ;;15~1~1501~Reading Comments:  ~Reading Comments:  ~~~~~D
"RTN","PXCEVIMM",42,0)
 ;;
"RTN","PXCEVIMM",43,0)
 ;
"RTN","PXCEVIMM",44,0)
 ;Cannot ask work processing
"RTN","PXCEVIMM",45,0)
 ;;12~2~1202~Ordering Provider:  ~Ordering Provider:  ~~EPROV12^PXCEPRV~~~D
"RTN","PXCEVIMM",46,0)
 ;
"RTN","PXCEVIMM",47,0)
 ;The interface for AICS to get list on form for help.
"RTN","PXCEVIMM",48,0)
INTRFACE ;;PX SELECT IMMUNIZATIONS
"RTN","PXCEVIMM",49,0)
 ;
"RTN","PXCEVIMM",50,0)
 ;********************************
"RTN","PXCEVIMM",51,0)
 ;Special cases for display.
"RTN","PXCEVIMM",52,0)
 ;
"RTN","PXCEVIMM",53,0)
 ;********************************
"RTN","PXCEVIMM",54,0)
 ;Special cases for edit.
"RTN","PXCEVIMM",55,0)
 ;
"RTN","PXCEVIMM",56,0)
ECONTRAI ;
"RTN","PXCEVIMM",57,0)
 I $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))'="" D
"RTN","PXCEVIMM",58,0)
 . N DIERR,PXCEDILF,PXCEINT,PXCEEXT
"RTN","PXCEVIMM",59,0)
 . S PXCEINT=$P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))
"RTN","PXCEVIMM",60,0)
 . S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,$P(PXCETEXT,"~",3),"",PXCEINT,"PXCEDILF")
"RTN","PXCEVIMM",61,0)
 . S DIR("B")=$S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCEVIMM",62,0)
 E  S DIR("B")="NO"
"RTN","PXCEVIMM",63,0)
 S DIR(0)=PXCEFILE_","_$P(PXCETEXT,"~",3)_"A"
"RTN","PXCEVIMM",64,0)
 S DIR("A")=$P(PXCETEXT,"~",4)
"RTN","PXCEVIMM",65,0)
 S:$P(PXCETEXT,"~",8)]"" DIR("?")=$P(PXCETEXT,"~",8)
"RTN","PXCEVIMM",66,0)
 D ^DIR
"RTN","PXCEVIMM",67,0)
 K DIR,DA
"RTN","PXCEVIMM",68,0)
 I X="@" S Y="@"
"RTN","PXCEVIMM",69,0)
 E  I $D(DTOUT)!$D(DUOUT) S PXCEEND=1 Q
"RTN","PXCEVIMM",70,0)
 S $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))=$P(Y,"^")
"RTN","PXCEVIMM",71,0)
 Q
"RTN","PXCEVIMM",72,0)
 ;
"RTN","PXCEVIMM",73,0)
EREADDT ;
"RTN","PXCEVIMM",74,0)
 I $P(PXCEAFTR(14),"^",3)'="" D
"RTN","PXCEVIMM",75,0)
 . N DIERR,PXCEDILF,PXCEINT,PXCEEXT
"RTN","PXCEVIMM",76,0)
 . S PXCEINT=$P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))
"RTN","PXCEVIMM",77,0)
 . S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,$P(PXCETEXT,"~",3),"",PXCEINT,"PXCEDILF")
"RTN","PXCEVIMM",78,0)
 . S DIR("B")=$S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCEVIMM",79,0)
 S DIR(0)="9000010.11,1403AO"
"RTN","PXCEVIMM",80,0)
 S DIR("A")=$P(PXCETEXT,"~",4)
"RTN","PXCEVIMM",81,0)
 S:$P(PXCETEXT,"~",8)]"" DIR("?")=$P(PXCETEXT,"~",8)
"RTN","PXCEVIMM",82,0)
 D ^DIR
"RTN","PXCEVIMM",83,0)
 K DIR,DA
"RTN","PXCEVIMM",84,0)
 I X="@" S Y="@"
"RTN","PXCEVIMM",85,0)
 E  I $D(DTOUT)!$D(DUOUT) S PXCEEND=1 Q
"RTN","PXCEVIMM",86,0)
 S $P(PXCEAFTR(14),"^",3)=$P(Y,"^")
"RTN","PXCEVIMM",87,0)
 N PXVX,X1,X2,X3
"RTN","PXCEVIMM",88,0)
 S X1=$P(PXCEAFTR(14),"^",3) ; DATE/TIME READ
"RTN","PXCEVIMM",89,0)
 S X2=$P(PXCEAFTR(12),"^") ; EVENT DATE AND TIME
"RTN","PXCEVIMM",90,0)
 S X3=2 ; return difference in seconds
"RTN","PXCEVIMM",91,0)
 S PXVX=""
"RTN","PXCEVIMM",92,0)
 I $G(X1),$L(X1)>7,$G(X2),$L(X2)>7,$G(X2)'>$G(X1) S PXVX=$$FMDIFF^XLFDT(X1,X2,X3)\3600
"RTN","PXCEVIMM",93,0)
 I PXVX D EN^DDIOL("Hours Read Post-Inoculation:  "_PXVX,"","!")
"RTN","PXCEVIMM",94,0)
 Q
"RTN","PXCEVIMM",95,0)
 ;
"RTN","PXCEVIMM",96,0)
ELOT ;
"RTN","PXCEVIMM",97,0)
 I $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))'="" D
"RTN","PXCEVIMM",98,0)
 . N DIERR,PXCEDILF,PXCEINT,PXCEEXT
"RTN","PXCEVIMM",99,0)
 . S PXCEINT=$P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))
"RTN","PXCEVIMM",100,0)
 . S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,$P(PXCETEXT,"~",3),"",PXCEINT,"PXCEDILF")
"RTN","PXCEVIMM",101,0)
 . S DIR("B")=$S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCEVIMM",102,0)
 S DIR(0)="PAO^9999999.41:EM^K:$P(^(0),U,3)'=0!($P(^(0),U,4)'=$P(PXCEAFTR(0),U,1)) X"
"RTN","PXCEVIMM",103,0)
 S DIR("A")=$P(PXCETEXT,"~",4)
"RTN","PXCEVIMM",104,0)
 S:$P(PXCETEXT,"~",8)]"" DIR("?")=$P(PXCETEXT,"~",8)
"RTN","PXCEVIMM",105,0)
 D ^DIR
"RTN","PXCEVIMM",106,0)
 K DIR,DA
"RTN","PXCEVIMM",107,0)
 I X="@" S Y="@"
"RTN","PXCEVIMM",108,0)
 E  I $D(DTOUT)!$D(DUOUT) S PXCEEND=1 Q
"RTN","PXCEVIMM",109,0)
 S:Y'<0 $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))=$P(Y,"^")
"RTN","PXCEVIMM",110,0)
 Q
"RTN","PXCEVIMM",111,0)
 ;
"RTN","PXCEVIMM",112,0)
EPOV ;Edit the Associated DX
"RTN","PXCEVIMM",113,0)
 N PXACS,PXACSREC,PXDATE,PXDEF,PXDXASK,PXXX
"RTN","PXCEVIMM",114,0)
 S PXDATE=$S($D(PXCEVIEN)=1:$$CSDATE^PXDXUTL(PXCEVIEN),$D(PXCEAPDT)=1:PXCEAPDT,1:DT)
"RTN","PXCEVIMM",115,0)
 S PXACSREC=$$ACTDT^PXDXUTL(PXDATE),PXACS=$P(PXACSREC,"^",3)
"RTN","PXCEVIMM",116,0)
 I PXACS["-" S PXACS=$P(PXACS,"-",1,2)
"RTN","PXCEVIMM",117,0)
 I $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))'="" D
"RTN","PXCEVIMM",118,0)
 .N DIERR,PXCEDILF,PXCEINT,PXCEEXT
"RTN","PXCEVIMM",119,0)
 .S PXCEINT=$P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))
"RTN","PXCEVIMM",120,0)
 .S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,$P(PXCETEXT,"~",3),"",PXCEINT,"PXCEDILF")
"RTN","PXCEVIMM",121,0)
 .S DIR("B")=$S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCEVIMM",122,0)
 I $P(PXACSREC,U,1)'="ICD" D
"RTN","PXCEVIMM",123,0)
 . S PXDXASK=PXACS_" "_$P(PXCETEXT,"~",4)
"RTN","PXCEVIMM",124,0)
 . S PXDEF=$G(DIR("B")),PXAGAIN=0 D ^PXDSLK I PXXX=-1 S Y=-1 Q
"RTN","PXCEVIMM",125,0)
 . I PXXX="@" S Y="@" Q
"RTN","PXCEVIMM",126,0)
 . S Y=$P($$ICDDATA^ICDXCODE("DIAG",$P($P(PXXX,U,1),";",2),PXDATE,"E"),U,1)
"RTN","PXCEVIMM",127,0)
 I $P(PXACSREC,U,1)="ICD" D
"RTN","PXCEVIMM",128,0)
 . S DIR(0)=PXCEFILE_","_$P(PXCETEXT,"~",3)_"A"
"RTN","PXCEVIMM",129,0)
 . S DIR("A")=PXACS_" "_$P(PXCETEXT,"~",4)
"RTN","PXCEVIMM",130,0)
 . S:$P(PXCETEXT,"~",8)]"" DIR("?")=$P(PXCETEXT,"~",8)
"RTN","PXCEVIMM",131,0)
 . D ^DIR
"RTN","PXCEVIMM",132,0)
 K DIR,DA
"RTN","PXCEVIMM",133,0)
 I X="@" S Y="@" S $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))=$P(Y,"^") Q
"RTN","PXCEVIMM",134,0)
 I $D(DTOUT)!$D(DUOUT) S PXCEEND=1,PXCEQUIT=1 Q
"RTN","PXCEVIMM",135,0)
 I +Y'>0 S PXCEEND=1 Q  ;S:$P(PXCETEXT,"~",3)=".08" PXCEQUIT=1 Q
"RTN","PXCEVIMM",136,0)
 ;See if this diagnosis is in the PXCEAFTR(0)
"RTN","PXCEVIMM",137,0)
 I $P(PXCETEXT,"~",2)'=1,(+Y=$P($G(PXCEAFTR(80)),"^",1)) S PXCEEND=1
"RTN","PXCEVIMM",138,0)
 I $P(PXCETEXT,"~",2)'=2,(+Y=$P($G(PXCEAFTR(80)),"^",2)) S PXCEEND=1
"RTN","PXCEVIMM",139,0)
 I $P(PXCETEXT,"~",2)'=3,(+Y=$P($G(PXCEAFTR(80)),"^",3)) S PXCEEND=1
"RTN","PXCEVIMM",140,0)
 I $P(PXCETEXT,"~",2)'=4,(+Y=$P($G(PXCEAFTR(80)),"^",4)) S PXCEEND=1
"RTN","PXCEVIMM",141,0)
 I $P(PXCETEXT,"~",2)'=5,(+Y=$P($G(PXCEAFTR(80)),"^",5)) S PXCEEND=1
"RTN","PXCEVIMM",142,0)
 I $P(PXCETEXT,"~",2)'=6,(+Y=$P($G(PXCEAFTR(80)),"^",6)) S PXCEEND=1
"RTN","PXCEVIMM",143,0)
 I $P(PXCETEXT,"~",2)'=7,(+Y=$P($G(PXCEAFTR(80)),"^",7)) S PXCEEND=1
"RTN","PXCEVIMM",144,0)
 I $P(PXCETEXT,"~",2)'=8,(+Y=$P($G(PXCEAFTR8(80)),"^",8)) S PXCEEND=1
"RTN","PXCEVIMM",145,0)
 ;
"RTN","PXCEVIMM",146,0)
 ; check for duplicate diagnosis in OTHER DIAGNOSIS
"RTN","PXCEVIMM",147,0)
 N DX D:+$G(PXCEFIEN)
"RTN","PXCEVIMM",148,0)
 . N CNT S CNT=0 F  S CNT=$O(^AUPNVIMM(PXCEFIEN,3,CNT)) Q:'+CNT  D
"RTN","PXCEVIMM",149,0)
 . . S DX(^AUPNVIMM(PXCEFIEN,3,CNT,0))=""
"RTN","PXCEVIMM",150,0)
 I +$D(DX(+Y)) S PXCEEND=1
"RTN","PXCEVIMM",151,0)
 ;
"RTN","PXCEVIMM",152,0)
 I $G(PXCEEND)=1 W !,$C(7),"Duplicate Diagnosis is not allowed." D WAIT^PXCEHELP Q
"RTN","PXCEVIMM",153,0)
 S $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))=$P(Y,"^")
"RTN","PXCEVIMM",154,0)
 D:+Y>0 DIAGNOS^PXCEVFI4(+Y)
"RTN","PXCEVIMM",155,0)
 Q
"RTN","PXCEVIMM",156,0)
EPOV2 ; edit OTHER DIAGNOSIS
"RTN","PXCEVIMM",157,0)
 Q:'+$G(PXCEFIEN)
"RTN","PXCEVIMM",158,0)
 N PXACS,PXACSREC,PXDATE,PXDEF,PXDXASK,PXXX
"RTN","PXCEVIMM",159,0)
 S PXDATE=$S($D(PXCEVIEN)=1:$$CSDATE^PXDXUTL(PXCEVIEN),$D(PXCEAPDT)=1:PXCEAPDT,1:DT)
"RTN","PXCEVIMM",160,0)
 S PXACSREC=$$ACTDT^PXDXUTL(PXDATE),PXACS=$P(PXACSREC,"^",3)
"RTN","PXCEVIMM",161,0)
 I PXACS["-" S PXACS=$P(PXACS,"-",1,2)
"RTN","PXCEVIMM",162,0)
 ; get multiple diagnosis
"RTN","PXCEVIMM",163,0)
 N CNT,DX,DXS S CNT=0 F  S CNT=$O(^AUPNVIMM(PXCEFIEN,3,CNT)) Q:'+CNT  D
"RTN","PXCEVIMM",164,0)
 . S DX(CNT)=^AUPNVIMM(PXCEFIEN,3,CNT,0)
"RTN","PXCEVIMM",165,0)
 . S DXS(DX(CNT))=""
"RTN","PXCEVIMM",166,0)
 I '$D(DX) S DX(1)="" ; if no entries, show empty entry to allow adding
"RTN","PXCEVIMM",167,0)
 I $P(PXACSREC,U,1)="ICD" D
"RTN","PXCEVIMM",168,0)
 . N DIR S DIR(0)=PXCEFILE_"3,"_$P(PXCETEXT,"~",3)_"A"
"RTN","PXCEVIMM",169,0)
 . S DIR("A")=PXACS_" "_$P(PXCETEXT,"~",4)
"RTN","PXCEVIMM",170,0)
 . S CNT=0 F  S CNT=$O(DX(CNT)) Q:'+CNT!($D(DTOUT)!($D(DUOUT)))  D
"RTN","PXCEVIMM",171,0)
 . . N DA,X,Y
"RTN","PXCEVIMM",172,0)
 . . S DIR("B")=$$EXTERNAL^DILFD(PXCEFILE_3,".01","",DX(CNT),"PXCEDILF")
"RTN","PXCEVIMM",173,0)
 . . D ^DIR Q:$D(DTOUT)!$D(DUOUT)  Q:X=""
"RTN","PXCEVIMM",174,0)
 . . I X="@" W ! I +$$READ("YE","Are you sure you want to remove this entry","NO") D DELDX(CNT) Q
"RTN","PXCEVIMM",175,0)
 . . I +$D(DXS(+Y)) W:Y(0)'=DIR("B") !!,$C(7),"Entry matches Other Diagnosis.  Duplicate Diagnosis is not allowed." D:Y(0)'=DIR("B") WAIT^PXCEHELP Q  ; quit if entry already exists
"RTN","PXCEVIMM",176,0)
 . . I +Y=$P($G(^AUPNVIMM(PXCEFIEN,13)),U,4) D  Q  ; quit if entry matches primary diagnosis
"RTN","PXCEVIMM",177,0)
 . . . W !!,$C(7),"Entry matches Primary Diagnosis.  Duplicate Diagnosis is not allowed." D WAIT^PXCEHELP
"RTN","PXCEVIMM",178,0)
 . . I Y(0)'=DIR("B") D  ; ask to overwrite or add new entry
"RTN","PXCEVIMM",179,0)
 . . . I DIR("B")'="" N ANS W ! S ANS=$$READ("SA^A:ADD;R:REPLACE","Do you want to ADD a new entry or REPLACE the current entry? ","ADD") W !
"RTN","PXCEVIMM",180,0)
 . . . I DIR("B")="" S ANS="A" ; if no current entry, always add
"RTN","PXCEVIMM",181,0)
 . . . I $P(ANS,U)="A"!($P(ANS,U)="R") D  Q
"RTN","PXCEVIMM",182,0)
 . . . . N FDA,FDAIEN,ERRMSG,IEN
"RTN","PXCEVIMM",183,0)
 . . . . S IEN=$S($P(ANS,U)="A":"+1,"_PXCEFIEN_",",1:CNT_","_PXCEFIEN_",")
"RTN","PXCEVIMM",184,0)
 . . . . S FDA(PXCEFILE_3,IEN,.01)=+Y
"RTN","PXCEVIMM",185,0)
 . . . . D DIAGNOS^PXCEVFI4(+Y,1)
"RTN","PXCEVIMM",186,0)
 . . . . I '+$G(PXCEQUIT) D UPDATE^DIE("","FDA","FDAIEN","ERRMSG")
"RTN","PXCEVIMM",187,0)
 Q
"RTN","PXCEVIMM",188,0)
DELDX(DA) ; delete OTHER DIAGNOSIS
"RTN","PXCEVIMM",189,0)
 K DXS(DX(DA)),DX(DA)
"RTN","PXCEVIMM",190,0)
 S DA(1)=PXCEFIEN,DIK="^AUPNVIMM("_DA(1)_",3," D ^DIK W !!,"Entry successfully removed." D WAIT^PXCEHELP
"RTN","PXCEVIMM",191,0)
 Q
"RTN","PXCEVIMM",192,0)
 ;
"RTN","PXCEVIMM",193,0)
READ(TYPE,PROMPT,DEFAULT,HELP,SCREEN) ;
"RTN","PXCEVIMM",194,0)
 N DIR,X,Y,DUOUT,DTOUT,DIRUT S DIR(0)=TYPE
"RTN","PXCEVIMM",195,0)
 I $D(SCREEN) S DIR("S")=SCREEN
"RTN","PXCEVIMM",196,0)
 I $G(PROMPT)]"" S DIR("A")=PROMPT
"RTN","PXCEVIMM",197,0)
 I $G(DEFAULT)]"" S DIR("B")=DEFAULT
"RTN","PXCEVIMM",198,0)
 I $D(HELP) S DIR("?")=HELP
"RTN","PXCEVIMM",199,0)
 D ^DIR
"RTN","PXCEVIMM",200,0)
 I $G(X)="@" S Y="@" G READX
"RTN","PXCEVIMM",201,0)
 I Y]"",($L($G(Y),U)'=2) S Y=Y_U_$G(Y(0),Y)
"RTN","PXCEVIMM",202,0)
READX Q Y
"RTN","PXCEVIMM",203,0)
 ;
"RTN","PXCEVIMM",204,0)
 ;********************************
"RTN","PXCEVIMM",205,0)
 ;Display text for the .01 field which is a pointer to Immunization.
"RTN","PXCEVIMM",206,0)
 ;(Must have is called by ASK^PXCEVFI2 and DEL^PXCEVFI2.)
"RTN","PXCEVIMM",207,0)
DISPLY01(PXCEIMM) ;
"RTN","PXCEVIMM",208,0)
 N DIERR,PXCEDILF,PXCEINT,PXCEEXT
"RTN","PXCEVIMM",209,0)
 S PXCEINT=$P(PXCEIMM,"^",1)
"RTN","PXCEVIMM",210,0)
 S PXCEEXT=$$EXTERNAL^DILFD(9000010.11,.01,"",PXCEINT,"PXCEDILF")
"RTN","PXCEVIMM",211,0)
 Q $S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCEVIMM",212,0)
 ;
"RTN","PXCEVIMM",213,0)
DISPLN(PXCEINT) ; display lot number with manufacturer
"RTN","PXCEVIMM",214,0)
 N PXCEDILF,PXCEEXT,PXV2,PXVMAN
"RTN","PXCEVIMM",215,0)
 S PXCEEXT=$$EXTERNAL^DILFD(9000010.11,1207,"",PXCEINT,"PXCEDILF")
"RTN","PXCEVIMM",216,0)
 S PXV2=$P(^AUTTIML(PXCEINT,0),"^",2),PXVMAN=$$EXTERNAL^DILFD(9999999.41,.02,"",PXV2,"PXCEDILF")
"RTN","PXCEVIMM",217,0)
 Q $S('$D(DIERR):PXCEEXT_"     "_PXVMAN,1:PXCEINT)
"RTN","PXCEVIMM",218,0)
 ;
"RTN","PXKENC")
0^4^B29334197
"RTN","PXKENC",1,0)
PXKENC ;ISL/dee,ESW - Builds the array of all encounter data for the event point ;11/09/15  11:17
"RTN","PXKENC",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**15,22,73,108,143,183,210,215**;Aug 12, 1996;Build 10
"RTN","PXKENC",3,0)
 Q
"RTN","PXKENC",4,0)
 ;
"RTN","PXKENC",5,0)
GETENC(DFN,ENCDT,HLOC) ;Get all of the encounter data
"RTN","PXKENC",6,0)
 ;Parameters:
"RTN","PXKENC",7,0)
 ;  DFN    Pointer to the patient (#9000001)
"RTN","PXKENC",8,0)
 ;  ENCDT  Date/Time of the encounter in Fileman format
"RTN","PXKENC",9,0)
 ;  HLOC   Pointer to Hospital Location (#44)
"RTN","PXKENC",10,0)
 ;
"RTN","PXKENC",11,0)
 ;Returns:
"RTN","PXKENC",12,0)
 ;  -2  if called incorrectly
"RTN","PXKENC",13,0)
 ;  -1  if could not find encounter
"RTN","PXKENC",14,0)
 ;  >0  Visit ien(s) separated by ^
"RTN","PXKENC",15,0)
 ;
"RTN","PXKENC",16,0)
 ;  The encounter is returned in the array
"RTN","PXKENC",17,0)
 ;    ^TMP("PXKENC",$J,pointer to visit)
"RTN","PXKENC",18,0)
 ;  may contain more than one visit
"RTN","PXKENC",19,0)
 ;
"RTN","PXKENC",20,0)
 N VISITIEN,REVDT,RETURN
"RTN","PXKENC",21,0)
 K ^TMP("PXKENC",$J)
"RTN","PXKENC",22,0)
 S RETURN=-1
"RTN","PXKENC",23,0)
 Q:DFN'>0!(ENCDT<1800000)!(HLOC'>0) -2
"RTN","PXKENC",24,0)
 S REVDT=(9999999-$P(+ENCDT,".",1))_$S($P(+ENCDT,".",2)'="":"."_$P(+ENCDT,".",2),1:"")
"RTN","PXKENC",25,0)
 S VISITIEN=0
"RTN","PXKENC",26,0)
 F  S VISITIEN=$O(^AUPNVSIT("AA",+DFN,REVDT,VISITIEN)) Q:'VISITIEN  D
"RTN","PXKENC",27,0)
 . I $P($G(^AUPNVSIT(VISITIEN,0)),"^",22)=HLOC,"C~S"'[$P($G(^AUPNVSIT(VISITIEN,150)),"^",3) D
"RTN","PXKENC",28,0)
 .. D ENCEVENT(VISITIEN,1)
"RTN","PXKENC",29,0)
 .. I RETURN<1 S RETURN=VISITIEN
"RTN","PXKENC",30,0)
 .. E  S RETURN=RETURN_"^"_VISITIEN
"RTN","PXKENC",31,0)
 Q RETURN
"RTN","PXKENC",32,0)
 ;
"RTN","PXKENC",33,0)
ENCEVENT(VISITIEN,DONTKILL) ;Create the ^TMP("PXKENC",$J, array of all the
"RTN","PXKENC",34,0)
 ;  information about one encounter.
"RTN","PXKENC",35,0)
 ;Parameters:
"RTN","PXKENC",36,0)
 ;  VISITIEN  Pointer to the Visit (#9000010)
"RTN","PXKENC",37,0)
 ;  DONOTKILL is 1 if the output array is not to be killed before used
"RTN","PXKENC",38,0)
 ;            and 0 or null if the array is to be killed (cleaned out)
"RTN","PXKENC",39,0)
 ;
"RTN","PXKENC",40,0)
 ;  The encounter is returned in the array
"RTN","PXKENC",41,0)
 ;    ^TMP("PXKENC",$J,pointer to visit)
"RTN","PXKENC",42,0)
 ;
"RTN","PXKENC",43,0)
 I $G(VISITIEN)'>0 Q  ;PX/183
"RTN","PXKENC",44,0)
 I '$D(^AUPNVSIT(VISITIEN)) Q
"RTN","PXKENC",45,0)
 K:'$G(DONTKILL) ^TMP("PXKENC",$J)
"RTN","PXKENC",46,0)
 N PXKCNT,PXKROOT
"RTN","PXKENC",47,0)
 S PXKROOT=$NA(@("^TMP(""PXKENC"",$J,"_VISITIEN_")"))
"RTN","PXKENC",48,0)
 ;
"RTN","PXKENC",49,0)
 N IEN,FILE,VFILE,FILESTR,PXKNODE
"RTN","PXKENC",50,0)
 F FILE="SIT","CSTP","PRV","POV","CPT","TRT","IMM","PED","SK","HF","XAM","ICR" D
"RTN","PXKENC",51,0)
 . S FILESTR=$S(FILE="SIT":"VST",1:FILE)
"RTN","PXKENC",52,0)
 . S VFILE=$P($T(GLOBAL^@("PXKF"_$S(FILE="SIT":"VST",FILE="CSTP":"VST",1:FILE))),";;",2)
"RTN","PXKENC",53,0)
 . I FILE="SIT" D
"RTN","PXKENC",54,0)
 .. S IEN=VISITIEN
"RTN","PXKENC",55,0)
 .. S PXKNODE=""
"RTN","PXKENC",56,0)
 .. F  S PXKNODE=$O(@VFILE@(IEN,PXKNODE)) Q:PXKNODE=""  D
"RTN","PXKENC",57,0)
 ... S @PXKROOT@(FILESTR,IEN,PXKNODE)=@VFILE@(IEN,PXKNODE)
"RTN","PXKENC",58,0)
 . E  D
"RTN","PXKENC",59,0)
 .. I FILE="PRV" D EVALD(VISITIEN,PXKROOT,VFILE,FILESTR)
"RTN","PXKENC",60,0)
 .. I FILE'="PRV" S IEN="" F  S IEN=$O(@VFILE@("AD",VISITIEN,IEN)) Q:'IEN  D
"RTN","PXKENC",61,0)
 ... I FILE="CSTP","SC"'[$P($G(@VFILE@(IEN,150)),"^",3) Q
"RTN","PXKENC",62,0)
 ... S PXKNODE=""
"RTN","PXKENC",63,0)
 ... F  S PXKNODE=$O(@VFILE@(IEN,PXKNODE)) Q:PXKNODE=""  D:PXKNODE'=801
"RTN","PXKENC",64,0)
 .... ;for cpt modifiers
"RTN","PXKENC",65,0)
 .... I FILE="CPT",PXKNODE=1 D  Q
"RTN","PXKENC",66,0)
 ..... S @PXKROOT@(FILESTR,IEN,PXKNODE,0)=$G(@VFILE@(IEN,PXKNODE,0))
"RTN","PXKENC",67,0)
 ..... N SUBIEN
"RTN","PXKENC",68,0)
 ..... S SUBIEN=0
"RTN","PXKENC",69,0)
 ..... F  S SUBIEN=$O(@VFILE@(IEN,PXKNODE,SUBIEN)) Q:SUBIEN=""  D
"RTN","PXKENC",70,0)
 ...... S @PXKROOT@(FILESTR,IEN,PXKNODE,SUBIEN,0)=$G(@VFILE@(IEN,PXKNODE,SUBIEN,0))
"RTN","PXKENC",71,0)
 .... ;for immunizatin multiples
"RTN","PXKENC",72,0)
 .... I FILE="IMM",PXKNODE?1(1"2",1"3",1"11") D  Q
"RTN","PXKENC",73,0)
 ..... N SUBIEN
"RTN","PXKENC",74,0)
 ..... S SUBIEN=0
"RTN","PXKENC",75,0)
 ..... F  S SUBIEN=$O(@VFILE@(IEN,PXKNODE,SUBIEN)) Q:'SUBIEN  D
"RTN","PXKENC",76,0)
 ...... S @PXKROOT@(FILESTR,IEN,PXKNODE,SUBIEN,0)=$G(@VFILE@(IEN,PXKNODE,SUBIEN,0))
"RTN","PXKENC",77,0)
 .... ;
"RTN","PXKENC",78,0)
 .... S @PXKROOT@(FILESTR,IEN,PXKNODE)=$G(@VFILE@(IEN,PXKNODE))
"RTN","PXKENC",79,0)
 Q
"RTN","PXKENC",80,0)
EVALD(VISITIEN,PXKROOT,VFILE,FILESTR) ;evaluation for duplicate providers
"RTN","PXKENC",81,0)
 N CNT,PR,PRS,PS,PP,PRV,STR
"RTN","PXKENC",82,0)
 S IEN="",CNT=0
"RTN","PXKENC",83,0)
 F  S IEN=$O(@VFILE@("AD",VISITIEN,IEN)) Q:'IEN  D
"RTN","PXKENC",84,0)
 .S STR=@VFILE@(IEN,0),PR=+STR,PS=$P(STR,U,4)
"RTN","PXKENC",85,0)
 .I PS="P",'CNT S PRV=PR,CNT=1 D PXKNODE(VFILE,FILESTR,IEN,PXKROOT)
"RTN","PXKENC",86,0)
 .I PS="S" S PRS(PR,IEN)="" D PXKNODE(VFILE,FILESTR,IEN,PXKROOT)
"RTN","PXKENC",87,0)
 .Q
"RTN","PXKENC",88,0)
 S PR="" F  S PR=$O(PRS(PR)) Q:PR=""  S IEN="" D
"RTN","PXKENC",89,0)
 .F PP=1:1 S IEN=$O(PRS(PR,IEN)) Q:IEN=""  D
"RTN","PXKENC",90,0)
 ..I PR=$G(PRV) K @PXKROOT@(FILESTR,IEN) Q
"RTN","PXKENC",91,0)
 ..I PP>1 K @PXKROOT@(FILESTR,IEN)
"RTN","PXKENC",92,0)
 Q
"RTN","PXKENC",93,0)
PXKNODE(VFILE,FILESTR,IEN,PXKROOT) ;
"RTN","PXKENC",94,0)
 N STRR S PXKNODE=""
"RTN","PXKENC",95,0)
 F  S PXKNODE=$O(@VFILE@(IEN,PXKNODE)) Q:PXKNODE=""  D:PXKNODE'=801
"RTN","PXKENC",96,0)
 . I $E($P($P(PXKROOT,","),"(",2),2,7)="PXKENC" D
"RTN","PXKENC",97,0)
 ..; ENCEVENT called
"RTN","PXKENC",98,0)
 .. S @PXKROOT@(FILESTR,IEN,PXKNODE)=$G(@VFILE@(IEN,PXKNODE))
"RTN","PXKENC",99,0)
 . I $P(PXKROOT,"""",2)="PXKCO",'$D(@PXKROOT@(FILESTR,IEN)) D
"RTN","PXKENC",100,0)
 ..; COEVENT called
"RTN","PXKENC",101,0)
 .. F STRR="BEFORE","AFTER" D
"RTN","PXKENC",102,0)
 ... S @PXKROOT@(FILESTR,IEN,PXKNODE,STRR)=$G(@VFILE@(IEN,PXKNODE))
"RTN","PXKENC",103,0)
 Q
"RTN","PXKENC",104,0)
 ;
"RTN","PXKENC",105,0)
COEVENT(VISITIEN) ;Add to the ^TMP("PXKCO",$J, array all of the
"RTN","PXKENC",106,0)
 ;   information that is not already there.
"RTN","PXKENC",107,0)
 I '$D(^AUPNVSIT(VISITIEN)) Q
"RTN","PXKENC",108,0)
 N PXKCNT,PXKROOT
"RTN","PXKENC",109,0)
 S PXKROOT=$NA(@("^TMP(""PXKCO"",$J,"_VISITIEN_")"))
"RTN","PXKENC",110,0)
 ;
"RTN","PXKENC",111,0)
 N IEN,FILE,VFILE,PXKNODE
"RTN","PXKENC",112,0)
 F FILE="CSTP","PRV","POV","CPT","TRT","IMM","PED","SK","HF","XAM","ICR" D
"RTN","PXKENC",113,0)
 . S VFILE=$P($T(GLOBAL^@("PXKF"_$S(FILE="CSTP":"VST",1:FILE))),";;",2)
"RTN","PXKENC",114,0)
 . I FILE="PRV" D EVALD(VISITIEN,PXKROOT,VFILE,FILE)
"RTN","PXKENC",115,0)
 . I FILE'="PRV" S IEN="" F  S IEN=$O(@VFILE@("AD",VISITIEN,IEN)) Q:'IEN  D
"RTN","PXKENC",116,0)
 .. I FILE="CSTP","SC"'[$P($G(@VFILE@(IEN,150)),"^",3) Q
"RTN","PXKENC",117,0)
 .. S PXKNODE=""
"RTN","PXKENC",118,0)
 .. I '$D(@PXKROOT@(FILE,IEN)) D
"RTN","PXKENC",119,0)
 ... F  S PXKNODE=$O(@VFILE@(IEN,PXKNODE)) Q:PXKNODE=""  D:PXKNODE'=801
"RTN","PXKENC",120,0)
 .... ;
"RTN","PXKENC",121,0)
 .... I FILE="IMM",PXKNODE?1(1"2",1"3",1"11") D  Q
"RTN","PXKENC",122,0)
 ..... N SUBIEN,VAL
"RTN","PXKENC",123,0)
 ..... S SUBIEN=0
"RTN","PXKENC",124,0)
 ..... F  S SUBIEN=$O(@VFILE@(IEN,PXKNODE,SUBIEN)) Q:'SUBIEN  D
"RTN","PXKENC",125,0)
 ...... S VAL=$G(@VFILE@(IEN,PXKNODE,SUBIEN,0))
"RTN","PXKENC",126,0)
 ...... S @PXKROOT@(FILE,IEN,PXKNODE,"BEFORE",SUBIEN)=VAL
"RTN","PXKENC",127,0)
 ...... S @PXKROOT@(FILE,IEN,PXKNODE,"AFTER",SUBIEN)=VAL
"RTN","PXKENC",128,0)
 .... ;
"RTN","PXKENC",129,0)
 .... I FILE="CPT",PXKNODE=1 D  Q
"RTN","PXKENC",130,0)
 ..... N SUBIEN,MOD
"RTN","PXKENC",131,0)
 ..... S SUBIEN=0
"RTN","PXKENC",132,0)
 ..... F  S SUBIEN=$O(@VFILE@(IEN,PXKNODE,SUBIEN)) Q:'SUBIEN  D
"RTN","PXKENC",133,0)
 ...... S MOD=@VFILE@(IEN,PXKNODE,SUBIEN,0)
"RTN","PXKENC",134,0)
 ...... S @PXKROOT@(FILE,IEN,PXKNODE,"BEFORE",MOD)=""
"RTN","PXKENC",135,0)
 ...... S @PXKROOT@(FILE,IEN,PXKNODE,"AFTER",MOD)=""
"RTN","PXKENC",136,0)
 .... ;
"RTN","PXKENC",137,0)
 .... S @PXKROOT@(FILE,IEN,PXKNODE,"BEFORE")=$G(@VFILE@(IEN,PXKNODE))
"RTN","PXKENC",138,0)
 .... S @PXKROOT@(FILE,IEN,PXKNODE,"AFTER")=$G(@VFILE@(IEN,PXKNODE))
"RTN","PXKENC",139,0)
 Q
"RTN","PXKENC",140,0)
 ;
"RTN","PXKFCPT1")
0^30^B24656697
"RTN","PXKFCPT1",1,0)
PXKFCPT1 ;ISL/JVS,SCK - PROCEDURES Routine #2 ;02/03/16  11:57
"RTN","PXKFCPT1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**11,73,124,194,209,215**;Aug 12, 1996;Build 10
"RTN","PXKFCPT1",3,0)
 ;
"RTN","PXKFCPT1",4,0)
 ;
"RTN","PXKFCPT1",5,0)
IMM ;
"RTN","PXKFCPT1",6,0)
 N PXKSEQ1
"RTN","PXKFCPT1",7,0)
 I PXKFGAD=1 D IMMADD
"RTN","PXKFCPT1",8,0)
 I PXKFGDE=1 D IMMDEL
"RTN","PXKFCPT1",9,0)
 Q
"RTN","PXKFCPT1",10,0)
IMMADD ;
"RTN","PXKFCPT1",11,0)
 S PXKKK=""
"RTN","PXKFCPT1",12,0)
 S PXKSEQ1=PXKSEQ+PXKXX
"RTN","PXKFCPT1",13,0)
 S PXKCPT=$P($P(PXKPXD(PXKX),"^",2),";")
"RTN","PXKFCPT1",14,0)
POVNAR ;
"RTN","PXKFCPT1",15,0)
 N PXK1
"RTN","PXKFCPT1",16,0)
 ;K ^UTILITY("DIQ1",$J) 
"RTN","PXKFCPT1",17,0)
 ;S DIC=81,DA=PXKCPT,DR=2 D EN^DIQ1
"RTN","PXKFCPT1",18,0)
 ;S PXKCPTN=$G(^UTILITY("DIQ1",$J,81,DA,2))
"RTN","PXKFCPT1",19,0)
 ;K ^UTILITY("DIQ1",$J),DIC,DA,DR D
"RTN","PXKFCPT1",20,0)
 S PXK1=$$CPT^ICPTCOD(PXKCPT)
"RTN","PXKFCPT1",21,0)
 S PXKCPTN=$P(PXK1,U,3) D
"RTN","PXKFCPT1",22,0)
 .Q:PXKCPTN=""  I $D(^AUTNPOV("B",PXKCPTN)) S PXKCPTN=$O(^AUTNPOV("B",PXKCPTN,0))
"RTN","PXKFCPT1",23,0)
 ;
"RTN","PXKFCPT1",24,0)
QUANTIT S PXKQUN=1,PXSTOP=0
"RTN","PXKFCPT1",25,0)
 S PXXX=0
"RTN","PXKFCPT1",26,0)
 F  S PXXX=$O(^AUPNVCPT("AD",PXKAV(0,3),PXXX)) Q:PXXX=""  D  Q:$G(PXSTOP)
"RTN","PXKFCPT1",27,0)
 .I +$P(^AUPNVCPT(PXXX,0),"^")=PXKCPT D
"RTN","PXKFCPT1",28,0)
 ..; PX*1*215 - If code already exists, quit; don't increment qty
"RTN","PXKFCPT1",29,0)
 ..;S PXKQUN=($P(^AUPNVCPT(PXXX,0),"^",16)+1)
"RTN","PXKFCPT1",30,0)
 ..S PXSTOP=1
"RTN","PXKFCPT1",31,0)
 ..;S PXKKK=PXXX
"RTN","PXKFCPT1",32,0)
 ..;S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,0,"BEFORE")=$G(^AUPNVCPT(PXXX,0))
"RTN","PXKFCPT1",33,0)
 I $G(PXSTOP) Q
"RTN","PXKFCPT1",34,0)
 K PXSTOP
"RTN","PXKFCPT1",35,0)
CATEGOR ;
"RTN","PXKFCPT1",36,0)
 N PXKSEQ2,PXK1,PXK2
"RTN","PXKFCPT1",37,0)
 S PXKCPTT(1)=$P(PXKCPT,"^",1)
"RTN","PXKFCPT1",38,0)
 ;K ^UTILITY("DIQ1",$J)
"RTN","PXKFCPT1",39,0)
 ;S DIC=81,DA=PXKCPTT(1),DR=3 D EN^DIQ1
"RTN","PXKFCPT1",40,0)
 S PXK1=$P($$CPT^ICPTCOD(PXKCPTT(1)),U,4)
"RTN","PXKFCPT1",41,0)
 S PXK2=$$GET1^DIQ(81.1,PXK1,.01)
"RTN","PXKFCPT1",42,0)
 Q:PXK2=""
"RTN","PXKFCPT1",43,0)
 ;Q:$G(^UTILITY("DIQ1",$J,81,DA,3))=""
"RTN","PXKFCPT1",44,0)
 ;S PXKCPTT(4.1)=$G(^UTILITY("DIQ1",$J,81,DA,3))
"RTN","PXKFCPT1",45,0)
 S PXKCPTT(4.1)=PXK2
"RTN","PXKFCPT1",46,0)
 S PXKCPTT(5)=$E(PXKCPTT(4.1),1,30)
"RTN","PXKFCPT1",47,0)
 S PXKCPTT(6)=$O(^AUTNPOV("B",PXKCPTT(5),0))
"RTN","PXKFCPT1",48,0)
 S PXKPCA=$S(PXKCPTT(6)="":PXKCPTT(5),PXKCPTT(6)'="":PXKCPTT(6),1:"")
"RTN","PXKFCPT1",49,0)
 K PXKCPTT ;,^UTILITY("DIQ1",$J),DIC,DR,DA
"RTN","PXKFCPT1",50,0)
 ;PX*1*124
"RTN","PXKFCPT1",51,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,0,"AFTER")=$G(PXKCPT)_"^"_$G(PXKAV(0,2))_"^"_$G(PXKAV(0,3))_"^"_$G(PXKCPTN)_"^"_$G(PXKAV(0,8))_"^^^^"
"RTN","PXKFCPT1",52,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,0,"AFTER")=^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,0,"AFTER")_$G(PXKAV(0,9))_"^"_$G(PXKAV(0,10))_"^"_$G(PXKAV(0,11))_"^"_$G(PXKAV(0,12))_"^"_$G(PXKAV(0,13))_"^"_$G(PXKAV(0,14))_"^"_$G(PXKAV(0,15))_"^"_$G(PXKQUN)
"RTN","PXKFCPT1",53,0)
 S PXKSEQ2=0
"RTN","PXKFCPT1",54,0)
 F  S PXKSEQ2=$O(PXKAFT(1,PXKSEQ2)) Q:'PXKSEQ2  D
"RTN","PXKFCPT1",55,0)
 .S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,1,PXKSEQ2,"AFTER")=PXKAFT(1,PXKSEQ2)
"RTN","PXKFCPT1",56,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,12,"AFTER")=$G(PXKAV(12,1))_"^"_$G(PXKAV(12,2))_"^^"_$G(PXKAV(12,4))
"RTN","PXKFCPT1",57,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,802,"AFTER")=$G(PXKCA)
"RTN","PXKFCPT1",58,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,812,"AFTER")=$G(PXKAFT(812))
"RTN","PXKFCPT1",59,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,"IEN")=PXKKK
"RTN","PXKFCPT1",60,0)
 K PXKQUN,PXKCPTN,PXKCA,PXXX,PXKKK
"RTN","PXKFCPT1",61,0)
 Q
"RTN","PXKFCPT1",62,0)
IMMDEL ;Retrieve all CPT information for VISIT from V CPT file
"RTN","PXKFCPT1",63,0)
 S PXKSEQ1=PXKSEQ+PXKXX
"RTN","PXKFCPT1",64,0)
 S (XPFG,XP)=0 F  Q:XPFG  S XP=$O(^AUPNVCPT("AD",PXKVST,XP)) Q:XP=""  D
"RTN","PXKFCPT1",65,0)
 .I $P(^AUPNVCPT(XP,0),"^",1)=$P($P(PXKPXD(PXKX),"^",2),";") D  S XPFG=1
"RTN","PXKFCPT1",66,0)
 ..I $P($G(^AUPNVCPT(XP,0)),"^",16)=1 D IMMDEL1
"RTN","PXKFCPT1",67,0)
 ..I $D(XP),$P($G(^AUPNVCPT(XP,0)),"^",16)>1 D IMMDEL2
"RTN","PXKFCPT1",68,0)
 Q
"RTN","PXKFCPT1",69,0)
IMMDEL1 ;
"RTN","PXKFCPT1",70,0)
 N PXKSEQ2,PXKMOD
"RTN","PXKFCPT1",71,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,0,"BEFORE")=$G(^AUPNVCPT(XP,0))
"RTN","PXKFCPT1",72,0)
 S PXKSEQ2=0
"RTN","PXKFCPT1",73,0)
 F  S PXKSEQ2=$O(^AUPNVCPT(XP,1,PXKSEQ2)) Q:'PXKSEQ2  D
"RTN","PXKFCPT1",74,0)
 .S PXKMOD=^AUPNVCPT(XP,1,PXKSEQ2,0)
"RTN","PXKFCPT1",75,0)
 .S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,1,PXKSEQ2,"BEFORE")=PXKMOD
"RTN","PXKFCPT1",76,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,12,"BEFORE")=$G(^AUPNVCPT(XP,12))
"RTN","PXKFCPT1",77,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,802,"BEFORE")=$G(^AUPNVCPT(XP,802))
"RTN","PXKFCPT1",78,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,812,"BEFORE")=$G(^AUPNVCPT(XP,812))
"RTN","PXKFCPT1",79,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,"IEN")=XP
"RTN","PXKFCPT1",80,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,0,"AFTER")="@"
"RTN","PXKFCPT1",81,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,12,"AFTER")=""
"RTN","PXKFCPT1",82,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,802,"AFTER")=""
"RTN","PXKFCPT1",83,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,812,"AFTER")=""
"RTN","PXKFCPT1",84,0)
 K XPFG,XP
"RTN","PXKFCPT1",85,0)
 Q
"RTN","PXKFCPT1",86,0)
IMMDEL2 ;
"RTN","PXKFCPT1",87,0)
 N PXKSEQ2,PXKMOD
"RTN","PXKFCPT1",88,0)
 S PXTEMP=$P($G(^AUPNVCPT(XP,0)),"^",16)
"RTN","PXKFCPT1",89,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,0,"BEFORE")=$G(^AUPNVCPT(XP,0))
"RTN","PXKFCPT1",90,0)
 S PXKSEQ2=0
"RTN","PXKFCPT1",91,0)
 F  S PXKSEQ2=$O(^AUPNVCPT(XP,1,PXKSEQ2)) Q:'PXKSEQ2  D
"RTN","PXKFCPT1",92,0)
 .S PXKMOD=^AUPNVCPT(XP,1,PXKSEQ2,0)
"RTN","PXKFCPT1",93,0)
 .S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,1,PXKSEQ2,"BEFORE")=PXKMOD
"RTN","PXKFCPT1",94,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,12,"BEFORE")=$G(^AUPNVCPT(XP,12))
"RTN","PXKFCPT1",95,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,802,"BEFORE")=$G(^AUPNVCPT(XP,802))
"RTN","PXKFCPT1",96,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,812,"BEFORE")=$G(^AUPNVCPT(XP,812))
"RTN","PXKFCPT1",97,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,"IEN")=XP
"RTN","PXKFCPT1",98,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,0,"AFTER")=$G(^AUPNVCPT(XP,0))
"RTN","PXKFCPT1",99,0)
 S PXKSEQ2=0
"RTN","PXKFCPT1",100,0)
 F  S PXKSEQ2=$O(^AUPNVCPT(XP,1,PXKSEQ2)) Q:'PXKSEQ2  D
"RTN","PXKFCPT1",101,0)
 .S PXKMOD=^AUPNVCPT(XP,1,PXKSEQ2,0)
"RTN","PXKFCPT1",102,0)
 .S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,1,PXKSEQ2,"BEFORE")=PXKMOD
"RTN","PXKFCPT1",103,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,12,"AFTER")=$G(^AUPNVCPT(XP,12))
"RTN","PXKFCPT1",104,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,802,"AFTER")=$G(^AUPNVCPT(XP,802))
"RTN","PXKFCPT1",105,0)
 S ^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,812,"AFTER")=$G(^AUPNVCPT(XP,812))
"RTN","PXKFCPT1",106,0)
 S $P(^TMP("PXKSAVE",$J,"CPT",PXKSEQ1,0,"AFTER"),"^",16)=((PXTEMP)-(1))
"RTN","PXKFCPT1",107,0)
 K XPFG,XP,PXTEMP
"RTN","PXKFCPT1",108,0)
 Q
"RTN","PXKFCPT1",109,0)
SK ;--START OF SKIN TEST
"RTN","PXKFCPT1",110,0)
 D IMM
"RTN","PXKFCPT1",111,0)
 Q
"RTN","PXKFICR")
0^10^B1725753
"RTN","PXKFICR",1,0)
PXKFICR ;BPFO/LMT - Fields for V IMM CONTRA/REFUSAL EVENTS file ;11/17/15  14:46
"RTN","PXKFICR",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**215**;Aug 12, 1996;Build 10
"RTN","PXKFICR",3,0)
 ;
"RTN","PXKFICR",4,0)
 ;  Adding or Editing of data in a particular field can be controlled
"RTN","PXKFICR",5,0)
 ;by adding a ~ as a delimiter and the letters A and/or E to the
"RTN","PXKFICR",6,0)
 ;end of the line of text which represents what could be added
"RTN","PXKFICR",7,0)
 ;to the DR string in a DIE call.
"RTN","PXKFICR",8,0)
 ; 1. If none or all three(~AE) of these characters are added then
"RTN","PXKFICR",9,0)
 ;    the data in this field can be either added or edited.
"RTN","PXKFICR",10,0)
 ; 2. If only the ~ is added then the data in this field can be
"RTN","PXKFICR",11,0)
 ;    neither added or edited.
"RTN","PXKFICR",12,0)
 ; 3. IF only the ~A is added then the data can only be added to
"RTN","PXKFICR",13,0)
 ;    the file for this field but not edited.
"RTN","PXKFICR",14,0)
 ; 4. If only the ~E is added the the data can only be edited in
"RTN","PXKFICR",15,0)
 ;    this file for this field. (not a likely possibility)
"RTN","PXKFICR",16,0)
 ;
"RTN","PXKFICR",17,0)
 ; The word "OPTION" in front of the line of text below tells the
"RTN","PXKFICR",18,0)
 ;software to determine,based on the data, the appropriateness
"RTN","PXKFICR",19,0)
 ;of using either a "///" or "////" stuff in a DIE call.
"RTN","PXKFICR",20,0)
 ;
"RTN","PXKFICR",21,0)
 ; The information on line tag 0 $P(,," * ",1) are the piece numbers
"RTN","PXKFICR",22,0)
 ;of the fields on the zero node that are required by the data
"RTN","PXKFICR",23,0)
 ;dictionary and are checked for to determine if enough data is present
"RTN","PXKFICR",24,0)
 ;to proceed without any errors. $P(,," * ",2) are the nodes and
"RTN","PXKFICR",25,0)
 ;piece numbers of the fields used to determine duplicates in the
"RTN","PXKFICR",26,0)
 ;file (node+piece (eg. 12+4)). $P(,," * ",3) is a flag use to
"RTN","PXKFICR",27,0)
 ;determine if duplicates are allowed in this visit file.
"RTN","PXKFICR",28,0)
 ;If it is set to 0 then no duplicate checks will occur. If it is
"RTN","PXKFICR",29,0)
 ;set to 1 then the file will be checked for duplicates based on
"RTN","PXKFICR",30,0)
 ;the information in $P 2.
"RTN","PXKFICR",31,0)
 ;
"RTN","PXKFICR",32,0)
 ; The following is the file's global name.  Each global must have a
"RTN","PXKFICR",33,0)
 ;unique name and can not have any subscripts as part of the global root.
"RTN","PXKFICR",34,0)
GLOBAL ;;^AUPNVICR
"RTN","PXKFICR",35,0)
 ;
"RTN","PXKFICR",36,0)
EN1 ;
"RTN","PXKFICR",37,0)
 S PXKER=""
"RTN","PXKFICR",38,0)
 S PXKER=$P($T(@PXKNOD+PXKPCE),";;",2)
"RTN","PXKFICR",39,0)
 Q
"RTN","PXKFICR",40,0)
EN2 ;
"RTN","PXKFICR",41,0)
 S PXKFD=""
"RTN","PXKFICR",42,0)
 S PXKFD=$P($T(@PXKNOD+PXKPCE),";;",2) D
"RTN","PXKFICR",43,0)
 .I PXKFD="" S PXKPCE=PXKPCE+1 D EN2
"RTN","PXKFICR",44,0)
 Q
"RTN","PXKFICR",45,0)
ADD ;Add an entry to the file
"RTN","PXKFICR",46,0)
 ;Q
"RTN","PXKFICR",47,0)
0 ;;1,2,3,4 * 0+1,0+3,0+4 * 1
"RTN","PXKFICR",48,0)
 ;;.01////^S X=$G(
"RTN","PXKFICR",49,0)
 ;;.02////^S X=$G(
"RTN","PXKFICR",50,0)
 ;;.03////^S X=$G(
"RTN","PXKFICR",51,0)
 ;;.04////^S X=$G(
"RTN","PXKFICR",52,0)
 ;;.05///^S X=$G(
"RTN","PXKFICR",53,0)
12 ;;
"RTN","PXKFICR",54,0)
 ;;1201///^S X=$G(
"RTN","PXKFICR",55,0)
 ;;
"RTN","PXKFICR",56,0)
 ;;
"RTN","PXKFICR",57,0)
 ;;1204////^S X=$G(
"RTN","PXKFICR",58,0)
801 ;;
"RTN","PXKFICR",59,0)
 ;;80101///^S X=1;
"RTN","PXKFICR",60,0)
 ;;80102///^S X=$G(PXKAUDIT);
"RTN","PXKFICR",61,0)
811 ;;
"RTN","PXKFICR",62,0)
 ;;81101///^S X=$G(
"RTN","PXKFICR",63,0)
812 ;;
"RTN","PXKFICR",64,0)
 ;;81201///^S X=$G(
"RTN","PXKFICR",65,0)
 ;;81202////^S X=$G(
"RTN","PXKFICR",66,0)
 ;;81203////^S X=$G(
"RTN","PXKFICR",67,0)
SPEC ;
"RTN","PXKFICR",68,0)
 Q
"RTN","PXKFIMM")
0^18^B5142444
"RTN","PXKFIMM",1,0)
PXKFIMM ;ISL/JVS,SLC/ajb - Fields for V IMMUNIZATIONS file ;01/11/16
"RTN","PXKFIMM",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,124,201,209,210,215**;Aug 12, 1996;Build 10
"RTN","PXKFIMM",3,0)
 ;
"RTN","PXKFIMM",4,0)
 ;  Adding or Editing of data in a particular field can be controlled
"RTN","PXKFIMM",5,0)
 ;by adding a ~ as a delimiter and the letters A and/or E to the
"RTN","PXKFIMM",6,0)
 ;end of the line of text which represents what could be added
"RTN","PXKFIMM",7,0)
 ;to the DR string in a DIE call.
"RTN","PXKFIMM",8,0)
 ; 1. If none or all three(~AE) of these characters are added then
"RTN","PXKFIMM",9,0)
 ;    the data in this field can be either added or edited.
"RTN","PXKFIMM",10,0)
 ; 2. If only the ~ is added then the data in this field can be
"RTN","PXKFIMM",11,0)
 ;    neither added or edited.
"RTN","PXKFIMM",12,0)
 ; 3. IF only the ~A is added then the data can only be added to
"RTN","PXKFIMM",13,0)
 ;    the file for this field but not edited.
"RTN","PXKFIMM",14,0)
 ; 4. If only the ~E is added the the data can only be edited in
"RTN","PXKFIMM",15,0)
 ;    this file for this field. (not a likely possibility)
"RTN","PXKFIMM",16,0)
 ;
"RTN","PXKFIMM",17,0)
 ; The word "OPTION" in front of the line of text below tells the 
"RTN","PXKFIMM",18,0)
 ;software to determine,based on the data, the appropriateness
"RTN","PXKFIMM",19,0)
 ;of using either a "///" or "////" stuff in a DIE call.
"RTN","PXKFIMM",20,0)
 ;
"RTN","PXKFIMM",21,0)
 ; The information on line tag 0 $P(,," * ",1) are the piece numbers
"RTN","PXKFIMM",22,0)
 ;of the fields on the zero node that are required by the data
"RTN","PXKFIMM",23,0)
 ;dictionary and are checked for to determine if enough data is present
"RTN","PXKFIMM",24,0)
 ;to proceed without any errors. $P(,," * ",2) are the nodes and
"RTN","PXKFIMM",25,0)
 ;piece numbers of the fields used to determine duplicates in the
"RTN","PXKFIMM",26,0)
 ;file (node+piece (eg. 12+4)). $P(,," * ",3) is a flag use to
"RTN","PXKFIMM",27,0)
 ;determine if duplicates are allowed in this visit file. 
"RTN","PXKFIMM",28,0)
 ;If it is set to 0 then no duplicate checks will occur. If it is
"RTN","PXKFIMM",29,0)
 ;set to 1 then the file will be checked for duplicates based on
"RTN","PXKFIMM",30,0)
 ;the information in $P 2.
"RTN","PXKFIMM",31,0)
 ;
"RTN","PXKFIMM",32,0)
 ; The following is the file's global name.  Each global must have a
"RTN","PXKFIMM",33,0)
 ;unique name and can not have any subscripts as part of the global root.
"RTN","PXKFIMM",34,0)
GLOBAL ;;^AUPNVIMM
"RTN","PXKFIMM",35,0)
 ;
"RTN","PXKFIMM",36,0)
EN1 ;
"RTN","PXKFIMM",37,0)
 S PXKER=""
"RTN","PXKFIMM",38,0)
 S PXKER=$P($T(@PXKNOD+PXKPCE),";;",2)
"RTN","PXKFIMM",39,0)
 Q
"RTN","PXKFIMM",40,0)
EN2 ;
"RTN","PXKFIMM",41,0)
 S PXKFD=""
"RTN","PXKFIMM",42,0)
 S PXKFD=$P($T(@PXKNOD+PXKPCE),";;",2) D
"RTN","PXKFIMM",43,0)
 .I PXKFD="" S PXKPCE=PXKPCE+1 D EN2
"RTN","PXKFIMM",44,0)
 Q
"RTN","PXKFIMM",45,0)
ADD ;Add an entry to the file
"RTN","PXKFIMM",46,0)
 ;Q
"RTN","PXKFIMM",47,0)
0 ;;1,2,3 * 0+1,0+3 * 1
"RTN","PXKFIMM",48,0)
 ;;.01////^S X=$G(
"RTN","PXKFIMM",49,0)
 ;;.02////^S X=$G(
"RTN","PXKFIMM",50,0)
 ;;.03////^S X=$G(
"RTN","PXKFIMM",51,0)
 ;;.04////^S X=$G(
"RTN","PXKFIMM",52,0)
 ;;
"RTN","PXKFIMM",53,0)
 ;;.06///^S X=$G(
"RTN","PXKFIMM",54,0)
 ;;.07///^S X=$G(
"RTN","PXKFIMM",55,0)
 ;;.08////^S X=$G(
"RTN","PXKFIMM",56,0)
 ;;.09////^S X=$G(
"RTN","PXKFIMM",57,0)
 ;;.1////^S X=$G(
"RTN","PXKFIMM",58,0)
 ;;.11////^S X=$G(
"RTN","PXKFIMM",59,0)
 ;;.12////^S X=$G(
"RTN","PXKFIMM",60,0)
 ;;.13////^S X=$G(
"RTN","PXKFIMM",61,0)
 ;;.14////^S X=$G(
"RTN","PXKFIMM",62,0)
 ;;.15////^S X=$G(
"RTN","PXKFIMM",63,0)
11 ;;
"RTN","PXKFIMM",64,0)
 ;;1101///^S X=$G(
"RTN","PXKFIMM",65,0)
12 ;;
"RTN","PXKFIMM",66,0)
 ;;1201///^S X=$G(
"RTN","PXKFIMM",67,0)
 ;;1202////^S X=$G(
"RTN","PXKFIMM",68,0)
 ;;
"RTN","PXKFIMM",69,0)
 ;;1204////^S X=$G(
"RTN","PXKFIMM",70,0)
 ;;1205////^S X=$G(
"RTN","PXKFIMM",71,0)
 ;;
"RTN","PXKFIMM",72,0)
 ;;1207////^S X=$G(
"RTN","PXKFIMM",73,0)
 ;;
"RTN","PXKFIMM",74,0)
 ;;
"RTN","PXKFIMM",75,0)
 ;;
"RTN","PXKFIMM",76,0)
 ;;
"RTN","PXKFIMM",77,0)
 ;;
"RTN","PXKFIMM",78,0)
 ;;
"RTN","PXKFIMM",79,0)
 ;;
"RTN","PXKFIMM",80,0)
 ;;
"RTN","PXKFIMM",81,0)
 ;;
"RTN","PXKFIMM",82,0)
 ;;
"RTN","PXKFIMM",83,0)
 ;;
"RTN","PXKFIMM",84,0)
 ;;
"RTN","PXKFIMM",85,0)
 ;;1220////^S X=$G(
"RTN","PXKFIMM",86,0)
13 ;;
"RTN","PXKFIMM",87,0)
 ;;1301////^S X=$G(
"RTN","PXKFIMM",88,0)
 ;;1302////^S X=$G(
"RTN","PXKFIMM",89,0)
 ;;1303////^S X=$G(
"RTN","PXKFIMM",90,0)
 ;;1304////^S X=$G(
"RTN","PXKFIMM",91,0)
 ;;
"RTN","PXKFIMM",92,0)
 ;;
"RTN","PXKFIMM",93,0)
 ;;
"RTN","PXKFIMM",94,0)
 ;;
"RTN","PXKFIMM",95,0)
 ;;
"RTN","PXKFIMM",96,0)
 ;;
"RTN","PXKFIMM",97,0)
 ;;
"RTN","PXKFIMM",98,0)
 ;;1312////^S X=$G(
"RTN","PXKFIMM",99,0)
 ;;1313////^S X=$G(
"RTN","PXKFIMM",100,0)
14 ;;
"RTN","PXKFIMM",101,0)
 ;;1401////^S X=$G(
"RTN","PXKFIMM",102,0)
 ;;1402///^S X=$G(
"RTN","PXKFIMM",103,0)
 ;;1403///^S X=$G(
"RTN","PXKFIMM",104,0)
 ;;1404////^S X=$G(
"RTN","PXKFIMM",105,0)
 ;;1405///^S X=$G(
"RTN","PXKFIMM",106,0)
 ;;1406///^S X=$G(
"RTN","PXKFIMM",107,0)
15 ;;
"RTN","PXKFIMM",108,0)
 ;;1501///^S X=$G(
"RTN","PXKFIMM",109,0)
16 ;;
"RTN","PXKFIMM",110,0)
 ;;1601///^S X=$G(
"RTN","PXKFIMM",111,0)
801 ;;
"RTN","PXKFIMM",112,0)
 ;;80101///^S X=1;
"RTN","PXKFIMM",113,0)
 ;;80102///^S X=$G(PXKAUDIT);
"RTN","PXKFIMM",114,0)
811 ;;
"RTN","PXKFIMM",115,0)
 ;;81101///^S X=$G(
"RTN","PXKFIMM",116,0)
812 ;;
"RTN","PXKFIMM",117,0)
 ;;81201///^S X=$G(
"RTN","PXKFIMM",118,0)
 ;;81202////^S X=$G(
"RTN","PXKFIMM",119,0)
 ;;81203////^S X=$G(
"RTN","PXKFIMM",120,0)
SPEC ;
"RTN","PXKFIMM",121,0)
 Q
"RTN","PXKFPOV1")
0^22^B9458058
"RTN","PXKFPOV1",1,0)
PXKFPOV1 ;BPFO/LMT - PROMBLEM OF VISIT Routine #2 ;01/12/16  14:36
"RTN","PXKFPOV1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**215**;Aug 12, 1996;Build 10
"RTN","PXKFPOV1",3,0)
 ;
"RTN","PXKFPOV1",4,0)
 ;
"RTN","PXKFPOV1",5,0)
IMM ;
"RTN","PXKFPOV1",6,0)
 D MAIN
"RTN","PXKFPOV1",7,0)
 Q
"RTN","PXKFPOV1",8,0)
SK ;
"RTN","PXKFPOV1",9,0)
 D MAIN
"RTN","PXKFPOV1",10,0)
 Q
"RTN","PXKFPOV1",11,0)
 ;
"RTN","PXKFPOV1",12,0)
MAIN ;
"RTN","PXKFPOV1",13,0)
 I PXKFGAD=1 D ADD
"RTN","PXKFPOV1",14,0)
 I PXKFGDE=1 D DEL
"RTN","PXKFPOV1",15,0)
 Q
"RTN","PXKFPOV1",16,0)
 ;
"RTN","PXKFPOV1",17,0)
ADD ;
"RTN","PXKFPOV1",18,0)
 N PXKSEQ1,PXNARR,PXVISIT,PXVISITDT
"RTN","PXKFPOV1",19,0)
 ;
"RTN","PXKFPOV1",20,0)
 S PXVISIT=$G(^TMP("PXK",$J,"VST",1,"IEN"))
"RTN","PXKFPOV1",21,0)
 ;
"RTN","PXKFPOV1",22,0)
 ; Entry already exists with this Code - don't add duplicate
"RTN","PXKFPOV1",23,0)
 I $$FNDVPOV(PXVISIT,PXCODE) Q
"RTN","PXKFPOV1",24,0)
 ;
"RTN","PXKFPOV1",25,0)
 ; use diagnosis description as narrative
"RTN","PXKFPOV1",26,0)
 S PXVISITDT=$$CSDATE^PXDXUTL(PXVISIT)
"RTN","PXKFPOV1",27,0)
 S PXNARR=$$DXNARR^PXUTL1(PXCODE,PXVISITDT)
"RTN","PXKFPOV1",28,0)
 S PXNARR=+$$PROVNARR^PXAPI(PXNARR,9000010.07)
"RTN","PXKFPOV1",29,0)
 ;
"RTN","PXKFPOV1",30,0)
 S PXKSEQ1=PXKSEQ+PXKXX
"RTN","PXKFPOV1",31,0)
 S ^TMP("PXKSAVE",$J,"POV",PXKSEQ1,0,"AFTER")=PXCODE_"^"_$G(PXKAV(0,2))_"^"_$G(PXKAV(0,3))_"^"_PXNARR_"^^^^^^^^S"
"RTN","PXKFPOV1",32,0)
 S ^TMP("PXKSAVE",$J,"POV",PXKSEQ1,12,"AFTER")=$G(PXKAV(12,1))_"^"_$G(PXKAV(12,2))_"^^"_$G(PXKAV(12,4))
"RTN","PXKFPOV1",33,0)
 S ^TMP("PXKSAVE",$J,"POV",PXKSEQ1,812,"AFTER")=$G(PXKAFT(812))
"RTN","PXKFPOV1",34,0)
 S ^TMP("PXKSAVE",$J,"POV",PXKSEQ1,"IEN")=""
"RTN","PXKFPOV1",35,0)
 ;
"RTN","PXKFPOV1",36,0)
 Q
"RTN","PXKFPOV1",37,0)
 ;
"RTN","PXKFPOV1",38,0)
DEL ;
"RTN","PXKFPOV1",39,0)
 N PXKSEQ1,PXVISIT,PXVPOV
"RTN","PXKFPOV1",40,0)
 ;
"RTN","PXKFPOV1",41,0)
 S PXVISIT=$G(^TMP("PXK",$J,"VST",1,"IEN"))
"RTN","PXKFPOV1",42,0)
 ;
"RTN","PXKFPOV1",43,0)
 S PXVPOV=$$FNDVPOV(PXVISIT,PXCODE)
"RTN","PXKFPOV1",44,0)
 I 'PXVPOV Q
"RTN","PXKFPOV1",45,0)
 ;
"RTN","PXKFPOV1",46,0)
 S PXKSEQ1=PXKSEQ+PXKXX
"RTN","PXKFPOV1",47,0)
 S ^TMP("PXKSAVE",$J,"POV",PXKSEQ1,0,"BEFORE")=$G(^AUPNVPOV(PXVPOV,0))
"RTN","PXKFPOV1",48,0)
 S ^TMP("PXKSAVE",$J,"POV",PXKSEQ1,12,"BEFORE")=$G(^AUPNVPOV(PXVPOV,12))
"RTN","PXKFPOV1",49,0)
 S ^TMP("PXKSAVE",$J,"POV",PXKSEQ1,800,"BEFORE")=$G(^AUPNVPOV(PXVPOV,800))
"RTN","PXKFPOV1",50,0)
 S ^TMP("PXKSAVE",$J,"POV",PXKSEQ1,802,"BEFORE")=$G(^AUPNVPOV(PXVPOV,802))
"RTN","PXKFPOV1",51,0)
 S ^TMP("PXKSAVE",$J,"POV",PXKSEQ1,811,"BEFORE")=$G(^AUPNVPOV(PXVPOV,811))
"RTN","PXKFPOV1",52,0)
 S ^TMP("PXKSAVE",$J,"POV",PXKSEQ1,812,"BEFORE")=$G(^AUPNVPOV(PXVPOV,812))
"RTN","PXKFPOV1",53,0)
 S ^TMP("PXKSAVE",$J,"POV",PXKSEQ1,"IEN")=PXVPOV
"RTN","PXKFPOV1",54,0)
 ;
"RTN","PXKFPOV1",55,0)
 S ^TMP("PXKSAVE",$J,"POV",PXKSEQ1,0,"AFTER")="@"
"RTN","PXKFPOV1",56,0)
 S ^TMP("PXKSAVE",$J,"POV",PXKSEQ1,12,"AFTER")=""
"RTN","PXKFPOV1",57,0)
 S ^TMP("PXKSAVE",$J,"POV",PXKSEQ1,812,"AFTER")=""
"RTN","PXKFPOV1",58,0)
 ;
"RTN","PXKFPOV1",59,0)
 Q
"RTN","PXKFPOV1",60,0)
 ;
"RTN","PXKFPOV1",61,0)
DUP(PXVISIT,PXCODE) ;
"RTN","PXKFPOV1",62,0)
 N PXFOUND,PXSEQ
"RTN","PXKFPOV1",63,0)
 ;
"RTN","PXKFPOV1",64,0)
 I $$FNDVPOV(PXVISIT,PXCODE) Q 1
"RTN","PXKFPOV1",65,0)
 ;
"RTN","PXKFPOV1",66,0)
 S PXFOUND=0
"RTN","PXKFPOV1",67,0)
 S PXSEQ=0
"RTN","PXKFPOV1",68,0)
 F  Q:PXFOUND  S PXSEQ=$O(^TMP("PXK",$J,"POV",PXSEQ)) Q:'PXSEQ  D
"RTN","PXKFPOV1",69,0)
 . I $P($G(^TMP("PXK",$J,"POV",PXSEQ,0,"AFTER")),U,1)=PXCODE D
"RTN","PXKFPOV1",70,0)
 . . S PXFOUND=1
"RTN","PXKFPOV1",71,0)
 ;
"RTN","PXKFPOV1",72,0)
 Q PXFOUND
"RTN","PXKFPOV1",73,0)
 ;
"RTN","PXKFPOV1",74,0)
FNDVPOV(PXVISIT,PXCODE) ;
"RTN","PXKFPOV1",75,0)
 N PXFOUND,PXRSLT,PXVPOV
"RTN","PXKFPOV1",76,0)
 ;
"RTN","PXKFPOV1",77,0)
 S PXRSLT=0
"RTN","PXKFPOV1",78,0)
 S PXFOUND=0
"RTN","PXKFPOV1",79,0)
 ;
"RTN","PXKFPOV1",80,0)
 S PXVPOV=0
"RTN","PXKFPOV1",81,0)
 F  Q:PXFOUND  S PXVPOV=$O(^AUPNVPOV("AD",PXVISIT,PXVPOV)) Q:'PXVPOV  D
"RTN","PXKFPOV1",82,0)
 . I $P($G(^AUPNVPOV(PXVPOV,0)),U,1)=PXCODE D
"RTN","PXKFPOV1",83,0)
 . . S PXFOUND=1
"RTN","PXKFPOV1",84,0)
 . . S PXRSLT=PXVPOV
"RTN","PXKFPOV1",85,0)
 ;
"RTN","PXKFPOV1",86,0)
 Q PXRSLT
"RTN","PXKMAIN")
0^20^B55424847
"RTN","PXKMAIN",1,0)
PXKMAIN ;ISL/JVS,ISA/Zoltan - Main Routine for Data Capture ;01/05/16  17:09
"RTN","PXKMAIN",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,59,73,88,69,117,130,124,174,164,210,215**;Aug 12, 1996;Build 10
"RTN","PXKMAIN",3,0)
 ;+This routine is responsible for:
"RTN","PXKMAIN",4,0)
 ;+
"RTN","PXKMAIN",5,0)
 ;+LOCAL VARIABLE LIST:
"RTN","PXKMAIN",6,0)
 ;+ PXP59LOC = LOCK name (introduced in patch PX*1.0*59).
"RTN","PXKMAIN",7,0)
 ;+ PXFG     = Stop flag with duplicate of delete
"RTN","PXKMAIN",8,0)
 ;+ PXKAFT   = After node
"RTN","PXKMAIN",9,0)
 ;+ PXKBEF   = Before node
"RTN","PXKMAIN",10,0)
 ;+ PXKAV    = Pieces from the after node
"RTN","PXKMAIN",11,0)
 ;+ PXKBV    = Pieces from the before node
"RTN","PXKMAIN",12,0)
 ;+ PXKERROR = Set when there is an error
"RTN","PXKMAIN",13,0)
 ;+ PXKFGAD  = ADD flag
"RTN","PXKMAIN",14,0)
 ;+ PXKFGED  = EDIT flag
"RTN","PXKMAIN",15,0)
 ;+ PXKFGDE  = DELETE flag
"RTN","PXKMAIN",16,0)
 ;+ PXKSEQ   = Sequence number in PXK tmp global
"RTN","PXKMAIN",17,0)
 ;+ PXKCAT   = Category of entry (CPT,MSR,VST...)
"RTN","PXKMAIN",18,0)
 ;+ PXKREF   = Root of temp global
"RTN","PXKMAIN",19,0)
 ;+ PXKPIEN  = IEN of v file or the visit file
"RTN","PXKMAIN",20,0)
 ;+ PXKREF   = The original reference we are ordering off of
"RTN","PXKMAIN",21,0)
 ;+ PXKRT    = name of the node in the v file
"RTN","PXKMAIN",22,0)
 ;+ PXKRTN   = routine name for the file routine
"RTN","PXKMAIN",23,0)
 ;+ PXKSOR   = the data source for this entry
"RTN","PXKMAIN",24,0)
 ;+ PXKSUB   = the subscript the data is located on the v file
"RTN","PXKMAIN",25,0)
 ;+ PXKVST   = the visit IEN
"RTN","PXKMAIN",26,0)
 ;+ PXKDUZ   = the DUZ of the user
"RTN","PXKMAIN",27,0)
 ;+ *PXKHLR* = A variable set by calling routine so that duplicate
"RTN","PXKMAIN",28,0)
 ;+            PXKERROR messages aren't produced.
"RTN","PXKMAIN",29,0)
 ;
"RTN","PXKMAIN",30,0)
 W !,"This is not an entry point" Q
"RTN","PXKMAIN",31,0)
EN1 ;+Main entry point to read ^TMP("PXK", Global
"RTN","PXKMAIN",32,0)
 ;+ Partial ^TMP Global Structure when called:
"RTN","PXKMAIN",33,0)
 ;+ ^TMP("PXK",$J,"SOR") = Source ien
"RTN","PXKMAIN",34,0)
 ;+
"RTN","PXKMAIN",35,0)
 ;+ ^TMP("PXK",$J,"VST",1,0,"BEFORE") = the 0-node of the visit file
"RTN","PXKMAIN",36,0)
 ;+ ^TMP("PXK",$J,"VST",1,0,"AFTER") = 0-node after changes.
"RTN","PXKMAIN",37,0)
 ;+ ^TMP("PXK",$J,"VST",provider counter,"IEN") = ""
"RTN","PXKMAIN",38,0)
 ;+
"RTN","PXKMAIN",39,0)
 ;+ ^TMP("PXK",$J,"PRV",provider counter,0,"BEFORE") = ""
"RTN","PXKMAIN",40,0)
 ;+ ^TMP("PXK",$J,"PRV",provider counter,0,"AFTER") = Provider id^DFN^Visitien^'P' or 'S' for primary/secondary
"RTN","PXKMAIN",41,0)
 ;+ ^TMP("PXK",$J,"PRV",provider counter,"IEN") = ""
"RTN","PXKMAIN",42,0)
 ;+ ^TMP("PXK",$J,"PRV",provider counter,"BEFORE") = ""
"RTN","PXKMAIN",43,0)
 ;+ ^TMP("PXK",$J,"PRV",provider counter,"AFTER") = ^Package ien^Source ien
"RTN","PXKMAIN",44,0)
 ;+
"RTN","PXKMAIN",45,0)
 N PXP59LOC
"RTN","PXKMAIN",46,0)
 D LOCK
"RTN","PXKMAIN",47,0)
 K PXKERROR
"RTN","PXKMAIN",48,0)
 I '$G(PXKDUZ) D
"RTN","PXKMAIN",49,0)
 . I $G(DUZ) S PXKDUZ=DUZ
"RTN","PXKMAIN",50,0)
 . E  S PXKDUZ=.5
"RTN","PXKMAIN",51,0)
 D VST
"RTN","PXKMAIN",52,0)
 I $D(PXP59LOC) D UNLOCK
"RTN","PXKMAIN",53,0)
 Q
"RTN","PXKMAIN",54,0)
VST ;--Check for visit node and get one created or quit.
"RTN","PXKMAIN",55,0)
 I '$G(^TMP("PXK",$J,"VST",1,"IEN")) D
"RTN","PXKMAIN",56,0)
 .D VSIT^PXKVST
"RTN","PXKMAIN",57,0)
 I +$G(^TMP("PXK",$J,"VST",1,"IEN"))=-1 S PXKERROR("VISIT")="Visit Tracking could not get a visit." Q
"RTN","PXKMAIN",58,0)
 I +$G(^TMP("PXK",$J,"VST",1,"IEN"))=-2 S PXKERROR("VISIT")="PCE is not activated in Visit Tracking Parameters and thus cannot create visits." Q
"RTN","PXKMAIN",59,0)
 I +$G(^TMP("PXK",$J,"VST",1,"IEN"))<1 S PXKERROR("VISIT")="Did not get a visit^"_$G(^TMP("PXK",$J,"VST",1,"IEN")) Q
"RTN","PXKMAIN",60,0)
 ;
"RTN","PXKMAIN",61,0)
NEW ;--New variables and set main variables
"RTN","PXKMAIN",62,0)
 N PXKDFN,PXKSOR,PXKVST,PXKSEQ,PXFG,PXKAFT,PXKBEF,PXKAUDIT
"RTN","PXKMAIN",63,0)
 N PXKCAT,PXKER,PXKFGAD,PXKFGED,PXKFGDE,PXKNOD,PXKPCE
"RTN","PXKMAIN",64,0)
 N PXKPIEN,PXKREF,PXKRTN,PXKSORR,PXKSUB,PXKVCAT
"RTN","PXKMAIN",65,0)
 N PXKPTR,PXDFG,PX,PXJJJ,PXKAFT8,PXKAFTR,PXKGN,PXKN,PXKP
"RTN","PXKMAIN",66,0)
 N PXKRRT,PXKVRTN,PXKRT,PXKFVDLM,TMPPX
"RTN","PXKMAIN",67,0)
PRVTYPE ;---DO PROVIDER TYPE--PXKMAIN2
"RTN","PXKMAIN",68,0)
 D PRVTYPE^PXKMAIN2
"RTN","PXKMAIN",69,0)
 ;
"RTN","PXKMAIN",70,0)
SET ;--SET VARIABLES NECESSARY
"RTN","PXKMAIN",71,0)
 ;'DA' should not be defined at this point
"RTN","PXKMAIN",72,0)
 N DA ;PX*1.0*117
"RTN","PXKMAIN",73,0)
 ;
"RTN","PXKMAIN",74,0)
 S PXFG=0,TMPPX="^",PXKLAYGO="",PXDFG=0
"RTN","PXKMAIN",75,0)
SOURCE S PXKSOR=$G(^TMP("PXK",$J,"SOR")) D  Q:$D(PXKERROR("SOURCE"))
"RTN","PXKMAIN",76,0)
 .S PXKCO("SOR")=PXKSOR
"RTN","PXKMAIN",77,0)
 .I $D(PXKSOR)']"" S PXKERROR("SOURCE")="" Q
"RTN","PXKMAIN",78,0)
VISIT S (PXKVST,VSIT("IEN"))=$G(^TMP("PXK",$J,"VST",1,"IEN"))
"RTN","PXKMAIN",79,0)
ORDER ;--$ORDER Through the ^TMP("PXK", global setting variables
"RTN","PXKMAIN",80,0)
 S PXKREF="^TMP(""PXK"",$J)"
"RTN","PXKMAIN",81,0)
CATEG S PXKCAT="" F  S (PXKCAT,PXKVCAT)=$O(@PXKREF@(PXKCAT)) Q:PXKCAT=""  D
"RTN","PXKMAIN",82,0)
 .I PXKCAT="VST" S PXKVCAT="SIT"
"RTN","PXKMAIN",83,0)
 .S PXKRTN="PXKF"_PXKCAT
"RTN","PXKMAIN",84,0)
 .S X=PXKRTN X ^%ZOSF("TEST") Q:'$T
"RTN","PXKMAIN",85,0)
SEQUE .S PXKSEQ=0 F  S PXKSEQ=$O(@PXKREF@(PXKCAT,PXKSEQ)) K PXKAV,PXKBV S PXFG=0 Q:'PXKSEQ  D
"RTN","PXKMAIN",86,0)
 ..S PXKPIEN=$G(@PXKREF@(PXKCAT,PXKSEQ,"IEN")),(PXKFGAD,PXKFGDE,PXKFGED,PXDFG)=0
"RTN","PXKMAIN",87,0)
SUBSCR ..S PXKSUB="" F  S PXKSUB=$O(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB)) Q:PXKSUB["IEN"  Q:PXFG=1  Q:PXDFG=1  D
"RTN","PXKMAIN",88,0)
AFTER ...S PXKAFT(PXKSUB)=$G(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,"AFTER"))
"RTN","PXKMAIN",89,0)
BEFORE ...S PXKBEF(PXKSUB)=$G(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,"BEFORE"))
"RTN","PXKMAIN",90,0)
 ...I PXKCAT="CPT",PXKSUB=1 D SUBSCR^PXKMOD
"RTN","PXKMAIN",91,0)
 ...I PXKCAT="IMM",PXKSUB?1(1"2",1"3",1"11") D MULT
"RTN","PXKMAIN",92,0)
 ...D LOOP^PXKMAIN1 D ERROR^PXKMAIN1 S PXDFG=0 I $G(PXKAV(0,1))["@"!('$D(PXKAV(0,1))) S PXKAFT(PXKSUB)="" K PXKAV(0) S PXDFG=1
"RTN","PXKMAIN",93,0)
 ..Q:PXFG=1
"RTN","PXKMAIN",94,0)
 ..I $D(PXKAV),'$D(PXKBV) S PXKSORR=PXKSOR_"-A "_PXKDUZ,PXKFGAD=1 I PXKCAT["VST" S PXKFGAD=0
"RTN","PXKMAIN",95,0)
 ..I '$D(PXKAV),$D(PXKBV) S PXKFGDE=1,PXKFVDLM="" D
"RTN","PXKMAIN",96,0)
 ...S PXKRT=$P($T(GLOBAL^@PXKRTN),";;",2)_"("_PXKPIEN_")" I $D(@PXKRT) D DELETE^PXKMAIN1,EN1^PXKMASC S PXFG=1 K PXKRT Q
"RTN","PXKMAIN",97,0)
 ..I 'PXKFGAD,'PXKFGDE D
"RTN","PXKMAIN",98,0)
 ...I PXKCAT="VST" D CQDEL
"RTN","PXKMAIN",99,0)
 ...D CLEAN^PXKMAIN1
"RTN","PXKMAIN",100,0)
 ...I $D(PXKAV) S PXKSORR=PXKSOR_"-E "_PXKDUZ,PXKFGED=1 I PXKCAT="VST",'$D(PXKBV),$D(PXKVST) S PXKFGED=0
"RTN","PXKMAIN",101,0)
 ..I 'PXKFGAD,'PXKFGDE,'PXKFGED,PXKCAT["VST" D EN1^PXKMASC
"RTN","PXKMAIN",102,0)
 ..I PXKFGAD=1 D  Q:PXFG
"RTN","PXKMAIN",103,0)
 ...D ERROR^PXKMAIN1
"RTN","PXKMAIN",104,0)
 ...I $D(PXKERROR(PXKCAT,PXKSEQ)) S PXFG=1
"RTN","PXKMAIN",105,0)
 ...D:'PXFG DUP^PXKMAIN1
"RTN","PXKMAIN",106,0)
 ...I PXFG=1 D  Q
"RTN","PXKMAIN",107,0)
 ....Q:PXKCAT'="CPT"
"RTN","PXKMAIN",108,0)
 ....I $G(@PXKREF@(PXKCAT,PXKSEQ,"IEN"))]"" D REMOVE^PXCEVFIL(@PXKREF@(PXKCAT,PXKSEQ,"IEN"))
"RTN","PXKMAIN",109,0)
 ...D:'PXKPIEN FILE^PXKMAIN1
"RTN","PXKMAIN",110,0)
 ...S:'$G(DA) DA=PXKPIEN
"RTN","PXKMAIN",111,0)
 ...D AUD2^PXKMAIN1,DRDIE^PXKMAIN1,EN1^PXKMASC
"RTN","PXKMAIN",112,0)
 ..I PXKFGED=1,PXKCAT'="VST" S PXKRT=$P($T(GLOBAL^@PXKRTN),";;",2)_"("_PXKPIEN_")" Q:'$D(@PXKRT)  S DA=PXKPIEN D DUP^PXKMAIN1 Q:PXFG=1  D AUD12^PXKMAIN1,DRDIE^PXKMAIN1,EN1^PXKMASC
"RTN","PXKMAIN",113,0)
 ..I PXKFGED=1,PXKCAT="VST" S PXKRT=$P($T(GLOBAL^@PXKRTN),";;",2)_"("_PXKPIEN_")" Q:'$D(@PXKRT)  S DA=PXKPIEN D DUP^PXKMAIN1 Q:PXFG=1  D DRDIE^PXKMAIN1,EN1^PXKMASC
"RTN","PXKMAIN",114,0)
 ..D SPEC2^PXKMAIN2
"RTN","PXKMAIN",115,0)
 ..K PXKAFT,PXKBEF
"RTN","PXKMAIN",116,0)
 I $D(^TMP("PXKSAVE",$J)) D RECALL^PXKMAIN2
"RTN","PXKMAIN",117,0)
 D EXIT
"RTN","PXKMAIN",118,0)
 Q
"RTN","PXKMAIN",119,0)
 ;
"RTN","PXKMAIN",120,0)
MULT ; Add multiples to PXKAFT, PXKBEF, PXKAV, PXKBV arrays
"RTN","PXKMAIN",121,0)
 ;
"RTN","PXKMAIN",122,0)
 N PXKSUBIEN,PXKI
"RTN","PXKMAIN",123,0)
 ;
"RTN","PXKMAIN",124,0)
 S PXKSUBIEN=0
"RTN","PXKMAIN",125,0)
 F  S PXKSUBIEN=$O(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,PXKSUBIEN)) Q:'PXKSUBIEN  D
"RTN","PXKMAIN",126,0)
 . ;
"RTN","PXKMAIN",127,0)
 . I $D(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,PXKSUBIEN,"AFTER")) D
"RTN","PXKMAIN",128,0)
 . . S PXKAFT(PXKSUB,PXKSUBIEN)=$G(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,PXKSUBIEN,"AFTER"))
"RTN","PXKMAIN",129,0)
 . . F PXKI=1:1:$L(PXKAFT(PXKSUB,PXKSUBIEN),"^") D
"RTN","PXKMAIN",130,0)
 . . . I $P(PXKAFT(PXKSUB,PXKSUBIEN),"^",PXKI)'="" S PXKAV(PXKSUB,PXKSUBIEN,PXKI)=$P(PXKAFT(PXKSUB,PXKSUBIEN),"^",PXKI)
"RTN","PXKMAIN",131,0)
 . ;
"RTN","PXKMAIN",132,0)
 . I $D(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,PXKSUBIEN,"BEFORE")) D
"RTN","PXKMAIN",133,0)
 . . S PXKBEF(PXKSUB,PXKSUBIEN)=$G(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,PXKSUBIEN,"BEFORE"))
"RTN","PXKMAIN",134,0)
 . . F PXKI=1:1:$L(PXKBEF(PXKSUB,PXKSUBIEN),"^") D
"RTN","PXKMAIN",135,0)
 . . . I $P(PXKBEF(PXKSUB,PXKSUBIEN),"^",PXKI)'="" S PXKBV(PXKSUB,PXKSUBIEN,PXKI)=$P(PXKBEF(PXKSUB,PXKSUBIEN),"^",PXKI)
"RTN","PXKMAIN",136,0)
 ;
"RTN","PXKMAIN",137,0)
 I $G(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,0,"AFTER"))="@" D
"RTN","PXKMAIN",138,0)
 . S PXKAFT(PXKSUB,0)="@"
"RTN","PXKMAIN",139,0)
 . S PXKAV(PXKSUB,0)="@"
"RTN","PXKMAIN",140,0)
 ;
"RTN","PXKMAIN",141,0)
 Q
"RTN","PXKMAIN",142,0)
 ;
"RTN","PXKMAIN",143,0)
EXIT ;--EXIT
"RTN","PXKMAIN",144,0)
 I $D(PXKFVDLM) D MODIFIED^VSIT(PXKVST)
"RTN","PXKMAIN",145,0)
 K PXKPXD,TMPPX
"RTN","PXKMAIN",146,0)
 K DA,DR,PXKI,PXKJ,PXKLAYGO,PXKDUZ,PXKAFT8,PXKAFTR,VSIT("IEN") Q
"RTN","PXKMAIN",147,0)
EVENT ;--ENTRY POINT TO POST EXECUTE PCE'S EVENT
"RTN","PXKMAIN",148,0)
 ;Setting the variable PXKNOEVT=1 will stop the event from being
"RTN","PXKMAIN",149,0)
 ;fired off whenever any data is sent into PCE
"RTN","PXKMAIN",150,0)
 ;
"RTN","PXKMAIN",151,0)
 ;PX*1*124  AUTO-POPULATE THE ENCOUNTER SC/EI BASED ON THE ENCOUNTER DX'S
"RTN","PXKMAIN",152,0)
 ;PX*1.0*164 Relocate the PXCECCLS call
"RTN","PXKMAIN",153,0)
 I $D(^TMP("PXKCO",$J)) D
"RTN","PXKMAIN",154,0)
 . S PXKVVST=+$O(^TMP("PXKCO",$J,0))
"RTN","PXKMAIN",155,0)
 . I $G(PXKVVST) D VST^PXCECCLS(PXKVVST) ;PX*1.0*174
"RTN","PXKMAIN",156,0)
 ;
"RTN","PXKMAIN",157,0)
 I $G(PXKNOEVT) K ^TMP("PXKCO",$J) Q
"RTN","PXKMAIN",158,0)
 N PXP59LOC
"RTN","PXKMAIN",159,0)
 D LOCK
"RTN","PXKMAIN",160,0)
 D EVENT^PXKMASC
"RTN","PXKMAIN",161,0)
 I $D(PXP59LOC) D UNLOCK
"RTN","PXKMAIN",162,0)
 Q
"RTN","PXKMAIN",163,0)
LOCK ; Lock (results in PXP59LOC)--Patch PX*1.0*59.
"RTN","PXKMAIN",164,0)
 N PX0,PXWHO,PXWHERE,PXWHEN,PXEXIT,PXVISIT
"RTN","PXKMAIN",165,0)
 S PXEXIT=1,(PXWHO,PXWHERE,PXWHEN)=""
"RTN","PXKMAIN",166,0)
 ;First case: new visit data being saved.
"RTN","PXKMAIN",167,0)
 I 11[$D(^TMP("PXK",$J,"VST",1,0,"AFTER")) D
"RTN","PXKMAIN",168,0)
 . S PX0=^TMP("PXK",$J,"VST",1,0,"AFTER")
"RTN","PXKMAIN",169,0)
 . D L2
"RTN","PXKMAIN",170,0)
 ;Second case: use existing visit data.
"RTN","PXKMAIN",171,0)
 I 11[$D(^TMP("PXK",$J,"VST",1,"IEN")) D
"RTN","PXKMAIN",172,0)
 . S PXVISIT=+^TMP("PXK",$J,"VST",1,"IEN")
"RTN","PXKMAIN",173,0)
 . Q:'PXVISIT
"RTN","PXKMAIN",174,0)
 . Q:$D(^AUPNVSIT(PXVISIT,0))[0
"RTN","PXKMAIN",175,0)
 . S PX0=^AUPNVSIT(PXVISIT,0)
"RTN","PXKMAIN",176,0)
 . D L2
"RTN","PXKMAIN",177,0)
 ;Third case: Uses "PXKCO" instead of "PXK".
"RTN","PXKMAIN",178,0)
 I PXEXIT,$D(^TMP("PXKCO",$J)) D
"RTN","PXKMAIN",179,0)
 . S PXVISIT=$O(^TMP("PXKCO",$J,0))
"RTN","PXKMAIN",180,0)
 . Q:'PXVISIT
"RTN","PXKMAIN",181,0)
 . S PX0=$G(^TMP("PXKCO",$J,PXVISIT,"VST",PXVISIT,0,"AFTER"))
"RTN","PXKMAIN",182,0)
 . Q:PX0=""
"RTN","PXKMAIN",183,0)
 . D L2
"RTN","PXKMAIN",184,0)
 ;Fourth case: Uses "PXKENC" instead of "PXK".
"RTN","PXKMAIN",185,0)
 I PXEXIT,$D(^TMP("PXKENC",$J)) D
"RTN","PXKMAIN",186,0)
 . S PXVISIT=$O(^TMP("PXKENC",$J,0))
"RTN","PXKMAIN",187,0)
 . Q:'PXVISIT
"RTN","PXKMAIN",188,0)
 . S PX0=$G(^TMP("PXKENC",$J,PXVISIT,"VST",PXVISIT,0)) ; Look at ^TMP("PXKENC",$J
"RTN","PXKMAIN",189,0)
 . Q:PX0=""
"RTN","PXKMAIN",190,0)
 . D L2
"RTN","PXKMAIN",191,0)
 I PXEXIT Q  ; Unable to obtain non-null subscripts.
"RTN","PXKMAIN",192,0)
 S PXP59LOC=$NA(^PXLOCK(PXWHO,PXWHERE,PXWHEN))
"RTN","PXKMAIN",193,0)
 L +@PXP59LOC:300
"RTN","PXKMAIN",194,0)
 E  K PXP59LOC ; Lock was unsuccessful.
"RTN","PXKMAIN",195,0)
 Q
"RTN","PXKMAIN",196,0)
L2 ; Get values from visit 0 node (PX0).
"RTN","PXKMAIN",197,0)
 I 'PXWHO S PXWHO=$P(PX0,U,5)
"RTN","PXKMAIN",198,0)
 I 'PXWHEN S PXWHEN=$P(PX0,U,1)
"RTN","PXKMAIN",199,0)
 I 'PXWHERE S PXWHERE=+$P(PX0,U,22)
"RTN","PXKMAIN",200,0)
 I PXWHO,PXWHEN S PXEXIT=0
"RTN","PXKMAIN",201,0)
 Q
"RTN","PXKMAIN",202,0)
UNLOCK ; Unlock (use info in PXP59LOC)--Patch PX*1.0*59.
"RTN","PXKMAIN",203,0)
 L -@PXP59LOC
"RTN","PXKMAIN",204,0)
 Q
"RTN","PXKMAIN",205,0)
 ;
"RTN","PXKMAIN",206,0)
CQDEL ;Classification question deletion check
"RTN","PXKMAIN",207,0)
 I PXKCAT'="VST" Q
"RTN","PXKMAIN",208,0)
 S PXJ="" F  S PXJ=$O(PXKBV(800,PXJ)) Q:'PXJ  I PXKBV(800,PXJ)'="" I '$D(PXKAV(800,PXJ)) S PXKAV(800,PXJ)="@"
"RTN","PXKMAIN",209,0)
 K PXJ Q
"RTN","PXKMAIN2")
0^21^B25829818
"RTN","PXKMAIN2",1,0)
PXKMAIN2 ;ISL/JVS - Special Routine ;04/06/16  08:10
"RTN","PXKMAIN2",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**69,186,215**;Aug 12, 1996;Build 10
"RTN","PXKMAIN2",3,0)
 ;  VARIABLES
"RTN","PXKMAIN2",4,0)
 ; See variables lists under each line tag
"RTN","PXKMAIN2",5,0)
 ;
"RTN","PXKMAIN2",6,0)
 ;
"RTN","PXKMAIN2",7,0)
SPEC ;Populate other v files
"RTN","PXKMAIN2",8,0)
 ;
"RTN","PXKMAIN2",9,0)
 ; As of PX*1*215, this entry point (and related POP tag) has been deprecated and
"RTN","PXKMAIN2",10,0)
 ; replaced with SPEC2. This is part of deprecating the PCE CODE MAPPING file,
"RTN","PXKMAIN2",11,0)
 ; and instead using the CODING SYSTEM multiple from the Immunization and
"RTN","PXKMAIN2",12,0)
 ; Skin Test files.
"RTN","PXKMAIN2",13,0)
 ;
"RTN","PXKMAIN2",14,0)
 ;  VARIABLES
"RTN","PXKMAIN2",15,0)
 ; PXKAV(0)  = The AFTER variables created in PXKMAIN
"RTN","PXKMAIN2",16,0)
 ; PXKBV(0)  = The BEFORE variables created in PXKMAIN
"RTN","PXKMAIN2",17,0)
 ; PXKFG(ED,DE,AD) =The EDIT,DELETE,ADD flags
"RTN","PXKMAIN2",18,0)
 ; PXKCAT    = The category being $o through (CPT,IMM etc...)
"RTN","PXKMAIN2",19,0)
 ; PXKIN     = The pointer value of first piece in the mapping file
"RTN","PXKMAIN2",20,0)
 ; PXKPXD    = An array with all the entries to be mapped this go around
"RTN","PXKMAIN2",21,0)
 ; PXKDIEN   = IEN of the coding file
"RTN","PXKMAIN2",22,0)
 ;
"RTN","PXKMAIN2",23,0)
 S PXKDONE=0
"RTN","PXKMAIN2",24,0)
 Q:PXKFGED=1
"RTN","PXKMAIN2",25,0)
 I (PXKFGAD=1) D
"RTN","PXKMAIN2",26,0)
 .I $D(^PXD(811.1,"AA",PXKAV(0,1),""_PXKCAT_"",1)) D
"RTN","PXKMAIN2",27,0)
 ..S PXKDONE=$O(^PXD(811.1,"AA",PXKAV(0,1),""_PXKCAT_"",1,PXKDONE))
"RTN","PXKMAIN2",28,0)
 ..S PXJ(1)=$G(^PXD(811.1,PXKDONE,0)) ;8TH IEN
"RTN","PXKMAIN2",29,0)
 ..S PXJ(2)=$P(PXJ(1),"^",2) ;SECOND PIECE OF 8TH IEN
"RTN","PXKMAIN2",30,0)
 ..S PXJ(3)=$P(PXJ(2),";",1) ;FIRST PIECE OF ABOVE
"RTN","PXKMAIN2",31,0)
 ..S PXJ(4)=$P(PXJ(1),"^",4) ;TO
"RTN","PXKMAIN2",32,0)
 ..S PXKDONE=$O(^PXD(811.1,"AA",PXJ(3),""_PXJ(4)_"",1,0))
"RTN","PXKMAIN2",33,0)
 ..S:PXKDONE="" PXKDONE=0  I '$D(PXKPXD($G(PXKDONE))) D POP
"RTN","PXKMAIN2",34,0)
 I (PXKFGDE=1) D
"RTN","PXKMAIN2",35,0)
 .I $D(^PXD(811.1,"AA",PXKBV(0,1),""_PXKCAT_"",1)) D
"RTN","PXKMAIN2",36,0)
 ..S PXKDONE=$O(^PXD(811.1,"AA",PXKBV(0,1),""_PXKCAT_"",1,PXKDONE))
"RTN","PXKMAIN2",37,0)
 ..S PXJ(1)=$G(^PXD(811.1,PXKDONE,0)) ;8TH IEN
"RTN","PXKMAIN2",38,0)
 ..S PXJ(2)=$P(PXJ(1),"^",2) ;SECOND PIECE OF 8TH IEN
"RTN","PXKMAIN2",39,0)
 ..S PXJ(3)=$P(PXJ(2),";",1) ;FIRST PIECE OF ABOVE
"RTN","PXKMAIN2",40,0)
 ..S PXJ(4)=$P(PXJ(1),"^",4) ;TO
"RTN","PXKMAIN2",41,0)
 ..S PXKDONE=$O(^PXD(811.1,"AA",PXJ(3),""_PXJ(4)_"",1,0))
"RTN","PXKMAIN2",42,0)
 ..S:PXKDONE="" PXKDONE=0  I '$D(PXKPXD($G(PXKDONE))) D POP
"RTN","PXKMAIN2",43,0)
 K PXKDONE
"RTN","PXKMAIN2",44,0)
 Q
"RTN","PXKMAIN2",45,0)
 ;
"RTN","PXKMAIN2",46,0)
POP ;Population of more than one v file using PCE CODE MAPPING file 811.1
"RTN","PXKMAIN2",47,0)
 ;
"RTN","PXKMAIN2",48,0)
 ;N PXKPXD
"RTN","PXKMAIN2",49,0)
 N PXKROU,PXKIN,PXKX,PXKXX,PXKDIEN,PXKTO
"RTN","PXKMAIN2",50,0)
 S PXKIN=$S(PXKFGAD=1:PXKAV(0,1),PXKFGDE=1:PXKBV(0,1),1:"")
"RTN","PXKMAIN2",51,0)
 S PXKDIEN=0 F  S PXKDIEN=$O(^PXD(811.1,"AA",PXKIN,PXKCAT,1,PXKDIEN)) Q:PXKDIEN=""  D
"RTN","PXKMAIN2",52,0)
 .S PXKPXD(PXKDIEN)=$G(^PXD(811.1,PXKDIEN,0))
"RTN","PXKMAIN2",53,0)
 S (PXKX,PXKXX)=0 F  S PXKX=$O(PXKPXD(PXKX)) Q:PXKX=""  S PXKXX=PXKXX+.01 D
"RTN","PXKMAIN2",54,0)
 .I TMPPX[("^"_PXKX_"^") Q
"RTN","PXKMAIN2",55,0)
 .S PXKTO=$P(PXKPXD(PXKX),"^",4)
"RTN","PXKMAIN2",56,0)
 .S PXKROU=$P(PXKPXD(PXKX),"^",3)_"^PXKF"_PXKTO_"1" D @PXKROU
"RTN","PXKMAIN2",57,0)
 .S TMPPX=TMPPX_PXKX_"^"
"RTN","PXKMAIN2",58,0)
 S PXKNORG("SOR")=$G(^TMP("PXK",$J,"SOR"))
"RTN","PXKMAIN2",59,0)
 S PXKNORG("VSTIEN")=$G(^TMP("PXK",$J,"VST",1,"IEN"))
"RTN","PXKMAIN2",60,0)
 Q
"RTN","PXKMAIN2",61,0)
 ;
"RTN","PXKMAIN2",62,0)
 ;
"RTN","PXKMAIN2",63,0)
SPEC2 ;
"RTN","PXKMAIN2",64,0)
 ; Populates V CPT and V POV files based off Immunization and
"RTN","PXKMAIN2",65,0)
 ; Skin Test Coding System mappings.
"RTN","PXKMAIN2",66,0)
 ;
"RTN","PXKMAIN2",67,0)
 ; As of PX*1*215, this entry point replaces SPEC.
"RTN","PXKMAIN2",68,0)
 ; We now use the Coding System multiple instead of the PCE Code Mapping file.
"RTN","PXKMAIN2",69,0)
 ;
"RTN","PXKMAIN2",70,0)
 N PXCIEN,PXCODE,PXCODESYS,PXCOUNT,PXCSIEN,PXFROMENTRY,PXGLBL,PXKROU,PXKX,PXKXX,PXVISIT,PXVSC
"RTN","PXKMAIN2",71,0)
 ;
"RTN","PXKMAIN2",72,0)
 I PXKFGED=1 Q
"RTN","PXKMAIN2",73,0)
 ;
"RTN","PXKMAIN2",74,0)
 S PXFROMENTRY=$S(PXKFGAD=1:PXKAV(0,1),PXKFGDE=1:PXKBV(0,1),1:"0")
"RTN","PXKMAIN2",75,0)
 I 'PXFROMENTRY Q
"RTN","PXKMAIN2",76,0)
 ;
"RTN","PXKMAIN2",77,0)
 I PXKCAT="IMM" S PXGLBL="^AUTTIMM("_PXFROMENTRY_")"
"RTN","PXKMAIN2",78,0)
 I PXKCAT="SK" S PXGLBL="^AUTTSK("_PXFROMENTRY_")"
"RTN","PXKMAIN2",79,0)
 ; Only file codes from IMM/SK -> V CPT and V POV
"RTN","PXKMAIN2",80,0)
 I $G(PXGLBL)="" Q
"RTN","PXKMAIN2",81,0)
 ;
"RTN","PXKMAIN2",82,0)
 ; Only file for VA-Administered (non-historical) entries
"RTN","PXKMAIN2",83,0)
 S PXVISIT=$G(^TMP("PXK",$J,"VST",1,"IEN"))
"RTN","PXKMAIN2",84,0)
 S PXVSC=$P($G(^AUPNVSIT(+PXVISIT,0)),U,7)
"RTN","PXKMAIN2",85,0)
 I "AHISORD"'[PXVSC Q
"RTN","PXKMAIN2",86,0)
 ;
"RTN","PXKMAIN2",87,0)
 F PXCODESYS="CPT","10D" D
"RTN","PXKMAIN2",88,0)
 . S PXCSIEN=$O(@PXGLBL@(3,"B",PXCODESYS,0))
"RTN","PXKMAIN2",89,0)
 . I 'PXCSIEN Q
"RTN","PXKMAIN2",90,0)
 . ;
"RTN","PXKMAIN2",91,0)
 . S PXCODE=""
"RTN","PXKMAIN2",92,0)
 . S PXCOUNT=0
"RTN","PXKMAIN2",93,0)
 . S PXCIEN=0
"RTN","PXKMAIN2",94,0)
 . F  S PXCIEN=$O(@PXGLBL@(3,PXCSIEN,1,PXCIEN)) Q:'PXCIEN  D
"RTN","PXKMAIN2",95,0)
 . . S PXCODE=$P($G(@PXGLBL@(3,PXCSIEN,1,PXCIEN,0)),U,1)
"RTN","PXKMAIN2",96,0)
 . . S PXCOUNT=PXCOUNT+1
"RTN","PXKMAIN2",97,0)
 . ;
"RTN","PXKMAIN2",98,0)
 . ; Only file, when there is one code mapped to the IMM/SK entry
"RTN","PXKMAIN2",99,0)
 . I PXCOUNT'=1 Q
"RTN","PXKMAIN2",100,0)
 . ;
"RTN","PXKMAIN2",101,0)
 . I PXCODESYS="CPT" S PXCODE=$$CODEN^ICPTCOD(PXCODE)
"RTN","PXKMAIN2",102,0)
 . I PXCODESYS="10D" S PXCODE=+$$CODEN^ICDEX(PXCODE,80) ;IA 5747
"RTN","PXKMAIN2",103,0)
 . I PXCODE'>0 Q
"RTN","PXKMAIN2",104,0)
 . ;
"RTN","PXKMAIN2",105,0)
 . S PXKX=($O(PXKPXD(""),-1))+1
"RTN","PXKMAIN2",106,0)
 . S PXKPXD(PXKX)=PXFROMENTRY_";"_$S(PXKCAT="IMM":"AUTTIMM(",1:"AUTTSK(")
"RTN","PXKMAIN2",107,0)
 . S PXKPXD(PXKX)=PXKPXD(PXKX)_U_PXCODE_";"_$S(PXCODESYS="CPT":"ICPT(",1:"ICD9(")
"RTN","PXKMAIN2",108,0)
 . S PXKPXD(PXKX)=PXKPXD(PXKX)_U_PXKCAT_U_PXCODESYS_U_"1"
"RTN","PXKMAIN2",109,0)
 . S PXKXX=PXKX*.01
"RTN","PXKMAIN2",110,0)
 . ;
"RTN","PXKMAIN2",111,0)
 . S PXKROU=PXKCAT_"^PXKF"_$S(PXCODESYS="CPT":"CPT",1:"POV")_"1"
"RTN","PXKMAIN2",112,0)
 . D @PXKROU
"RTN","PXKMAIN2",113,0)
 . ;
"RTN","PXKMAIN2",114,0)
 . S PXKNORG("SOR")=$G(^TMP("PXK",$J,"SOR"))
"RTN","PXKMAIN2",115,0)
 . S PXKNORG("VSTIEN")=$G(^TMP("PXK",$J,"VST",1,"IEN"))
"RTN","PXKMAIN2",116,0)
 ;
"RTN","PXKMAIN2",117,0)
 Q
"RTN","PXKMAIN2",118,0)
 ;
"RTN","PXKMAIN2",119,0)
 ;
"RTN","PXKMAIN2",120,0)
RECALL ; Recall PXKMAIN to populate special circumstances
"RTN","PXKMAIN2",121,0)
 D EVENT^PXKMAIN K ^TMP("PXK",$J)
"RTN","PXKMAIN2",122,0)
 S PXKREF="^TMP(""PXKSAVE"",$J)"
"RTN","PXKMAIN2",123,0)
 F  S PXKREF=$Q(@PXKREF) Q:$P(PXKREF,",",1)'["PXKSAVE"  Q:$P(PXKREF,",",2)'[$J  Q:PXKREF=""  S PXKSAVE=PXKREF D
"RTN","PXKMAIN2",124,0)
 .S $P(PXKSAVE,"""",2)="PXK" S @PXKSAVE=$G(@PXKREF)
"RTN","PXKMAIN2",125,0)
 S ^TMP("PXK",$J,"SOR")=$G(PXKNORG("SOR"))
"RTN","PXKMAIN2",126,0)
 S ^TMP("PXK",$J,"VST",1,"IEN")=$G(PXKNORG("VSTIEN"))
"RTN","PXKMAIN2",127,0)
 K ^TMP("PXKSAVE",$J),PXKNORG
"RTN","PXKMAIN2",128,0)
 D EN1^PXKMAIN,EVENT^PXKMAIN
"RTN","PXKMAIN2",129,0)
 Q
"RTN","PXKMAIN2",130,0)
 ;
"RTN","PXKMAIN2",131,0)
 ;
"RTN","PXKMAIN2",132,0)
PRVTYPE ;---POPULATE PROVIDER TYPE
"RTN","PXKMAIN2",133,0)
 ;
"RTN","PXKMAIN2",134,0)
 ;--**
"RTN","PXKMAIN2",135,0)
 I '$D(^TMP("PXK",$J,"PRV")) Q
"RTN","PXKMAIN2",136,0)
 I '$L($T(GET^XUA4A72)) Q
"RTN","PXKMAIN2",137,0)
 N PXKPSUB,PXKPRV,PXKDT,NOD0,TYPE
"RTN","PXKMAIN2",138,0)
 S PXKPSUB=0 F  S PXKPSUB=$O(^TMP("PXK",$J,"PRV",PXKPSUB)) Q:PXKPSUB=""  D
"RTN","PXKMAIN2",139,0)
 .S NOD0=$G(^TMP("PXK",$J,"PRV",PXKPSUB,0,"AFTER"))
"RTN","PXKMAIN2",140,0)
 .S PXKPRV=$P(NOD0,"^",1)
"RTN","PXKMAIN2",141,0)
 .I '$G(PXKPRV) Q
"RTN","PXKMAIN2",142,0)
 .S PXKDT=+$P($G(^AUPNVSIT($G(^TMP("PXK",$J,"VST",1,"IEN")),0)),"^",1)
"RTN","PXKMAIN2",143,0)
 .;--** ADD FUNCTION
"RTN","PXKMAIN2",144,0)
 .S TYPE=+$$GET^XUA4A72($G(PXKPRV),+$P($G(PXKDT),".")) Q:TYPE<1
"RTN","PXKMAIN2",145,0)
 .I $P(NOD0,"^",6)']"" S $P(NOD0,"^",6)=TYPE
"RTN","PXKMAIN2",146,0)
 .S ^TMP("PXK",$J,"PRV",PXKPSUB,0,"AFTER")=NOD0
"RTN","PXKMAIN2",147,0)
 Q
"RTN","PXPXRM")
0^5^B125590932
"RTN","PXPXRM",1,0)
PXPXRM ;SLC/PKR - APIs for Clinical Reminder indexes. ;03/31/16  15:08
"RTN","PXPXRM",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**119,199,210,215**;Aug 12, 1996;Build 10
"RTN","PXPXRM",3,0)
 ;
"RTN","PXPXRM",4,0)
 ; Reference to CODEC^ICDEX supported by ICR #5747
"RTN","PXPXRM",5,0)
 ; Reference to CSI^ICDEX supported by ICR #5747
"RTN","PXPXRM",6,0)
 ; Reference to SINFO^ICDEX supported by ICR #5747
"RTN","PXPXRM",7,0)
 ; Reference to NAME in file .85 is supported by ICR #6062
"RTN","PXPXRM",8,0)
 ;
"RTN","PXPXRM",9,0)
 Q
"RTN","PXPXRM",10,0)
 ;===============================================================
"RTN","PXPXRM",11,0)
KVFILE(FILENUM,X,DA) ;Delete indexes for a regular V File.
"RTN","PXPXRM",12,0)
 N CVX,VDATE,VISIT
"RTN","PXPXRM",13,0)
 S VISIT=$G(^AUPNVSIT(X(3),0))
"RTN","PXPXRM",14,0)
 I VISIT="" Q
"RTN","PXPXRM",15,0)
 S VDATE=$P(VISIT,U,1)
"RTN","PXPXRM",16,0)
 ;
"RTN","PXPXRM",17,0)
 I FILENUM=9000010.11 D  ; if V IMMUNIZATION: kill CVX index; and use Event DT, if available
"RTN","PXPXRM",18,0)
 . I $G(X(4)) S VDATE=X(4)
"RTN","PXPXRM",19,0)
 . S CVX=$P($G(^AUTTIMM(X(1),0)),U,3)
"RTN","PXPXRM",20,0)
 . I CVX'="" D
"RTN","PXPXRM",21,0)
 . . K ^PXRMINDX(FILENUM,"CVX","IP",CVX,X(2),VDATE,DA)
"RTN","PXPXRM",22,0)
 . . K ^PXRMINDX(FILENUM,"CVX","PI",X(2),CVX,VDATE,DA)
"RTN","PXPXRM",23,0)
 ;
"RTN","PXPXRM",24,0)
 K ^PXRMINDX(FILENUM,"IP",X(1),X(2),VDATE,DA)
"RTN","PXPXRM",25,0)
 K ^PXRMINDX(FILENUM,"PI",X(2),X(1),VDATE,DA)
"RTN","PXPXRM",26,0)
 Q
"RTN","PXPXRM",27,0)
 ;
"RTN","PXPXRM",28,0)
 ;===============================================================
"RTN","PXPXRM",29,0)
KVFILEC(FILENUM,X,DA) ;Delete indexes for V Files with coded entries.
"RTN","PXPXRM",30,0)
 ; FILENUM = file number, e.g. 9000010.07
"RTN","PXPXRM",31,0)
 ;       X = Array of fields
"RTN","PXPXRM",32,0)
 ;           X(1) = Item pointer:  Dx for V POV, CPT for V CPT
"RTN","PXPXRM",33,0)
 ;           X(2) = PATIENT NAME (DFN)
"RTN","PXPXRM",34,0)
 ;           X(3) = VISIT (ptr to 9000010)
"RTN","PXPXRM",35,0)
 ;           X(4) = PRIMARY/SECONDARY for V POV
"RTN","PXPXRM",36,0)
 ;               or PRINCIPAL PROCEDURE FOR V CPT
"RTN","PXPXRM",37,0)
 ;      DA = IEN into FILENUM file
"RTN","PXPXRM",38,0)
 N CODE,CTYPE,PXCSYS,VDATE,VISIT
"RTN","PXPXRM",39,0)
 S VISIT=$G(^AUPNVSIT(X(3),0)) ; get Visit zero node
"RTN","PXPXRM",40,0)
 I VISIT="" Q  ; if Visit not found, bail out
"RTN","PXPXRM",41,0)
 S CTYPE=$S(X(4)="":"U",1:X(4)) ; U if blank otherwise use value passed in
"RTN","PXPXRM",42,0)
 S VDATE=$P(VISIT,U,1) ; get Visit Date/Time from 1st piece of zero node
"RTN","PXPXRM",43,0)
 S PXCSYS="ICD"
"RTN","PXPXRM",44,0)
 I FILENUM=9000010.07 D  ; if V POV get Coding System type
"RTN","PXPXRM",45,0)
 . S PXCSYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,X(1))),U,3) ; coding system abbreviation
"RTN","PXPXRM",46,0)
 I PXCSYS'="ICD" D KVFILEV Q  ; if not ICD-9, use alternate format and Quit
"RTN","PXPXRM",47,0)
 ; the following is the original format used for V CPT and ICD-9 diagnoses
"RTN","PXPXRM",48,0)
 K ^PXRMINDX(FILENUM,"IPP",X(1),CTYPE,X(2),VDATE,DA) ; Kill the "IPP" node
"RTN","PXPXRM",49,0)
 K ^PXRMINDX(FILENUM,"PPI",X(2),CTYPE,X(1),VDATE,DA) ; Kill the "PPI" node
"RTN","PXPXRM",50,0)
 Q
"RTN","PXPXRM",51,0)
 ;
"RTN","PXPXRM",52,0)
 ;===============================================================
"RTN","PXPXRM",53,0)
KVFILEV ; alternate index format for ICD-10 and higher, added with PX*1.0*199
"RTN","PXPXRM",54,0)
 S CODE=$$CODEC^ICDEX(80,X(1)) ; convert IEN to Dx code
"RTN","PXPXRM",55,0)
 K ^PXRMINDX(FILENUM,PXCSYS,"IPP",CODE,CTYPE,X(2),VDATE,DA)
"RTN","PXPXRM",56,0)
 K ^PXRMINDX(FILENUM,PXCSYS,"PPI",X(2),CTYPE,CODE,VDATE,DA)
"RTN","PXPXRM",57,0)
 Q
"RTN","PXPXRM",58,0)
 ;
"RTN","PXPXRM",59,0)
 ;===============================================================
"RTN","PXPXRM",60,0)
SVFILE(FILENUM,X,DA) ;Set indexes for a regular V File.
"RTN","PXPXRM",61,0)
 ;X(1)=ITEM, X(2)=DFN, X(3)=VISIT.
"RTN","PXPXRM",62,0)
 ; for V IMMUNIZATION X(4)=EVENT DATE AND TIME
"RTN","PXPXRM",63,0)
 N CVX,VDATE,VISIT
"RTN","PXPXRM",64,0)
 S VISIT=$G(^AUPNVSIT(X(3),0))
"RTN","PXPXRM",65,0)
 I VISIT="" Q
"RTN","PXPXRM",66,0)
 S VDATE=$P(VISIT,U,1)
"RTN","PXPXRM",67,0)
 ;
"RTN","PXPXRM",68,0)
 I FILENUM=9000010.11 D  ; if V IMMUNIZATION: set CVX index; and use Event DT, if available
"RTN","PXPXRM",69,0)
 . I $G(X(4)) S VDATE=X(4)
"RTN","PXPXRM",70,0)
 . S CVX=$P($G(^AUTTIMM(X(1),0)),U,3)
"RTN","PXPXRM",71,0)
 . I CVX'="" D
"RTN","PXPXRM",72,0)
 . . S ^PXRMINDX(FILENUM,"CVX","IP",CVX,X(2),VDATE,DA)=""
"RTN","PXPXRM",73,0)
 . . S ^PXRMINDX(FILENUM,"CVX","PI",X(2),CVX,VDATE,DA)=""
"RTN","PXPXRM",74,0)
 ;
"RTN","PXPXRM",75,0)
 S ^PXRMINDX(FILENUM,"IP",X(1),X(2),VDATE,DA)=""
"RTN","PXPXRM",76,0)
 S ^PXRMINDX(FILENUM,"PI",X(2),X(1),VDATE,DA)=""
"RTN","PXPXRM",77,0)
 Q
"RTN","PXPXRM",78,0)
 ;
"RTN","PXPXRM",79,0)
 ;===============================================================
"RTN","PXPXRM",80,0)
SVFILEC(FILENUM,X,DA) ;Set indexes for V Files with coded entries. These
"RTN","PXPXRM",81,0)
 ;are V CPT and VPOV
"RTN","PXPXRM",82,0)
 ;X(1)=ITEM, X(2)=DFN, X(3)=VISIT,
"RTN","PXPXRM",83,0)
 ; for V CPT X(4)=PRINCIPAL PROCEDURE
"RTN","PXPXRM",84,0)
 ; for V POV X(4)=PRIMARY/SECONDARY
"RTN","PXPXRM",85,0)
 N CODE,CTYPE,PXCSYS,VDATE,VISIT
"RTN","PXPXRM",86,0)
 S VISIT=$G(^AUPNVSIT(X(3),0))
"RTN","PXPXRM",87,0)
 I VISIT="" Q
"RTN","PXPXRM",88,0)
 S CTYPE=$S(X(4)="":"U",1:X(4))
"RTN","PXPXRM",89,0)
 S VDATE=$P(VISIT,U,1)
"RTN","PXPXRM",90,0)
 S PXCSYS="ICD"
"RTN","PXPXRM",91,0)
 I FILENUM=9000010.07 D  ; if V POV get Coding System type
"RTN","PXPXRM",92,0)
 . S PXCSYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,X(1))),U,3) ; coding system abbreviation
"RTN","PXPXRM",93,0)
 I PXCSYS'="ICD" D SVFILEV Q  ; if not ICD-9 use alternate format and Quit
"RTN","PXPXRM",94,0)
 ; the following is the original format used for V CPT and ICD-9 diagnoses
"RTN","PXPXRM",95,0)
 S ^PXRMINDX(FILENUM,"IPP",X(1),CTYPE,X(2),VDATE,DA)=""
"RTN","PXPXRM",96,0)
 S ^PXRMINDX(FILENUM,"PPI",X(2),CTYPE,X(1),VDATE,DA)=""
"RTN","PXPXRM",97,0)
 Q
"RTN","PXPXRM",98,0)
 ;
"RTN","PXPXRM",99,0)
 ;===============================================================
"RTN","PXPXRM",100,0)
SVFILEV ; alternate index format for ICD-10 and higher, added with PX*1.0*199
"RTN","PXPXRM",101,0)
 S CODE=$$CODEC^ICDEX(80,X(1)) ; convert IEN to Dx code
"RTN","PXPXRM",102,0)
 S ^PXRMINDX(FILENUM,PXCSYS,"IPP",CODE,CTYPE,X(2),VDATE,DA)=""
"RTN","PXPXRM",103,0)
 S ^PXRMINDX(FILENUM,PXCSYS,"PPI",X(2),CTYPE,CODE,VDATE,DA)=""
"RTN","PXPXRM",104,0)
 Q
"RTN","PXPXRM",105,0)
 ;
"RTN","PXPXRM",106,0)
 ;===============================================================
"RTN","PXPXRM",107,0)
VICRFILE(X,DA,PXACTION) ;Set/Kill indexes for V Imm Contra/Refusal Events.
"RTN","PXPXRM",108,0)
 ;
"RTN","PXPXRM",109,0)
 ; Inputs:
"RTN","PXPXRM",110,0)
 ;        X - X(1)=Contra/Refusal, X(2)=DFN, X(3)=Visit
"RTN","PXPXRM",111,0)
 ;            X(4)=Immunization, X(5)=Event Date and Time
"RTN","PXPXRM",112,0)
 ;            X(6)=Warn Until Date
"RTN","PXPXRM",113,0)
 ;       DA - V Imm Contra/Refusal Events IEN
"RTN","PXPXRM",114,0)
 ; PXACTION - "S": Set index
"RTN","PXPXRM",115,0)
 ;            "K": Kill index
"RTN","PXPXRM",116,0)
 ;
"RTN","PXPXRM",117,0)
 N FILENUM,VISIT,VDATE,START,STOP
"RTN","PXPXRM",118,0)
 ;
"RTN","PXPXRM",119,0)
 S FILENUM=9000010.707
"RTN","PXPXRM",120,0)
 S VISIT=$G(^AUPNVSIT(X(3),0))
"RTN","PXPXRM",121,0)
 I VISIT="" Q
"RTN","PXPXRM",122,0)
 S VDATE=$P(VISIT,U,1)
"RTN","PXPXRM",123,0)
 ;
"RTN","PXPXRM",124,0)
 S START=VDATE
"RTN","PXPXRM",125,0)
 I $G(X(5)) S START=X(5)
"RTN","PXPXRM",126,0)
 ;
"RTN","PXPXRM",127,0)
 S STOP=9999999
"RTN","PXPXRM",128,0)
 I $G(X(6)) S STOP=X(6)
"RTN","PXPXRM",129,0)
 ;
"RTN","PXPXRM",130,0)
 I PXACTION="S" D
"RTN","PXPXRM",131,0)
 . S ^PXRMINDX(FILENUM,"ICP",X(4),X(1),X(2),START,STOP,DA)=""
"RTN","PXPXRM",132,0)
 . S ^PXRMINDX(FILENUM,"PIC",X(2),X(4),X(1),START,STOP,DA)=""
"RTN","PXPXRM",133,0)
 . S ^PXRMINDX(FILENUM,"CIP",X(1),X(4),X(2),START,STOP,DA)=""
"RTN","PXPXRM",134,0)
 . S ^PXRMINDX(FILENUM,"PCI",X(2),X(1),X(4),START,STOP,DA)=""
"RTN","PXPXRM",135,0)
 I PXACTION="K" D
"RTN","PXPXRM",136,0)
 . K ^PXRMINDX(FILENUM,"ICP",X(4),X(1),X(2),START,STOP,DA)
"RTN","PXPXRM",137,0)
 . K ^PXRMINDX(FILENUM,"PIC",X(2),X(4),X(1),START,STOP,DA)
"RTN","PXPXRM",138,0)
 . K ^PXRMINDX(FILENUM,"CIP",X(1),X(4),X(2),START,STOP,DA)
"RTN","PXPXRM",139,0)
 . K ^PXRMINDX(FILENUM,"PCI",X(2),X(1),X(4),START,STOP,DA)
"RTN","PXPXRM",140,0)
 Q
"RTN","PXPXRM",141,0)
 ;
"RTN","PXPXRM",142,0)
 ;===============================================================
"RTN","PXPXRM",143,0)
UPDCVX(IMM,CVXOLD,CVXNEW) ;
"RTN","PXPXRM",144,0)
 ; Update CVX Index on V Immunization file
"RTN","PXPXRM",145,0)
 ; Called from ACR cross-reference on Immunization file
"RTN","PXPXRM",146,0)
 N DA,PXDESC,PXRTN,PXTASK,PXVAR,PXVOTH,X,X1,X2
"RTN","PXPXRM",147,0)
 I CVXOLD=CVXNEW Q
"RTN","PXPXRM",148,0)
 S PXRTN="UPDCVXT^PXPXRM"
"RTN","PXPXRM",149,0)
 S PXDESC="Clinical Reminders CVX index update for V IMMUNIZATION"
"RTN","PXPXRM",150,0)
 S PXVAR="IMM;CVXOLD;CVXNEW"
"RTN","PXPXRM",151,0)
 S PXVOTH("ZTDTH")=$$NOW^XLFDT
"RTN","PXPXRM",152,0)
 S PXTASK=$$NODEV^XUTMDEVQ(PXRTN,PXDESC,PXVAR,.PXVOTH)
"RTN","PXPXRM",153,0)
 I PXTASK=-1 D UPDCVXT^PXPXRM
"RTN","PXPXRM",154,0)
 Q
"RTN","PXPXRM",155,0)
 ;
"RTN","PXPXRM",156,0)
 ;===============================================================
"RTN","PXPXRM",157,0)
UPDCVXT ;Tasked from UPDCVX.
"RTN","PXPXRM",158,0)
 ;Variables IMM, CVXOLD, and CVXNEW passed in via task
"RTN","PXPXRM",159,0)
 S ZTREQ="@"
"RTN","PXPXRM",160,0)
 N DATE,DFN,EDATE,VIMM,VISIT
"RTN","PXPXRM",161,0)
 S VIMM=0
"RTN","PXPXRM",162,0)
 F  S VIMM=$O(^AUPNVIMM("B",IMM,VIMM)) Q:'VIMM  D
"RTN","PXPXRM",163,0)
 . S DFN=$P($G(^AUPNVIMM(VIMM,0)),U,2)
"RTN","PXPXRM",164,0)
 . I 'DFN Q
"RTN","PXPXRM",165,0)
 . S VISIT=$P($G(^AUPNVIMM(VIMM,0)),U,3)
"RTN","PXPXRM",166,0)
 . S VISIT=$G(^AUPNVSIT(+VISIT,0))
"RTN","PXPXRM",167,0)
 . I VISIT="" Q
"RTN","PXPXRM",168,0)
 . S DATE=$P(VISIT,U,1)
"RTN","PXPXRM",169,0)
 . S EDATE=$P($G(^AUPNVIMM(VIMM,12)),U,1)
"RTN","PXPXRM",170,0)
 . I EDATE S DATE=EDATE
"RTN","PXPXRM",171,0)
 . I 'DATE Q
"RTN","PXPXRM",172,0)
 . I CVXOLD'="" D
"RTN","PXPXRM",173,0)
 . . K ^PXRMINDX(9000010.11,"CVX","IP",CVXOLD,DFN,DATE,VIMM)
"RTN","PXPXRM",174,0)
 . . K ^PXRMINDX(9000010.11,"CVX","PI",DFN,CVXOLD,DATE,VIMM)
"RTN","PXPXRM",175,0)
 . I CVXNEW'="" D
"RTN","PXPXRM",176,0)
 . . S ^PXRMINDX(9000010.11,"CVX","IP",CVXNEW,DFN,DATE,VIMM)=""
"RTN","PXPXRM",177,0)
 . . S ^PXRMINDX(9000010.11,"CVX","PI",DFN,CVXNEW,DATE,VIMM)=""
"RTN","PXPXRM",178,0)
 Q
"RTN","PXPXRM",179,0)
 ;
"RTN","PXPXRM",180,0)
 ;===============================================================
"RTN","PXPXRM",181,0)
VCPT(DA,DATA) ;Return data for a specified V CPT entry.
"RTN","PXPXRM",182,0)
 N TEMP
"RTN","PXPXRM",183,0)
 S TEMP=^AUPNVCPT(DA,0)
"RTN","PXPXRM",184,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",185,0)
 S DATA("PROVIDER NARRATIVE")=$P(TEMP,U,4)
"RTN","PXPXRM",186,0)
 S DATA("DIAGNOSIS")=$P(TEMP,U,5)
"RTN","PXPXRM",187,0)
 S DATA("PRINCIPAL PROCEDURE")=$P(TEMP,U,7)
"RTN","PXPXRM",188,0)
 S DATA("QUANTITY")=$P(TEMP,U,16)
"RTN","PXPXRM",189,0)
 S DATA("COMMENTS")=$G(^AUPNVCPT(DA,811))
"RTN","PXPXRM",190,0)
 Q
"RTN","PXPXRM",191,0)
 ;
"RTN","PXPXRM",192,0)
 ;===============================================================
"RTN","PXPXRM",193,0)
VHF(DA,DATA) ;Return data for a specified V Health Factor entry.
"RTN","PXPXRM",194,0)
 N TEMP
"RTN","PXPXRM",195,0)
 S TEMP=^AUPNVHF(DA,0)
"RTN","PXPXRM",196,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",197,0)
 S (DATA("LEVEL/SEVERITY"),DATA("VALUE"))=$P(TEMP,U,4)
"RTN","PXPXRM",198,0)
 S DATA("COMMENTS")=$G(^AUPNVHF(DA,811))
"RTN","PXPXRM",199,0)
 Q
"RTN","PXPXRM",200,0)
 ;
"RTN","PXPXRM",201,0)
 ;===============================================================
"RTN","PXPXRM",202,0)
VIMM(DA,DATA) ;Return data, for a specified V Immunization entry.
"RTN","PXPXRM",203,0)
 N PXCS,PXCSIEN,PXCDIEN,PXCODE,PXFILE,PXIEN,PXTEMP,PXVIMM,PXVISIT,PXX
"RTN","PXPXRM",204,0)
 ;
"RTN","PXPXRM",205,0)
 S PXFILE=9000010.11
"RTN","PXPXRM",206,0)
 ;
"RTN","PXPXRM",207,0)
 S PXTEMP=^AUPNVIMM(DA,0)
"RTN","PXPXRM",208,0)
 S PXVIMM=$P(PXTEMP,U)
"RTN","PXPXRM",209,0)
 S PXVISIT=$P(PXTEMP,U,3)
"RTN","PXPXRM",210,0)
 S DATA("VISIT")=PXVISIT
"RTN","PXPXRM",211,0)
 S (DATA("SERIES"),DATA("VALUE"))=$P(PXTEMP,U,4)
"RTN","PXPXRM",212,0)
 S DATA("REACTION")=$P(PXTEMP,U,6)
"RTN","PXPXRM",213,0)
 S DATA("CONTRAINDICATED")=$P(PXTEMP,U,7)
"RTN","PXPXRM",214,0)
 S DATA("COMMENTS")=$G(^AUPNVIMM(DA,811))
"RTN","PXPXRM",215,0)
 ;
"RTN","PXPXRM",216,0)
 S PXTEMP=$G(^AUPNVSIT(+PXVISIT,0))
"RTN","PXPXRM",217,0)
 S DATA("VISIT DATE TIME")=$P(PXTEMP,U)
"RTN","PXPXRM",218,0)
 S PXX=$P(PXTEMP,U,22)
"RTN","PXPXRM",219,0)
 S DATA("LOCATION")=PXX_$S(PXX:(U_$P($G(^SC(+PXX,0)),U)),1:"")
"RTN","PXPXRM",220,0)
 S PXX=$P(PXTEMP,U,6)
"RTN","PXPXRM",221,0)
 S DATA("FACILITY")=PXX_$S(PXX:(U_$$NS^XUAF4(PXX)),1:"")
"RTN","PXPXRM",222,0)
 ;
"RTN","PXPXRM",223,0)
 S PXTEMP=$G(^AUPNVIMM(DA,12))
"RTN","PXPXRM",224,0)
 S DATA("EVENT DATE TIME")=$P(PXTEMP,U)
"RTN","PXPXRM",225,0)
 S PXX=$P(PXTEMP,U,2)
"RTN","PXPXRM",226,0)
 S DATA("ORDERING PROVIDER")=PXX_$S(PXX:(U_$P($G(^VA(200,+PXX,0)),U)),1:"")
"RTN","PXPXRM",227,0)
 S PXX=$P(PXTEMP,U,4)
"RTN","PXPXRM",228,0)
 S DATA("ENCOUNTER PROVIDER")=PXX_$S(PXX:(U_$P($G(^VA(200,+PXX,0)),U)),1:"")
"RTN","PXPXRM",229,0)
 S DATA("DATE RECORDED")=$P(PXTEMP,U,5)
"RTN","PXPXRM",230,0)
 S PXX=$P(PXTEMP,U,6)
"RTN","PXPXRM",231,0)
 S DATA("DOCUMENTER")=PXX_$S(PXX:(U_$P($G(^VA(200,+PXX,0)),U)),1:"")
"RTN","PXPXRM",232,0)
 S PXX=$P(PXTEMP,U,7)
"RTN","PXPXRM",233,0)
 S DATA("LOT NUMBER")=PXX_$S(PXX:(U_$P($G(^AUTTIML(+PXX,0)),U)),1:"")
"RTN","PXPXRM",234,0)
 S DATA("WARNING ACK")=$P(PXTEMP,U,20)
"RTN","PXPXRM",235,0)
 ;
"RTN","PXPXRM",236,0)
 S PXTEMP=$G(^AUTTIML(+$P(PXTEMP,U,7),0))
"RTN","PXPXRM",237,0)
 S PXX=$P(PXTEMP,U,2)
"RTN","PXPXRM",238,0)
 S DATA("MANUFACTURER")=PXX_$S(PXX:(U_$P($G(^AUTTIMAN(+PXX,0)),U)),1:"")
"RTN","PXPXRM",239,0)
 S DATA("EXPIRATION DATE")=$P(PXTEMP,U,9)
"RTN","PXPXRM",240,0)
 ;
"RTN","PXPXRM",241,0)
 S PXTEMP=$G(^AUPNVIMM(DA,13))
"RTN","PXPXRM",242,0)
 S PXX=$P(PXTEMP,U)
"RTN","PXPXRM",243,0)
 S DATA("INFO SOURCE")=PXX_$S(PXX:(U_$P($G(^PXV(920.1,+PXX,0)),U,2)_U_$P($G(^PXV(920.1,+PXX,0)),U)),1:"")
"RTN","PXPXRM",244,0)
 S PXX=$P(PXTEMP,U,2)
"RTN","PXPXRM",245,0)
 S DATA("ADMIN ROUTE")=PXX_$S(PXX:(U_$P($G(^PXV(920.2,+PXX,0)),U,2)_U_$P($G(^PXV(920.2,+PXX,0)),U)),1:"")
"RTN","PXPXRM",246,0)
 S PXX=$P(PXTEMP,U,3)
"RTN","PXPXRM",247,0)
 S DATA("ADMIN SITE")=PXX_$S(PXX:(U_$P($G(^PXV(920.3,+PXX,0)),U,2)_U_$P($G(^PXV(920.3,+PXX,0)),U)),1:"")
"RTN","PXPXRM",248,0)
 S DATA("DOSE")=$$EXTERNAL^DILFD(9000010.11,1312,"",$P(PXTEMP,U,12))
"RTN","PXPXRM",249,0)
 S DATA("DOSE UNITS")=$$EXTERNAL^DILFD(9000010.11,1313,"",$P(PXTEMP,U,13))
"RTN","PXPXRM",250,0)
 ;
"RTN","PXPXRM",251,0)
 S DATA("OVERRIDE REASON")=$G(^AUPNVIMM(DA,16))
"RTN","PXPXRM",252,0)
 ;
"RTN","PXPXRM",253,0)
 S PXTEMP=$G(^AUTTIMM(+PXVIMM,0))
"RTN","PXPXRM",254,0)
 S DATA("IMMUNIZATION")=PXVIMM_$S(PXVIMM:(U_$P(PXTEMP,U)),1:"")
"RTN","PXPXRM",255,0)
 S DATA("CVX")=$P(PXTEMP,U,3)
"RTN","PXPXRM",256,0)
 ;
"RTN","PXPXRM",257,0)
 S PXX=$P($G(^AUPNVIMM(DA,812)),U,3)
"RTN","PXPXRM",258,0)
 S DATA("DATA SOURCE")=PXX_$S(PXX:(U_$P($G(^PX(839.7,PXX,0)),U,1)),1:"")
"RTN","PXPXRM",259,0)
 ;
"RTN","PXPXRM",260,0)
 S PXIEN=0
"RTN","PXPXRM",261,0)
 F  S PXIEN=$O(^AUTTIMM(PXVIMM,7,PXIEN)) Q:'PXIEN  D
"RTN","PXPXRM",262,0)
 . S PXTEMP=$P($G(^AUTTIMM(PXVIMM,7,PXIEN,0)),U,1)
"RTN","PXPXRM",263,0)
 . I PXTEMP="" Q
"RTN","PXPXRM",264,0)
 . S DATA("VACCINE GROUP",PXIEN,0)=PXTEMP
"RTN","PXPXRM",265,0)
 ;
"RTN","PXPXRM",266,0)
 ;S DATA("CODES",Coding System Name)=Code 1 ^ Code 2 ^ ... Code x
"RTN","PXPXRM",267,0)
 S PXCSIEN=0
"RTN","PXPXRM",268,0)
 F  S PXCSIEN=$O(^AUTTIMM(PXVIMM,3,PXCSIEN)) Q:'PXCSIEN  D
"RTN","PXPXRM",269,0)
 . S PXCS=$P($G(^AUTTIMM(PXVIMM,3,PXCSIEN,0)),U,1)
"RTN","PXPXRM",270,0)
 . I PXCS="" Q
"RTN","PXPXRM",271,0)
 . S PXCDIEN=0
"RTN","PXPXRM",272,0)
 . F  S PXCDIEN=$O(^AUTTIMM(PXVIMM,3,PXCSIEN,1,PXCDIEN)) Q:'PXCDIEN  D
"RTN","PXPXRM",273,0)
 . . S PXCODE=$P($G(^AUTTIMM(PXVIMM,3,PXCSIEN,1,PXCDIEN,0)),U,1)
"RTN","PXPXRM",274,0)
 . . I PXCODE="" Q
"RTN","PXPXRM",275,0)
 . . I '$D(DATA("CODES",PXCS)) S DATA("CODES",PXCS)=PXCODE Q
"RTN","PXPXRM",276,0)
 . . S DATA("CODES",PXCS)=DATA("CODES",PXCS)_U_PXCODE
"RTN","PXPXRM",277,0)
 ;
"RTN","PXPXRM",278,0)
 ;DATA("VIS OFFERED",n,0)=IEN ^ Date Offered ^ Name ^ Edition Date ^ Language
"RTN","PXPXRM",279,0)
 S PXIEN=0
"RTN","PXPXRM",280,0)
 F  S PXIEN=$O(^AUPNVIMM(DA,2,PXIEN)) Q:'PXIEN  D
"RTN","PXPXRM",281,0)
 . S PXTEMP=$G(^AUPNVIMM(DA,2,PXIEN,0))
"RTN","PXPXRM",282,0)
 . I 'PXTEMP Q
"RTN","PXPXRM",283,0)
 . S DATA("VIS OFFERED",PXIEN,0)=$P(PXTEMP,U,1,2)
"RTN","PXPXRM",284,0)
 . S PXTEMP=$G(^AUTTIVIS(+PXTEMP,0))
"RTN","PXPXRM",285,0)
 . S DATA("VIS OFFERED",PXIEN,0)=DATA("VIS OFFERED",PXIEN,0)_U_$P(PXTEMP,U)_U_$P(PXTEMP,U,2)
"RTN","PXPXRM",286,0)
 . S PXX=$P(PXTEMP,U,4)
"RTN","PXPXRM",287,0)
 . I PXX S DATA("VIS OFFERED",PXIEN,0)=DATA("VIS OFFERED",PXIEN,0)_U_$$GET1^DIQ(.85,PXX_",","NAME")  ;ICR 6062
"RTN","PXPXRM",288,0)
 ;
"RTN","PXPXRM",289,0)
 ;DATA("REMARKS",n,0)=Free text
"RTN","PXPXRM",290,0)
 M DATA("REMARKS")=^AUPNVIMM(DA,11)
"RTN","PXPXRM",291,0)
 K DATA("REMARKS",0)
"RTN","PXPXRM",292,0)
 ;
"RTN","PXPXRM",293,0)
 Q
"RTN","PXPXRM",294,0)
 ;
"RTN","PXPXRM",295,0)
 ;===============================================================
"RTN","PXPXRM",296,0)
VPEDU(DA,DATA) ;Return data, for a specified V Patient ED entry.
"RTN","PXPXRM",297,0)
 N TEMP
"RTN","PXPXRM",298,0)
 S TEMP=^AUPNVPED(DA,0)
"RTN","PXPXRM",299,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",300,0)
 S (DATA("LEVEL OF UNDERSTANDING"),DATA("VALUE"))=$P(TEMP,U,6)
"RTN","PXPXRM",301,0)
 S DATA("COMMENTS")=$G(^AUPNVPED(DA,811))
"RTN","PXPXRM",302,0)
 Q
"RTN","PXPXRM",303,0)
 ;
"RTN","PXPXRM",304,0)
 ;===============================================================
"RTN","PXPXRM",305,0)
VPOV(DA,DATA) ;Return data for a specified V POV entry.
"RTN","PXPXRM",306,0)
 N TEMP
"RTN","PXPXRM",307,0)
 S TEMP=^AUPNVPOV(DA,0)
"RTN","PXPXRM",308,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",309,0)
 S DATA("PROVIDER NARRATIVE")=$P(TEMP,U,4)
"RTN","PXPXRM",310,0)
 S DATA("MODIFIER")=$P(TEMP,U,6)
"RTN","PXPXRM",311,0)
 S DATA("PRIMARY/SECONDARY")=$P(TEMP,U,12)
"RTN","PXPXRM",312,0)
 S DATA("DATE OF INJURY")=$P(TEMP,U,13)
"RTN","PXPXRM",313,0)
 S DATA("CLINICAL TERM")=$P(TEMP,U,15)
"RTN","PXPXRM",314,0)
 S DATA("PROBLEM LIST ENTRY")=$P(TEMP,U,16)
"RTN","PXPXRM",315,0)
 S DATA("COMMENTS")=$G(^AUPNVPOV(DA,811))
"RTN","PXPXRM",316,0)
 Q
"RTN","PXPXRM",317,0)
 ;
"RTN","PXPXRM",318,0)
 ;===============================================================
"RTN","PXPXRM",319,0)
VSKIN(DA,DATA) ;Return data for a specified V Skin Test entry.
"RTN","PXPXRM",320,0)
 N TEMP
"RTN","PXPXRM",321,0)
 S TEMP=^AUPNVSK(DA,0)
"RTN","PXPXRM",322,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",323,0)
 S (DATA("RESULTS"),DATA("VALUE"))=$P(TEMP,U,4)
"RTN","PXPXRM",324,0)
 S DATA("READING")=$P(TEMP,U,5)
"RTN","PXPXRM",325,0)
 S DATA("DATE READ")=$P(TEMP,U,6)
"RTN","PXPXRM",326,0)
 S DATA("COMMENTS")=$G(^AUPNVSK(DA,811))
"RTN","PXPXRM",327,0)
 Q
"RTN","PXPXRM",328,0)
 ;
"RTN","PXPXRM",329,0)
 ;===============================================================
"RTN","PXPXRM",330,0)
VXAM(DA,DATA) ;Return data, for a specified V Exam entry.
"RTN","PXPXRM",331,0)
 N TEMP
"RTN","PXPXRM",332,0)
 S TEMP=^AUPNVXAM(DA,0)
"RTN","PXPXRM",333,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",334,0)
 S (DATA("RESULT"),DATA("VALUE"))=$P(TEMP,U,4)
"RTN","PXPXRM",335,0)
 S DATA("COMMENTS")=$G(^AUPNVXAM(DA,811))
"RTN","PXPXRM",336,0)
 Q
"RTN","PXPXRM",337,0)
 ;
"RTN","PXPXRM",338,0)
 ;===============================================================
"RTN","PXPXRM",339,0)
VICR(DA,DATA) ;Return data, for a specified V Imm Contra/Refusal Events entry.
"RTN","PXPXRM",340,0)
 N PXFILE,PXX,TEMP
"RTN","PXPXRM",341,0)
 S TEMP=^AUPNVICR(DA,0)
"RTN","PXPXRM",342,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",343,0)
 S PXX=$P(TEMP,U,1),PXFILE=+$P(PXX,"(",2)
"RTN","PXPXRM",344,0)
 S DATA("CONTRA/REFUSAL")=PXX_U_$P($G(^PXV(PXFILE,+PXX,0)),U,1)
"RTN","PXPXRM",345,0)
 S PXX=$P(TEMP,U,4)
"RTN","PXPXRM",346,0)
 S DATA("IMMUN")=PXX_U_$P($G(^AUTTIMM(+PXX,0)),U,1)
"RTN","PXPXRM",347,0)
 S DATA("WARN UNTIL DATE")=$P(TEMP,U,5)
"RTN","PXPXRM",348,0)
 S DATA("D/T RECORDED")=$P(TEMP,U,6)
"RTN","PXPXRM",349,0)
 ;
"RTN","PXPXRM",350,0)
 S TEMP=$G(^AUPNVICR(DA,12))
"RTN","PXPXRM",351,0)
 S DATA("EVENT D/T")=$P(TEMP,U,1)
"RTN","PXPXRM",352,0)
 S PXX=$P(TEMP,U,4)
"RTN","PXPXRM",353,0)
 S DATA("ENC PROVIDER")=PXX_U_$P($G(^VA(200,+PXX,0)),U,1)
"RTN","PXPXRM",354,0)
 S DATA("COMMENTS")=$G(^AUPNVICR(DA,811))
"RTN","PXPXRM",355,0)
 Q
"RTN","PXPXRM",356,0)
 ;
"RTN","PXPXRMI1")
0^6^B104225670
"RTN","PXPXRMI1",1,0)
PXPXRMI1 ; SLC/PKR,SCK - Build indexes for the V files. ;03/14/16  09:49
"RTN","PXPXRMI1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**119,194,210,215**;Aug 12, 1996;Build 10
"RTN","PXPXRMI1",3,0)
 ;DBIA 4113 supports PXRMSXRM entry points.
"RTN","PXPXRMI1",4,0)
 ;DBIA 4114 supports setting and killing ^PXRMINDX
"RTN","PXPXRMI1",5,0)
 ;===============================================================
"RTN","PXPXRMI1",6,0)
VCPT ;Build the indexes for V CPT.
"RTN","PXPXRMI1",7,0)
 N CPT,DAS,DATE,DFN,DIFF,DONE,END,ENTRIES,ETEXT,GLOBAL,IND,NE,NERROR,PP
"RTN","PXPXRMI1",8,0)
 N START,TEMP,TENP,TEXT,VISIT
"RTN","PXPXRMI1",9,0)
 ;Don't leave any old stuff around.
"RTN","PXPXRMI1",10,0)
 K ^PXRMINDX(9000010.18)
"RTN","PXPXRMI1",11,0)
 S GLOBAL=$$GET1^DID(9000010.18,"","","GLOBAL NAME")
"RTN","PXPXRMI1",12,0)
 S ENTRIES=$P(^AUPNVCPT(0),U,4)
"RTN","PXPXRMI1",13,0)
 S TENP=ENTRIES/10
"RTN","PXPXRMI1",14,0)
 S TENP=+$P(TENP,".",1)
"RTN","PXPXRMI1",15,0)
 I TENP<1 S TENP=1
"RTN","PXPXRMI1",16,0)
 D BMES^XPDUTL("Building indexes for V CPT")
"RTN","PXPXRMI1",17,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","PXPXRMI1",18,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",19,0)
 S START=$H
"RTN","PXPXRMI1",20,0)
 S (DAS,DONE,IND,NE,NERROR)=0
"RTN","PXPXRMI1",21,0)
 F  S DAS=$O(^AUPNVCPT(DAS)) Q:DONE  D
"RTN","PXPXRMI1",22,0)
 . I +DAS=0 S DONE=1 Q
"RTN","PXPXRMI1",23,0)
 . I +DAS'=DAS D  Q
"RTN","PXPXRMI1",24,0)
 .. S DONE=1
"RTN","PXPXRMI1",25,0)
 .. S ETEXT="Bad ien: "_DAS_", cannot continue."
"RTN","PXPXRMI1",26,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",27,0)
 . S IND=IND+1
"RTN","PXPXRMI1",28,0)
 . I IND#TENP=0 D
"RTN","PXPXRMI1",29,0)
 .. S TEXT="Processing entry "_IND
"RTN","PXPXRMI1",30,0)
 .. D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",31,0)
 . I IND#10000=0 W "."
"RTN","PXPXRMI1",32,0)
 . S TEMP=^AUPNVCPT(DAS,0)
"RTN","PXPXRMI1",33,0)
 . S CPT=$P(TEMP,U,1)
"RTN","PXPXRMI1",34,0)
 . I CPT="" D  Q
"RTN","PXPXRMI1",35,0)
 .. S ETEXT=DAS_" missing CPT"
"RTN","PXPXRMI1",36,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",37,0)
 . ;I '$D(^ICPT(CPT)) D  Q
"RTN","PXPXRMI1",38,0)
 . I $$CPT^ICPTCOD(CPT)<0 D  Q
"RTN","PXPXRMI1",39,0)
 .. S ETEXT=DAS_" invalid CPT"
"RTN","PXPXRMI1",40,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",41,0)
 . S DFN=$P(TEMP,U,2)
"RTN","PXPXRMI1",42,0)
 . I DFN="" D  Q
"RTN","PXPXRMI1",43,0)
 .. S ETEXT=DAS_" missing DFN"
"RTN","PXPXRMI1",44,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",45,0)
 . S VISIT=$P(TEMP,U,3)
"RTN","PXPXRMI1",46,0)
 . I VISIT="" D  Q
"RTN","PXPXRMI1",47,0)
 .. S ETEXT=DAS_" missing visit"
"RTN","PXPXRMI1",48,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",49,0)
 . I '$D(^AUPNVSIT(VISIT)) D  Q
"RTN","PXPXRMI1",50,0)
 .. S ETEXT=DAS_" invalid visit"
"RTN","PXPXRMI1",51,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",52,0)
 . S DATE=$P(^AUPNVSIT(VISIT,0),U,1)
"RTN","PXPXRMI1",53,0)
 . I DATE="" D  Q
"RTN","PXPXRMI1",54,0)
 .. S ETEXT=DAS_" missing visit date"
"RTN","PXPXRMI1",55,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",56,0)
 . S PP=$P(TEMP,U,7)
"RTN","PXPXRMI1",57,0)
 . I PP="" S PP="U"
"RTN","PXPXRMI1",58,0)
 . S NE=NE+1
"RTN","PXPXRMI1",59,0)
 . S ^PXRMINDX(9000010.18,"IPP",CPT,PP,DFN,DATE,DAS)=""
"RTN","PXPXRMI1",60,0)
 . S ^PXRMINDX(9000010.18,"PPI",DFN,PP,CPT,DATE,DAS)=""
"RTN","PXPXRMI1",61,0)
 S END=$H
"RTN","PXPXRMI1",62,0)
 S TEXT=NE_" V CPT results indexed."
"RTN","PXPXRMI1",63,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",64,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","PXPXRMI1",65,0)
 ;If there were errors send a message.
"RTN","PXPXRMI1",66,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","PXPXRMI1",67,0)
 ;Send a MailMan message with the results.
"RTN","PXPXRMI1",68,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","PXPXRMI1",69,0)
 S ^PXRMINDX(9000010.18,"GLOBAL NAME")=GLOBAL
"RTN","PXPXRMI1",70,0)
 S ^PXRMINDX(9000010.18,"BUILT BY")=DUZ
"RTN","PXPXRMI1",71,0)
 S ^PXRMINDX(9000010.18,"DATE BUILT")=$$NOW^XLFDT
"RTN","PXPXRMI1",72,0)
 Q
"RTN","PXPXRMI1",73,0)
 ;
"RTN","PXPXRMI1",74,0)
 ;===============================================================
"RTN","PXPXRMI1",75,0)
VHF ;Build the indexes for V HEALTH FACTORS.
"RTN","PXPXRMI1",76,0)
 N CAT,DAS,DATE,DFN,DIFF,DONE,END,ENTRIES,ETEXT,GLOBAL,HF,IND,NE,NERROR
"RTN","PXPXRMI1",77,0)
 N START,TEMP,TENP,TEXT,VISIT
"RTN","PXPXRMI1",78,0)
 ;Don't leave any old stuff around.
"RTN","PXPXRMI1",79,0)
 K ^PXRMINDX(9000010.23)
"RTN","PXPXRMI1",80,0)
 S GLOBAL=$$GET1^DID(9000010.23,"","","GLOBAL NAME")
"RTN","PXPXRMI1",81,0)
 S ENTRIES=$P(^AUPNVHF(0),U,4)
"RTN","PXPXRMI1",82,0)
 S TENP=ENTRIES/10
"RTN","PXPXRMI1",83,0)
 S TENP=+$P(TENP,".",1)
"RTN","PXPXRMI1",84,0)
 I TENP<1 S TENP=1
"RTN","PXPXRMI1",85,0)
 D BMES^XPDUTL("Building indexes for V HEALTH FACTORS")
"RTN","PXPXRMI1",86,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","PXPXRMI1",87,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",88,0)
 S START=$H
"RTN","PXPXRMI1",89,0)
 S (DAS,DONE,IND,NE,NERROR)=0
"RTN","PXPXRMI1",90,0)
 F  S DAS=$O(^AUPNVHF(DAS)) Q:DONE  D
"RTN","PXPXRMI1",91,0)
 . I +DAS=0 S DONE=1 Q
"RTN","PXPXRMI1",92,0)
 . I +DAS'=DAS D  Q
"RTN","PXPXRMI1",93,0)
 .. S DONE=1
"RTN","PXPXRMI1",94,0)
 .. S ETEXT="Bad ien: "_DAS_", cannot continue."
"RTN","PXPXRMI1",95,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",96,0)
 . S IND=IND+1
"RTN","PXPXRMI1",97,0)
 . I IND#TENP=0 D
"RTN","PXPXRMI1",98,0)
 .. S TEXT="Processing entry "_IND
"RTN","PXPXRMI1",99,0)
 .. D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",100,0)
 . I IND#10000=0 W "."
"RTN","PXPXRMI1",101,0)
 . S TEMP=^AUPNVHF(DAS,0)
"RTN","PXPXRMI1",102,0)
 . S HF=$P(TEMP,U,1)
"RTN","PXPXRMI1",103,0)
 . I HF="" D  Q
"RTN","PXPXRMI1",104,0)
 .. S ETEXT=DAS_" missing HF"
"RTN","PXPXRMI1",105,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",106,0)
 . I '$D(^AUTTHF(HF)) D  Q
"RTN","PXPXRMI1",107,0)
 .. S ETEXT=DAS_" invalid HF"
"RTN","PXPXRMI1",108,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",109,0)
 . S DFN=$P(TEMP,U,2)
"RTN","PXPXRMI1",110,0)
 . I DFN="" D  Q
"RTN","PXPXRMI1",111,0)
 .. S ETEXT=DAS_" missing DFN"
"RTN","PXPXRMI1",112,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",113,0)
 . S CAT=$P(^AUTTHF(HF,0),U,3)
"RTN","PXPXRMI1",114,0)
 . I CAT="" D  Q
"RTN","PXPXRMI1",115,0)
 .. S ETEXT=DAS_" HF "_HF_" missing category"
"RTN","PXPXRMI1",116,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",117,0)
 . I HF=CAT D  Q
"RTN","PXPXRMI1",118,0)
 .. S ETEXT=DAS_" HF "_HF_" is a category"
"RTN","PXPXRMI1",119,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",120,0)
 . S VISIT=$P(TEMP,U,3)
"RTN","PXPXRMI1",121,0)
 . I VISIT="" D  Q
"RTN","PXPXRMI1",122,0)
 .. S ETEXT=DAS_" missing visit"
"RTN","PXPXRMI1",123,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",124,0)
 . I '$D(^AUPNVSIT(VISIT)) D  Q
"RTN","PXPXRMI1",125,0)
 .. S ETEXT=DAS_" invalid visit"
"RTN","PXPXRMI1",126,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",127,0)
 . S DATE=$P(^AUPNVSIT(VISIT,0),U,1)
"RTN","PXPXRMI1",128,0)
 . I DATE="" D  Q
"RTN","PXPXRMI1",129,0)
 .. S ETEXT=DAS_" missing visit date"
"RTN","PXPXRMI1",130,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",131,0)
 . S NE=NE+1
"RTN","PXPXRMI1",132,0)
 . S ^PXRMINDX(9000010.23,"IP",HF,DFN,DATE,DAS)=""
"RTN","PXPXRMI1",133,0)
 . S ^PXRMINDX(9000010.23,"PI",DFN,HF,DATE,DAS)=""
"RTN","PXPXRMI1",134,0)
 S END=$H
"RTN","PXPXRMI1",135,0)
 S TEXT=NE_" V HEALTH FACTOR results indexed."
"RTN","PXPXRMI1",136,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",137,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","PXPXRMI1",138,0)
 ;If there were errors send a message.
"RTN","PXPXRMI1",139,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","PXPXRMI1",140,0)
 ;Send a MailMan message with the results.
"RTN","PXPXRMI1",141,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","PXPXRMI1",142,0)
 S ^PXRMINDX(9000010.23,"GLOBAL NAME")=GLOBAL
"RTN","PXPXRMI1",143,0)
 S ^PXRMINDX(9000010.23,"BUILT BY")=DUZ
"RTN","PXPXRMI1",144,0)
 S ^PXRMINDX(9000010.23,"DATE BUILT")=$$NOW^XLFDT
"RTN","PXPXRMI1",145,0)
 Q
"RTN","PXPXRMI1",146,0)
 ;
"RTN","PXPXRMI1",147,0)
 ;===============================================================
"RTN","PXPXRMI1",148,0)
VIMM ;Build the indexes for V IMMUNIZATION.
"RTN","PXPXRMI1",149,0)
 N CVX,DAS,DATE,DFN,DIFF,DONE,END,ENTRIES,ETEXT,EVENTDT,GLOBAL,IMM
"RTN","PXPXRMI1",150,0)
 N IND,NE,NERROR,START,TEMP,TENP,TEXT,VISIT
"RTN","PXPXRMI1",151,0)
 ;Don't leave any old stuff around.
"RTN","PXPXRMI1",152,0)
 K ^PXRMINDX(9000010.11)
"RTN","PXPXRMI1",153,0)
 S GLOBAL=$$GET1^DID(9000010.11,"","","GLOBAL NAME")
"RTN","PXPXRMI1",154,0)
 S ENTRIES=$P(^AUPNVIMM(0),U,4)
"RTN","PXPXRMI1",155,0)
 S TENP=ENTRIES/10
"RTN","PXPXRMI1",156,0)
 S TENP=+$P(TENP,".",1)
"RTN","PXPXRMI1",157,0)
 I TENP<1 S TENP=1
"RTN","PXPXRMI1",158,0)
 D BMES^XPDUTL("Building indexes for V IMMUNIZATION")
"RTN","PXPXRMI1",159,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","PXPXRMI1",160,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",161,0)
 S START=$H
"RTN","PXPXRMI1",162,0)
 S (DAS,DONE,IND,NE,NERROR)=0
"RTN","PXPXRMI1",163,0)
 F  S DAS=$O(^AUPNVIMM(DAS)) Q:DONE  D
"RTN","PXPXRMI1",164,0)
 . I +DAS=0 S DONE=1 Q
"RTN","PXPXRMI1",165,0)
 . I +DAS'=DAS D  Q
"RTN","PXPXRMI1",166,0)
 .. S DONE=1
"RTN","PXPXRMI1",167,0)
 .. S ETEXT="Bad ien: "_DAS_", cannot continue."
"RTN","PXPXRMI1",168,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",169,0)
 . S IND=IND+1
"RTN","PXPXRMI1",170,0)
 . I IND#TENP=0 D
"RTN","PXPXRMI1",171,0)
 .. S TEXT="Processing entry "_IND
"RTN","PXPXRMI1",172,0)
 .. D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",173,0)
 . I IND#10000=0 W "."
"RTN","PXPXRMI1",174,0)
 . S TEMP=^AUPNVIMM(DAS,0)
"RTN","PXPXRMI1",175,0)
 . S IMM=$P(TEMP,U,1)
"RTN","PXPXRMI1",176,0)
 . I IMM="" D  Q
"RTN","PXPXRMI1",177,0)
 .. S ETEXT=DAS_" missing immunization"
"RTN","PXPXRMI1",178,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",179,0)
 . I '$D(^AUTTIMM(IMM)) D  Q
"RTN","PXPXRMI1",180,0)
 .. S ETEXT=DAS_" invalid immunization"
"RTN","PXPXRMI1",181,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",182,0)
 . S DFN=$P(TEMP,U,2)
"RTN","PXPXRMI1",183,0)
 . I DFN="" D  Q
"RTN","PXPXRMI1",184,0)
 .. S ETEXT=DAS_" missing DFN"
"RTN","PXPXRMI1",185,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",186,0)
 . S VISIT=$P(TEMP,U,3)
"RTN","PXPXRMI1",187,0)
 . I VISIT="" D  Q
"RTN","PXPXRMI1",188,0)
 .. S ETEXT=DAS_" missing visit"
"RTN","PXPXRMI1",189,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",190,0)
 . I '$D(^AUPNVSIT(VISIT)) D  Q
"RTN","PXPXRMI1",191,0)
 .. S ETEXT=DAS_" invalid visit"
"RTN","PXPXRMI1",192,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",193,0)
 . S DATE=$P(^AUPNVSIT(VISIT,0),U,1)
"RTN","PXPXRMI1",194,0)
 . I DATE="" D  Q
"RTN","PXPXRMI1",195,0)
 .. S ETEXT=DAS_" missing visit date"
"RTN","PXPXRMI1",196,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",197,0)
 . S EVENTDT=$P($G(^AUPNVIMM(DAS,12)),U,1)
"RTN","PXPXRMI1",198,0)
 . I EVENTDT S DATE=EVENTDT
"RTN","PXPXRMI1",199,0)
 . S NE=NE+1
"RTN","PXPXRMI1",200,0)
 . S ^PXRMINDX(9000010.11,"IP",IMM,DFN,DATE,DAS)=""
"RTN","PXPXRMI1",201,0)
 . S ^PXRMINDX(9000010.11,"PI",DFN,IMM,DATE,DAS)=""
"RTN","PXPXRMI1",202,0)
 . S CVX=$P($G(^AUTTIMM(IMM,0)),U,3)
"RTN","PXPXRMI1",203,0)
 . I CVX'="" D
"RTN","PXPXRMI1",204,0)
 .. S ^PXRMINDX(9000010.11,"CVX","IP",CVX,DFN,DATE,DAS)=""
"RTN","PXPXRMI1",205,0)
 .. S ^PXRMINDX(9000010.11,"CVX","PI",DFN,CVX,DATE,DAS)=""
"RTN","PXPXRMI1",206,0)
 S END=$H
"RTN","PXPXRMI1",207,0)
 S TEXT=NE_" V IMMUNIZATION results indexed."
"RTN","PXPXRMI1",208,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",209,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","PXPXRMI1",210,0)
 ;If there were errors send a message.
"RTN","PXPXRMI1",211,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","PXPXRMI1",212,0)
 ;Send a MailMan message with the results.
"RTN","PXPXRMI1",213,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","PXPXRMI1",214,0)
 S ^PXRMINDX(9000010.11,"GLOBAL NAME")=GLOBAL
"RTN","PXPXRMI1",215,0)
 S ^PXRMINDX(9000010.11,"BUILT BY")=DUZ
"RTN","PXPXRMI1",216,0)
 S ^PXRMINDX(9000010.11,"DATE BUILT")=$$NOW^XLFDT
"RTN","PXPXRMI1",217,0)
 Q
"RTN","PXPXRMI1",218,0)
 ;
"RTN","PXPXRMI1",219,0)
 ;===============================================================
"RTN","PXPXRMI1",220,0)
VICR ;Build the indexes for V IMM CONTRA/REFUSAL EVENTS.
"RTN","PXPXRMI1",221,0)
 N DAS,DFN,DONE,END,ENTRIES,ETEXT,EVENTDT,GLOBAL,ICR,IMM,IND,NE
"RTN","PXPXRMI1",222,0)
 N NERROR,PXFILE,PXSTART,PXSTOP,START,TEMP,TENP,TEXT,VDATE,VISIT,WARNDT
"RTN","PXPXRMI1",223,0)
 S PXFILE=9000010.707
"RTN","PXPXRMI1",224,0)
 ;Don't leave any old stuff around.
"RTN","PXPXRMI1",225,0)
 K ^PXRMINDX(PXFILE)
"RTN","PXPXRMI1",226,0)
 S GLOBAL=$$GET1^DID(PXFILE,"","","GLOBAL NAME")
"RTN","PXPXRMI1",227,0)
 S ENTRIES=$P(^AUPNVICR(0),U,4)
"RTN","PXPXRMI1",228,0)
 S TENP=ENTRIES/10
"RTN","PXPXRMI1",229,0)
 S TENP=+$P(TENP,".",1)
"RTN","PXPXRMI1",230,0)
 I TENP<1 S TENP=1
"RTN","PXPXRMI1",231,0)
 D BMES^XPDUTL("Building indexes for V IMM CONTRA/REFUSAL EVENTS")
"RTN","PXPXRMI1",232,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","PXPXRMI1",233,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",234,0)
 S START=$H
"RTN","PXPXRMI1",235,0)
 S (DAS,DONE,IND,NE,NERROR)=0
"RTN","PXPXRMI1",236,0)
 F  S DAS=$O(^AUPNVICR(DAS)) Q:DONE  D
"RTN","PXPXRMI1",237,0)
 . I +DAS=0 S DONE=1 Q
"RTN","PXPXRMI1",238,0)
 . I +DAS'=DAS D  Q
"RTN","PXPXRMI1",239,0)
 .. S DONE=1
"RTN","PXPXRMI1",240,0)
 .. S ETEXT="Bad ien: "_DAS_", cannot continue."
"RTN","PXPXRMI1",241,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",242,0)
 . S IND=IND+1
"RTN","PXPXRMI1",243,0)
 . I IND#TENP=0 D
"RTN","PXPXRMI1",244,0)
 .. S TEXT="Processing entry "_IND
"RTN","PXPXRMI1",245,0)
 .. D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",246,0)
 . I IND#10000=0 W "."
"RTN","PXPXRMI1",247,0)
 . S TEMP=$G(^AUPNVICR(DAS,0))
"RTN","PXPXRMI1",248,0)
 . S ICR=$P(TEMP,U,1)
"RTN","PXPXRMI1",249,0)
 . I ICR="" D  Q
"RTN","PXPXRMI1",250,0)
 .. S ETEXT=DAS_" missing contraindication/refusal"
"RTN","PXPXRMI1",251,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",252,0)
 . I '$D(^PXV(+$P(ICR,"(",2),+ICR)) D  Q
"RTN","PXPXRMI1",253,0)
 .. S ETEXT=DAS_" invalid contraindication/refusal"
"RTN","PXPXRMI1",254,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",255,0)
 . S IMM=$P(TEMP,U,4)
"RTN","PXPXRMI1",256,0)
 . I IMM="" D  Q
"RTN","PXPXRMI1",257,0)
 .. S ETEXT=DAS_" missing immunization"
"RTN","PXPXRMI1",258,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",259,0)
 . I '$D(^AUTTIMM(IMM)) D  Q
"RTN","PXPXRMI1",260,0)
 .. S ETEXT=DAS_" invalid immunization"
"RTN","PXPXRMI1",261,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",262,0)
 . S DFN=$P(TEMP,U,2)
"RTN","PXPXRMI1",263,0)
 . I DFN="" D  Q
"RTN","PXPXRMI1",264,0)
 .. S ETEXT=DAS_" missing DFN"
"RTN","PXPXRMI1",265,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",266,0)
 . S VISIT=$P(TEMP,U,3)
"RTN","PXPXRMI1",267,0)
 . I VISIT="" D  Q
"RTN","PXPXRMI1",268,0)
 .. S ETEXT=DAS_" missing visit"
"RTN","PXPXRMI1",269,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",270,0)
 . I '$D(^AUPNVSIT(VISIT)) D  Q
"RTN","PXPXRMI1",271,0)
 .. S ETEXT=DAS_" invalid visit"
"RTN","PXPXRMI1",272,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",273,0)
 . S VDATE=$P($G(^AUPNVSIT(VISIT,0)),U,1)
"RTN","PXPXRMI1",274,0)
 . I VDATE="" D  Q
"RTN","PXPXRMI1",275,0)
 .. S ETEXT=DAS_" missing visit date"
"RTN","PXPXRMI1",276,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",277,0)
 . S WARNDT=$P(TEMP,U,5)
"RTN","PXPXRMI1",278,0)
 . S EVENTDT=$P($G(^AUPNVICR(DAS,12)),U,1)
"RTN","PXPXRMI1",279,0)
 . S PXSTART=VDATE
"RTN","PXPXRMI1",280,0)
 . I EVENTDT S PXSTART=EVENTDT
"RTN","PXPXRMI1",281,0)
 . S PXSTOP=9999999
"RTN","PXPXRMI1",282,0)
 . I WARNDT S PXSTOP=WARNDT
"RTN","PXPXRMI1",283,0)
 . S NE=NE+1
"RTN","PXPXRMI1",284,0)
 . S ^PXRMINDX(PXFILE,"ICP",IMM,ICR,DFN,PXSTART,PXSTOP,DAS)=""
"RTN","PXPXRMI1",285,0)
 . S ^PXRMINDX(PXFILE,"PIC",DFN,IMM,ICR,PXSTART,PXSTOP,DAS)=""
"RTN","PXPXRMI1",286,0)
 . S ^PXRMINDX(PXFILE,"CIP",ICR,IMM,DFN,PXSTART,PXSTOP,DAS)=""
"RTN","PXPXRMI1",287,0)
 . S ^PXRMINDX(PXFILE,"PCI",DFN,ICR,IMM,PXSTART,PXSTOP,DAS)=""
"RTN","PXPXRMI1",288,0)
 S END=$H
"RTN","PXPXRMI1",289,0)
 S TEXT=NE_" V IMM CONTRA/REFUSAL EVENTS results indexed."
"RTN","PXPXRMI1",290,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",291,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","PXPXRMI1",292,0)
 ;If there were errors send a message.
"RTN","PXPXRMI1",293,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","PXPXRMI1",294,0)
 ;Send a MailMan message with the results.
"RTN","PXPXRMI1",295,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","PXPXRMI1",296,0)
 S ^PXRMINDX(PXFILE,"GLOBAL NAME")=GLOBAL
"RTN","PXPXRMI1",297,0)
 S ^PXRMINDX(PXFILE,"BUILT BY")=DUZ
"RTN","PXPXRMI1",298,0)
 S ^PXRMINDX(PXFILE,"DATE BUILT")=$$NOW^XLFDT
"RTN","PXPXRMI1",299,0)
 Q
"RTN","PXPXRMI1",300,0)
 ;
"RTN","PXRPC")
0^7^B156917264
"RTN","PXRPC",1,0)
PXRPC ;ISL/JLC - PCE DATA2PCE RPC ;04/06/16  14:13
"RTN","PXRPC",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**200,209,210,215**;Aug 12, 1996;Build 10
"RTN","PXRPC",3,0)
 ;
"RTN","PXRPC",4,0)
 ; Reference to UCUMDATA^LEXMUCUM supported by ICR #6225
"RTN","PXRPC",5,0)
 ; Reference to ICDDX^ICDEX supported by ICR #5747
"RTN","PXRPC",6,0)
 ;
"RTN","PXRPC",7,0)
 ;
"RTN","PXRPC",8,0)
SAVE(OK,PCELIST,LOC,PKGNAME,SRC) ; save PCE information
"RTN","PXRPC",9,0)
 N VSTR
"RTN","PXRPC",10,0)
 N PXAPI,PXDEL,PKG,PROBLEMS,PXAVST,PXERROR,PXAPREDT
"RTN","PXRPC",11,0)
 I '$D(PCELIST(1)) S OK=-3 Q
"RTN","PXRPC",12,0)
 S VSTR=$P(PCELIST(1),U,4) K ^TMP("PXRPC",$J,VSTR)
"RTN","PXRPC",13,0)
 I $G(PKGNAME)="" S OK=-3 Q
"RTN","PXRPC",14,0)
 I $G(SRC)="" S OK=-3 Q
"RTN","PXRPC",15,0)
 S PKG=$$PKG2IEN^VSIT(PKGNAME) I PKG=-1 S OK=-3 Q
"RTN","PXRPC",16,0)
 M ^TMP("PXRPC",$J,VSTR)=PCELIST
"RTN","PXRPC",17,0)
 D DQSAVE(.PCELIST,"PXAPI","PXDEL",.PROBLEMS,.SRC)
"RTN","PXRPC",18,0)
 I '$D(PXAPI)#10 S OK=-3 Q
"RTN","PXRPC",19,0)
 I $D(PXAPI("PROVIDER")) S PXAPREDT=1 ;Allow edit of primary flag
"RTN","PXRPC",20,0)
 D DATA2PCE(.OK,"PXAPI",PKG,SRC,.PXAVST,.PXERROR)
"RTN","PXRPC",21,0)
 Q
"RTN","PXRPC",22,0)
 ;
"RTN","PXRPC",23,0)
DQSAVE(PCELIST,PXPCEARR,PXPCEDARR,PROBLEMS,SRC) ;
"RTN","PXRPC",24,0)
 ;
"RTN","PXRPC",25,0)
 ; Processes PCELIST input array and creates a new array in a format
"RTN","PXRPC",26,0)
 ; that can be passed into DATA2PCE^PXAPI.
"RTN","PXRPC",27,0)
 ;
"RTN","PXRPC",28,0)
 ;Input:
"RTN","PXRPC",29,0)
 ;   .PCELIST - (Required) Array passed by reference.
"RTN","PXRPC",30,0)
 ;              This should be in the same format as the PX SAVE DATA
"RTN","PXRPC",31,0)
 ;              and ORWPCE SAVE RPCs' PCELIST input parameter.
"RTN","PXRPC",32,0)
 ;   PXPCEARR - (Required) The root of an array passed as a String value
"RTN","PXRPC",33,0)
 ;              (e.g., "ORPXAPI") that this API will populate based off
"RTN","PXRPC",34,0)
 ;              the PCELIST argument. This array will be in a format
"RTN","PXRPC",35,0)
 ;              that can be passed into DATA2PCE^PXAPI.
"RTN","PXRPC",36,0)
 ;  PXPCEDARR - (Required) The root of an array passed as a String value
"RTN","PXRPC",37,0)
 ;              (e.g., "ORPXDEL") that this API will populate based off
"RTN","PXRPC",38,0)
 ;              the PCELIST argument. This array will be populated with
"RTN","PXRPC",39,0)
 ;              some deletions that need to be filed to DATA2PCE before
"RTN","PXRPC",40,0)
 ;              filing PXPCEARR. This array will be in a format
"RTN","PXRPC",41,0)
 ;              that can be passed into DATA2PCE^PXAPI.
"RTN","PXRPC",42,0)
 ;  .PROBLEMS - (Required) This API will populate this array with POV
"RTN","PXRPC",43,0)
 ;              entries that are marked to be added to the Problem List.
"RTN","PXRPC",44,0)
 ;       .SRC - (Required) The source of the data - such as 'TEXT
"RTN","PXRPC",45,0)
 ;              INTEGRATION UTILITIES'. This API can possibly change the
"RTN","PXRPC",46,0)
 ;              value of SRC, depending on the Health Factor (HF) values
"RTN","PXRPC",47,0)
 ;              contained in PCELIST.
"RTN","PXRPC",48,0)
 ;
"RTN","PXRPC",49,0)
 N TYP,CODE,IEN,I,X
"RTN","PXRPC",50,0)
 N CAT,NARR,ROOT,ROOT2,PXENCDT,IMPLDT
"RTN","PXRPC",51,0)
 N PRV,CPT,ICD,IMM,SK,PED,HF,XAM,TRT,ICR,MOD,MODCNT,MODIDX,MODS
"RTN","PXRPC",52,0)
 N COM,COMMENT,COMMENTS,SVCAT
"RTN","PXRPC",53,0)
 N DFN,PXAPREDT,PXCPTDEL
"RTN","PXRPC",54,0)
 ; Vars for Info Source (IMMIS) Imm. Admin Route (IMMRT), Body Site (IMMAL), Lot, Manufacturer, Exp. Date & Comments
"RTN","PXRPC",55,0)
 N IMMISNM,IMMISIEN,IMMRTNM,IMMRTIEN,IMMRTERR,IMMALNAME,IMMALIEN,IMMALERR,IMMLOT,IMMMANUF,IMMEXPDT,IMMCOMM,IMMCOMMS,IMMLOTIEN
"RTN","PXRPC",56,0)
 N NUM,REMARK,SEQ,IMMDSG,IMMCVX,IMMCVXER,IMMOVERRIDE
"RTN","PXRPC",57,0)
 S IMPLDT=$$IMPDATE^LEXU("10D")
"RTN","PXRPC",58,0)
 S (PRV,CPT,ICD,IMM,SK,PED,HF,XAM,TRT,ICR)=0
"RTN","PXRPC",59,0)
 S I="" F  S I=$O(PCELIST(I)) Q:'I  S X=PCELIST(I) D
"RTN","PXRPC",60,0)
 . S X=PCELIST(I),TYP=$P(X,U),CODE=$P(X,U,2),CAT=$P(X,U,3),NARR=$P(X,U,4)
"RTN","PXRPC",61,0)
 . I $E(TYP,1,3)="PRV" D  Q
"RTN","PXRPC",62,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",63,0)
 . . S PRV=PRV+1
"RTN","PXRPC",64,0)
 . . S ROOT=PXPCEARR_"(""PROVIDER"","_PRV_")"
"RTN","PXRPC",65,0)
 . . S ROOT2=PXPCEDARR_"(""PROVIDER"","_PRV_")"
"RTN","PXRPC",66,0)
 . . I $E(TYP,4)'="-" D
"RTN","PXRPC",67,0)
 . . . S @ROOT@("NAME")=CODE
"RTN","PXRPC",68,0)
 . . . S @ROOT@("PRIMARY")=$P(X,U,6)
"RTN","PXRPC",69,0)
 . . S @ROOT2@("NAME")=CODE
"RTN","PXRPC",70,0)
 . . S @ROOT2@("DELETE")=1
"RTN","PXRPC",71,0)
 . . S PXAPREDT=1 ;Allow edit of primary flag
"RTN","PXRPC",72,0)
 . I TYP="VST" D  Q
"RTN","PXRPC",73,0)
 . . S ROOT=PXPCEARR_"(""ENCOUNTER"",1)"
"RTN","PXRPC",74,0)
 . . I CODE="DT" S (PXENCDT,@ROOT@("ENC D/T"))=$P(X,U,3) Q
"RTN","PXRPC",75,0)
 . . I CODE="PT" S @ROOT@("PATIENT")=$P(X,U,3),DFN=$P(X,U,3) Q
"RTN","PXRPC",76,0)
 . . I CODE="HL" S @ROOT@("HOS LOC")=$P(X,U,3) Q
"RTN","PXRPC",77,0)
 . . I CODE="PR" S @ROOT@("PARENT")=$P(X,U,3) Q
"RTN","PXRPC",78,0)
 . . ;prevents checkout!
"RTN","PXRPC",79,0)
 . . I CODE="VC" S (SVCAT,@ROOT@("SERVICE CATEGORY"))=$P(X,U,3) Q
"RTN","PXRPC",80,0)
 . . I CODE="SC" S @ROOT@("SC")=$P(X,U,3) Q
"RTN","PXRPC",81,0)
 . . I CODE="AO" S @ROOT@("AO")=$P(X,U,3) Q
"RTN","PXRPC",82,0)
 . . I CODE="IR" S @ROOT@("IR")=$P(X,U,3) Q
"RTN","PXRPC",83,0)
 . . I CODE="EC" S @ROOT@("EC")=$P(X,U,3) Q
"RTN","PXRPC",84,0)
 . . I CODE="MST" S @ROOT@("MST")=$P(X,U,3) Q
"RTN","PXRPC",85,0)
 . . I CODE="HNC" S @ROOT@("HNC")=$P(X,U,3) Q
"RTN","PXRPC",86,0)
 . . I CODE="CV" S @ROOT@("CV")=$P(X,U,3) Q
"RTN","PXRPC",87,0)
 . . I CODE="SHD" S @ROOT@("SHAD")=$P(X,U,3) Q
"RTN","PXRPC",88,0)
 . . I CODE="OL" D  Q
"RTN","PXRPC",89,0)
 . . . I +$P(X,U,3) S @ROOT@("INSTITUTION")=$P(X,U,3)
"RTN","PXRPC",90,0)
 . . . E  I $P(X,U,4)'="",$P(X,U,4)'="0" D
"RTN","PXRPC",91,0)
 . . . . I $$PATCH^XPDUTL("PX*1.0*96") S @ROOT@("OUTSIDE LOCATION")=$P(X,U,4)
"RTN","PXRPC",92,0)
 . . . . E  S @ROOT@("COMMENT")="OUTSIDE LOCATION:  "_$P(X,U,4)
"RTN","PXRPC",93,0)
 . I $E(TYP,1,3)="CPT" D  Q
"RTN","PXRPC",94,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",95,0)
 . . S CPT=CPT+1,ROOT=PXPCEARR_"(""PROCEDURE"","_CPT_")"
"RTN","PXRPC",96,0)
 . . S IEN=$$CODEN^ICPTCOD(CODE) ;ICR #1995
"RTN","PXRPC",97,0)
 . . S @ROOT@("PROCEDURE")=IEN
"RTN","PXRPC",98,0)
 . . I +$P(X,U,9) D
"RTN","PXRPC",99,0)
 . . . S MODS=$P(X,U,9),MODCNT=+MODS
"RTN","PXRPC",100,0)
 . . . F MODIDX=1:1:MODCNT D
"RTN","PXRPC",101,0)
 . . . . S MOD=$P($P(MODS,";",MODIDX+1),"/")
"RTN","PXRPC",102,0)
 . . . . S @ROOT@("MODIFIERS",MOD)=""
"RTN","PXRPC",103,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","PXRPC",104,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","PXRPC",105,0)
 . . S:$L($P(X,U,5)) @ROOT@("QTY")=$P(X,U,5)
"RTN","PXRPC",106,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","PXRPC",107,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="PROCEDURE^"_CPT
"RTN","PXRPC",108,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1,@ROOT@("QTY")=0,PXCPTDEL=CPT
"RTN","PXRPC",109,0)
 . I $E(TYP,1,3)="POV" D  Q
"RTN","PXRPC",110,0)
 . . N PXDXI,PXDX
"RTN","PXRPC",111,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",112,0)
 . . F PXDXI=1:1:$L(CODE,"/") D
"RTN","PXRPC",113,0)
 . . . N CSYS,CDT,IEN,LEXIEN
"RTN","PXRPC",114,0)
 . . . S PXDX=$P(CODE,"/",PXDXI)
"RTN","PXRPC",115,0)
 . . . S ICD=ICD+1,ROOT=PXPCEARR_"(""DX/PL"","_ICD_")"
"RTN","PXRPC",116,0)
 . . . S CDT=$S($G(SVCAT)="E":DT,1:$G(PXENCDT))
"RTN","PXRPC",117,0)
 . . . S CSYS=$S(CDT'<IMPLDT:"10D",1:"ICD")
"RTN","PXRPC",118,0)
 . . . I (PXDX]""),(PXDX'[".") S PXDX=PXDX_"."
"RTN","PXRPC",119,0)
 . . . S IEN=+$$ICDDX^ICDEX(PXDX,CDT,$S(CSYS="10D":30,1:1),"E") ; ICR #5747
"RTN","PXRPC",120,0)
 . . . I IEN'>0 Q
"RTN","PXRPC",121,0)
 . . . S @ROOT@("DIAGNOSIS")=IEN
"RTN","PXRPC",122,0)
 . . . S @ROOT@("PRIMARY")=$S(PXDXI=1:$P(X,U,5),1:0)
"RTN","PXRPC",123,0)
 . . . S LEXIEN=$P($$EXP^LEXCODE(PXDX,CSYS,CDT),U),@ROOT@("LEXICON TERM")=$S(LEXIEN>0:LEXIEN,1:"")
"RTN","PXRPC",124,0)
 . . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","PXRPC",125,0)
 . . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","PXRPC",126,0)
 . . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","PXRPC",127,0)
 . . . I $L($P(X,U,7)),($P(X,U,7)=1),(PXDXI=1) S @ROOT@("PL ADD")=$P(X,U,7),PROBLEMS(ICD)=NARR_U_CODE
"RTN","PXRPC",128,0)
 . . . S:$L($P(X,U,10))>0&(PXDXI=1) COMMENT($P(X,U,10))="DX/PL^"_ICD
"RTN","PXRPC",129,0)
 . . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","PXRPC",130,0)
 . I $E(TYP,1,3)="IMM" D  Q
"RTN","PXRPC",131,0)
 . . ; If the CVX Code is present, then use it to find the corresponding Immunization,
"RTN","PXRPC",132,0)
 . . ; but only if the Immunization IEN is not specified
"RTN","PXRPC",133,0)
 . . S IMMCVX=$P(X,U,11)
"RTN","PXRPC",134,0)
 . . I CODE="",IMMCVX'="" S CODE=$$FIND1^DIC(9999999.14,,,IMMCVX,"C",,"IMMCVXER")
"RTN","PXRPC",135,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",136,0)
 . . S IMM=IMM+1,ROOT=PXPCEARR_"(""IMMUNIZATION"","_IMM_")"
"RTN","PXRPC",137,0)
 . . S @ROOT@("IMMUN")=CODE
"RTN","PXRPC",138,0)
 . . I IMMCVX'="" S @ROOT@("CVX")=IMMCVX
"RTN","PXRPC",139,0)
 . . S:$L($P(X,U,5)) @ROOT@("SERIES")=$P(X,U,5)
"RTN","PXRPC",140,0)
 . . S:$L($P(X,U,7)) @ROOT@("REACTION")=$P(X,U,7)
"RTN","PXRPC",141,0)
 . . S:$L($P(X,U,8)) @ROOT@("CONTRAINDICATED")=$P(X,U,8)
"RTN","PXRPC",142,0)
 . . S:$L($P(X,U,9)) @ROOT@("REFUSED")=$P(X,U,9)
"RTN","PXRPC",143,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","PXRPC",144,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="IMMUNIZATION^"_IMM
"RTN","PXRPC",145,0)
 . . ; These are the additional fields being added by PX*1.0*209
"RTN","PXRPC",146,0)
 . . S IMMISIEN=$$IMMSRC($P(X,U,12))
"RTN","PXRPC",147,0)
 . . S:IMMISIEN @ROOT@("INFO SOURCE")=IMMISIEN
"RTN","PXRPC",148,0)
 . . S IMMRTIEN=$$IMMROUTE($P(X,U,14))
"RTN","PXRPC",149,0)
 . . S:IMMRTIEN @ROOT@("ADMIN ROUTE")=IMMRTIEN
"RTN","PXRPC",150,0)
 . . S IMMALIEN=$$IMMLOC($P(X,U,15))
"RTN","PXRPC",151,0)
 . . S:IMMALIEN @ROOT@("ANATOMIC LOC")=IMMALIEN
"RTN","PXRPC",152,0)
 . . S IMMLOT=$$IMMLOT($P(X,U,16),$P(X,U,17),$P(X,U,18))
"RTN","PXRPC",153,0)
 . . S IMMLOTIEN=$P(IMMLOT,"^",1)
"RTN","PXRPC",154,0)
 . . S IMMCOMM=$P(IMMLOT,"^",2)
"RTN","PXRPC",155,0)
 . . S:IMMLOTIEN @ROOT@("LOT NUM")=IMMLOTIEN
"RTN","PXRPC",156,0)
 . . S IMMDSG=$$IMMDSG($P(X,U,13))
"RTN","PXRPC",157,0)
 . . I $P(IMMDSG,U,1)'="" D
"RTN","PXRPC",158,0)
 . . . S @ROOT@("DOSE")=$P(IMMDSG,U,1)
"RTN","PXRPC",159,0)
 . . . I $P(IMMDSG,U,2) S @ROOT@("DOSE UNITS")=$P(IMMDSG,U,2)
"RTN","PXRPC",160,0)
 . . I $P(IMMDSG,U,3)'="" D  ; add Dosage to comments
"RTN","PXRPC",161,0)
 . . . S IMMCOMM=$S($G(IMMCOMM)'="":IMMCOMM_"; ",1:"")_$P(IMMDSG,U,3)
"RTN","PXRPC",162,0)
 . . I IMMCOMM'="" D
"RTN","PXRPC",163,0)
 . . . ; If we have something to add to the Imm comment, either add it to the existing comment
"RTN","PXRPC",164,0)
 . . . ; (if one exists) or just set it in the COMMENT field.
"RTN","PXRPC",165,0)
 . . . I $L($P(X,U,10)) S IMMCOMMS($P(X,U,10))=IMMCOMM ; This will get added later to the existing comment
"RTN","PXRPC",166,0)
 . . . E  S @ROOT@("COMMENT")=IMMCOMM
"RTN","PXRPC",167,0)
 . . S:$P(X,U,19)>0 @ROOT@("EVENT D/T")=$P(X,U,19)
"RTN","PXRPC",168,0)
 . . S:$P(X,U,20)>0 @ROOT@("ORD PROVIDER")=$P(X,U,20)
"RTN","PXRPC",169,0)
 . . I $P(X,U,21)'="" D IMMVIS($P(X,U,21),ROOT)
"RTN","PXRPC",170,0)
 . . I $P(X,U,22)'="" D IMMRMRKS($P(X,U,22),IMM,.REMARK)
"RTN","PXRPC",171,0)
 . . I $P(X,U,23)'="" S @ROOT@("WARNING ACK")=$P(X,U,23)
"RTN","PXRPC",172,0)
 . . I $P(X,U,24)>0 S IMMOVERRIDE($P(X,U,24))="IMMUNIZATION^"_IMM
"RTN","PXRPC",173,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","PXRPC",174,0)
 . I $E(TYP,1,2)="SK" D  Q
"RTN","PXRPC",175,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",176,0)
 . . S SK=SK+1,ROOT=PXPCEARR_"(""SKIN TEST"","_SK_")"
"RTN","PXRPC",177,0)
 . . S @ROOT@("TEST")=CODE
"RTN","PXRPC",178,0)
 . . S:$L($P(X,U,5)) @ROOT@("RESULT")=$P(X,U,5)
"RTN","PXRPC",179,0)
 . . S:$L($P(X,U,7)) @ROOT@("READING")=$P(X,U,7)
"RTN","PXRPC",180,0)
 . . S:$L($P(X,U,8)) @ROOT@("D/T READ")=$P(X,U,8)
"RTN","PXRPC",181,0)
 . . S:$L($P(X,U,9)) @ROOT@("EVENT D/T")=$P(X,U,9)
"RTN","PXRPC",182,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","PXRPC",183,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="SKIN TEST^"_SK
"RTN","PXRPC",184,0)
 . . I $E(TYP,3)="-" S @ROOT@("DELETE")=1
"RTN","PXRPC",185,0)
 . I $E(TYP,1,3)="PED" D  Q
"RTN","PXRPC",186,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",187,0)
 . . S PED=PED+1,ROOT=PXPCEARR_"(""PATIENT ED"","_PED_")"
"RTN","PXRPC",188,0)
 . . S @ROOT@("TOPIC")=CODE
"RTN","PXRPC",189,0)
 . . S:$L($P(X,U,5)) @ROOT@("UNDERSTANDING")=$P(X,U,5)
"RTN","PXRPC",190,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","PXRPC",191,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="PATIENT ED^"_PED
"RTN","PXRPC",192,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","PXRPC",193,0)
 . I $E(TYP,1,2)="HF" D  Q
"RTN","PXRPC",194,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",195,0)
 . . S HF=HF+1,ROOT=PXPCEARR_"(""HEALTH FACTOR"","_HF_")"
"RTN","PXRPC",196,0)
 . . S @ROOT@("HEALTH FACTOR")=CODE
"RTN","PXRPC",197,0)
 . . S:$L($P(X,U,5)) @ROOT@("LEVEL/SEVERITY")=$P(X,U,5)
"RTN","PXRPC",198,0)
 . . S:$P(X,U,6)'>0 $P(X,U,6)=$G(@PXPCEARR@("PROVIDER",1,"NAME"))
"RTN","PXRPC",199,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","PXRPC",200,0)
 . . S:$L($P(X,U,11)) @ROOT@("EVENT D/T")=$P($P(X,U,11),";",1)
"RTN","PXRPC",201,0)
 . . S:$L($P(X,U,11)) SRC=$P($P(X,U,11),";",2)
"RTN","PXRPC",202,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="HEALTH FACTOR^"_HF
"RTN","PXRPC",203,0)
 . . I $E(TYP,3)="-" S @ROOT@("DELETE")=1
"RTN","PXRPC",204,0)
 . I $E(TYP,1,3)="XAM" D  Q
"RTN","PXRPC",205,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",206,0)
 . . S XAM=XAM+1,ROOT=PXPCEARR_"(""EXAM"","_XAM_")"
"RTN","PXRPC",207,0)
 . . S @ROOT@("EXAM")=CODE
"RTN","PXRPC",208,0)
 . . S:$L($P(X,U,5)) @ROOT@("RESULT")=$P(X,U,5)
"RTN","PXRPC",209,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","PXRPC",210,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="EXAM^"_XAM
"RTN","PXRPC",211,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","PXRPC",212,0)
 . I $E(TYP,1,3)="TRT" D  Q
"RTN","PXRPC",213,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",214,0)
 . . S TRT=TRT+1,ROOT=PXPCEARR_"(""TREATMENT"","_TRT_")"
"RTN","PXRPC",215,0)
 . . S @ROOT@("IMMUN")=CODE
"RTN","PXRPC",216,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","PXRPC",217,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","PXRPC",218,0)
 . . S:$L($P(X,U,5)) @ROOT@("QTY")=$P(X,U,5)
"RTN","PXRPC",219,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","PXRPC",220,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="TREATMENT^"_TRT
"RTN","PXRPC",221,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1,@ROOT@("QTY")=0
"RTN","PXRPC",222,0)
 . I $E(TYP,1,3)="ICR" D  Q
"RTN","PXRPC",223,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",224,0)
 . . S ICR=ICR+1,ROOT=PXPCEARR_"(""IMM CONTRA/REFUSAL"","_ICR_")"
"RTN","PXRPC",225,0)
 . . S @ROOT@("CONTRA/REFUSAL")=CODE
"RTN","PXRPC",226,0)
 . . I $P(X,U,5)'="" S @ROOT@("IMMUN")=$$TRIM^XLFSTR($P(X,U,5))
"RTN","PXRPC",227,0)
 . . I $P(X,U,6)'="" S @ROOT@("WARN UNTIL DATE")=$$TRIM^XLFSTR($P(X,U,6))
"RTN","PXRPC",228,0)
 . . I $P(X,U,7)'="" S @ROOT@("EVENT D/T")=$$TRIM^XLFSTR($P(X,U,7))
"RTN","PXRPC",229,0)
 . . I $P(X,U,8)'="" S @ROOT@("ENC PROVIDER")=$$TRIM^XLFSTR($P(X,U,8))
"RTN","PXRPC",230,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="IMM CONTRA/REFUSAL^"_ICR
"RTN","PXRPC",231,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","PXRPC",232,0)
 . I $E(TYP,1,3)="COM" D  Q
"RTN","PXRPC",233,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",234,0)
 . . Q:'$L(CAT)
"RTN","PXRPC",235,0)
 . . S COMMENTS(CODE)=$P(X,U,3,999)
"RTN","PXRPC",236,0)
 ;Store the comments
"RTN","PXRPC",237,0)
 S COM=""
"RTN","PXRPC",238,0)
 ;F  S COM=$O(COMMENT(COM)) Q:COM=""  S:$D(COMMENTS(COM)) PXAPI($P(COMMENT(COM),"^",1),$P(COMMENT(COM),"^",2),"COMMENT")=COMMENTS(COM)
"RTN","PXRPC",239,0)
 F  S COM=$O(COMMENT(COM)) Q:COM=""  D:$D(COMMENTS(COM))
"RTN","PXRPC",240,0)
 . I $G(IMMCOMMS(COM))'="" D
"RTN","PXRPC",241,0)
 . . I COMMENTS(COM)="@" S COMMENTS(COM)=""
"RTN","PXRPC",242,0)
 . . S COMMENTS(COM)=COMMENTS(COM)_$S(COMMENTS(COM)="":"",1:" ")_IMMCOMMS(COM)
"RTN","PXRPC",243,0)
 . S @PXPCEARR@($P(COMMENT(COM),"^",1),$P(COMMENT(COM),"^",2),"COMMENT")=COMMENTS(COM)
"RTN","PXRPC",244,0)
 ;
"RTN","PXRPC",245,0)
 ;Store the Remarks (currently used by immunizations) - PX,210
"RTN","PXRPC",246,0)
 S COM=""
"RTN","PXRPC",247,0)
 F  S COM=$O(REMARK(COM)) Q:COM=""  I $D(COMMENTS(COM)) D
"RTN","PXRPC",248,0)
 . S TYP=$P(REMARK(COM),"^",1)
"RTN","PXRPC",249,0)
 . S NUM=$P(REMARK(COM),"^",2)
"RTN","PXRPC",250,0)
 . S SEQ=$O(@PXPCEARR@(TYP,NUM,"REMARKS",""),-1)+1
"RTN","PXRPC",251,0)
 . S @PXPCEARR@(TYP,NUM,"REMARKS",SEQ,0)=COMMENTS(COM)
"RTN","PXRPC",252,0)
 ;
"RTN","PXRPC",253,0)
 ;Store the Immunization Override Reason - PX,215
"RTN","PXRPC",254,0)
 S COM=""
"RTN","PXRPC",255,0)
 F  S COM=$O(IMMOVERRIDE(COM)) Q:COM=""  I $G(COMMENTS(COM))'="" D
"RTN","PXRPC",256,0)
 . S TYP=$P(IMMOVERRIDE(COM),"^",1)
"RTN","PXRPC",257,0)
 . S NUM=$P(IMMOVERRIDE(COM),"^",2)
"RTN","PXRPC",258,0)
 . S @PXPCEARR@(TYP,NUM,"OVERRIDE REASON")=COMMENTS(COM)
"RTN","PXRPC",259,0)
 ;
"RTN","PXRPC",260,0)
 S @PXPCEARR@("ENCOUNTER",1,"ENCOUNTER TYPE")="P"
"RTN","PXRPC",261,0)
 ;
"RTN","PXRPC",262,0)
 Q
"RTN","PXRPC",263,0)
 ;
"RTN","PXRPC",264,0)
DATA2PCE(OK,PXPCEARR,PKG,SRC,PXAVST,PXERROR) ;
"RTN","PXRPC",265,0)
 I '($D(PXAVST)#2) S PXAVST=""
"RTN","PXRPC",266,0)
 S OK=$$DATA2PCE^PXAI(PXPCEARR,PKG,SRC,.PXAVST,"","",.PXERROR,"","","")
"RTN","PXRPC",267,0)
 Q
"RTN","PXRPC",268,0)
 ;
"RTN","PXRPC",269,0)
IMMSRC(IMMIS) ; Returns Event Info Source IEN
"RTN","PXRPC",270,0)
 N IMMISHL,IMMISIEN,X
"RTN","PXRPC",271,0)
 S IMMISHL=$P(IMMIS,";",1)
"RTN","PXRPC",272,0)
 S IMMISIEN=$P(IMMIS,";",2)
"RTN","PXRPC",273,0)
 ; Look up the value in the "H" Cross-reference
"RTN","PXRPC",274,0)
 I 'IMMISIEN D
"RTN","PXRPC",275,0)
 . S IMMISIEN=$$FIND1^DIC(920.1,,,IMMISHL,"H",,"IMMISERR")
"RTN","PXRPC",276,0)
 Q IMMISIEN
"RTN","PXRPC",277,0)
 ;
"RTN","PXRPC",278,0)
IMMROUTE(IMMRT) ; Returns Route IEN
"RTN","PXRPC",279,0)
 N IMMRTHL,IMMRTIEN,IMMRTNM,X
"RTN","PXRPC",280,0)
 S IMMRTNM=$P(IMMRT,";",1)
"RTN","PXRPC",281,0)
 S IMMRTHL=$P(IMMRT,";",2)
"RTN","PXRPC",282,0)
 S IMMRTIEN=$P(IMMRT,";",3)
"RTN","PXRPC",283,0)
 I 'IMMRTIEN,IMMRTHL'="" D
"RTN","PXRPC",284,0)
 . S IMMRTIEN=$$FIND1^DIC(920.2,,,IMMRTHL,"H",,"IMMRTERR")
"RTN","PXRPC",285,0)
 I 'IMMRTIEN,IMMRTNM'="" D
"RTN","PXRPC",286,0)
 . S IMMRTIEN=$$FIND1^DIC(920.2,,,IMMRTNM,"B",,"IMMRTERR")
"RTN","PXRPC",287,0)
 Q IMMRTIEN
"RTN","PXRPC",288,0)
 ;
"RTN","PXRPC",289,0)
IMMLOC(IMMAL) ; Returns Anatomic Location IEN
"RTN","PXRPC",290,0)
 N IMMALHL,IMMALIEN,IMMALNM,X
"RTN","PXRPC",291,0)
 S IMMALNM=$P(IMMAL,";",1)
"RTN","PXRPC",292,0)
 S IMMALHL=$P(IMMAL,";",2)
"RTN","PXRPC",293,0)
 S IMMALIEN=$P(IMMAL,";",3)
"RTN","PXRPC",294,0)
 I 'IMMALIEN,IMMALHL'="" D
"RTN","PXRPC",295,0)
 . S IMMALIEN=$$FIND1^DIC(920.3,,,IMMALHL,"B",,"IMMALERR")
"RTN","PXRPC",296,0)
 I 'IMMALIEN,IMMALNM'="" D
"RTN","PXRPC",297,0)
 . S IMMALIEN=$$FIND1^DIC(920.3,,,IMMALNM,"B",,"IMMALERR")
"RTN","PXRPC",298,0)
 Q IMMALIEN
"RTN","PXRPC",299,0)
 ;
"RTN","PXRPC",300,0)
IMMLOT(IMMLOT,IMMMANUF,IMMEXPDT) ; Returns Lot_IEN^Comment
"RTN","PXRPC",301,0)
 N IMMCOMM,IMMLOTIEN,IMMLOTNM,X
"RTN","PXRPC",302,0)
 S IMMLOTNM=$P(IMMLOT,";",1)
"RTN","PXRPC",303,0)
 S IMMLOTIEN=$P(IMMLOT,";",2)
"RTN","PXRPC",304,0)
 ;
"RTN","PXRPC",305,0)
 I IMMLOTIEN Q IMMLOTIEN
"RTN","PXRPC",306,0)
 ;
"RTN","PXRPC",307,0)
 ; If the Lot Number, Manufacturer and Expiration Date are all specified,
"RTN","PXRPC",308,0)
 ; then find an entry matching all three values in File 9999999.41 (IMMUNIZATION LOT)
"RTN","PXRPC",309,0)
 ; If we don't find a match, then add the fields to the Comment.
"RTN","PXRPC",310,0)
 ; For now, we will not receive the Expiration Date from Walgreens, so we always update the Comment.
"RTN","PXRPC",311,0)
 S IMMCOMM=""
"RTN","PXRPC",312,0)
 S:IMMLOTNM'="" IMMCOMM=IMMCOMM_$S(IMMCOMM="":"",1:" ")_"Lot#: "_IMMLOTNM
"RTN","PXRPC",313,0)
 S:IMMMANUF'="" IMMCOMM=IMMCOMM_$S(IMMCOMM="":"",1:" ")_"Mfr: "_IMMMANUF
"RTN","PXRPC",314,0)
 S:IMMEXPDT'="" IMMCOMM=IMMCOMM_$S(IMMCOMM="":"",1:" ")_"Expiration Date: "_IMMEXPDT
"RTN","PXRPC",315,0)
 Q "^"_IMMCOMM
"RTN","PXRPC",316,0)
 ;
"RTN","PXRPC",317,0)
IMMVIS(IMMVISMULT,ROOT) ; Sets ROOT's VIS multiple
"RTN","PXRPC",318,0)
 N IMMVIS,IMMVISDT,IMMVISENTRY,PXSEQ,PXX,X
"RTN","PXRPC",319,0)
 S PXSEQ=0
"RTN","PXRPC",320,0)
 F PXX=1:1:$L(IMMVISMULT,";") D
"RTN","PXRPC",321,0)
 . S IMMVISENTRY=$$TRIM^XLFSTR($P(IMMVISMULT,";",PXX))
"RTN","PXRPC",322,0)
 . S IMMVIS=$P(IMMVISENTRY,"/",1)
"RTN","PXRPC",323,0)
 . I 'IMMVIS Q
"RTN","PXRPC",324,0)
 . S IMMVISDT=$P(IMMVISENTRY,"/",2)
"RTN","PXRPC",325,0)
 . I IMMVISDT S IMMVIS=IMMVIS_U_IMMVISDT
"RTN","PXRPC",326,0)
 . S PXSEQ=PXSEQ+1
"RTN","PXRPC",327,0)
 . S @ROOT@("VIS",PXSEQ,0)=IMMVIS
"RTN","PXRPC",328,0)
 Q
"RTN","PXRPC",329,0)
 ;
"RTN","PXRPC",330,0)
IMMRMRKS(IMMREMARKS,IMMNUM,REMARK) ; Sets REMARK array
"RTN","PXRPC",331,0)
 N PXEND,PXSTART,PXX,X
"RTN","PXRPC",332,0)
 S PXSTART=$P(IMMREMARKS,";",1)
"RTN","PXRPC",333,0)
 S PXEND=$P(IMMREMARKS,";",2)
"RTN","PXRPC",334,0)
 I ('PXSTART)!('PXEND)!(PXEND<PXSTART) Q
"RTN","PXRPC",335,0)
 F PXX=PXSTART:1:PXEND D
"RTN","PXRPC",336,0)
 . S REMARK(PXX)="IMMUNIZATION^"_IMMNUM
"RTN","PXRPC",337,0)
 Q
"RTN","PXRPC",338,0)
 ;
"RTN","PXRPC",339,0)
IMMDSG(IMMDSG) ;
"RTN","PXRPC",340,0)
 N IMMDOSE,IMMUNIT,IMMUNITIEN,IMMDOSEV,IMMUNERR,X
"RTN","PXRPC",341,0)
 S IMMDSG=$$TRIM^XLFSTR(IMMDSG)
"RTN","PXRPC",342,0)
 I IMMDSG="" Q ""
"RTN","PXRPC",343,0)
 S IMMDOSE=$P(IMMDSG,";",1)
"RTN","PXRPC",344,0)
 S IMMUNIT=$P(IMMDSG,";",2)
"RTN","PXRPC",345,0)
 S IMMUNITIEN=$P(IMMDSG,";",3)
"RTN","PXRPC",346,0)
 I IMMDSG[" ",IMMDSG'[";" D  ;Remove this DO block when VLER DAS starts using ";" between dose and units
"RTN","PXRPC",347,0)
 . S IMMDOSE=$P(IMMDSG," ",1)
"RTN","PXRPC",348,0)
 . S IMMUNIT=$P(IMMDSG," ",2)
"RTN","PXRPC",349,0)
 ;
"RTN","PXRPC",350,0)
 I IMMDOSE="" Q ""
"RTN","PXRPC",351,0)
 ;
"RTN","PXRPC",352,0)
 I IMMUNIT'="",'IMMUNITIEN D
"RTN","PXRPC",353,0)
 . N UCUMDATA
"RTN","PXRPC",354,0)
 . D UCUMDATA^LEXMUCUM(IMMUNIT,.UCUMDATA)  ; ICR 6225
"RTN","PXRPC",355,0)
 . S IMMUNITIEN=$O(UCUMDATA(0))
"RTN","PXRPC",356,0)
 D CHK^DIE(9000010.11,1312,,IMMDOSE,.IMMDOSEV,"IMMUNERR")
"RTN","PXRPC",357,0)
 I IMMUNITIEN,IMMDOSEV'="^" Q IMMDOSEV_U_IMMUNITIEN
"RTN","PXRPC",358,0)
 ;
"RTN","PXRPC",359,0)
 Q U_U_"Dosage: "_IMMDOSE_" "_IMMUNIT
"RTN","PXVNDC")
0^32^B1736379
"RTN","PXVNDC",1,0)
PXVNDC ;BIR/ADM - UTILITIES RELATED TO NDC ;03/17/2016
"RTN","PXVNDC",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**215**;Aug 12, 1996;Build 10
"RTN","PXVNDC",3,0)
 ;
"RTN","PXVNDC",4,0)
 Q
"RTN","PXVNDC",5,0)
NDC(PXVZ) ; called from input transform and executable help on field #.18 in file #9999999.41
"RTN","PXVNDC",6,0)
 N PXNDC,PXVIN,PXVDC,PXVX,PXVLST,PXVOUT
"RTN","PXVNDC",7,0)
 S (PXNDC,PXVOUT)=0,PXVIN="",PXVLST="PXVLST"
"RTN","PXVNDC",8,0)
 S PXVX=$S($G(DIY):DIY,1:PXVZ)
"RTN","PXVNDC",9,0)
 S:$E(PXVZ)="`" PXVX=$E(PXVZ,2,99)
"RTN","PXVNDC",10,0)
 I +$G(PXVX) D  K:$D(PXVLST) ^TMP($J,PXVLST) I PXVOUT Q PXNDC
"RTN","PXVNDC",11,0)
 .D ALL^PSN5067(PXVX,,DT,PXVLST) I $P($G(^TMP($J,PXVLST,0)),"^")=-1 S PXVOUT=1 Q
"RTN","PXVNDC",12,0)
 .S PXVIN=$P($G(^TMP($J,PXVLST,PXVX,7)),"^")
"RTN","PXVNDC",13,0)
 I PXVIN=""!(PXVIN>DT)&($P($$DRGCLS^PSNAPIS(PXVX),"^",2)="IM000") S PXNDC=1
"RTN","PXVNDC",14,0)
 Q PXNDC
"RTN","PXVNDC",15,0)
 ;
"RTN","PXVNDC",16,0)
NDCOUT(PXVN) ; output transform on NDC CODE (VA) field (#.18) in file #9999999.41
"RTN","PXVNDC",17,0)
 N PXVARAY,PXVOUT,PXV7
"RTN","PXVNDC",18,0)
 I PXVN="" S PXVOUT="" Q PXVOUT
"RTN","PXVNDC",19,0)
 D CIRN^PSNAPIS(PXVN,.PXVARAY)
"RTN","PXVNDC",20,0)
 S PXV7=$G(PXVARAY(7))
"RTN","PXVNDC",21,0)
 S PXVOUT=$P(PXV7,"^")_"   "_$P(PXV7,"^",3)
"RTN","PXVNDC",22,0)
 Q PXVOUT
"RTN","PXVNDC",23,0)
 ;
"RTN","PXVNDC",24,0)
P01 ; input transform logic for field #.18 in file 9999999.41
"RTN","PXVNDC",25,0)
 N SCR
"RTN","PXVNDC",26,0)
 S SCR="I $$NDC^PXVNDC(X)"
"RTN","PXVNDC",27,0)
 D INTRAN^PSNAPIS(SCR)
"RTN","PXVNDC",28,0)
 Q
"RTN","PXVNDC",29,0)
QUEST ; "?" or "??" help for field #.18 in file 9999999.41
"RTN","PXVNDC",30,0)
 N SCR
"RTN","PXVNDC",31,0)
 S SCR="I $$NDC^PXVNDC(X)"
"RTN","PXVNDC",32,0)
 D QLIST^PSNAPIS(SCR)
"RTN","PXVNDC",33,0)
 Q
"RTN","PXVP215")
0^^B34039279
"RTN","PXVP215",1,0)
PXVP215 ;BPFO/LMT - PX*1*215 KIDS Routine ;04/05/2016
"RTN","PXVP215",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**215**;Aug 12, 1996;Build 10
"RTN","PXVP215",3,0)
 ;
"RTN","PXVP215",4,0)
POST ; KIDS Post install for PX*1*215
"RTN","PXVP215",5,0)
 D BMES("*** Post install started ***")
"RTN","PXVP215",6,0)
 ;
"RTN","PXVP215",7,0)
 S DIU=9000010.123,DIU(0)="S" D EN^DIU2 K DIU ; Delete Coding System multiple from file #9000010.12
"RTN","PXVP215",8,0)
 D CODEMAP ; Generate PCE Code Mapping Report
"RTN","PXVP215",9,0)
 D LOAD9206 ; Populate data for #920.6
"RTN","PXVP215",10,0)
 ;
"RTN","PXVP215",11,0)
 D BMES("*** Post install completed ***")
"RTN","PXVP215",12,0)
 Q
"RTN","PXVP215",13,0)
 ;
"RTN","PXVP215",14,0)
 ;---------------------------------------------------------------------
"RTN","PXVP215",15,0)
CODEMAP ; Generate PCE Code Mapping Report
"RTN","PXVP215",16,0)
 ;
"RTN","PXVP215",17,0)
 N PXERRLN,PXERRNUM,PXERRTXT,PXFROM,PXFROMEN,PXIEN,PXIMM,PXINCLUDE,PXINST,PXINSTNAME,PXINSTNUM
"RTN","PXVP215",18,0)
 N PXINSTR,PXLINE,PXMGROUP,PXMSGSUB,PXMSGTO,PXNODE,PXREMMGIEN,PXTO,PXTOEN,XMERR
"RTN","PXVP215",19,0)
 ;
"RTN","PXVP215",20,0)
 D BMES("*** Generating PCE CODE MAPPING Report ***")
"RTN","PXVP215",21,0)
 ;
"RTN","PXVP215",22,0)
 K ^TMP("PX215PCM",$J)
"RTN","PXVP215",23,0)
 ;
"RTN","PXVP215",24,0)
 S PXINST=$$KSP^XUPARAM("INST")
"RTN","PXVP215",25,0)
 S PXINSTNAME=$$NAME^XUAF4(PXINST)
"RTN","PXVP215",26,0)
 S PXINSTNUM=$$STA^XUAF4(PXINST)
"RTN","PXVP215",27,0)
 ;
"RTN","PXVP215",28,0)
 S PXLINE=10 ; Start at #10, as the preamble part of the message will be in lines 1-10
"RTN","PXVP215",29,0)
 ;
"RTN","PXVP215",30,0)
 S PXIEN=0
"RTN","PXVP215",31,0)
 F  S PXIEN=$O(^PXD(811.1,PXIEN)) Q:'PXIEN  D
"RTN","PXVP215",32,0)
 . S PXNODE=$G(^PXD(811.1,PXIEN,0))
"RTN","PXVP215",33,0)
 . ;
"RTN","PXVP215",34,0)
 . I '$P(PXNODE,U,5) Q
"RTN","PXVP215",35,0)
 . ;
"RTN","PXVP215",36,0)
 . S PXFROM=$P(PXNODE,U,3)
"RTN","PXVP215",37,0)
 . S PXINCLUDE=0
"RTN","PXVP215",38,0)
 . I PXFROM="CPT" S PXINCLUDE=1
"RTN","PXVP215",39,0)
 . I PXFROM="IMM" D
"RTN","PXVP215",40,0)
 . . S PXIMM=+$P(PXNODE,U,1)
"RTN","PXVP215",41,0)
 . . I $$IMMSTAT^PXAPIIM(PXIMM)'="A" S PXINCLUDE=1
"RTN","PXVP215",42,0)
 . ;
"RTN","PXVP215",43,0)
 . I 'PXINCLUDE Q
"RTN","PXVP215",44,0)
 . ;
"RTN","PXVP215",45,0)
 . S PXFROMEN=+$P(PXNODE,U,1)
"RTN","PXVP215",46,0)
 . S PXTOEN=+$P(PXNODE,U,2)
"RTN","PXVP215",47,0)
 . S PXTO=$P(PXNODE,U,4)
"RTN","PXVP215",48,0)
 . I PXFROM="IMM" S PXFROMEN=$P($G(^AUTTIMM(PXFROMEN,0)),U,1)
"RTN","PXVP215",49,0)
 . I PXFROM="CPT" S PXFROMEN=$$CODEC^ICPTCOD(PXFROMEN)
"RTN","PXVP215",50,0)
 . I (PXFROMEN="")!(PXFROMEN=-1) Q
"RTN","PXVP215",51,0)
 . I PXTO="IMM" S PXTOEN=$P($G(^AUTTIMM(PXTOEN,0)),U,1)
"RTN","PXVP215",52,0)
 . I PXTO="CPT" S PXTOEN=$$CODEC^ICPTCOD(PXTOEN)
"RTN","PXVP215",53,0)
 . S ^TMP("PX215PCM",$J,$$LINE())=PXINSTNUM_U_PXINSTNAME_U_PXFROM_U_PXFROMEN_U_PXTO_U_PXTOEN
"RTN","PXVP215",54,0)
 ;
"RTN","PXVP215",55,0)
 I '$D(^TMP("PX215PCM",$J)) D  Q
"RTN","PXVP215",56,0)
 . D MES("No entries to report.")
"RTN","PXVP215",57,0)
 ;
"RTN","PXVP215",58,0)
 S ^TMP("PX215PCM",$J,1)="This report was generated by the PX*1*215 Post-Install. It contains a list of"
"RTN","PXVP215",59,0)
 S ^TMP("PX215PCM",$J,3)="entries from the PCE CODE MAPPING file (#811.1) for your review."
"RTN","PXVP215",60,0)
 S ^TMP("PX215PCM",$J,4)=" "
"RTN","PXVP215",61,0)
 S ^TMP("PX215PCM",$J,5)="This report lists entries where both: "
"RTN","PXVP215",62,0)
 S ^TMP("PX215PCM",$J,6)="   1. The FROM field (#.03) equals ""CPT"" OR the immunization in the File Entry"
"RTN","PXVP215",63,0)
 S ^TMP("PX215PCM",$J,7)="      field (#.01) is inactive."
"RTN","PXVP215",64,0)
 S ^TMP("PX215PCM",$J,8)="   2. And the ON/OFF FLAG field (#.05) equals ""ON""."
"RTN","PXVP215",65,0)
 S ^TMP("PX215PCM",$J,9)=" "
"RTN","PXVP215",66,0)
 S ^TMP("PX215PCM",$J,10)="Station #^Station Name^From^From Code^To^To Code"
"RTN","PXVP215",67,0)
 ;
"RTN","PXVP215",68,0)
 S PXMSGSUB=PXINSTNUM_" PCE CODE MAPPING DATA FOR REVIEW"
"RTN","PXVP215",69,0)
 S PXMSGTO(DUZ)=""
"RTN","PXVP215",70,0)
 S PXREMMGIEN=$$GET1^DIQ(800,1_",",3)
"RTN","PXVP215",71,0)
 I PXREMMGIEN'="" D
"RTN","PXVP215",72,0)
 . S PXMGROUP="G."_$$GET1^DIQ(3.8,PXREMMGIEN_",",.01)
"RTN","PXVP215",73,0)
 . S PXMSGTO(PXMGROUP)=""
"RTN","PXVP215",74,0)
 I $$PROD^XUPROD(),$G(DUZ("AG"))="V" D
"RTN","PXVP215",75,0)
 . S PXMSGTO("TEITELBAUM.LEVI@FORUM.VA.GOV")=""
"RTN","PXVP215",76,0)
 . S PXMSGTO("SILVERMAN.ROBERT@FORUM.VA.GOV")=""
"RTN","PXVP215",77,0)
 . S PII                        ")=""
"RTN","PXVP215",78,0)
 S PXINSTR("FROM")="PX*1*215 POST-INSTALL"
"RTN","PXVP215",79,0)
 S PXINSTR("ADDR FLAGS")="R"
"RTN","PXVP215",80,0)
 D SENDMSG^XMXAPI(DUZ,PXMSGSUB,"^TMP(""PX215PCM"",$J)",.PXMSGTO,.PXINSTR,.PXMSGNUM)
"RTN","PXVP215",81,0)
 D MES("Emailed report message (#"_$G(PXMSGNUM)_")")
"RTN","PXVP215",82,0)
 I $G(XMERR),$D(^TMP("XMERR",$J)) D
"RTN","PXVP215",83,0)
 . D MES("The following errors occurred while sending the email:")
"RTN","PXVP215",84,0)
 . S PXERRNUM=0
"RTN","PXVP215",85,0)
 . F  S PXERRNUM=$O(^TMP("XMERR",$J,PXERRNUM)) Q:'PXERRNUM  D
"RTN","PXVP215",86,0)
 . . S PXERRTXT="  "_PXERRNUM_". "
"RTN","PXVP215",87,0)
 . . S PXERRLN=0
"RTN","PXVP215",88,0)
 . . F  S PXERRLN=$O(^TMP("XMERR",$J,PXERRNUM,"TEXT",PXERRLN)) Q:'PXERRLN  D
"RTN","PXVP215",89,0)
 . . . S PXERRTXT=PXERRTXT_$G(^TMP("XMERR",$J,PXERRNUM,"TEXT",PXERRLN))
"RTN","PXVP215",90,0)
 . . . D MES(PXERRTXT)
"RTN","PXVP215",91,0)
 . . . S PXERRTXT="     "
"RTN","PXVP215",92,0)
 ;
"RTN","PXVP215",93,0)
 K ^TMP("PX215PCM",$J)
"RTN","PXVP215",94,0)
 ;
"RTN","PXVP215",95,0)
 Q
"RTN","PXVP215",96,0)
 ;
"RTN","PXVP215",97,0)
LINE() ;
"RTN","PXVP215",98,0)
 S PXLINE=PXLINE+1
"RTN","PXVP215",99,0)
 Q PXLINE
"RTN","PXVP215",100,0)
 ;-------------------------------------------------------------------------
"RTN","PXVP215",101,0)
 ;
"RTN","PXVP215",102,0)
LOAD9206 ; Populate data for #920.6
"RTN","PXVP215",103,0)
 ;
"RTN","PXVP215",104,0)
 N PXERRMSG,PXFDA,PXI,PXIENS,PXROUTE,PXROUTENM,PXROUTES,PXSITE,PXSITEHL,PXSITES
"RTN","PXVP215",105,0)
 ;
"RTN","PXVP215",106,0)
 D BMES("*** Populating data for #920.6 ***")
"RTN","PXVP215",107,0)
 ;
"RTN","PXVP215",108,0)
 I $O(^PXV(920.6,0)) D  Q
"RTN","PXVP215",109,0)
 . D MES("Data already populated... no need to populate again.")
"RTN","PXVP215",110,0)
 ;
"RTN","PXVP215",111,0)
 S PXROUTES("INTRADERMAL")="LA^LLFA^LT^RA^RLFA^RT"
"RTN","PXVP215",112,0)
 S PXROUTES("PERCUTANEOUS")="LA^LLFA^LT^RA^RLFA^RT"
"RTN","PXVP215",113,0)
 S PXROUTES("SUBCUTANEOUS")="LA^LLFA^LT^RA^RLFA^RT"
"RTN","PXVP215",114,0)
 S PXROUTES("INTRAMUSCULAR")="LD^LG^LVL^RD^RG^RVL^RVG^LVG"
"RTN","PXVP215",115,0)
 S PXROUTES("NASAL")="BN^LN^RN"
"RTN","PXVP215",116,0)
 S PXROUTES("ORAL")=""
"RTN","PXVP215",117,0)
 ;
"RTN","PXVP215",118,0)
 S PXROUTENM=""
"RTN","PXVP215",119,0)
 F  S PXROUTENM=$O(PXROUTES(PXROUTENM)) Q:PXROUTENM=""  D
"RTN","PXVP215",120,0)
 . K PXFDA,PXERRMSG,PXIENS
"RTN","PXVP215",121,0)
 . D CLEAN^DILF
"RTN","PXVP215",122,0)
 . ;
"RTN","PXVP215",123,0)
 . S PXROUTE=$O(^PXV(920.2,"B",PXROUTENM,0))
"RTN","PXVP215",124,0)
 . I 'PXROUTE D  Q
"RTN","PXVP215",125,0)
 . . D MES("Can't add mappings for route '"_PXROUTENM_"', as no #920.2 entry was found for it.")
"RTN","PXVP215",126,0)
 . ;
"RTN","PXVP215",127,0)
 . S PXFDA(1,920.6,"?+1,",.01)=PXROUTE
"RTN","PXVP215",128,0)
 . S PXIENS(1)=PXROUTE
"RTN","PXVP215",129,0)
 . ;
"RTN","PXVP215",130,0)
 . S PXSITES=$G(PXROUTES(PXROUTENM))
"RTN","PXVP215",131,0)
 . F PXI=1:1 S PXSITEHL=$P(PXSITES,U,PXI) Q:PXSITEHL=""  D
"RTN","PXVP215",132,0)
 . . S PXSITE=$O(^PXV(920.3,"B",PXSITEHL,0))
"RTN","PXVP215",133,0)
 . . I 'PXSITE D  Q
"RTN","PXVP215",134,0)
 . . . D MES("Can't add site '"_PXSITEHL_"', as no #920.3 entry was found for it.")
"RTN","PXVP215",135,0)
 . . ;
"RTN","PXVP215",136,0)
 . . S PXFDA(1,920.61,"?+"_(PXI+1)_",?+1,",.01)=PXSITE
"RTN","PXVP215",137,0)
 . ;
"RTN","PXVP215",138,0)
 . D UPDATE^DIE("","PXFDA(1)","PXIENS")
"RTN","PXVP215",139,0)
 . I $D(^TMP("DIERR",$J)) D
"RTN","PXVP215",140,0)
 . . D MES("The following errors occurred:")
"RTN","PXVP215",141,0)
 . . D MSG^DIALOG("AE",.PXERRMSG)
"RTN","PXVP215",142,0)
 . . D MES^XPDUTL(.PXERRMSG)
"RTN","PXVP215",143,0)
 . ;
"RTN","PXVP215",144,0)
 . K PXFDA,PXERRMSG,PXIENS
"RTN","PXVP215",145,0)
 . D CLEAN^DILF
"RTN","PXVP215",146,0)
 ;
"RTN","PXVP215",147,0)
 Q
"RTN","PXVP215",148,0)
 ;
"RTN","PXVP215",149,0)
 ;-------------------------------------------------------------------------
"RTN","PXVP215",150,0)
 ;
"RTN","PXVP215",151,0)
BMES(STR) ;
"RTN","PXVP215",152,0)
 ; Write string
"RTN","PXVP215",153,0)
 D BMES^XPDUTL($$TRIM^XLFSTR($$CJ^XLFSTR(STR,$G(IOM,80)),"R"," "))
"RTN","PXVP215",154,0)
 Q
"RTN","PXVP215",155,0)
MES(STR) ;
"RTN","PXVP215",156,0)
 ; Write string
"RTN","PXVP215",157,0)
 D MES^XPDUTL($$TRIM^XLFSTR($$CJ^XLFSTR(STR,$G(IOM,80)),"R"," "))
"RTN","PXVP215",158,0)
 Q
"RTN","PXVRESP")
0^34^B3798384
"RTN","PXVRESP",1,0)
PXVRESP ;BIR/ADM - VIMM DEFAULT RESPONSE FILE UTILITIES ;03/07/2016
"RTN","PXVRESP",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**215**;Aug 12, 1996;Build 10
"RTN","PXVRESP",3,0)
 ;
"RTN","PXVRESP",4,0)
 Q
"RTN","PXVRESP",5,0)
DEF ; edit immunization default responses file
"RTN","PXVRESP",6,0)
 N PXVDIV,PXVHD1,PXVHDR,PXVN,PXVNAME,PXVNUM,PXVOUT
"RTN","PXVRESP",7,0)
 S PXVOUT=0,(DIDEL,DLAYGO)=920.05
"RTN","PXVRESP",8,0)
 S PXVHD1="Enter/Edit Immunization Default Responses"
"RTN","PXVRESP",9,0)
 W @IOF,!,?10,PXVHD1,!
"RTN","PXVRESP",10,0)
 K DIC S DIC="^PXV(920.05,",DIC(0)="AEMLZ",DIC("A")="Select Facility: " D ^DIC
"RTN","PXVRESP",11,0)
 K DIC I $D(DTOUT)!$D(DUOUT)!(X="") S PXVOUT=1 D END Q
"RTN","PXVRESP",12,0)
 S PXVDIV=+Y,PXVN=+Y(0),PXVNAME=Y(0,0),PXVNUM=$$GET1^DIQ(4,PXVN,99),PXVHDR="Facility: "_PXVNAME_"  ("_PXVNUM_")"
"RTN","PXVRESP",13,0)
 W @IOF,!,?10,PXVHD1,!!,PXVHDR,!
"RTN","PXVRESP",14,0)
 S DA=PXVDIV,DIE=920.05,DR="1",DR(2,920.051)=".01;1302;1303;1312;1313;81101;" D ^DIE I $D(Y) D END Q
"RTN","PXVRESP",15,0)
END K DA,DIE,DIC,DIDEL,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","PXVRESP",16,0)
 Q
"RTN","PXVRESP",17,0)
 ;
"RTN","PXVRESP",18,0)
INST(PXVIS) ; returns facility ien in file #920.05 related to this immunization
"RTN","PXVRESP",19,0)
 ; PXVIS - ien of visit in file #9000010
"RTN","PXVRESP",20,0)
 N PXVINST,PXVFAC,PXVHL,PXVN,PXVPRNT,PXVSTN
"RTN","PXVRESP",21,0)
 S PXVFAC="",PXVN=$O(^PXV(920.05,0)) I 'PXVN Q PXVFAC
"RTN","PXVRESP",22,0)
 I $G(PXVIS) D
"RTN","PXVRESP",23,0)
 .S PXVHL=$P($G(^AUPNVSIT(PXVIS,0)),"^",22) I 'PXVHL Q
"RTN","PXVRESP",24,0)
 .S PXVINST=$P(^SC(PXVHL,0),"^",4) I 'PXVINST Q
"RTN","PXVRESP",25,0)
 .S PXVFAC=$O(^PXV(920.05,"B",PXVINST,0))
"RTN","PXVRESP",26,0)
 .I 'PXVFAC D
"RTN","PXVRESP",27,0)
 ..S PXVSTN=$$STA^XUAF4(PXINST) Q:PXVSTN=""
"RTN","PXVRESP",28,0)
 ..S PXVPRNT=$P($$PRNT^XUAF4(PXVSTN),"^")
"RTN","PXVRESP",29,0)
 ..S PXVFAC=$O(^PXV(920.05,"B",PXVPRNT,0))
"RTN","PXVRESP",30,0)
 I 'PXVFAC,+$G(DUZ(2)) D
"RTN","PXVRESP",31,0)
 .S PXVINST=$G(DUZ(2))
"RTN","PXVRESP",32,0)
 .S PXVFAC=$O(^PXV(920.05,"B",PXVINST,0))
"RTN","PXVRESP",33,0)
 .I 'PXVFAC D
"RTN","PXVRESP",34,0)
 ..S PXVSTN=$$STA^XUAF4(PXINST) Q:PXVSTN=""
"RTN","PXVRESP",35,0)
 ..S PXVPRNT=$P($$PRNT^XUAF4(PXVSTN),"^")
"RTN","PXVRESP",36,0)
 ..S PXVFAC=$O(^PXV(920.05,"B",PXVPRNT,0))
"RTN","PXVRESP",37,0)
 Q PXVFAC
"RTN","PXVRPC1")
0^24^B70359613
"RTN","PXVRPC1",1,0)
PXVRPC1 ;BIR/ADM - IMM MANUFACTURER API ;02/02/2015
"RTN","PXVRPC1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**215**;Aug 12, 1996;Build 10
"RTN","PXVRPC1",3,0)
 ;
"RTN","PXVRPC1",4,0)
 Q
"RTN","PXVRPC1",5,0)
ILOT(PXVRETRN,PXVLK,PXVI) ; return list of immunization lot information
"RTN","PXVRPC1",6,0)
 ;Input:
"RTN","PXVRPC1",7,0)
 ;  PXVRETRN - (required) return array of external field values
"RTN","PXVRPC1",8,0)
 ;  PXVLK    - (optional) information to be returned - defaults to list all entries (S:B)
"RTN","PXVRPC1",9,0)
 ;               R:XXX - return entry with ien XXX
"RTN","PXVRPC1",10,0)
 ;               N:XXX - return entry with lot number XXX
"RTN","PXVRPC1",11,0)
 ;               S:A   - return list of all active lot numbers
"RTN","PXVRPC1",12,0)
 ;               S:I   - return list of all inactive lot numbers
"RTN","PXVRPC1",13,0)
 ;               S:B   - return list of all lot numbers, active and inactive
"RTN","PXVRPC1",14,0)
 ;  PXVI     - (optional) 
"RTN","PXVRPC1",15,0)
 ;               1     - return alternate array with internal values in delimited string
"RTN","PXVRPC1",16,0)
 ; 
"RTN","PXVRPC1",17,0)
 ;Output:
"RTN","PXVRPC1",18,0)
 ;  PXVRETRN  - returned information is stored in ^TMP("PXVLST",$J))
"RTN","PXVRPC1",19,0)
 ;            - return info format: Field Name^Field Value
"RTN","PXVRPC1",20,0)
 ;            -       error format: -1^error message
"RTN","PXVRPC1",21,0)
 ;            -    alternate array: caret delimited string with differing internal and
"RTN","PXVRPC1",22,0)
 ;                                  external values separated by a tilde
"RTN","PXVRPC1",23,0)
 ;
"RTN","PXVRPC1",24,0)
 N PXVARAY,PXVFLG,PXVNAME,PXVVAL,PXVCT,PXVIEN,PXVSUM
"RTN","PXVRPC1",25,0)
 S PXVARAY="^TMP(""PXVLST"",$J)" K @PXVARAY
"RTN","PXVRPC1",26,0)
 S PXVLK=$S('$L($G(PXVLK)):"S:B",1:PXVLK)
"RTN","PXVRPC1",27,0)
 I $G(PXVI)'=1 S PXVI=0
"RTN","PXVRPC1",28,0)
 S PXVFLG=$P(PXVLK,":"),PXVVAL=$P(PXVLK,":",2)
"RTN","PXVRPC1",29,0)
 I $L(PXVFLG)>1!("RNS"'[PXVFLG) D IIV Q
"RTN","PXVRPC1",30,0)
 I PXVFLG="R",'$G(PXVVAL) S @PXVARAY@(0)="-1^Invalid input for immunization lot IEN" D TMPRET Q
"RTN","PXVRPC1",31,0)
 I PXVFLG="R",'$D(^AUTTIML(PXVVAL)) S @PXVARAY@(0)="-1^Invalid input for immunization lot IEN" D TMPRET Q
"RTN","PXVRPC1",32,0)
 I PXVFLG="N",'$L(PXVVAL) S @PXVARAY@(0)="-1^Invalid input for lot number" D TMPRET Q
"RTN","PXVRPC1",33,0)
 I PXVFLG="N",'$D(^AUTTIML("B",PXVVAL)) S @PXVARAY@(0)="-1^Invalid input for lot number" D TMPRET Q
"RTN","PXVRPC1",34,0)
 I PXVFLG="S",(PXVVAL'="A"&(PXVVAL'="B")&(PXVVAL'="I")) D IIV Q
"RTN","PXVRPC1",35,0)
 S (PXVCT,PXVSUM)=0
"RTN","PXVRPC1",36,0)
 I PXVFLG="R" S PXVIEN=PXVVAL D ONEL
"RTN","PXVRPC1",37,0)
 I PXVFLG="N" S PXVIEN=0 F  S PXVIEN=$O(^AUTTIML("B",PXVVAL,PXVIEN)) Q:'PXVIEN  D ONEL
"RTN","PXVRPC1",38,0)
 I PXVFLG="S" S PXVIEN=0 F  S PXVIEN=$O(^AUTTIML(PXVIEN)) Q:'PXVIEN  D ONEL
"RTN","PXVRPC1",39,0)
 I 'PXVI S PXVNAME="" F  S PXVNAME=$O(@PXVARAY@(PXVNAME)) Q:PXVNAME=""  S PXVCT=PXVCT+1,@PXVARAY@(PXVNAME,0)="RECORD^"_PXVCT_" OF "_PXVSUM
"RTN","PXVRPC1",40,0)
 I PXVI S @PXVARAY@(0)=PXVSUM_" RECORD"_$S(PXVSUM'>1:"",1:"S")
"RTN","PXVRPC1",41,0)
 I PXVSUM=0 S @PXVARAY@(0)="0 RECORDS"
"RTN","PXVRPC1",42,0)
 D TMPRET
"RTN","PXVRPC1",43,0)
 Q
"RTN","PXVRPC1",44,0)
 ;
"RTN","PXVRPC1",45,0)
ONEL ; return array containing info for selected immunization lot
"RTN","PXVRPC1",46,0)
 N PXV0,PXVFLD,PXVIENC,PXVY,PXVZ
"RTN","PXVRPC1",47,0)
 S PXVIENC=PXVIEN_",",PXV0=^AUTTIML(PXVIEN,0)
"RTN","PXVRPC1",48,0)
 I PXVFLG="S",PXVVAL="A",$P(PXV0,"^",3) Q
"RTN","PXVRPC1",49,0)
 I PXVFLG="S",PXVVAL="I",'$P(PXV0,"^",3) Q
"RTN","PXVRPC1",50,0)
 S PXVSUM=PXVSUM+1
"RTN","PXVRPC1",51,0)
 I 'PXVI D
"RTN","PXVRPC1",52,0)
 .D GETS^DIQ(9999999.41,PXVIENC,".01;.02;.03;.04;.09;.12;.15;.18","","PXVY")
"RTN","PXVRPC1",53,0)
 .S PXVZ=0 F  S PXVZ=$O(PXVY(9999999.41,PXVIENC,PXVZ)) Q:'PXVZ  D
"RTN","PXVRPC1",54,0)
 ..D FIELD^DID(9999999.41,PXVZ,"","LABEL","PXVFLD")
"RTN","PXVRPC1",55,0)
 ..I PXVZ=.01 S PXVNAME=PXVY(9999999.41,PXVIENC,PXVZ),PXVNAME=PXVNAME_" "_PXVSUM
"RTN","PXVRPC1",56,0)
 ..S @PXVARAY@(PXVNAME,PXVZ)=PXVFLD("LABEL")_"^"_PXVY(9999999.41,PXVIENC,PXVZ)
"RTN","PXVRPC1",57,0)
 .S @PXVARAY@(PXVNAME,.001)="IEN^"_PXVIEN
"RTN","PXVRPC1",58,0)
 I PXVI D
"RTN","PXVRPC1",59,0)
 .D GETS^DIQ(9999999.41,PXVIENC,".02;.03;.04;.09;.18","E","PXVY")
"RTN","PXVRPC1",60,0)
 .S PXVZ=PXVIEN_"^"_$P(PXV0,"^")_"^"_$P(PXV0,"^",2)_"~"_PXVY(9999999.41,PXVIENC,.02,"E")_"^"_$P(PXV0,"^",3)_"~"_PXVY(9999999.41,PXVIENC,.03,"E")
"RTN","PXVRPC1",61,0)
 .S PXVZ=PXVZ_"^"_$P(PXV0,"^",4)_"~"_PXVY(9999999.41,PXVIENC,.04,"E")_"^"_$P(PXV0,"^",9)_"~"_PXVY(9999999.41,PXVIENC,.09,"E")
"RTN","PXVRPC1",62,0)
 .S PXVZ=PXVZ_"^"_$P(PXV0,"^",12)_"^"_$P(PXV0,"^",15)_"^"_$P(PXV0,"^",18)_"~"_PXVY(9999999.41,PXVIENC,.18,"E")
"RTN","PXVRPC1",63,0)
 .S @PXVARAY@(PXVIEN)=PXVZ
"RTN","PXVRPC1",64,0)
 Q
"RTN","PXVRPC1",65,0)
 ;
"RTN","PXVRPC1",66,0)
IMAN(PXVRETRN,PXVLK,PXVDATE,PXVI) ; rpc to return immunization manufacturer information
"RTN","PXVRPC1",67,0)
 ;Input:
"RTN","PXVRPC1",68,0)
 ;  PXVRETRN - (required) return array
"RTN","PXVRPC1",69,0)
 ;  PXVLK    - (optional) information to be returned - defaults to list all entries (S:B)
"RTN","PXVRPC1",70,0)
 ;               R:XXX - return entry with ien XXX
"RTN","PXVRPC1",71,0)
 ;               M:XXX - return entry with MVX code XXX
"RTN","PXVRPC1",72,0)
 ;               N:XXX - return entry with imm manufacturer name XXX
"RTN","PXVRPC1",73,0)
 ;               S:A   - return list of all active manufacturers
"RTN","PXVRPC1",74,0)
 ;               S:I   - return list of all inactive manufacturers
"RTN","PXVRPC1",75,0)
 ;               S:B   - return list of all manufacturers, active and inactive
"RTN","PXVRPC1",76,0)
 ;  PXVDATE  - (optional) date for use in determining status - defaults to TODAY
"RTN","PXVRPC1",77,0)
 ;  PXVI     - (optional) 
"RTN","PXVRPC1",78,0)
 ;               1     - return alternate array with internal values in delimited string
"RTN","PXVRPC1",79,0)
 ;
"RTN","PXVRPC1",80,0)
 ;Output:
"RTN","PXVRPC1",81,0)
 ;  PXVRETRN  - returned information is stored in ^TMP("PXVLST",$J))
"RTN","PXVRPC1",82,0)
 ;            - return info format: Field Name^Field Value
"RTN","PXVRPC1",83,0)
 ;            -       error format: -1^error message
"RTN","PXVRPC1",84,0)
 ;            -    alternate array: caret delimited string with differing internal and
"RTN","PXVRPC1",85,0)
 ;                                  external values separated by a tilde
"RTN","PXVRPC1",86,0)
 ;
"RTN","PXVRPC1",87,0)
 N PXVARAY,PXVFLG,PXVNAME,PXVVAL,PXVCT,PXVIEN,PXVSUM
"RTN","PXVRPC1",88,0)
 S PXVARAY="^TMP(""PXVLST"",$J)" K @PXVARAY
"RTN","PXVRPC1",89,0)
 S PXVLK=$S('$L($G(PXVLK)):"S:B",1:PXVLK)
"RTN","PXVRPC1",90,0)
 I $G(PXVI)'=1 S PXVI=0
"RTN","PXVRPC1",91,0)
 S PXVFLG=$P(PXVLK,":"),PXVVAL=$P(PXVLK,":",2)
"RTN","PXVRPC1",92,0)
 I $L(PXVFLG)>1!("RMNS"'[PXVFLG) D IIV Q
"RTN","PXVRPC1",93,0)
 I PXVFLG="R",'$G(PXVVAL) S @PXVARAY@(0)="-1^Invalid input for manufacturer IEN" D TMPRET Q
"RTN","PXVRPC1",94,0)
 I PXVFLG="R",'$D(^AUTTIMAN(PXVVAL)) S @PXVARAY@(0)="-1^Invalid input for manufacturer IEN" D TMPRET Q
"RTN","PXVRPC1",95,0)
 I PXVFLG="M",'$L(PXVVAL) S @PXVARAY@(0)="-1^Invalid input for MVX code" D TMPRET Q
"RTN","PXVRPC1",96,0)
 I PXVFLG="M",'$D(^AUTTIMAN("M",PXVVAL)) S @PXVARAY@(0)="-1^Invalid input for MVX code" D TMPRET Q
"RTN","PXVRPC1",97,0)
 I PXVFLG="N",'$L(PXVVAL) S @PXVARAY@(0)="-1^Invalid input for manufacturer name" D TMPRET Q
"RTN","PXVRPC1",98,0)
 I PXVFLG="N",'$D(^AUTTIMAN("B",$G(PXVVAL))) S @PXVARAY@(0)="-1^Invalid input for manufacturer name" D TMPRET Q
"RTN","PXVRPC1",99,0)
 I PXVFLG="S",(PXVVAL'="A"&(PXVVAL'="B")&(PXVVAL'="I")) D IIV Q
"RTN","PXVRPC1",100,0)
 S PXVDATE=$S('$L($G(PXVDATE)):DT,1:PXVDATE)
"RTN","PXVRPC1",101,0)
 S (PXVCT,PXVSUM)=0
"RTN","PXVRPC1",102,0)
 I PXVFLG="R" S PXVIEN=PXVVAL D ONEM
"RTN","PXVRPC1",103,0)
 I PXVFLG="M" S PXVIEN=0 F  S PXVIEN=$O(^AUTTIMAN("M",PXVVAL,PXVIEN)) Q:'PXVIEN  D ONEM
"RTN","PXVRPC1",104,0)
 I PXVFLG="N" S PXVIEN=0 F  S PXVIEN=$O(^AUTTIMAN("B",PXVVAL,PXVIEN)) Q:'PXVIEN  D ONEM
"RTN","PXVRPC1",105,0)
 I PXVFLG="S" S PXVIEN=0 F  S PXVIEN=$O(^AUTTIMAN(PXVIEN)) Q:'PXVIEN  D ONEM
"RTN","PXVRPC1",106,0)
 I 'PXVI S PXVNAME="" F  S PXVNAME=$O(@PXVARAY@(PXVNAME)) Q:PXVNAME=""  S PXVCT=PXVCT+1,@PXVARAY@(PXVNAME,0)="RECORD^"_PXVCT_" OF "_PXVSUM
"RTN","PXVRPC1",107,0)
 I PXVI S @PXVARAY@(0)=PXVSUM_" RECORD"_$S(PXVSUM'>1:"",1:"S")
"RTN","PXVRPC1",108,0)
 I PXVSUM=0 S @PXVARAY@(0)="0 RECORDS"
"RTN","PXVRPC1",109,0)
 D TMPRET
"RTN","PXVRPC1",110,0)
 Q
"RTN","PXVRPC1",111,0)
 ;
"RTN","PXVRPC1",112,0)
ONEM ; return array containing info for selected manufacturer
"RTN","PXVRPC1",113,0)
 N PXVACT,PXVFILE,PXVFLD,PXVIENC,PXVP,PXVSTAT,PXV0,PXV2,PXVY,PXVZ,X
"RTN","PXVRPC1",114,0)
 S PXVIENC=PXVIEN_",",PXV0=^AUTTIMAN(PXVIEN,0),PXVFILE=9999999.04 D STAT
"RTN","PXVRPC1",115,0)
 I PXVFLG="S",PXVVAL="A",$P(PXV0,"^",3) Q
"RTN","PXVRPC1",116,0)
 I PXVFLG="S",PXVVAL="I",'$P(PXV0,"^",3) Q
"RTN","PXVRPC1",117,0)
 S PXVSUM=PXVSUM+1
"RTN","PXVRPC1",118,0)
 I 'PXVI D
"RTN","PXVRPC1",119,0)
 .D GETS^DIQ(9999999.04,PXVIENC,".01;.02;.03;201","","PXVY")
"RTN","PXVRPC1",120,0)
 .S PXVZ=0 F  S PXVZ=$O(PXVY(9999999.04,PXVIENC,PXVZ)) Q:'PXVZ  D
"RTN","PXVRPC1",121,0)
 ..D FIELD^DID(9999999.04,PXVZ,"","LABEL","PXVFLD")
"RTN","PXVRPC1",122,0)
 ..I PXVZ=.01 S PXVNAME=PXVY(9999999.04,PXVIENC,PXVZ),PXVNAME=PXVNAME_" "_PXVSUM
"RTN","PXVRPC1",123,0)
 ..S @PXVARAY@(PXVNAME,PXVZ)=PXVFLD("LABEL")_"^"_PXVY(9999999.04,PXVIENC,PXVZ)
"RTN","PXVRPC1",124,0)
 .S @PXVARAY@(PXVNAME,"STATUS")="STATUS^"_PXVSTAT
"RTN","PXVRPC1",125,0)
 .S @PXVARAY@(PXVNAME,.001)="IEN^"_PXVIEN
"RTN","PXVRPC1",126,0)
 I PXVI D
"RTN","PXVRPC1",127,0)
 .S PXVZ=PXVIEN_"^"_$P(PXV0,"^")_"^"_$P(PXV0,"^",2)_"^"_$P(PXV0,"^",3)_"~"_$S($P(PXV0,"^",3)=0:"ACTIVE",1:"INACTIVE")
"RTN","PXVRPC1",128,0)
 .S PXVZ=PXVZ_"^"_$P($G(^AUTTIMAN(PXVIEN,2)),"^")_"^"_PXVSTAT
"RTN","PXVRPC1",129,0)
 .S @PXVARAY@(PXVIEN)=PXVZ
"RTN","PXVRPC1",130,0)
 Q
"RTN","PXVRPC1",131,0)
 ;
"RTN","PXVRPC1",132,0)
IVIS(PXVRETRN,PXVLK,PXVDATE) ; rpc to return vaccine information statement information
"RTN","PXVRPC1",133,0)
 ;Input:
"RTN","PXVRPC1",134,0)
 ;  PXVRETRN - (required) return array
"RTN","PXVRPC1",135,0)
 ;  PXVLK    - (optional) information to be returned - defaults to list all entries (S:B)
"RTN","PXVRPC1",136,0)
 ;               R:XXX - return entry with ien XXX
"RTN","PXVRPC1",137,0)
 ;               N:XXX - return entry with VIS name XXX
"RTN","PXVRPC1",138,0)
 ;               S:A   - return list of all active VISs
"RTN","PXVRPC1",139,0)
 ;               S:I   - return list of all inactive VISs
"RTN","PXVRPC1",140,0)
 ;               S:B   - return list of all VISs, active and inactive
"RTN","PXVRPC1",141,0)
 ;  PXVDATE  - (optional) date for use in determining status - defaults to TODAY
"RTN","PXVRPC1",142,0)
 ;
"RTN","PXVRPC1",143,0)
 ;Output:
"RTN","PXVRPC1",144,0)
 ;  PXVRETRN  - returned information is stored in ^TMP("PXVLST",$J))
"RTN","PXVRPC1",145,0)
 ;            - return info format: Field Name^Field Value
"RTN","PXVRPC1",146,0)
 ;            -       error format: -1^error message
"RTN","PXVRPC1",147,0)
 ;
"RTN","PXVRPC1",148,0)
 N PXVARAY,PXVFLG,PXVNAME,PXVVAL,PXVCT,PXVIEN,PXVSUM
"RTN","PXVRPC1",149,0)
 S PXVARAY="^TMP(""PXVLST"",$J)" K @PXVARAY
"RTN","PXVRPC1",150,0)
 S PXVLK=$S('$L($G(PXVLK)):"S:B",1:PXVLK)
"RTN","PXVRPC1",151,0)
 S PXVFLG=$P(PXVLK,":"),PXVVAL=$P(PXVLK,":",2)
"RTN","PXVRPC1",152,0)
 I $L(PXVFLG)>1!("RNS"'[PXVFLG) D IIV Q
"RTN","PXVRPC1",153,0)
 I PXVFLG="R",'$G(PXVVAL) S @PXVARAY@(0)="-1^Invalid input for VIS IEN" D TMPRET Q
"RTN","PXVRPC1",154,0)
 I PXVFLG="R",'$D(^AUTTIVIS(PXVVAL)) S @PXVARAY@(0)="-1^Invalid input for VIS IEN" D TMPRET Q
"RTN","PXVRPC1",155,0)
 I PXVFLG="N",'$L(PXVVAL) S @PXVARAY@(0)="-1^Invalid input for VIS name" D TMPRET Q
"RTN","PXVRPC1",156,0)
 I PXVFLG="N",'$D(^AUTTIVIS("B",PXVVAL)) S @PXVARAY@(0)="-1^Invalid input for VIS name" D TMPRET Q 
"RTN","PXVRPC1",157,0)
 I PXVFLG="S",(PXVVAL'="A"&(PXVVAL'="B")&(PXVVAL'="I")) D IIV Q
"RTN","PXVRPC1",158,0)
 S PXVDATE=$S('$L($G(PXVDATE)):DT,1:PXVDATE)
"RTN","PXVRPC1",159,0)
 S (PXVCT,PXVSUM)=0
"RTN","PXVRPC1",160,0)
 I PXVFLG="R" S PXVIEN=PXVVAL D ONEV
"RTN","PXVRPC1",161,0)
 I PXVFLG="N" S PXVIEN=0 F  S PXVIEN=$O(^AUTTIVIS("B",PXVVAL,PXVIEN)) Q:'PXVIEN  D ONEV
"RTN","PXVRPC1",162,0)
 I PXVFLG="S" S PXVIEN=0 F  S PXVIEN=$O(^AUTTIVIS(PXVIEN)) Q:'PXVIEN  D ONEV
"RTN","PXVRPC1",163,0)
 S PXVNAME="" F  S PXVNAME=$O(@PXVARAY@(PXVNAME)) Q:PXVNAME=""  S PXVCT=PXVCT+1,@PXVARAY@(PXVNAME,0)="RECORD^"_PXVCT_" OF "_PXVSUM
"RTN","PXVRPC1",164,0)
 I PXVSUM=0 S @PXVARAY@(0)="0 RECORDS"
"RTN","PXVRPC1",165,0)
 D TMPRET
"RTN","PXVRPC1",166,0)
 Q
"RTN","PXVRPC1",167,0)
 ;
"RTN","PXVRPC1",168,0)
ONEV ; return array containing info for VIS
"RTN","PXVRPC1",169,0)
 N PXV,PXVACT,PXVFILE,PXVFLD,PXVIENC,PXVL,PXVP,PXVSTAT,PXVY,PXVZ
"RTN","PXVRPC1",170,0)
 S PXVIENC=PXVIEN_",",PXVFILE=920 D STAT
"RTN","PXVRPC1",171,0)
 I PXVFLG="S",PXVVAL="A",'PXVACT Q
"RTN","PXVRPC1",172,0)
 I PXVFLG="S",PXVVAL="I",PXVACT Q
"RTN","PXVRPC1",173,0)
 S PXVSUM=PXVSUM+1
"RTN","PXVRPC1",174,0)
 D GETS^DIQ(920,PXVIENC,".01;.02;.03;.04;2;100;101","","PXVP")
"RTN","PXVRPC1",175,0)
 S PXVZ=0 F  S PXVZ=$O(PXVP(920,PXVIENC,PXVZ)) Q:'PXVZ  D
"RTN","PXVRPC1",176,0)
 .D FIELD^DID(920,PXVZ,"","LABEL","PXVFLD")
"RTN","PXVRPC1",177,0)
 .I PXVZ=.01 S PXVNAME=PXVP(920,PXVIENC,PXVZ),PXVNAME=PXVNAME_" "_PXVSUM
"RTN","PXVRPC1",178,0)
 .I PXVZ=.04,PXVP(920,PXVIENC,PXVZ) N X S X=PXVP(920,PXVIENC,PXVZ) D  Q
"RTN","PXVRPC1",179,0)
 ..S PXV=$S(X=1:"ENGLISH",X=2:"GERMAN",X=3:"SPANISH",X=4:"FRENCH",X=5:"FINNISH",X=6:"ITALIAN",X=7:"PORTUGUESE",X=8:"ARABIC",X=11:"RUSSIAN",X=12:"GREEK",X=18:"HEBREW",1:X)
"RTN","PXVRPC1",180,0)
 ..S @PXVARAY@(PXVNAME,PXVZ)=PXVFLD("LABEL")_"^"_PXV
"RTN","PXVRPC1",181,0)
 .I PXVZ=2 D  Q
"RTN","PXVRPC1",182,0)
 ..I PXVP(920,PXVIENC,PXVZ)="" S @PXVARAY@(PXVNAME,PXVZ)=PXVFLD("LABEL")_"^"_PXVP(920,PXVIENC,PXVZ) Q
"RTN","PXVRPC1",183,0)
 ..S PXVL=0 F  S PXVL=$O(PXVP(920,PXVIENC,PXVZ,PXVL)) Q:'PXVL  D
"RTN","PXVRPC1",184,0)
 ...S @PXVARAY@(PXVNAME,PXVZ,PXVL)=PXVFLD("LABEL")_" "_PXVL_"^"_PXVP(920,PXVIENC,PXVZ,PXVL)
"RTN","PXVRPC1",185,0)
 .S @PXVARAY@(PXVNAME,PXVZ)=PXVFLD("LABEL")_"^"_PXVP(920,PXVIENC,PXVZ)
"RTN","PXVRPC1",186,0)
 S @PXVARAY@(PXVNAME,"STATUS")="STATUS^"_PXVSTAT
"RTN","PXVRPC1",187,0)
 S @PXVARAY@(PXVNAME,.001)="IEN^"_PXVIEN
"RTN","PXVRPC1",188,0)
 Q
"RTN","PXVRPC1",189,0)
 ;
"RTN","PXVRPC1",190,0)
STAT ;
"RTN","PXVRPC1",191,0)
 S PXVACT=$P($$GETSTAT^XTID(PXVFILE,,PXVIENC,$G(PXVDATE)),"^")
"RTN","PXVRPC1",192,0)
 I PXVACT="" S PXVACT=1
"RTN","PXVRPC1",193,0)
 S PXVSTAT=$S(PXVACT=0:"INACTIVE",1:"ACTIVE")
"RTN","PXVRPC1",194,0)
 Q
"RTN","PXVRPC1",195,0)
 ;
"RTN","PXVRPC1",196,0)
IIV ; return invalid input message
"RTN","PXVRPC1",197,0)
 S @PXVARAY@(0)="-1^Invalid input value"
"RTN","PXVRPC1",198,0)
TMPRET ;
"RTN","PXVRPC1",199,0)
 S PXVRETRN=$NA(@PXVARAY)
"RTN","PXVRPC1",200,0)
 Q
"RTN","PXVRPC1",201,0)
 ;
"RTN","PXVRPC2")
0^25^B29476719
"RTN","PXVRPC2",1,0)
PXVRPC2 ;BPFO/LMT - PCE RPCs for IMM Source, Route, Site ;02/16/16  13:00
"RTN","PXVRPC2",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**215**;Aug 12, 1996;Build 10
"RTN","PXVRPC2",3,0)
 ;
"RTN","PXVRPC2",4,0)
 ; Reference to ^DIA(920.X,"C") supported by ICR #2602
"RTN","PXVRPC2",5,0)
 ;
"RTN","PXVRPC2",6,0)
 ;************************************************************************
"RTN","PXVRPC2",7,0)
 ;
"RTN","PXVRPC2",8,0)
 ;Input:
"RTN","PXVRPC2",9,0)
 ;  PXVRSLT - (Required) Return value
"RTN","PXVRPC2",10,0)
 ;  PXVFLTR - (Optional; Defaults to "S:B") Filter. Possible values are:
"RTN","PXVRPC2",11,0)
 ;               R:XXX - Return entry with IEN XXX.
"RTN","PXVRPC2",12,0)
 ;               H:XXX - Return entry with HL7 Code XXX.
"RTN","PXVRPC2",13,0)
 ;               N:XXX - Return entry with #.01 field equal to XXX
"RTN","PXVRPC2",14,0)
 ;               S:X   - Return all entries with a status of X.
"RTN","PXVRPC2",15,0)
 ;                       Possible values of X:
"RTN","PXVRPC2",16,0)
 ;                         A - Active Entries
"RTN","PXVRPC2",17,0)
 ;                         I - Inactive Entries
"RTN","PXVRPC2",18,0)
 ;                         B - Both active and inactive entries
"RTN","PXVRPC2",19,0)
 ;
"RTN","PXVRPC2",20,0)
 ;Returns:
"RTN","PXVRPC2",21,0)
 ; PXVRSLT(0)=Count of elements returned (0 if nothing found)
"RTN","PXVRPC2",22,0)
 ; PXVRSLT(n)=IEN^Name^HL7 Code^Status (1:Active, 0:Inactive)
"RTN","PXVRPC2",23,0)
 ;
"RTN","PXVRPC2",24,0)
 ; For the IMMROUTE tag, see additional input and return values documented below.
"RTN","PXVRPC2",25,0)
 ;
"RTN","PXVRPC2",26,0)
 ; When filtering based off IEN, HL7 Code, or #.01 field, only one entry will be returned
"RTN","PXVRPC2",27,0)
 ; in PXVRSLT(1).
"RTN","PXVRPC2",28,0)
 ;
"RTN","PXVRPC2",29,0)
 ; When filtering based off status, multiple entries can be returned. The first entry will be
"RTN","PXVRPC2",30,0)
 ; returned in subscript 1, and subscripts will be incremented by 1 for further entries.
"RTN","PXVRPC2",31,0)
 ; Entries will be sorted alphabetically.
"RTN","PXVRPC2",32,0)
 ;
"RTN","PXVRPC2",33,0)
 ; If no entries are found based off the filtering criteria, PXVRSLT(0) will equal 0,
"RTN","PXVRPC2",34,0)
 ; and there will be no data returned in the subsequent subscripts.
"RTN","PXVRPC2",35,0)
 ;
"RTN","PXVRPC2",36,0)
 ;******************************************************************************
"RTN","PXVRPC2",37,0)
 ;
"RTN","PXVRPC2",38,0)
IMMSRC(PXVRSLT,PXVFLTR) ;
"RTN","PXVRPC2",39,0)
 D GETDATA(.PXVRSLT,920.1,$G(PXVFLTR),"")
"RTN","PXVRPC2",40,0)
 Q
"RTN","PXVRPC2",41,0)
 ;
"RTN","PXVRPC2",42,0)
IMMROUTE(PXVRSLT,PXVFLTR,PXVSITES) ;
"RTN","PXVRPC2",43,0)
 ; The following additional Input and Return values are available for IMMROUTE:
"RTN","PXVRPC2",44,0)
 ;   Input:
"RTN","PXVRPC2",45,0)
 ;      PXVSITES - (Optional) Controls if the available sites for a give route are returned
"RTN","PXVRPC2",46,0)
 ;   Returns:
"RTN","PXVRPC2",47,0)
 ;      If PXVSITES=1, the sites for a given route will be returned.
"RTN","PXVRPC2",48,0)
 ;       o if If only a subset of sites are selectable for a route,
"RTN","PXVRPC2",49,0)
 ;         that list will be returned in
"RTN","PXVRPC2",50,0)
 ;           PXVRSLT(n+1)=SITE^Site IEN 1
"RTN","PXVRPC2",51,0)
 ;           PXVRSLT(n+2)=SITE^Site IEN 2
"RTN","PXVRPC2",52,0)
 ;           PXVRSLT(n+x)=SITE^Site IEN x
"RTN","PXVRPC2",53,0)
 ;       o if all sites are selectable for a route, the RPC will return:
"RTN","PXVRPC2",54,0)
 ;           PXVRSLT(n+1)=SITE^ALL
"RTN","PXVRPC2",55,0)
 ;       o If no sites are selectable for a route, the RPC will return:
"RTN","PXVRPC2",56,0)
 ;           PXVRSLT(n+1)=SITE^NONE
"RTN","PXVRPC2",57,0)
 ;
"RTN","PXVRPC2",58,0)
 D GETDATA(.PXVRSLT,920.2,$G(PXVFLTR),$G(PXVSITES))
"RTN","PXVRPC2",59,0)
 Q
"RTN","PXVRPC2",60,0)
 ;
"RTN","PXVRPC2",61,0)
IMMSITE(PXVRSLT,PXVFLTR,PXVDATE) ;
"RTN","PXVRPC2",62,0)
 D GETDATA(.PXVRSLT,920.3,$G(PXVFLTR),"")
"RTN","PXVRPC2",63,0)
 Q
"RTN","PXVRPC2",64,0)
 ;
"RTN","PXVRPC2",65,0)
 ;************************************************************************
"RTN","PXVRPC2",66,0)
 ;
"RTN","PXVRPC2",67,0)
GETDATA(PXVRSLT,PXFILE,PXVFLTR,PXVSITES) ;
"RTN","PXVRPC2",68,0)
 ;
"RTN","PXVRPC2",69,0)
 N PXCNT,PXIEN,PXHL7,PXFKTRSTAT,PXFLTRTYP,PXFLTRVAL,PXFLTRSTAT,PXNAME,PXFLDS,PXSTAT
"RTN","PXVRPC2",70,0)
 S PXCNT=0
"RTN","PXVRPC2",71,0)
 S PXIEN=""
"RTN","PXVRPC2",72,0)
 S PXHL7=""
"RTN","PXVRPC2",73,0)
 S PXFLTRTYP="S"
"RTN","PXVRPC2",74,0)
 S PXFLTRSTAT="B"
"RTN","PXVRPC2",75,0)
 D CHKCACHE(PXFILE)
"RTN","PXVRPC2",76,0)
 ;
"RTN","PXVRPC2",77,0)
 I $G(PXVFLTR)'="" D
"RTN","PXVRPC2",78,0)
 . S PXFLTRTYP=$P(PXVFLTR,":",1)
"RTN","PXVRPC2",79,0)
 . S PXFLTRVAL=$P(PXVFLTR,":",2)
"RTN","PXVRPC2",80,0)
 ;
"RTN","PXVRPC2",81,0)
 I PXFLTRTYP="R" D  S PXVRSLT(0)=PXCNT Q
"RTN","PXVRPC2",82,0)
 . S PXIEN=PXFLTRVAL
"RTN","PXVRPC2",83,0)
 . I 'PXIEN Q
"RTN","PXVRPC2",84,0)
 . I '$D(^PXV(PXFILE,PXIEN)) Q
"RTN","PXVRPC2",85,0)
 . D ADDENTRY(.PXVRSLT,.PXFILE,.PXIEN,$G(PXVSITES),"",.PXCNT)
"RTN","PXVRPC2",86,0)
 ;
"RTN","PXVRPC2",87,0)
 I PXFLTRTYP="H" D  S PXVRSLT(0)=PXCNT Q
"RTN","PXVRPC2",88,0)
 . N PXINDEX
"RTN","PXVRPC2",89,0)
 . S PXHL7=PXFLTRVAL
"RTN","PXVRPC2",90,0)
 . I PXHL7="" Q
"RTN","PXVRPC2",91,0)
 . S PXINDEX="H"
"RTN","PXVRPC2",92,0)
 . I PXFILE=920.3 S PXINDEX="B"
"RTN","PXVRPC2",93,0)
 . S PXIEN=$O(^PXV(PXFILE,PXINDEX,PXHL7,0))
"RTN","PXVRPC2",94,0)
 . D ADDENTRY(.PXVRSLT,.PXFILE,.PXIEN,$G(PXVSITES),"",.PXCNT)
"RTN","PXVRPC2",95,0)
 ;
"RTN","PXVRPC2",96,0)
 I PXFLTRTYP="N" D  S PXVRSLT(0)=PXCNT Q
"RTN","PXVRPC2",97,0)
 . S PXNAME=PXFLTRVAL
"RTN","PXVRPC2",98,0)
 . I PXNAME="" Q
"RTN","PXVRPC2",99,0)
 . S PXIEN=$O(^PXV(PXFILE,"B",PXNAME,0))
"RTN","PXVRPC2",100,0)
 . D ADDENTRY(.PXVRSLT,.PXFILE,.PXIEN,$G(PXVSITES),"",.PXCNT)
"RTN","PXVRPC2",101,0)
 ;
"RTN","PXVRPC2",102,0)
 ; I PXFLTRTYP="S" D
"RTN","PXVRPC2",103,0)
 I $G(PXFLTRVAL)?1(1"A",1"I",1"B") S PXFLTRSTAT=PXFLTRVAL
"RTN","PXVRPC2",104,0)
 S PXNAME=""
"RTN","PXVRPC2",105,0)
 F  S PXNAME=$O(^PXV(PXFILE,"B",PXNAME)) Q:PXNAME=""  D
"RTN","PXVRPC2",106,0)
 . S PXIEN=0
"RTN","PXVRPC2",107,0)
 . F  S PXIEN=$O(^PXV(PXFILE,"B",PXNAME,PXIEN)) Q:'PXIEN  D
"RTN","PXVRPC2",108,0)
 . . I PXFILE=920.3,$G(^PXV(PXFILE,"B",PXNAME,PXIEN))=1 Q  ; cross-ref is on HL7 code - not .01
"RTN","PXVRPC2",109,0)
 . . D ADDENTRY(.PXVRSLT,.PXFILE,.PXIEN,$G(PXVSITES),PXFLTRSTAT,.PXCNT)
"RTN","PXVRPC2",110,0)
 ;
"RTN","PXVRPC2",111,0)
 S PXVRSLT(0)=PXCNT
"RTN","PXVRPC2",112,0)
 ;
"RTN","PXVRPC2",113,0)
 Q
"RTN","PXVRPC2",114,0)
 ;
"RTN","PXVRPC2",115,0)
ADDENTRY(PXVRSLT,PXFILE,PXIEN,PXVSITES,PXFLTRSTAT,PXCNT) ; Adds entry to PXVRSLT
"RTN","PXVRPC2",116,0)
 ;
"RTN","PXVRPC2",117,0)
 N PXFLDS,PXSTAT
"RTN","PXVRPC2",118,0)
 ;
"RTN","PXVRPC2",119,0)
 I 'PXIEN Q
"RTN","PXVRPC2",120,0)
 ;
"RTN","PXVRPC2",121,0)
 S PXFLDS=$$GETFLDS(PXFILE,PXIEN)
"RTN","PXVRPC2",122,0)
 S PXSTAT=$P(PXFLDS,U,4)
"RTN","PXVRPC2",123,0)
 ;
"RTN","PXVRPC2",124,0)
 I $G(PXFLTRSTAT)="A",'PXSTAT Q
"RTN","PXVRPC2",125,0)
 I $G(PXFLTRSTAT)="I",PXSTAT Q
"RTN","PXVRPC2",126,0)
 ;
"RTN","PXVRPC2",127,0)
 S PXCNT=PXCNT+1
"RTN","PXVRPC2",128,0)
 S PXVRSLT(PXCNT)=PXFLDS
"RTN","PXVRPC2",129,0)
 I PXFILE=920.2,$G(PXVSITES) D ADDSITES(.PXVRSLT,.PXCNT,.PXIEN)
"RTN","PXVRPC2",130,0)
 ;
"RTN","PXVRPC2",131,0)
 Q
"RTN","PXVRPC2",132,0)
 ;
"RTN","PXVRPC2",133,0)
GETFLDS(PXFILE,PXIEN) ; Returns field values
"RTN","PXVRPC2",134,0)
 ;
"RTN","PXVRPC2",135,0)
 N PXNAME,PXHL7,PXVRSLT,PXSTAT
"RTN","PXVRPC2",136,0)
 ;
"RTN","PXVRPC2",137,0)
 S PXNAME=$P($G(^PXV(PXFILE,PXIEN,0)),U,1)
"RTN","PXVRPC2",138,0)
 S PXHL7=$P($G(^PXV(PXFILE,PXIEN,0)),U,2)
"RTN","PXVRPC2",139,0)
 S PXSTAT=$$GETSTAT(PXFILE,PXIEN)
"RTN","PXVRPC2",140,0)
 ;
"RTN","PXVRPC2",141,0)
 S PXVRSLT=PXIEN_U_PXNAME_U_PXHL7_U_PXSTAT
"RTN","PXVRPC2",142,0)
 ;
"RTN","PXVRPC2",143,0)
 Q PXVRSLT
"RTN","PXVRPC2",144,0)
 ;
"RTN","PXVRPC2",145,0)
ADDSITES(PXVRSLT,PXCNT,PXROUTE) ; Add Sites to PXVRSLT
"RTN","PXVRPC2",146,0)
 ;
"RTN","PXVRPC2",147,0)
 N PXSITE,PXSITES
"RTN","PXVRPC2",148,0)
 ;
"RTN","PXVRPC2",149,0)
 D SITES^PXAPIIM(.PXSITES,PXROUTE,"R")
"RTN","PXVRPC2",150,0)
 ;
"RTN","PXVRPC2",151,0)
 S PXSITE=""
"RTN","PXVRPC2",152,0)
 F  S PXSITE=$O(PXSITES(PXSITE)) Q:PXSITE=""  D
"RTN","PXVRPC2",153,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC2",154,0)
 . S PXVRSLT(PXCNT)="SITE^"_PXSITE
"RTN","PXVRPC2",155,0)
 ;
"RTN","PXVRPC2",156,0)
 Q
"RTN","PXVRPC2",157,0)
 ;
"RTN","PXVRPC2",158,0)
GETSTAT(PXFILE,PXIEN) ;
"RTN","PXVRPC2",159,0)
 ;
"RTN","PXVRPC2",160,0)
 N PXSTAT
"RTN","PXVRPC2",161,0)
 ;
"RTN","PXVRPC2",162,0)
 I PXFILE?1(1"920.1",1"920.4") D  Q PXSTAT
"RTN","PXVRPC2",163,0)
 . S PXSTAT='$P($G(^PXV(PXFILE,PXIEN,0)),U,3)
"RTN","PXVRPC2",164,0)
 ;
"RTN","PXVRPC2",165,0)
 S PXSTAT=$G(^XTMP("PXVCACHE-"_PXFILE,PXIEN))
"RTN","PXVRPC2",166,0)
 I PXSTAT="" S PXSTAT=$P($$GETSTAT^XTID(PXFILE,"",PXIEN_","),U,1)
"RTN","PXVRPC2",167,0)
 I PXSTAT="" S PXSTAT=1
"RTN","PXVRPC2",168,0)
 Q PXSTAT
"RTN","PXVRPC2",169,0)
 ;
"RTN","PXVRPC2",170,0)
CHKCACHE(PXFILE) ; Check Cache - see if we need to update
"RTN","PXVRPC2",171,0)
 ;
"RTN","PXVRPC2",172,0)
 N PXCACHEDT,PXLASTEDITDT
"RTN","PXVRPC2",173,0)
 ;
"RTN","PXVRPC2",174,0)
 I PXFILE?1(1"920.1",1"920.4") Q
"RTN","PXVRPC2",175,0)
 ;
"RTN","PXVRPC2",176,0)
 S PXLASTEDITDT=$O(^DIA(PXFILE,"C",""),-1)   ;ICR #2602
"RTN","PXVRPC2",177,0)
 S PXCACHEDT=$P($G(^XTMP("PXVCACHE-"_PXFILE,0)),U,2)
"RTN","PXVRPC2",178,0)
 I PXCACHEDT,PXCACHEDT>PXLASTEDITDT Q
"RTN","PXVRPC2",179,0)
 D UPDCACHE(PXFILE)
"RTN","PXVRPC2",180,0)
 ;
"RTN","PXVRPC2",181,0)
 Q
"RTN","PXVRPC2",182,0)
 ;
"RTN","PXVRPC2",183,0)
UPDCACHE(PXFILE) ;
"RTN","PXVRPC2",184,0)
 ;
"RTN","PXVRPC2",185,0)
 N PXIEN,PXSTAT
"RTN","PXVRPC2",186,0)
 ;
"RTN","PXVRPC2",187,0)
 K ^XTMP("PXVCACHE-"_PXFILE)
"RTN","PXVRPC2",188,0)
 S ^XTMP("PXVCACHE-"_PXFILE,0)=$$FMADD^XLFDT(DT,730)_U_$$NOW^XLFDT()_U_"Cache status for file #"_PXFILE
"RTN","PXVRPC2",189,0)
 S PXIEN=0
"RTN","PXVRPC2",190,0)
 F  S PXIEN=$O(^PXV(PXFILE,PXIEN)) Q:'PXIEN  D
"RTN","PXVRPC2",191,0)
 . S PXSTAT=$P($$GETSTAT^XTID(PXFILE,"",PXIEN_","),U,1)
"RTN","PXVRPC2",192,0)
 . I PXSTAT="" S PXSTAT=1
"RTN","PXVRPC2",193,0)
 . S ^XTMP("PXVCACHE-"_PXFILE,PXIEN)=PXSTAT
"RTN","PXVRPC2",194,0)
 ;
"RTN","PXVRPC2",195,0)
 Q
"RTN","PXVRPC3")
0^26^B28618741
"RTN","PXVRPC3",1,0)
PXVRPC3 ;MSC/DKA - VIMM 2.0 RPC code to return list of Immunizations ;10/27/2015 13:36
"RTN","PXVRPC3",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**215**;Aug 12, 1996;Build 10
"RTN","PXVRPC3",3,0)
 ;
"RTN","PXVRPC3",4,0)
 Q
"RTN","PXVRPC3",5,0)
IMMDATA(PXVRET,PXVFLTR,SUBFILES) ; Return array of entries from IMMUNIZATION, File #9999999.14
"RTN","PXVRPC3",6,0)
 ; PXVFLTR can have one of these values:
"RTN","PXVRPC3",7,0)
 ;   R:XXX - Return entry with IEN XXX.
"RTN","PXVRPC3",8,0)
 ;   S:A   - List of Active Immunizations (default)
"RTN","PXVRPC3",9,0)
 ;   S:H   - List of [Selectable for] Historic Immunizations
"RTN","PXVRPC3",10,0)
 ;   S:*   - All records (Including Inactive Immunizations)
"RTN","PXVRPC3",11,0)
 ; SUBFILES is 1 or Y to include the subfiles when returning the data
"RTN","PXVRPC3",12,0)
 ; If SUBFILES is 0 or N (or not specified) then return just this subset of fields:
"RTN","PXVRPC3",13,0)
 ; IEN, NAME, SHORT NAME, CVX CODE, MAX # IN SERIES, INACTIVE FLAG,
"RTN","PXVRPC3",14,0)
 ; MNEMONIC, ACRONYM, SELECTABLE FOR HISTORIC)
"RTN","PXVRPC3",15,0)
 N PXVFILE,PXVIEN,PXVIENS,PXVCNT,PXVGBL,PXVDATA,PXVSTR,PXVREF,PXVERR,PXVSUB,PXVSUBC,PXVDELIM,PXVSBSCR
"RTN","PXVRPC3",16,0)
 N PXVBRIEF,PXVACTIV,PXVHISTR,PXVINCLU,PXVTEMP,PXVDLM1,PXVDLM2,PXVDLM3,PXVVALID,PXVERMSG,PXVTYPE
"RTN","PXVRPC3",17,0)
 N PXVSDATA,PXVSERR,PXVFMT,PXVSUB2,PXVSUB2C,PXVSVSC2
"RTN","PXVRPC3",18,0)
 S SUBFILES=+$TR($E($G(SUBFILES,0)),"YyNn","1100")
"RTN","PXVRPC3",19,0)
 S PXVFLTR=$G(PXVFLTR,"S:A") S:PXVFLTR="" PXVFLTR="S:A"
"RTN","PXVRPC3",20,0)
 S PXVGBL=$NA(^AUTTIMM)
"RTN","PXVRPC3",21,0)
 K PXVRET S PXVRET=$NA(^TMP("PXVRPC3",$J)) K @PXVRET
"RTN","PXVRPC3",22,0)
 S PXVVALID=1 ; Assume the parameters are valid until proven otherwise
"RTN","PXVRPC3",23,0)
 I $E(PXVFLTR,1,2)="R:" D
"RTN","PXVRPC3",24,0)
 . S PXVFMT="R",PXVIEN=$E(PXVFLTR,3,$L(PXVFLTR)),PXVTYPE="*"
"RTN","PXVRPC3",25,0)
 . S:PXVIEN'=+PXVIEN!(PXVIEN<1) PXVVALID=0,PXVERMSG="Invalid IEN specified for R: format in PXVFLTR parameter"
"RTN","PXVRPC3",26,0)
 . Q:PXVIEN=""
"RTN","PXVRPC3",27,0)
 . S:'$D(@PXVGBL@(PXVIEN)) PXVVALID=0,PXVERMSG="Entry not found for the specified IEN"
"RTN","PXVRPC3",28,0)
 E  I $E(PXVFLTR,1,2)="S:" D
"RTN","PXVRPC3",29,0)
 . S PXVFMT="S",PXVTYPE=$E(PXVFLTR,3)
"RTN","PXVRPC3",30,0)
 . S:PXVTYPE'="A"&(PXVTYPE'="H")&(PXVTYPE'="*") PXVVALID=0,PXVERMSG="Invalid type specified for S: format in PXVFLTR parameter"
"RTN","PXVRPC3",31,0)
 . S ACTONLY=PXVTYPE'="H" ; ActiveOnly is any type (A or *) except H
"RTN","PXVRPC3",32,0)
 . S SELHIST=PXVTYPE'="A" ; Selectable for Historic is any type (H or *) except A
"RTN","PXVRPC3",33,0)
 E  S PXVVALID=0,PXVERMSG="Invalid Parameter(s)"
"RTN","PXVRPC3",34,0)
 I 'PXVVALID S @PXVRET@(0)=-1_U_PXVERMSG Q
"RTN","PXVRPC3",35,0)
 S PXVBRIEF=".01;.02;.03;.05;.07;8801;8802;8803"
"RTN","PXVRPC3",36,0)
 S PXVCNT=0
"RTN","PXVRPC3",37,0)
 S PXVFILE=9999999.14
"RTN","PXVRPC3",38,0)
 I PXVFMT="R" D
"RTN","PXVRPC3",39,0)
 . D GETFLDS
"RTN","PXVRPC3",40,0)
 E  I PXVFMT="S" D
"RTN","PXVRPC3",41,0)
 . S PXVIEN=0
"RTN","PXVRPC3",42,0)
 . F  S PXVIEN=$O(@PXVGBL@(PXVIEN)) Q:'PXVIEN  D GETFLDS
"RTN","PXVRPC3",43,0)
 S @PXVRET@(0)=PXVCNT ; Put the number of returned records in the first node of the array
"RTN","PXVRPC3",44,0)
 Q
"RTN","PXVRPC3",45,0)
GETFLDS ; Get fields for one IEN
"RTN","PXVRPC3",46,0)
 S PXVIENS=PXVIEN_","
"RTN","PXVRPC3",47,0)
 K PXVDATA,PXVERR
"RTN","PXVRPC3",48,0)
 I 'SUBFILES D GETS^DIQ(PXVFILE,PXVIENS,PXVBRIEF,"I","PXVDATA","PXVERR")
"RTN","PXVRPC3",49,0)
 I SUBFILES D GETS^DIQ(PXVFILE,PXVIENS,"**","IE","PXVDATA","PXVERR")
"RTN","PXVRPC3",50,0)
 S PXVREF=$NA(PXVDATA(PXVFILE,PXVIENS))
"RTN","PXVRPC3",51,0)
 S PXVSTR=""
"RTN","PXVRPC3",52,0)
 S $P(PXVSTR,U,1)=PXVIEN
"RTN","PXVRPC3",53,0)
 ; NAME
"RTN","PXVRPC3",54,0)
 S $P(PXVSTR,U,2)=@PXVREF@(.01,"I")
"RTN","PXVRPC3",55,0)
 S $P(PXVSTR,U,3)=@PXVREF@(.02,"I")
"RTN","PXVRPC3",56,0)
 S $P(PXVSTR,U,4)=@PXVREF@(.03,"I")
"RTN","PXVRPC3",57,0)
 S $P(PXVSTR,U,5)=@PXVREF@(.05,"I")
"RTN","PXVRPC3",58,0)
 ; INACTIVE FLAG - Return 0 or 1 instead of "" or 1
"RTN","PXVRPC3",59,0)
 S (PXVTEMP,$P(PXVSTR,U,6))=+@PXVREF@(.07,"I")
"RTN","PXVRPC3",60,0)
 S PXVACTIV='PXVTEMP
"RTN","PXVRPC3",61,0)
 S $P(PXVSTR,U,7)=@PXVREF@(8801,"I")
"RTN","PXVRPC3",62,0)
 S $P(PXVSTR,U,8)=@PXVREF@(8802,"I")
"RTN","PXVRPC3",63,0)
 S (PXVTEMP,$P(PXVSTR,U,9))=@PXVREF@(8803,"I")
"RTN","PXVRPC3",64,0)
 S PXVHISTR=PXVTEMP="Y"
"RTN","PXVRPC3",65,0)
 S PXVINCLU=1 ; Assume the record is to be included until proven otherwise
"RTN","PXVRPC3",66,0)
 I PXVFMT'="R",PXVTYPE'="*" D
"RTN","PXVRPC3",67,0)
 . I ACTONLY,'PXVACTIV S PXVINCLU=0
"RTN","PXVRPC3",68,0)
 . E  I SELHIST,'PXVHISTR S PXVINCLU=0
"RTN","PXVRPC3",69,0)
 Q:'PXVINCLU
"RTN","PXVRPC3",70,0)
 D:SUBFILES SUBFILES
"RTN","PXVRPC3",71,0)
 S PXVCNT=PXVCNT+1
"RTN","PXVRPC3",72,0)
 S @PXVRET@(PXVCNT)=PXVSTR
"RTN","PXVRPC3",73,0)
 Q
"RTN","PXVRPC3",74,0)
SUBFILES ; Add the subfile multiples to the array
"RTN","PXVRPC3",75,0)
 ; Subfiles:
"RTN","PXVRPC3",76,0)
 S PXVDLM1="|",PXVDLM2="~",PXVDLM3=";;"
"RTN","PXVRPC3",77,0)
 ; Field 2 - CDC FULL VACCINE NAME
"RTN","PXVRPC3",78,0)
 ; There's only one entry in Field 2 for each Immunization, but that may change
"RTN","PXVRPC3",79,0)
 S PXVSUB="",PXVSUBC=0
"RTN","PXVRPC3",80,0)
 F  S PXVSUBC=PXVSUBC+1 Q:'$D(@PXVREF@(2,PXVSUBC))  D
"RTN","PXVRPC3",81,0)
 . S $P(PXVSUB,PXVDLM1,PXVSUBC)=@PXVREF@(2,PXVSUBC)
"RTN","PXVRPC3",82,0)
 S $P(PXVSTR,U,10)=PXVSUB
"RTN","PXVRPC3",83,0)
 ; Field 3 - CODING SYSTEM
"RTN","PXVRPC3",84,0)
 S PXVREF=$NA(PXVDATA(PXVFILE_"3"))
"RTN","PXVRPC3",85,0)
 S PXVSBSCR="",PXVSUB="",PXVSUBC=0
"RTN","PXVRPC3",86,0)
 F  S PXVSBSCR=$O(@PXVREF@(PXVSBSCR)) Q:PXVSBSCR=""  D
"RTN","PXVRPC3",87,0)
 . S PXVSUBC=PXVSUBC+1
"RTN","PXVRPC3",88,0)
 . K PXVSDATA,PXVSERR
"RTN","PXVRPC3",89,0)
 . D GETS^DIQ(PXVFILE_"3",PXVSBSCR,"**","","PXVSDATA","PXVSERR")
"RTN","PXVRPC3",90,0)
 . S PXVSVSC2="",PXVSUB2C=0,PXVSUB2=""
"RTN","PXVRPC3",91,0)
 . F  S PXVSVSC2=$O(PXVSDATA(PXVFILE_"31",PXVSVSC2)) Q:PXVSVSC2=""  D
"RTN","PXVRPC3",92,0)
 . . S PXVSUB2C=PXVSUB2C+1
"RTN","PXVRPC3",93,0)
 . . S $P(PXVSUB2,PXVDLM3,PXVSUB2C)=PXVSDATA(PXVFILE_"31",PXVSVSC2,.01)
"RTN","PXVRPC3",94,0)
 . S $P(PXVSUB,PXVDLM1,PXVSUBC)=@PXVREF@(PXVSBSCR,.01,"I")_PXVDLM2_PXVSUB2
"RTN","PXVRPC3",95,0)
 S $P(PXVSTR,U,11)=PXVSUB
"RTN","PXVRPC3",96,0)
 ; Field 4 - VACCINE INFORMATION STATEMENT
"RTN","PXVRPC3",97,0)
 S PXVREF=$NA(PXVDATA(PXVFILE_"4"))
"RTN","PXVRPC3",98,0)
 S PXVSBSCR="",PXVSUB="",PXVSUBC=0
"RTN","PXVRPC3",99,0)
 F  S PXVSBSCR=$O(@PXVREF@(PXVSBSCR)) Q:PXVSBSCR=""  D
"RTN","PXVRPC3",100,0)
 . S PXVSUBC=PXVSUBC+1
"RTN","PXVRPC3",101,0)
 . S $P(PXVSUB,PXVDLM1,PXVSUBC)=@PXVREF@(PXVSBSCR,.01,"I")_PXVDLM2_@PXVREF@(PXVSBSCR,.01,"E")
"RTN","PXVRPC3",102,0)
 S $P(PXVSTR,U,12)=PXVSUB
"RTN","PXVRPC3",103,0)
 ; Field 5 - CDC PRODUCT NAME
"RTN","PXVRPC3",104,0)
 S PXVREF=$NA(PXVDATA(PXVFILE_"5"))
"RTN","PXVRPC3",105,0)
 S PXVSBSCR="",PXVSUB="",PXVSUBC=0
"RTN","PXVRPC3",106,0)
 F  S PXVSBSCR=$O(@PXVREF@(PXVSBSCR)) Q:PXVSBSCR=""  D
"RTN","PXVRPC3",107,0)
 . S PXVSUBC=PXVSUBC+1
"RTN","PXVRPC3",108,0)
 . S $P(PXVSUB,PXVDLM1,PXVSUBC)=@PXVREF@(PXVSBSCR,.01,"I")
"RTN","PXVRPC3",109,0)
 S $P(PXVSTR,U,13)=PXVSUB
"RTN","PXVRPC3",110,0)
 ; Field 7 - VACCINE GROUP NAME
"RTN","PXVRPC3",111,0)
 S PXVREF=$NA(PXVDATA(PXVFILE_"7"))
"RTN","PXVRPC3",112,0)
 S PXVSBSCR="",PXVSUB="",PXVSUBC=0
"RTN","PXVRPC3",113,0)
 F  S PXVSBSCR=$O(@PXVREF@(PXVSBSCR)) Q:PXVSBSCR=""  D
"RTN","PXVRPC3",114,0)
 . S PXVSUBC=PXVSUBC+1
"RTN","PXVRPC3",115,0)
 . S $P(PXVSUB,PXVDLM1,PXVSUBC)=@PXVREF@(PXVSBSCR,.01,"I")
"RTN","PXVRPC3",116,0)
 S $P(PXVSTR,U,14)=PXVSUB
"RTN","PXVRPC3",117,0)
 ; Field 10 - SYNONYM
"RTN","PXVRPC3",118,0)
 S PXVREF=$NA(PXVDATA(PXVFILE_"1"))
"RTN","PXVRPC3",119,0)
 S PXVSBSCR="",PXVSUB="",PXVSUBC=0
"RTN","PXVRPC3",120,0)
 F  S PXVSBSCR=$O(@PXVREF@(PXVSBSCR)) Q:PXVSBSCR=""  D
"RTN","PXVRPC3",121,0)
 . S PXVSUBC=PXVSUBC+1
"RTN","PXVRPC3",122,0)
 . S $P(PXVSUB,PXVDLM1,PXVSUBC)=@PXVREF@(PXVSBSCR,.01,"I")
"RTN","PXVRPC3",123,0)
 S $P(PXVSTR,U,15)=PXVSUB
"RTN","PXVRPC3",124,0)
 ; Field 99.991 - EFFECTIVE DATE/TIME
"RTN","PXVRPC3",125,0)
 S PXVREF=$NA(PXVDATA(PXVFILE_"99"))
"RTN","PXVRPC3",126,0)
 S PXVSBSCR="",PXVSUB="",PXVSUBC=0
"RTN","PXVRPC3",127,0)
 F  S PXVSBSCR=$O(@PXVREF@(PXVSBSCR)) Q:PXVSBSCR=""  D
"RTN","PXVRPC3",128,0)
 . S PXVSUBC=PXVSUBC+1
"RTN","PXVRPC3",129,0)
 . S $P(PXVSUB,PXVDLM1,PXVSUBC)=@PXVREF@(PXVSBSCR,.01,"I")_PXVDLM2_@PXVREF@(PXVSBSCR,.02,"I")
"RTN","PXVRPC3",130,0)
 S $P(PXVSTR,U,16)=PXVSUB
"RTN","PXVRPC3",131,0)
 Q
"RTN","PXVRPC4")
0^27^B131321819
"RTN","PXVRPC4",1,0)
PXVRPC4 ;BPFO/LMT - PCE RPCs for Immunization(s) ;03/10/16  21:16
"RTN","PXVRPC4",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**215**;Aug 12, 1996;Build 10
"RTN","PXVRPC4",3,0)
 ;
"RTN","PXVRPC4",4,0)
 ; Reference to ^DIA(9999999.14,"C") supported by ICR #2602
"RTN","PXVRPC4",5,0)
 ; Reference to NAME in file .85 is supported by ICR #6062
"RTN","PXVRPC4",6,0)
 ;
"RTN","PXVRPC4",7,0)
IMMRPC(PXRTRN,PXIMM,PXDATE) ; Entry point for RPC
"RTN","PXVRPC4",8,0)
 ;
"RTN","PXVRPC4",9,0)
 ; Returns an Immunization object
"RTN","PXVRPC4",10,0)
 ;
"RTN","PXVRPC4",11,0)
 ;Input:
"RTN","PXVRPC4",12,0)
 ;  PXRTRN - Return value passed by reference (Required)
"RTN","PXVRPC4",13,0)
 ;   PXIMM - Pointer to #9999999.14 (Required)
"RTN","PXVRPC4",14,0)
 ;  PXDATE - Immunization status and Codes will be based off this date
"RTN","PXVRPC4",15,0)
 ;           (Optional; Defaults to NOW)
"RTN","PXVRPC4",16,0)
 ;
"RTN","PXVRPC4",17,0)
 ;Returns:
"RTN","PXVRPC4",18,0)
 ;   ^TMP("PXVIMMRPC",$J,0)
"RTN","PXVRPC4",19,0)
 ;      1:  1 - Immunization was found. The "1" node will be returned, but
"RTN","PXVRPC4",20,0)
 ;              the other nodes are optional.
"RTN","PXVRPC4",21,0)
 ;         -1 - Immunization was not found; no other nodes will be returned
"RTN","PXVRPC4",22,0)
 ;   ^TMP("PXVIMMRPC",$J,1)
"RTN","PXVRPC4",23,0)
 ;      Note: Status (in the 5th piece) is determined as follows:
"RTN","PXVRPC4",24,0)
 ;        - If PXDATE is today, the status is based off the Inactive Flag (#.07)
"RTN","PXVRPC4",25,0)
 ;        - If PXDATE is different than today, we will look when an update was
"RTN","PXVRPC4",26,0)
 ;          last made to the Immunization file (based off the Audits).
"RTN","PXVRPC4",27,0)
 ;          If there have not been any changes since PXDATE, we will get the
"RTN","PXVRPC4",28,0)
 ;          status based off the Inactive Flag, otherwise, we will get the
"RTN","PXVRPC4",29,0)
 ;          status for that date by calling GETSTAT^XTID.
"RTN","PXVRPC4",30,0)
 ;      1: "IMM"
"RTN","PXVRPC4",31,0)
 ;      2: #9999999.14 IEN
"RTN","PXVRPC4",32,0)
 ;      3: Name (#.01)
"RTN","PXVRPC4",33,0)
 ;      4: CVX Code (#.03)
"RTN","PXVRPC4",34,0)
 ;      5: Status (1: Active; 0: Inactive)
"RTN","PXVRPC4",35,0)
 ;      6: Selectable for Historic (#8803)
"RTN","PXVRPC4",36,0)
 ;      7: Mnemonic (#8801)
"RTN","PXVRPC4",37,0)
 ;      8: Acronym (#8802)
"RTN","PXVRPC4",38,0)
 ;      9: Max # In Series (#.05)
"RTN","PXVRPC4",39,0)
 ;      10: Combination Immunization (Y/N) (#.2)
"RTN","PXVRPC4",40,0)
 ;      11: Reading Required (#.51)
"RTN","PXVRPC4",41,0)
 ;   ^TMP("PXVIMMRPC",$J,x)
"RTN","PXVRPC4",42,0)
 ;      1: "VIS"
"RTN","PXVRPC4",43,0)
 ;      2: #920 IEN
"RTN","PXVRPC4",44,0)
 ;      3: Name (#920,#.01)
"RTN","PXVRPC4",45,0)
 ;      4: Edition Date (#920,#.02)
"RTN","PXVRPC4",46,0)
 ;      5: Edition Status (#920,#.03)
"RTN","PXVRPC4",47,0)
 ;      6: Language (#920, #.04)
"RTN","PXVRPC4",48,0)
 ;      7: 2D Bar Code (#100)
"RTN","PXVRPC4",49,0)
 ;   ^TMP("PXVIMMRPC",$J,x)
"RTN","PXVRPC4",50,0)
 ;      1: "CDC"
"RTN","PXVRPC4",51,0)
 ;      2: CDC Product Name (#9999999.145, #.01)
"RTN","PXVRPC4",52,0)
 ;   ^TMP("PXVIMMRPC",$J,x)
"RTN","PXVRPC4",53,0)
 ;      1: "GROUP"
"RTN","PXVRPC4",54,0)
 ;      2: Vaccine Group Name (#9999999.147, #.01)
"RTN","PXVRPC4",55,0)
 ;   ^TMP("PXVIMMRPC",$J,x)
"RTN","PXVRPC4",56,0)
 ;      1: "SYNONYM"
"RTN","PXVRPC4",57,0)
 ;      2: Synonym (#9999999.141, #.01)
"RTN","PXVRPC4",58,0)
 ;   ^TMP("PXVIMMRPC",$J,x)
"RTN","PXVRPC4",59,0)
 ;      Note: Only active codes (based off PXDATE) are returned.
"RTN","PXVRPC4",60,0)
 ;      1: "CS"
"RTN","PXVRPC4",61,0)
 ;      2: Coding System (#9999999.143, #.01)
"RTN","PXVRPC4",62,0)
 ;      3: Code (#9999999.1431,#.01)
"RTN","PXVRPC4",63,0)
 ;      4: Variable pointer. e.g., IEN;ICPT(
"RTN","PXVRPC4",64,0)
 ;      5: Short Description
"RTN","PXVRPC4",65,0)
 ;   ^TMP("PXVIMMRPC",$J,x)
"RTN","PXVRPC4",66,0)
 ;      Note: Only active lots are returned.
"RTN","PXVRPC4",67,0)
 ;            Also, the Expiration date must be >= PXDATE
"RTN","PXVRPC4",68,0)
 ;      1: "LOT"
"RTN","PXVRPC4",69,0)
 ;      2: #9999999.41 IEN
"RTN","PXVRPC4",70,0)
 ;      3: Lot Number (#9999999.41, #.01)
"RTN","PXVRPC4",71,0)
 ;      4: Manufacturer (#9999999.04, #.01)
"RTN","PXVRPC4",72,0)
 ;      5: Expiration Date (#9999999.41, #.09)
"RTN","PXVRPC4",73,0)
 ;      6: Doses Unused (#9999999.41, #.12)
"RTN","PXVRPC4",74,0)
 ;      7: Low Supply Alert (#9999999.41, #.15)
"RTN","PXVRPC4",75,0)
 ;      8: NDC Code (#9999999.41, #.18)
"RTN","PXVRPC4",76,0)
 ;   ^TMP("PXVIMMRPC",$J,x)
"RTN","PXVRPC4",77,0)
 ;      Note: Only active contraindications are returned
"RTN","PXVRPC4",78,0)
 ;      1: "CONTRA"
"RTN","PXVRPC4",79,0)
 ;      2: #920.4 variable pointer: IEN;PXV(920.4,
"RTN","PXVRPC4",80,0)
 ;      3: Name (#920.4, #.01)
"RTN","PXVRPC4",81,0)
 ;      4: Status (1:Active, 0:Inactive)
"RTN","PXVRPC4",82,0)
 ;      5: Code|Coding System (#920.4, #.02 and .05)
"RTN","PXVRPC4",83,0)
 ;      6: NIP004 (#920.4, #.04)
"RTN","PXVRPC4",84,0)
 ;      7: Contraindication/Precaution (#920.4, #.06)
"RTN","PXVRPC4",85,0)
 ;   ^TMP("PXVIMMRPC",$J,x)
"RTN","PXVRPC4",86,0)
 ;      1: "DEF"
"RTN","PXVRPC4",87,0)
 ;      2: Default Route (#920.051, #1302)
"RTN","PXVRPC4",88,0)
 ;      3: Default Site (#920.051, #1303)
"RTN","PXVRPC4",89,0)
 ;      4: Default Dose (#920.051, #1312)
"RTN","PXVRPC4",90,0)
 ;      5: Default Dose Units (#920.051, #1313)
"RTN","PXVRPC4",91,0)
 ;      6: Default Dose Units (external format) (#920.051, #1313)
"RTN","PXVRPC4",92,0)
 ;   ^TMP("PXVIMMRPC",$J,x)
"RTN","PXVRPC4",93,0)
 ;      1: "DEFC"
"RTN","PXVRPC4",94,0)
 ;      2: Default Comments (#920.051, #81101)
"RTN","PXVRPC4",95,0)
 ;
"RTN","PXVRPC4",96,0)
 N PXCNT,PXCODESYS,PXFLD,PXI,PXIMMARR,PXIMMSUB,PXNODE,PXSUB
"RTN","PXVRPC4",97,0)
 ;
"RTN","PXVRPC4",98,0)
 S PXSUB="PXVIMMRPC"
"RTN","PXVRPC4",99,0)
 S PXRTRN=$NA(^TMP(PXSUB,$J))
"RTN","PXVRPC4",100,0)
 K ^TMP(PXSUB,$J)
"RTN","PXVRPC4",101,0)
 ;
"RTN","PXVRPC4",102,0)
 D GETIMM(.PXIMMARR,$G(PXIMM),$G(PXDATE))
"RTN","PXVRPC4",103,0)
 S PXIMMSUB="PXVIMM"
"RTN","PXVRPC4",104,0)
 ;
"RTN","PXVRPC4",105,0)
 S PXCNT=0
"RTN","PXVRPC4",106,0)
 ;
"RTN","PXVRPC4",107,0)
 I '$D(^TMP(PXIMMSUB,$J)) D  Q
"RTN","PXVRPC4",108,0)
 . S ^TMP(PXSUB,$J,PXCNT)="-1"
"RTN","PXVRPC4",109,0)
 ;
"RTN","PXVRPC4",110,0)
 S ^TMP(PXSUB,$J,PXCNT)=1
"RTN","PXVRPC4",111,0)
 S PXCNT=PXCNT+1
"RTN","PXVRPC4",112,0)
 S ^TMP(PXSUB,$J,PXCNT)="IMM"_U_$G(^TMP(PXIMMSUB,$J,0))
"RTN","PXVRPC4",113,0)
 ;
"RTN","PXVRPC4",114,0)
 F PXFLD="VIS","LOT","CDC","GROUP","SYNONYM","CONTRA","DEF","DEFC" D
"RTN","PXVRPC4",115,0)
 . I '$D(^TMP(PXIMMSUB,$J,PXFLD)) Q
"RTN","PXVRPC4",116,0)
 . S PXI=0 F  S PXI=$O(^TMP(PXIMMSUB,$J,PXFLD,PXI)) Q:'PXI  D
"RTN","PXVRPC4",117,0)
 . . S PXNODE=$G(^TMP(PXIMMSUB,$J,PXFLD,PXI,0))
"RTN","PXVRPC4",118,0)
 . . I PXNODE="" Q
"RTN","PXVRPC4",119,0)
 . . S PXCNT=PXCNT+1
"RTN","PXVRPC4",120,0)
 . . S ^TMP(PXSUB,$J,PXCNT)=PXFLD_U_PXNODE
"RTN","PXVRPC4",121,0)
 ;
"RTN","PXVRPC4",122,0)
 S PXFLD="CS"
"RTN","PXVRPC4",123,0)
 I $D(^TMP(PXIMMSUB,$J,PXFLD)) D
"RTN","PXVRPC4",124,0)
 . S PXCODESYS=""
"RTN","PXVRPC4",125,0)
 . F  S PXCODESYS=$O(^TMP(PXIMMSUB,$J,PXFLD,PXCODESYS)) Q:PXCODESYS=""  D
"RTN","PXVRPC4",126,0)
 . . S PXI=0
"RTN","PXVRPC4",127,0)
 . . F  S PXI=$O(^TMP(PXIMMSUB,$J,PXFLD,PXCODESYS,PXI)) Q:'PXI  D
"RTN","PXVRPC4",128,0)
 . . . S PXNODE=$G(^TMP(PXIMMSUB,$J,PXFLD,PXCODESYS,PXI,0))
"RTN","PXVRPC4",129,0)
 . . . I PXNODE="" Q
"RTN","PXVRPC4",130,0)
 . . . S PXCNT=PXCNT+1
"RTN","PXVRPC4",131,0)
 . . . S ^TMP(PXSUB,$J,PXCNT)=PXFLD_U_PXCODESYS_U_PXNODE
"RTN","PXVRPC4",132,0)
 ;
"RTN","PXVRPC4",133,0)
 K ^TMP(PXIMMSUB,$J)
"RTN","PXVRPC4",134,0)
 ;
"RTN","PXVRPC4",135,0)
 Q
"RTN","PXVRPC4",136,0)
 ;
"RTN","PXVRPC4",137,0)
GETIMM(PXRTRN,PXIMM,PXDATE) ; Entry point for API
"RTN","PXVRPC4",138,0)
 ;
"RTN","PXVRPC4",139,0)
 N PXAUDIT,PXI,PXNODE,PXNODE0,PXNODETMP,PXSUB
"RTN","PXVRPC4",140,0)
 ;
"RTN","PXVRPC4",141,0)
 S PXSUB="PXVIMM"
"RTN","PXVRPC4",142,0)
 K ^TMP(PXSUB,$J)
"RTN","PXVRPC4",143,0)
 S PXRTRN=$NA(^TMP(PXSUB,$J))
"RTN","PXVRPC4",144,0)
 ;
"RTN","PXVRPC4",145,0)
 I '$G(PXIMM) Q
"RTN","PXVRPC4",146,0)
 I '$D(^AUTTIMM(PXIMM,0)) Q
"RTN","PXVRPC4",147,0)
 I '$G(PXDATE) S PXDATE=$$NOW^XLFDT()
"RTN","PXVRPC4",148,0)
 S PXAUDIT=0
"RTN","PXVRPC4",149,0)
 I $$GET1^DID(9999999.14,.07,"","AUDIT")="YES, ALWAYS" S PXAUDIT=1
"RTN","PXVRPC4",150,0)
 ;
"RTN","PXVRPC4",151,0)
 S PXNODE0=^AUTTIMM(PXIMM,0)
"RTN","PXVRPC4",152,0)
 S PXNODETMP=PXIMM_U_$P(PXNODE0,U,1)_U_$P(PXNODE0,U,3)
"RTN","PXVRPC4",153,0)
 S PXNODETMP=PXNODETMP_U_$$GETSTAT(PXIMM,PXDATE,$$GETCSTAT(PXDATE,PXAUDIT),PXAUDIT)
"RTN","PXVRPC4",154,0)
 S PXNODE=$P($G(^AUTTIMM(PXIMM,6)),U,1)
"RTN","PXVRPC4",155,0)
 S PXNODETMP=PXNODETMP_U_PXNODE
"RTN","PXVRPC4",156,0)
 S PXNODE=$G(^AUTTIMM(PXIMM,88))
"RTN","PXVRPC4",157,0)
 S PXNODETMP=PXNODETMP_U_$P(PXNODE,U,1)
"RTN","PXVRPC4",158,0)
 S PXNODETMP=PXNODETMP_U_$P(PXNODE,U,2)
"RTN","PXVRPC4",159,0)
 S PXNODETMP=PXNODETMP_U_$P(PXNODE0,U,5)_U_$P(PXNODE0,U,20)
"RTN","PXVRPC4",160,0)
 S PXNODE=$P($G(^AUTTIMM(PXIMM,.5)),U,1)
"RTN","PXVRPC4",161,0)
 S PXNODETMP=PXNODETMP_U_PXNODE
"RTN","PXVRPC4",162,0)
 S ^TMP(PXSUB,$J,0)=PXNODETMP
"RTN","PXVRPC4",163,0)
 ;
"RTN","PXVRPC4",164,0)
 I $D(^AUTTIMM(PXIMM,3)) D GETCS(PXSUB,PXIMM,PXDATE)
"RTN","PXVRPC4",165,0)
 I $D(^AUTTIMM(PXIMM,4)) D GETVIS(PXSUB,PXIMM)
"RTN","PXVRPC4",166,0)
 F PXI=5,7,10 I $D(^AUTTIMM(PXIMM,PXI)) D GETSUBS(PXSUB,PXIMM,PXI)
"RTN","PXVRPC4",167,0)
 D GETLOT(PXSUB,PXIMM,PXDATE)
"RTN","PXVRPC4",168,0)
 D GETCONT(PXSUB,PXIMM) ; Get Contraindications
"RTN","PXVRPC4",169,0)
 D GETDEF(PXSUB,PXIMM) ; Get Defaults
"RTN","PXVRPC4",170,0)
 ;
"RTN","PXVRPC4",171,0)
 Q
"RTN","PXVRPC4",172,0)
 ;
"RTN","PXVRPC4",173,0)
GETCS(PXSUB,PXIMM,PXDATE) ;
"RTN","PXVRPC4",174,0)
 ;
"RTN","PXVRPC4",175,0)
 N PXCNT,PXCODE,PXCODESYS,PXCODESYSLEX,PXLEX,PXLEXADATE,PXLEXARY,PXLEXIDATE,PXLEXNODE,PXLEXSUB,PXX,PXY
"RTN","PXVRPC4",176,0)
 ;
"RTN","PXVRPC4",177,0)
 S PXDATE=$P(PXDATE,".",1)
"RTN","PXVRPC4",178,0)
 S PXCNT=0
"RTN","PXVRPC4",179,0)
 ;
"RTN","PXVRPC4",180,0)
 S PXX=0
"RTN","PXVRPC4",181,0)
 F  S PXX=$O(^AUTTIMM(PXIMM,3,PXX)) Q:'PXX  D
"RTN","PXVRPC4",182,0)
 . S PXCODESYS=$G(^AUTTIMM(PXIMM,3,PXX,0))
"RTN","PXVRPC4",183,0)
 . I PXCODESYS="" Q
"RTN","PXVRPC4",184,0)
 . S PXCODESYSLEX=PXCODESYS
"RTN","PXVRPC4",185,0)
 . I PXCODESYSLEX?1(1"CPT-ADD",1"CPT-ADM") S PXCODESYSLEX=$P(PXCODESYSLEX,"-",1)
"RTN","PXVRPC4",186,0)
 . S PXY=0 F  S PXY=$O(^AUTTIMM(PXIMM,3,PXX,1,PXY)) Q:'PXY  D
"RTN","PXVRPC4",187,0)
 . . S PXCODE=$G(^AUTTIMM(PXIMM,3,PXX,1,PXY,0))
"RTN","PXVRPC4",188,0)
 . . I PXCODE="" Q
"RTN","PXVRPC4",189,0)
 . . ;
"RTN","PXVRPC4",190,0)
 . . K PXLEXARY
"RTN","PXVRPC4",191,0)
 . . S PXLEX=$$PERIOD^LEXU(PXCODE,PXCODESYSLEX,.PXLEXARY)
"RTN","PXVRPC4",192,0)
 . . ;
"RTN","PXVRPC4",193,0)
 . . I $P(PXLEX,U,1)=-1 D  Q
"RTN","PXVRPC4",194,0)
 . . . I PXCODESYSLEX?1(1"CPT",1"10D") Q
"RTN","PXVRPC4",195,0)
 . . . S PXCNT=PXCNT+1
"RTN","PXVRPC4",196,0)
 . . . S ^TMP(PXSUB,$J,"CS",PXCODESYS,PXCNT,0)=PXCODE
"RTN","PXVRPC4",197,0)
 . . ;
"RTN","PXVRPC4",198,0)
 . . S PXLEXADATE=$O(PXLEXARY((PXDATE+.00001)),-1)
"RTN","PXVRPC4",199,0)
 . . I PXLEXADATE="" Q
"RTN","PXVRPC4",200,0)
 . . S PXLEXNODE=$G(PXLEXARY(PXLEXADATE))
"RTN","PXVRPC4",201,0)
 . . S PXLEXIDATE=$P(PXLEXNODE,U,1)
"RTN","PXVRPC4",202,0)
 . . I PXLEXIDATE,PXDATE>PXLEXIDATE Q
"RTN","PXVRPC4",203,0)
 . . S PXCNT=PXCNT+1
"RTN","PXVRPC4",204,0)
 . . S ^TMP(PXSUB,$J,"CS",PXCODESYS,PXCNT,0)=PXCODE_U_$P(PXLEXNODE,U,3)_U_$P(PXLEXNODE,U,4)
"RTN","PXVRPC4",205,0)
 ;
"RTN","PXVRPC4",206,0)
 Q
"RTN","PXVRPC4",207,0)
 ;
"RTN","PXVRPC4",208,0)
GETVIS(PXSUB,PXIMM) ;
"RTN","PXVRPC4",209,0)
 ;
"RTN","PXVRPC4",210,0)
 N PXCNT,PXLANG,PXNODE,PXVIS,PXX
"RTN","PXVRPC4",211,0)
 ;
"RTN","PXVRPC4",212,0)
 S PXCNT=0
"RTN","PXVRPC4",213,0)
 S PXX=0
"RTN","PXVRPC4",214,0)
 F  S PXX=$O(^AUTTIMM(PXIMM,4,PXX)) Q:'PXX  D
"RTN","PXVRPC4",215,0)
 . S PXVIS=+$G(^AUTTIMM(PXIMM,4,PXX,0))
"RTN","PXVRPC4",216,0)
 . I PXVIS'>0 Q
"RTN","PXVRPC4",217,0)
 . I '$D(^AUTTIVIS(PXVIS,0)) Q
"RTN","PXVRPC4",218,0)
 . S PXNODE=$G(^AUTTIVIS(PXVIS,0))
"RTN","PXVRPC4",219,0)
 . I PXNODE="" Q
"RTN","PXVRPC4",220,0)
 . S PXLANG=$P(PXNODE,U,4)
"RTN","PXVRPC4",221,0)
 . I PXLANG'="" S PXLANG=$$GET1^DIQ(.85,PXLANG_",","NAME")  ;ICR 6062
"RTN","PXVRPC4",222,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC4",223,0)
 . S ^TMP(PXSUB,$J,"VIS",PXCNT,0)=PXVIS_U_$P(PXNODE,U,1,3)_U_PXLANG
"RTN","PXVRPC4",224,0)
 . S PXNODE=$P($G(^AUTTIVIS(PXVIS,100)),U,1)
"RTN","PXVRPC4",225,0)
 . S ^TMP(PXSUB,$J,"VIS",PXCNT,0)=^TMP(PXSUB,$J,"VIS",PXCNT,0)_U_PXNODE
"RTN","PXVRPC4",226,0)
 Q
"RTN","PXVRPC4",227,0)
 ;
"RTN","PXVRPC4",228,0)
GETSUBS(PXSUB,PXIMM,PXMULT) ;
"RTN","PXVRPC4",229,0)
 ;
"RTN","PXVRPC4",230,0)
 N PXCNT,PXFLD,PXNODE,PXX
"RTN","PXVRPC4",231,0)
 ;
"RTN","PXVRPC4",232,0)
 S PXFLD=$S(PXMULT=5:"CDC",PXMULT=7:"GROUP",PXMULT=10:"SYNONYM",1:"")
"RTN","PXVRPC4",233,0)
 I PXFLD="" Q
"RTN","PXVRPC4",234,0)
 S PXCNT=0
"RTN","PXVRPC4",235,0)
 S PXX=0 F  S PXX=$O(^AUTTIMM(PXIMM,PXMULT,PXX)) Q:'PXX  D
"RTN","PXVRPC4",236,0)
 . S PXNODE=$G(^AUTTIMM(PXIMM,PXMULT,PXX,0)) Q:PXNODE=""
"RTN","PXVRPC4",237,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC4",238,0)
 . S ^TMP(PXSUB,$J,PXFLD,PXCNT,0)=PXNODE
"RTN","PXVRPC4",239,0)
 Q
"RTN","PXVRPC4",240,0)
 ;
"RTN","PXVRPC4",241,0)
GETLOT(PXSUB,PXIMM,PXDATE) ;
"RTN","PXVRPC4",242,0)
 ;
"RTN","PXVRPC4",243,0)
 N PXCNT,PXEXPDATE,PXLOT,PXMAN,PXNDC,PXNODE,PXSTAT,PXTEMP
"RTN","PXVRPC4",244,0)
 ;
"RTN","PXVRPC4",245,0)
 S PXCNT=0
"RTN","PXVRPC4",246,0)
 S PXLOT=0
"RTN","PXVRPC4",247,0)
 F  S PXLOT=$O(^AUTTIML("C",PXIMM,PXLOT)) Q:'PXLOT  D
"RTN","PXVRPC4",248,0)
 . S PXNODE=$G(^AUTTIML(PXLOT,0))
"RTN","PXVRPC4",249,0)
 . I PXNODE="" Q
"RTN","PXVRPC4",250,0)
 . S PXEXPDATE=$P(PXNODE,U,9)
"RTN","PXVRPC4",251,0)
 . I $P(PXDATE,".",1)>$P(PXEXPDATE,".",1) Q
"RTN","PXVRPC4",252,0)
 . S PXSTAT=$P(PXNODE,U,3)
"RTN","PXVRPC4",253,0)
 . I PXSTAT>0 Q
"RTN","PXVRPC4",254,0)
 . S PXMAN=$P(PXNODE,U,2)
"RTN","PXVRPC4",255,0)
 . I PXMAN S PXMAN=$P($G(^AUTTIMAN(PXMAN,0)),U,1)
"RTN","PXVRPC4",256,0)
 . S PXNDC=$P(PXNODE,U,18)
"RTN","PXVRPC4",257,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC4",258,0)
 . S PXTEMP=PXLOT_U_$P(PXNODE,U,1)_U_PXMAN_U_PXEXPDATE_U_$P(PXNODE,U,12)_U_$P(PXNODE,U,15)_U_PXNDC
"RTN","PXVRPC4",259,0)
 . S ^TMP(PXSUB,$J,"LOT",PXCNT,0)=PXTEMP
"RTN","PXVRPC4",260,0)
 Q
"RTN","PXVRPC4",261,0)
 ;
"RTN","PXVRPC4",262,0)
GETCONT(PXSUB,PXIMM) ; Get Contraindications
"RTN","PXVRPC4",263,0)
 ;
"RTN","PXVRPC4",264,0)
 N PXCNT,PXFLDS,PXIEN,PXSKIP,PXSTAT
"RTN","PXVRPC4",265,0)
 ;
"RTN","PXVRPC4",266,0)
 S PXCNT=0
"RTN","PXVRPC4",267,0)
 S PXIEN=0
"RTN","PXVRPC4",268,0)
 F  S PXIEN=$O(^PXV(920.4,PXIEN)) Q:'PXIEN  D
"RTN","PXVRPC4",269,0)
 . ;
"RTN","PXVRPC4",270,0)
 . S PXSKIP=0
"RTN","PXVRPC4",271,0)
 . I $O(^PXV(920.4,PXIEN,3,0)) D
"RTN","PXVRPC4",272,0)
 . . I '$O(^PXV(920.4,PXIEN,3,"B",PXIMM,0)) S PXSKIP=1
"RTN","PXVRPC4",273,0)
 . I PXSKIP Q
"RTN","PXVRPC4",274,0)
 . ;
"RTN","PXVRPC4",275,0)
 . S PXFLDS=$$GETFLDS^PXVRPC5(920.4,PXIEN)
"RTN","PXVRPC4",276,0)
 . S PXSTAT=$P(PXFLDS,U,3)
"RTN","PXVRPC4",277,0)
 . I 'PXSTAT Q
"RTN","PXVRPC4",278,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC4",279,0)
 . S ^TMP(PXSUB,$J,"CONTRA",PXCNT,0)=PXFLDS
"RTN","PXVRPC4",280,0)
 Q
"RTN","PXVRPC4",281,0)
 ;
"RTN","PXVRPC4",282,0)
GETDEF(PXSUB,PXIMM) ; Get defaults
"RTN","PXVRPC4",283,0)
 ;
"RTN","PXVRPC4",284,0)
 N PXDFLTS,PXINST,PXNODE,PXTMP
"RTN","PXVRPC4",285,0)
 ;
"RTN","PXVRPC4",286,0)
 S PXINST=$G(DUZ(2))
"RTN","PXVRPC4",287,0)
 I 'PXINST S PXINST=$$KSP^XUPARAM("INST")
"RTN","PXVRPC4",288,0)
 I 'PXINST Q
"RTN","PXVRPC4",289,0)
 ;
"RTN","PXVRPC4",290,0)
 D IMMDEF^PXAPIIM(.PXDFLTS,PXIMM,PXINST)
"RTN","PXVRPC4",291,0)
 I '$D(PXDFLTS) Q
"RTN","PXVRPC4",292,0)
 ;
"RTN","PXVRPC4",293,0)
 S PXNODE=$G(PXDFLTS(13))
"RTN","PXVRPC4",294,0)
 S PXTMP=$P(PXNODE,U,2,3)_U_$P(PXNODE,U,12,13)
"RTN","PXVRPC4",295,0)
 I $P(PXTMP,U,4) D
"RTN","PXVRPC4",296,0)
 . S $P(PXTMP,U,5)=$$EXTERNAL^DILFD(9000010.11,1313,"",$P(PXTMP,U,4))
"RTN","PXVRPC4",297,0)
 I PXTMP'="^^^" S ^TMP(PXSUB,$J,"DEF",1,0)=PXTMP
"RTN","PXVRPC4",298,0)
 ;
"RTN","PXVRPC4",299,0)
 S PXNODE=$G(PXDFLTS(811))
"RTN","PXVRPC4",300,0)
 I PXNODE'="" S ^TMP(PXSUB,$J,"DEFC",1,0)=PXNODE
"RTN","PXVRPC4",301,0)
 ;
"RTN","PXVRPC4",302,0)
 Q
"RTN","PXVRPC4",303,0)
 ;
"RTN","PXVRPC4",304,0)
IMMSHORT(PXRSLT,PXFILTER,PXDATE) ;
"RTN","PXVRPC4",305,0)
 ;
"RTN","PXVRPC4",306,0)
 ; Return short list of immunizations
"RTN","PXVRPC4",307,0)
 ;
"RTN","PXVRPC4",308,0)
 ;Input:
"RTN","PXVRPC4",309,0)
 ;    PXRSLT - Return value passed by reference (Required)
"RTN","PXVRPC4",310,0)
 ;  PXFILTER - Filter (Optional; Defaults to "B")
"RTN","PXVRPC4",311,0)
 ;             Possible values are:
"RTN","PXVRPC4",312,0)
 ;               "A": Only return active entries
"RTN","PXVRPC4",313,0)
 ;               "H": Only return entries marked as Selectable for Historic
"RTN","PXVRPC4",314,0)
 ;               "B": Return both active entries and those marked as Selectable for Historic
"RTN","PXVRPC4",315,0)
 ;    PXDATE - Date (optional; defaults to TODAY)
"RTN","PXVRPC4",316,0)
 ;             Used for determining immunization status (both for filtering and for return value)
"RTN","PXVRPC4",317,0)
 ;
"RTN","PXVRPC4",318,0)
 ;Returns:
"RTN","PXVRPC4",319,0)
 ;   PXRTRN(x)
"RTN","PXVRPC4",320,0)
 ;      Note: Status (in the 5th piece) is determined as follows:
"RTN","PXVRPC4",321,0)
 ;        - If PXDATE is today, the status is based off the Inactive Flag (#.07)
"RTN","PXVRPC4",322,0)
 ;        - If PXDATE is different than today, we will look when an update was
"RTN","PXVRPC4",323,0)
 ;          last made to the Immunization file (based off the Audits).
"RTN","PXVRPC4",324,0)
 ;          If there have not been any changes since PXDATE, we will get the
"RTN","PXVRPC4",325,0)
 ;          status based off the Inactive Flag, otherwise, we will get the
"RTN","PXVRPC4",326,0)
 ;          status for that date by calling GETSTAT^XTID.
"RTN","PXVRPC4",327,0)
 ;      1: "IMM"
"RTN","PXVRPC4",328,0)
 ;      2: #9999999.14 IEN
"RTN","PXVRPC4",329,0)
 ;      3: Name (#.01)
"RTN","PXVRPC4",330,0)
 ;      4: CVX Code (#.03)
"RTN","PXVRPC4",331,0)
 ;      5: Status (1: Active; 0: Inactive)
"RTN","PXVRPC4",332,0)
 ;      6: Selectable for Historic (#8803)
"RTN","PXVRPC4",333,0)
 ;      7: Mnemonic (#8801)
"RTN","PXVRPC4",334,0)
 ;      8: Acronym (#8802)
"RTN","PXVRPC4",335,0)
 ;   PXRTRN(x)
"RTN","PXVRPC4",336,0)
 ;      1: "CDC"
"RTN","PXVRPC4",337,0)
 ;      2: CDC Product Name (#9999999.145, #.01)
"RTN","PXVRPC4",338,0)
 ;
"RTN","PXVRPC4",339,0)
 N PXAUDIT,PXCNT,PXGETCSTAT,PXIEN,PXNODE,PXSELHIST,PXSTAT,PXX
"RTN","PXVRPC4",340,0)
 ;
"RTN","PXVRPC4",341,0)
 I $G(PXFILTER)'?1(1"A",1"H",1"B") S PXFILTER="B"
"RTN","PXVRPC4",342,0)
 I '$G(PXDATE) S PXDATE=DT
"RTN","PXVRPC4",343,0)
 S PXAUDIT=0
"RTN","PXVRPC4",344,0)
 I $$GET1^DID(9999999.14,.07,"","AUDIT")="YES, ALWAYS" S PXAUDIT=1
"RTN","PXVRPC4",345,0)
 S PXGETCSTAT=$$GETCSTAT(PXDATE,PXAUDIT)
"RTN","PXVRPC4",346,0)
 ;
"RTN","PXVRPC4",347,0)
 S PXCNT=0
"RTN","PXVRPC4",348,0)
 S PXIEN=0
"RTN","PXVRPC4",349,0)
 F  S PXIEN=$O(^AUTTIMM(PXIEN)) Q:PXIEN'>0  D
"RTN","PXVRPC4",350,0)
 . S PXSELHIST=$P($G(^AUTTIMM(PXIEN,6)),U)
"RTN","PXVRPC4",351,0)
 . S PXSTAT=$$GETSTAT(PXIEN,PXDATE,PXGETCSTAT,PXAUDIT)
"RTN","PXVRPC4",352,0)
 . I PXFILTER="A",'PXSTAT Q
"RTN","PXVRPC4",353,0)
 . I PXFILTER="H",PXSELHIST'="Y" Q
"RTN","PXVRPC4",354,0)
 . I PXFILTER="B",'PXSTAT,PXSELHIST'="Y" Q
"RTN","PXVRPC4",355,0)
 . ;
"RTN","PXVRPC4",356,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC4",357,0)
 . S PXNODE=$G(^AUTTIMM(PXIEN,0))
"RTN","PXVRPC4",358,0)
 . S PXRSLT(PXCNT)="IMM"_U_PXIEN_U_$P(PXNODE,U,1)_U_$P(PXNODE,U,3)_U_PXSTAT_U_PXSELHIST
"RTN","PXVRPC4",359,0)
 . S PXNODE=$G(^AUTTIMM(PXIEN,88))
"RTN","PXVRPC4",360,0)
 . I PXNODE'="",PXNODE'=U S PXRSLT(PXCNT)=PXRSLT(PXCNT)_U_PXNODE
"RTN","PXVRPC4",361,0)
 . S PXX=0
"RTN","PXVRPC4",362,0)
 . F  S PXX=$O(^AUTTIMM(PXIEN,5,PXX)) Q:PXX'>0  D
"RTN","PXVRPC4",363,0)
 . . S PXNODE=$G(^AUTTIMM(PXIEN,5,PXX,0))
"RTN","PXVRPC4",364,0)
 . . I PXNODE="" Q
"RTN","PXVRPC4",365,0)
 . . S PXCNT=PXCNT+1
"RTN","PXVRPC4",366,0)
 . . S PXRSLT(PXCNT)="CDC"_U_PXNODE
"RTN","PXVRPC4",367,0)
 Q
"RTN","PXVRPC4",368,0)
 ;
"RTN","PXVRPC4",369,0)
GETSTAT(PXIMM,PXDATE,PXCURR,PXAUDIT) ;
"RTN","PXVRPC4",370,0)
 ;
"RTN","PXVRPC4",371,0)
 N PXLASTEDIT
"RTN","PXVRPC4",372,0)
 ;
"RTN","PXVRPC4",373,0)
 I PXCURR Q '$P($G(^AUTTIMM(PXIMM,0)),U,7)
"RTN","PXVRPC4",374,0)
 ;
"RTN","PXVRPC4",375,0)
 I PXAUDIT D
"RTN","PXVRPC4",376,0)
 . S PXLASTEDIT=$P($$LAST^DIAUTL(9999999.14,PXIMM,".07"),U,1)
"RTN","PXVRPC4",377,0)
 . I PXDATE>PXLASTEDIT S PXCURR=1
"RTN","PXVRPC4",378,0)
 I PXCURR Q '$P($G(^AUTTIMM(PXIMM,0)),U,7)
"RTN","PXVRPC4",379,0)
 ;
"RTN","PXVRPC4",380,0)
 Q $P($$GETSTAT^XTID(9999999.14,"",PXIMM_",",$G(PXDATE)),U,1)
"RTN","PXVRPC4",381,0)
 ;
"RTN","PXVRPC4",382,0)
GETCSTAT(PXDATE,PXAUDIT) ;
"RTN","PXVRPC4",383,0)
 ;
"RTN","PXVRPC4",384,0)
 ; Should we get current status of IMM entries or should we call GETSTAT^XTID
"RTN","PXVRPC4",385,0)
 ; to get status as of a specific date?
"RTN","PXVRPC4",386,0)
 ; Since GETSTAT^XTID is slow, we try to avoid it when possible.
"RTN","PXVRPC4",387,0)
 ;
"RTN","PXVRPC4",388,0)
 ; Returns: 0 - Call GETSTAT^XTID
"RTN","PXVRPC4",389,0)
 ;          1 - Get current status
"RTN","PXVRPC4",390,0)
 ;
"RTN","PXVRPC4",391,0)
 N PXLASTEDITDT,PXRSLT
"RTN","PXVRPC4",392,0)
 ;
"RTN","PXVRPC4",393,0)
 S PXRSLT=0
"RTN","PXVRPC4",394,0)
 ;
"RTN","PXVRPC4",395,0)
 I '$G(PXDATE) D  Q PXRSLT
"RTN","PXVRPC4",396,0)
 . S PXRSLT=1
"RTN","PXVRPC4",397,0)
 ;
"RTN","PXVRPC4",398,0)
 I $P(PXDATE,".",1)=DT D  Q PXRSLT
"RTN","PXVRPC4",399,0)
 . S PXRSLT=1
"RTN","PXVRPC4",400,0)
 ;
"RTN","PXVRPC4",401,0)
 ; If Inactive Flag is being audited (which should be the case)
"RTN","PXVRPC4",402,0)
 ; then get current status, if file has not been updated since PXDATE
"RTN","PXVRPC4",403,0)
 I PXAUDIT D
"RTN","PXVRPC4",404,0)
 . S PXLASTEDITDT=$O(^DIA(9999999.14,"C",""),-1)   ;ICR #2602
"RTN","PXVRPC4",405,0)
 . I PXDATE>PXLASTEDITDT S PXRSLT=1
"RTN","PXVRPC4",406,0)
 ;
"RTN","PXVRPC4",407,0)
 Q PXRSLT
"RTN","PXVRPC4",408,0)
 ;
"RTN","PXVRPC4",409,0)
IMMADMCD(PXRSLT,PXDATE) ;
"RTN","PXVRPC4",410,0)
 ;
"RTN","PXVRPC4",411,0)
 ; Returns Immunization Admin CPT codes
"RTN","PXVRPC4",412,0)
 ;
"RTN","PXVRPC4",413,0)
 ;Input:
"RTN","PXVRPC4",414,0)
 ;  PXRTRN - Return value passed by reference (Required)
"RTN","PXVRPC4",415,0)
 ;  PXDATE - Code status will be based off this date
"RTN","PXVRPC4",416,0)
 ;           (Optional; Defaults to TODAY)
"RTN","PXVRPC4",417,0)
 ;
"RTN","PXVRPC4",418,0)
 ;Returns:
"RTN","PXVRPC4",419,0)
 ;   PXRSLT(0) = Count of elements returned (0 if nothing found)
"RTN","PXVRPC4",420,0)
 ;   PXRSLT(n) =
"RTN","PXVRPC4",421,0)
 ;      Note: Only active codes (based off PXDATE) are returned.
"RTN","PXVRPC4",422,0)
 ;      1: "CPT-ADM" or "CPT-ADD"
"RTN","PXVRPC4",423,0)
 ;      2: Code
"RTN","PXVRPC4",424,0)
 ;      3: Variable pointer. e.g., IEN;ICPT(
"RTN","PXVRPC4",425,0)
 ;      4: Short Description
"RTN","PXVRPC4",426,0)
 ;
"RTN","PXVRPC4",427,0)
 N PXCNT,PXFLD,PXI,PXIMM,PXNODE,PXSUB
"RTN","PXVRPC4",428,0)
 ;
"RTN","PXVRPC4",429,0)
 S PXSUB="PXVIMMCODE"
"RTN","PXVRPC4",430,0)
 K ^TMP(PXSUB,$J)
"RTN","PXVRPC4",431,0)
 ;
"RTN","PXVRPC4",432,0)
 S PXCNT=0
"RTN","PXVRPC4",433,0)
 I '$G(PXDATE) S PXDATE=DT
"RTN","PXVRPC4",434,0)
 S PXIMM=$$IMMNODEF^PXAPIIM()
"RTN","PXVRPC4",435,0)
 I 'PXIMM S PXRSLT(PXCNT)=0 Q
"RTN","PXVRPC4",436,0)
 ;
"RTN","PXVRPC4",437,0)
 D GETCS(PXSUB,PXIMM,PXDATE)
"RTN","PXVRPC4",438,0)
 F PXFLD="CPT-ADM","CPT-ADD" D
"RTN","PXVRPC4",439,0)
 . I '$D(^TMP(PXSUB,$J,"CS",PXFLD)) Q
"RTN","PXVRPC4",440,0)
 . S PXI=0 F  S PXI=$O(^TMP(PXSUB,$J,"CS",PXFLD,PXI)) Q:'PXI  D
"RTN","PXVRPC4",441,0)
 . . S PXNODE=$G(^TMP(PXSUB,$J,"CS",PXFLD,PXI,0))
"RTN","PXVRPC4",442,0)
 . . I PXNODE="" Q
"RTN","PXVRPC4",443,0)
 . . S PXCNT=PXCNT+1
"RTN","PXVRPC4",444,0)
 . . S PXRSLT(PXCNT)=PXFLD_U_PXNODE
"RTN","PXVRPC4",445,0)
 ;
"RTN","PXVRPC4",446,0)
 K ^TMP(PXSUB,$J)
"RTN","PXVRPC4",447,0)
 S PXRSLT(0)=PXCNT
"RTN","PXVRPC4",448,0)
 ;
"RTN","PXVRPC4",449,0)
 Q
"RTN","PXVRPC5")
0^29^B35105697
"RTN","PXVRPC5",1,0)
PXVRPC5 ;BPFO/LMT - PCE RPCs for Imm Contraindications/refusals ;03/11/16  09:10
"RTN","PXVRPC5",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**215**;Aug 12, 1996;Build 10
"RTN","PXVRPC5",3,0)
 ;
"RTN","PXVRPC5",4,0)
 ;
"RTN","PXVRPC5",5,0)
GETICR(PXRSLT,PXFILE,PXFLTR) ;
"RTN","PXVRPC5",6,0)
 ;
"RTN","PXVRPC5",7,0)
 ; Returns entries from the IMM CONTRAINDICATION REASONS (#920.4) and
"RTN","PXVRPC5",8,0)
 ; IMM REFUSAL REASONS (#920.5) files.
"RTN","PXVRPC5",9,0)
 ;
"RTN","PXVRPC5",10,0)
 ;Input:
"RTN","PXVRPC5",11,0)
 ;  PXRSLT - Return value passed by reference (Required)
"RTN","PXVRPC5",12,0)
 ;  PXFILE - Which file to pull from (Optional; Leave this null to pull entries from both files)
"RTN","PXVRPC5",13,0)
 ;           Possible values are:
"RTN","PXVRPC5",14,0)
 ;               "920.4" - Only return entries from IMM CONTRAINDICATION REASONS (#920.4)
"RTN","PXVRPC5",15,0)
 ;               "920.5" - Only return entries from IMM REFUSAL REASONS (#920.5)
"RTN","PXVRPC5",16,0)
 ;  PXFLTR - Filter (Optional; Defaults to "S:A")
"RTN","PXVRPC5",17,0)
 ;           Possible values are:
"RTN","PXVRPC5",18,0)
 ;               R:X   - Return entry with IEN X (PXFILE must be passed in with this option).
"RTN","PXVRPC5",19,0)
 ;               C:X^Y - Return entry with Concept Code^Coding System X^Y (used only for #920.4).
"RTN","PXVRPC5",20,0)
 ;               H:X   - Return entry with HL7 Code X (used only for #920.5).
"RTN","PXVRPC5",21,0)
 ;               N:X   - Return entry with #.01 field equal to X
"RTN","PXVRPC5",22,0)
 ;               I:X   - Return all active entries that are selectable for Immunization IEN X.
"RTN","PXVRPC5",23,0)
 ;               S:A   - Return all active entries.
"RTN","PXVRPC5",24,0)
 ;               S:I   - Return all inactive entries.
"RTN","PXVRPC5",25,0)
 ;               S:B   - Return all entries (both active and inactive).
"RTN","PXVRPC5",26,0)
 ;
"RTN","PXVRPC5",27,0)
 ;Returns:
"RTN","PXVRPC5",28,0)
 ;  PXRSLT(0)=Count of elements returned (0 if nothing found)
"RTN","PXVRPC5",29,0)
 ;  For 920.4 Entry:
"RTN","PXVRPC5",30,0)
 ;    PXRSLT(n)=IEN;PXV(920.4,^Name^Status (1:Active, 0:Inactive)^Code|Coding System^NIP004^Contraindication/Precaution
"RTN","PXVRPC5",31,0)
 ;  For 920.5 Entry:
"RTN","PXVRPC5",32,0)
 ;    PXRSLT(n)=IEN;PXV(920.5,^Name^Status (1:Active, 0:Inactive)^HL7 Code
"RTN","PXVRPC5",33,0)
 ;
"RTN","PXVRPC5",34,0)
 N PXCNT,PXCODE,PXFILES,PXFLTRSTAT,PXFLTRTYP,PXFLTRVAL,PXIEN,PXSKIP,PXSYS,PXX
"RTN","PXVRPC5",35,0)
 ;
"RTN","PXVRPC5",36,0)
 I $G(PXFILE)'?1(1"920.4",1"920.5") S PXFILE=""
"RTN","PXVRPC5",37,0)
 I $P($G(PXFLTR),":",1)'?1(1"R",1"C",1"H",1"N",1"I",1"S") S PXFLTR="S:A"
"RTN","PXVRPC5",38,0)
 S PXCNT=0
"RTN","PXVRPC5",39,0)
 S PXFLTRTYP=$P(PXFLTR,":",1)
"RTN","PXVRPC5",40,0)
 S PXFLTRVAL=$P(PXFLTR,":",2)
"RTN","PXVRPC5",41,0)
 D CHKCACHE^PXVRPC2(920.5)
"RTN","PXVRPC5",42,0)
 ;
"RTN","PXVRPC5",43,0)
 I PXFLTRTYP="R" D
"RTN","PXVRPC5",44,0)
 . I 'PXFILE Q
"RTN","PXVRPC5",45,0)
 . S PXIEN=PXFLTRVAL
"RTN","PXVRPC5",46,0)
 . I 'PXIEN Q
"RTN","PXVRPC5",47,0)
 . I '$D(^PXV(PXFILE,PXIEN)) Q
"RTN","PXVRPC5",48,0)
 . D ADDENTRY(.PXRSLT,.PXFILE,.PXIEN,"",.PXCNT)
"RTN","PXVRPC5",49,0)
 ;
"RTN","PXVRPC5",50,0)
 I PXFLTRTYP="C" D
"RTN","PXVRPC5",51,0)
 . S PXFILE=920.4
"RTN","PXVRPC5",52,0)
 . S PXCODE=$P(PXFLTRVAL,U,1)
"RTN","PXVRPC5",53,0)
 . S PXSYS=$P(PXFLTRVAL,U,2)
"RTN","PXVRPC5",54,0)
 . I (PXCODE="")!(PXSYS="") Q
"RTN","PXVRPC5",55,0)
 . S PXIEN=0
"RTN","PXVRPC5",56,0)
 . S PXX=0
"RTN","PXVRPC5",57,0)
 . F  S PXX=$O(^PXV(PXFILE,"C",PXCODE,PXX)) Q:'PXX  D  Q:PXIEN
"RTN","PXVRPC5",58,0)
 . . I $P($G(^PXV(PXFILE,PXX,"VUID")),U,4)=PXSYS S PXIEN=PXX
"RTN","PXVRPC5",59,0)
 . I 'PXIEN Q
"RTN","PXVRPC5",60,0)
 . D ADDENTRY(.PXRSLT,.PXFILE,.PXIEN,"",.PXCNT)
"RTN","PXVRPC5",61,0)
 ;
"RTN","PXVRPC5",62,0)
 I PXFLTRTYP="H" D
"RTN","PXVRPC5",63,0)
 . S PXFILE=920.5
"RTN","PXVRPC5",64,0)
 . I PXFLTRVAL="" Q
"RTN","PXVRPC5",65,0)
 . S PXIEN=0
"RTN","PXVRPC5",66,0)
 . S PXX=0
"RTN","PXVRPC5",67,0)
 . F  S PXX=$O(^PXV(PXFILE,PXX)) Q:'PXX  D  Q:PXIEN
"RTN","PXVRPC5",68,0)
 . . I $P($G(^PXV(PXFILE,PXX,0)),U,2)=PXFLTRVAL S PXIEN=PXX
"RTN","PXVRPC5",69,0)
 . I 'PXIEN Q
"RTN","PXVRPC5",70,0)
 . D ADDENTRY(.PXRSLT,.PXFILE,.PXIEN,"",.PXCNT)
"RTN","PXVRPC5",71,0)
 ;
"RTN","PXVRPC5",72,0)
 I PXFILE="" D
"RTN","PXVRPC5",73,0)
 . S PXFILES(920.4)=""
"RTN","PXVRPC5",74,0)
 . S PXFILES(920.5)=""
"RTN","PXVRPC5",75,0)
 I PXFILE'="" S PXFILES(PXFILE)=""
"RTN","PXVRPC5",76,0)
 ;
"RTN","PXVRPC5",77,0)
 I PXFLTRTYP="N" D
"RTN","PXVRPC5",78,0)
 . I PXFLTRVAL="" Q
"RTN","PXVRPC5",79,0)
 . S PXIEN=0
"RTN","PXVRPC5",80,0)
 . S PXFILE=0
"RTN","PXVRPC5",81,0)
 . F  S PXFILE=$O(PXFILES(PXFILE)) Q:'PXFILE  D  Q:PXIEN
"RTN","PXVRPC5",82,0)
 . . S PXIEN=$O(^PXV(PXFILE,"B",PXFLTRVAL,0))
"RTN","PXVRPC5",83,0)
 . I 'PXIEN Q
"RTN","PXVRPC5",84,0)
 . D ADDENTRY(.PXRSLT,.PXFILE,.PXIEN,"",.PXCNT)
"RTN","PXVRPC5",85,0)
 ;
"RTN","PXVRPC5",86,0)
 I PXFLTRTYP?1(1"S",1"I") D
"RTN","PXVRPC5",87,0)
 . S PXFLTRSTAT="A"
"RTN","PXVRPC5",88,0)
 . I PXFLTRTYP="S",$G(PXFLTRVAL)?1(1"A",1"I",1"B") S PXFLTRSTAT=PXFLTRVAL
"RTN","PXVRPC5",89,0)
 . S PXFILE=0
"RTN","PXVRPC5",90,0)
 . F  S PXFILE=$O(PXFILES(PXFILE)) Q:'PXFILE  D
"RTN","PXVRPC5",91,0)
 . . S PXIEN=0
"RTN","PXVRPC5",92,0)
 . . F  S PXIEN=$O(^PXV(PXFILE,PXIEN)) Q:'PXIEN  D
"RTN","PXVRPC5",93,0)
 . . . ;
"RTN","PXVRPC5",94,0)
 . . . S PXSKIP=0
"RTN","PXVRPC5",95,0)
 . . . I PXFILE=920.4,PXFLTRTYP="I",PXFLTRVAL,$O(^PXV(PXFILE,PXIEN,3,0)) D
"RTN","PXVRPC5",96,0)
 . . . . I '$O(^PXV(PXFILE,PXIEN,3,"B",PXFLTRVAL,0)) S PXSKIP=1
"RTN","PXVRPC5",97,0)
 . . . I PXSKIP Q
"RTN","PXVRPC5",98,0)
 . . . ;
"RTN","PXVRPC5",99,0)
 . . . D ADDENTRY(.PXRSLT,.PXFILE,.PXIEN,PXFLTRSTAT,.PXCNT)
"RTN","PXVRPC5",100,0)
 ;
"RTN","PXVRPC5",101,0)
 S PXRSLT(0)=PXCNT
"RTN","PXVRPC5",102,0)
 ;
"RTN","PXVRPC5",103,0)
 Q
"RTN","PXVRPC5",104,0)
 ;
"RTN","PXVRPC5",105,0)
ADDENTRY(PXRSLT,PXFILE,PXIEN,PXFLTRSTAT,PXCNT) ; Adds entry to PXVRSLT
"RTN","PXVRPC5",106,0)
 ;
"RTN","PXVRPC5",107,0)
 N PXFLDS,PXSTAT
"RTN","PXVRPC5",108,0)
 ;
"RTN","PXVRPC5",109,0)
 I 'PXIEN Q
"RTN","PXVRPC5",110,0)
 ;
"RTN","PXVRPC5",111,0)
 S PXFLDS=$$GETFLDS(PXFILE,PXIEN)
"RTN","PXVRPC5",112,0)
 S PXSTAT=$P(PXFLDS,U,3)
"RTN","PXVRPC5",113,0)
 ;
"RTN","PXVRPC5",114,0)
 I $G(PXFLTRSTAT)="A",'PXSTAT Q
"RTN","PXVRPC5",115,0)
 I $G(PXFLTRSTAT)="I",PXSTAT Q
"RTN","PXVRPC5",116,0)
 ;
"RTN","PXVRPC5",117,0)
 S PXCNT=PXCNT+1
"RTN","PXVRPC5",118,0)
 S PXRSLT(PXCNT)=PXFLDS
"RTN","PXVRPC5",119,0)
 ;
"RTN","PXVRPC5",120,0)
 Q
"RTN","PXVRPC5",121,0)
 ;
"RTN","PXVRPC5",122,0)
GETFLDS(PXFILE,PXIEN) ; Returns field values
"RTN","PXVRPC5",123,0)
 ;
"RTN","PXVRPC5",124,0)
 N PXCODE,PXNAME,PXNODE,PXRSLT,PXSTAT
"RTN","PXVRPC5",125,0)
 ;
"RTN","PXVRPC5",126,0)
 S PXNODE=$G(^PXV(PXFILE,PXIEN,0))
"RTN","PXVRPC5",127,0)
 S PXNAME=$P(PXNODE,U,1)
"RTN","PXVRPC5",128,0)
 S PXCODE=$P(PXNODE,U,2)
"RTN","PXVRPC5",129,0)
 S PXSTAT=$$GETSTAT^PXVRPC2(PXFILE,PXIEN)
"RTN","PXVRPC5",130,0)
 ;
"RTN","PXVRPC5",131,0)
 S PXRSLT=PXIEN_";PXV("_PXFILE_","_U_PXNAME_U_PXSTAT_U_PXCODE
"RTN","PXVRPC5",132,0)
 ;
"RTN","PXVRPC5",133,0)
 I PXFILE=920.4 D
"RTN","PXVRPC5",134,0)
 . S PXRSLT=PXRSLT_"|"_$P($G(^PXV(PXFILE,PXIEN,"VUID")),U,4)
"RTN","PXVRPC5",135,0)
 . S PXRSLT=PXRSLT_U_$P(PXNODE,U,4)_U_$P(PXNODE,U,5)
"RTN","PXVRPC5",136,0)
 ;
"RTN","PXVRPC5",137,0)
 Q PXRSLT
"RTN","PXVRPC5",138,0)
 ;
"RTN","PXVRPC5",139,0)
GETVICR(PXRSLT,DFN,PXVIMM,PXDATE,PXFORMAT) ;
"RTN","PXVRPC5",140,0)
 ;
"RTN","PXVRPC5",141,0)
 ; Returns "active" entries from the V IMM CONTRA/REFUSAL EVENTS file (#9000010.707)
"RTN","PXVRPC5",142,0)
 ; that are related to the given patient and immunization.
"RTN","PXVRPC5",143,0)
 ; "Active" is defined as entries where the Event Date and Time is <= PXDATE@24
"RTN","PXVRPC5",144,0)
 ; and the Warn Until Date is null or >= PXDATE.
"RTN","PXVRPC5",145,0)
 ;
"RTN","PXVRPC5",146,0)
 ;Input:
"RTN","PXVRPC5",147,0)
 ;    PXRSLT - Return value passed by reference (Required)
"RTN","PXVRPC5",148,0)
 ;       DFN - Pointer to file #2 (Required)
"RTN","PXVRPC5",149,0)
 ;    PXVIMM - Pointer to #9999999.14 (Required)
"RTN","PXVRPC5",150,0)
 ;    PXDATE - Date (without time) Used to determine if entry is "active"
"RTN","PXVRPC5",151,0)
 ;             (Optional; Defaults to TODAY)
"RTN","PXVRPC5",152,0)
 ;  PXFORMAT - Format that return array should be returned (Optional; Defaults to "L")
"RTN","PXVRPC5",153,0)
 ;             Possible values are:
"RTN","PXVRPC5",154,0)
 ;                "L": Return a caret-delimited list of entries
"RTN","PXVRPC5",155,0)
 ;                "W": Returns a warning message.
"RTN","PXVRPC5",156,0)
 ;
"RTN","PXVRPC5",157,0)
 ;Returns:
"RTN","PXVRPC5",158,0)
 ;  PXRSLT(0)=Count of elements returned (0 if nothing found)
"RTN","PXVRPC5",159,0)
 ;  If PXFORMAT="L":
"RTN","PXVRPC5",160,0)
 ;    PXRSLT(n)="VICR" ^ V IMM Contra/Refusal Events IEN ^ Visit IEN ^ Contra/Refusal
"RTN","PXVRPC5",161,0)
 ;               variable pointer | Contra/Refusal Name ^ Immunization IEN | Name
"RTN","PXVRPC5",162,0)
 ;               ^ Warn Until Date ^ D/T Recorded ^ Event D/T ^ Encounter Provider
"RTN","PXVRPC5",163,0)
 ;               IEN | Name
"RTN","PXVRPC5",164,0)
 ;    PXRSLT(n)="COM" ^ Comments
"RTN","PXVRPC5",165,0)
 ;  If PXFORMAT["W":
"RTN","PXVRPC5",166,0)
 ;    PXRSLT(n)=Warning text
"RTN","PXVRPC5",167,0)
 ;
"RTN","PXVRPC5",168,0)
 N PXCNT,PXEDATE,PXICRARR,PXIEN,PXSDATE
"RTN","PXVRPC5",169,0)
 ;
"RTN","PXVRPC5",170,0)
 I (('$G(DFN))!('$G(PXVIMM))) S PXRSLT(0)=0 Q
"RTN","PXVRPC5",171,0)
 ;
"RTN","PXVRPC5",172,0)
 I '$G(PXDATE) S PXDATE=DT
"RTN","PXVRPC5",173,0)
 S PXSDATE=$P(PXDATE,".",1)
"RTN","PXVRPC5",174,0)
 S PXEDATE=9999999
"RTN","PXVRPC5",175,0)
 I PXSDATE'=DT S PXEDATE=PXSDATE_".24"
"RTN","PXVRPC5",176,0)
 I $G(PXFORMAT)'?1(1"W",1"L") S PXFORMAT="L"
"RTN","PXVRPC5",177,0)
 ;
"RTN","PXVRPC5",178,0)
 D PATICR^PXAPIIM(.PXICRARR,$G(DFN),$G(PXVIMM),PXSDATE,PXEDATE)
"RTN","PXVRPC5",179,0)
 S PXCNT=0
"RTN","PXVRPC5",180,0)
 ;
"RTN","PXVRPC5",181,0)
 I PXFORMAT="W",$O(PXICRARR(0)) D
"RTN","PXVRPC5",182,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC5",183,0)
 . S PXRSLT(PXCNT)="Warning: Contraindication/refusal event(s) associated with this immunization:"
"RTN","PXVRPC5",184,0)
 ;
"RTN","PXVRPC5",185,0)
 S PXIEN=0
"RTN","PXVRPC5",186,0)
 F  S PXIEN=$O(PXICRARR(PXIEN)) Q:'PXIEN  D
"RTN","PXVRPC5",187,0)
 . D ADDVICR(.PXRSLT,.PXICRARR,.PXIEN,.PXCNT,.PXFORMAT)
"RTN","PXVRPC5",188,0)
 ;
"RTN","PXVRPC5",189,0)
 S PXRSLT(0)=PXCNT
"RTN","PXVRPC5",190,0)
 ;
"RTN","PXVRPC5",191,0)
 Q
"RTN","PXVRPC5",192,0)
 ;
"RTN","PXVRPC5",193,0)
ADDVICR(PXRSLT,PXICRARR,PXIEN,PXCNT,PXFORMAT) ; Add one entry to PXRSLT
"RTN","PXVRPC5",194,0)
 ;
"RTN","PXVRPC5",195,0)
 N PXNODE,PXWARNDT,PXX
"RTN","PXVRPC5",196,0)
 ;
"RTN","PXVRPC5",197,0)
 I PXFORMAT="L" D
"RTN","PXVRPC5",198,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC5",199,0)
 . S PXRSLT(PXCNT)="VICR"_U_PXIEN_U_$G(PXICRARR(PXIEN))
"RTN","PXVRPC5",200,0)
 . I $G(PXICRARR(PXIEN,"COMMENTS"))'="" D
"RTN","PXVRPC5",201,0)
 . . S PXCNT=PXCNT+1
"RTN","PXVRPC5",202,0)
 . . S PXRSLT(PXCNT)="COM"_U_$G(PXICRARR(PXIEN,"COMMENTS"))
"RTN","PXVRPC5",203,0)
 ;
"RTN","PXVRPC5",204,0)
 I PXFORMAT="W" D
"RTN","PXVRPC5",205,0)
 . S PXNODE=$G(PXICRARR(PXIEN))
"RTN","PXVRPC5",206,0)
 . S PXX=$P($P(PXNODE,U,2),"|",2)
"RTN","PXVRPC5",207,0)
 . S PXWARNDT=$P(PXNODE,U,4)
"RTN","PXVRPC5",208,0)
 . I PXWARNDT S PXX=PXX_"  (Until "_$$FMTE^XLFDT(PXWARNDT,1)_")"
"RTN","PXVRPC5",209,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC5",210,0)
 . S PXRSLT(PXCNT)=" "
"RTN","PXVRPC5",211,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC5",212,0)
 . S PXRSLT(PXCNT)=PXX
"RTN","PXVRPC5",213,0)
 . I $G(PXICRARR(PXIEN,"COMMENTS"))'="" D
"RTN","PXVRPC5",214,0)
 . . S PXX="Comment: "_PXICRARR(PXIEN,"COMMENTS")
"RTN","PXVRPC5",215,0)
 . . S PXCNT=PXCNT+1
"RTN","PXVRPC5",216,0)
 . . S PXRSLT(PXCNT)=PXX
"RTN","PXVRPC5",217,0)
 ;
"RTN","PXVRPC5",218,0)
 Q
"RTN","PXVRPC6")
0^35^B16158307
"RTN","PXVRPC6",1,0)
PXVRPC6 ;SLC/AGP - PCE RPCs for generating IMM Note Text ;04/06/16  15:10
"RTN","PXVRPC6",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**215**;Aug 12, 1996;Build 10
"RTN","PXVRPC6",3,0)
 ;
"RTN","PXVRPC6",4,0)
 ;
"RTN","PXVRPC6",5,0)
GETTEXT(OUTPUT,INPUT) ;
"RTN","PXVRPC6",6,0)
 ;
"RTN","PXVRPC6",7,0)
 ; This RPC takes an input array of immunization properties set from the GUI.
"RTN","PXVRPC6",8,0)
 ; It returns a formatted text of an immunization for use in documentation.
"RTN","PXVRPC6",9,0)
 ;
"RTN","PXVRPC6",10,0)
 ;Input:
"RTN","PXVRPC6",11,0)
 ;   INPUT(x)=IMM ^ Imm IEN ^  ^ Date Administered (for immunizations) / Date Contra-Refusal Event Documented
"RTN","PXVRPC6",12,0)
 ;            (for contra/refusals) ^ Warn Until Date (for contra/refusals) ^ Series ^ Refusal reason ^
"RTN","PXVRPC6",13,0)
 ;            Contraindication Reason ^ Ordered By ^ Administered By (for VA administered) / Documented By
"RTN","PXVRPC6",14,0)
 ;            (for historical) ^ Document Type ("Historical"/"Administered") ^ Information Source
"RTN","PXVRPC6",15,0)
 ;   INPUT(x)=LOC ^ File #44 IEN ^  ^  ^ Outside Location (for historicals)
"RTN","PXVRPC6",16,0)
 ;   INPUT(x)=ROUTE ^ Route ^ Site ^ Dosage
"RTN","PXVRPC6",17,0)
 ;   INPUT(x)=VIS ^ VIS Name ^ Edition Date ^ Language
"RTN","PXVRPC6",18,0)
 ;   INPUT(x)=LOT ^ Lot # ^ Manufacturer ^ Exp Date
"RTN","PXVRPC6",19,0)
 ;   INPUT(x)=COM ^ Comment
"RTN","PXVRPC6",20,0)
 ;   INPUT(x)=OVER ^ Override Reason
"RTN","PXVRPC6",21,0)
 ;
"RTN","PXVRPC6",22,0)
 ;Returns:
"RTN","PXVRPC6",23,0)
 ;   Formatted text of an immunization for use in documentation.
"RTN","PXVRPC6",24,0)
 ;
"RTN","PXVRPC6",25,0)
 N ARRAY,COMMENT,DOCTYPE,I,IMM,J,NODE,OVERRIDE,TEMP,VISCNT,X0,XLOC,XLOT,XROUTE
"RTN","PXVRPC6",26,0)
 S (X0,XROUTE,XLOC,XLOT,COMMENT,OVERRIDE)=""
"RTN","PXVRPC6",27,0)
 S VISCNT=0
"RTN","PXVRPC6",28,0)
 S I=0
"RTN","PXVRPC6",29,0)
 F  S I=$O(INPUT(I)) Q:I'>0  D
"RTN","PXVRPC6",30,0)
 . S NODE=$G(INPUT(I))
"RTN","PXVRPC6",31,0)
 . I $P(NODE,U)="IMM" S X0=$P(NODE,U,2,99) Q
"RTN","PXVRPC6",32,0)
 . I $P(NODE,U)="LOC" S XLOC=$P(NODE,U,2,99) Q
"RTN","PXVRPC6",33,0)
 . I $P(NODE,U)="ROUTE" S XROUTE=$P(NODE,U,2,4) Q
"RTN","PXVRPC6",34,0)
 . I $P(NODE,U)="VIS" S VISCNT=VISCNT+1,ARRAY("VIS",VISCNT)=$P(NODE,U,2,99) Q
"RTN","PXVRPC6",35,0)
 . I $P(NODE,U)="LOT" S XLOT=$P(NODE,U,2,99) Q
"RTN","PXVRPC6",36,0)
 . I $P(NODE,U)="COM" S COMMENT=$P(NODE,U,2) Q
"RTN","PXVRPC6",37,0)
 . I $P(NODE,U)="OVER" S OVERRIDE=$P(NODE,U,2) Q
"RTN","PXVRPC6",38,0)
 ;
"RTN","PXVRPC6",39,0)
 S I=0
"RTN","PXVRPC6",40,0)
 ;
"RTN","PXVRPC6",41,0)
 S IMM=$P(X0,U,1)
"RTN","PXVRPC6",42,0)
 I 'IMM S OUTPUT(I)="" Q
"RTN","PXVRPC6",43,0)
 S I=I+1
"RTN","PXVRPC6",44,0)
 S OUTPUT(I)="IMMUNIZATION: "_$P($G(^AUTTIMM(IMM,0)),U,1)
"RTN","PXVRPC6",45,0)
 S J=0 F  S J=$O(^AUTTIMM(IMM,2,J)) Q:'J  D
"RTN","PXVRPC6",46,0)
 . S I=I+1
"RTN","PXVRPC6",47,0)
 . S OUTPUT(I)=$S(I=2:"FULL NAME: ",1:"")_$G(^AUTTIMM(IMM,2,J,0))
"RTN","PXVRPC6",48,0)
 ;
"RTN","PXVRPC6",49,0)
 S DOCTYPE=$P(X0,U,10)
"RTN","PXVRPC6",50,0)
 ;
"RTN","PXVRPC6",51,0)
 ;contraindacted or refused
"RTN","PXVRPC6",52,0)
 I $P(X0,U,6)'=""!($P(X0,U,7)'="") D  Q
"RTN","PXVRPC6",53,0)
 . I $P(X0,U,6)'="" S I=I+1,OUTPUT(I)="REFUSAL REASON: "_$P(X0,U,6)
"RTN","PXVRPC6",54,0)
 . I $P(X0,U,7)'="" S I=I+1,OUTPUT(I)="CONTRAINDICATION REASON: "_$P(X0,U,7)
"RTN","PXVRPC6",55,0)
 . I +$P(X0,U,4)>0 S I=I+1,OUTPUT(I)="WARN UNTIL: "_$TR($$FMTE^XLFDT($P(X0,U,4),"2ZM"),"@"," ")
"RTN","PXVRPC6",56,0)
 . I COMMENT'="" S I=I+1,OUTPUT(I)="COMMENT: "_COMMENT
"RTN","PXVRPC6",57,0)
 . S I=I+1,OUTPUT(I)="Date Documented: "_$TR($$FMTE^XLFDT($P(X0,U,3),"2ZM"),"@"," ")
"RTN","PXVRPC6",58,0)
 ;
"RTN","PXVRPC6",59,0)
 ;determine label depending on admin vs historical
"RTN","PXVRPC6",60,0)
 S TEMP=$S(DOCTYPE="Historical":"HISTORICAL DATE ADMINISTERED",1:"DATE ADMINISTERED")_": "_$TR($$FMTE^XLFDT($P(X0,U,3),"2ZM"),"@"," ")
"RTN","PXVRPC6",61,0)
 S I=I+1,OUTPUT(I)=$$LJ^XLFSTR(TEMP,60)
"RTN","PXVRPC6",62,0)
 I $P(X0,U,5)'="" S OUTPUT(I)=OUTPUT(I)_"SERIES: "_$P(X0,U,5)
"RTN","PXVRPC6",63,0)
 I $P(XLOT,U,2)'="" S I=I+1,OUTPUT(I)="MANUFACTURER: "_$P(XLOT,U,2)
"RTN","PXVRPC6",64,0)
 I $P(XLOT,U)'="" S I=I+1,OUTPUT(I)=$$LJ^XLFSTR("LOT: "_$P(XLOT,U),60)_"EXP DATE: "_$S($P(XLOT,U,3)'="":$P(XLOT,U,3),1:"Unknown")
"RTN","PXVRPC6",65,0)
 ;determine label depending on admin vs historical
"RTN","PXVRPC6",66,0)
 S TEMP=$S($P(XLOC,U)>0:"LOCATION: "_$P($G(^SC($P(XLOC,U),0)),U),$P(XLOC,U,4)'="":"OUTSIDE LOCATION: "_$P(XLOC,U,4),1:"")
"RTN","PXVRPC6",67,0)
 I TEMP'=""!($P(XROUTE,U,3)'="") D
"RTN","PXVRPC6",68,0)
 . S I=I+1,OUTPUT(I)=$$LJ^XLFSTR(TEMP,60)
"RTN","PXVRPC6",69,0)
 . I $P(XROUTE,U,3)'="" S OUTPUT(I)=OUTPUT(I)_"DOSAGE: "_$P(XROUTE,U,3)
"RTN","PXVRPC6",70,0)
 I $P(XROUTE,U)'="" S I=I+1,OUTPUT(I)="ADMIN ROUTE/SITE: "_$P(XROUTE,U)_"/"_$P(XROUTE,U,2)
"RTN","PXVRPC6",71,0)
 I $P(X0,U,11)'="" S I=I+1,OUTPUT(I)="INFORMATION SOURCE: "_$P(X0,U,11)
"RTN","PXVRPC6",72,0)
 I $D(ARRAY("VIS")) D
"RTN","PXVRPC6",73,0)
 . S I=I+1
"RTN","PXVRPC6",74,0)
 . S OUTPUT(I)="Vaccine Information Statement(s):"
"RTN","PXVRPC6",75,0)
 . S VISCNT=0 F  S VISCNT=$O(ARRAY("VIS",VISCNT)) Q:VISCNT'>0  D
"RTN","PXVRPC6",76,0)
 . . S NODE=$G(ARRAY("VIS",VISCNT))
"RTN","PXVRPC6",77,0)
 . . S I=I+1
"RTN","PXVRPC6",78,0)
 . . S OUTPUT(I)="VIS Name: "_$P(NODE,U)_", Edition Date: "_$TR($$FMTE^XLFDT($P(NODE,U,2),"2ZM"),"@"," ")_", Language: "_$P(NODE,U,3)
"RTN","PXVRPC6",79,0)
 I $P(X0,U,8)'="" S I=I+1,OUTPUT(I)="ORDERED BY: "_$P(X0,U,8)
"RTN","PXVRPC6",80,0)
 I $P(X0,U,9)'="" D
"RTN","PXVRPC6",81,0)
 . I DOCTYPE="Administered" S I=I+1,OUTPUT(I)="ADMINISTERED BY: "_$P(X0,U,9) Q
"RTN","PXVRPC6",82,0)
 . S I=I+1,OUTPUT(I)="DOCUMENTED BY: "_$P(X0,U,9)
"RTN","PXVRPC6",83,0)
 I COMMENT'="" S I=I+1,OUTPUT(I)="COMMENT: "_COMMENT
"RTN","PXVRPC6",84,0)
 I OVERRIDE'="" S I=I+1,OUTPUT(I)="OVERRIDE REASON: "_OVERRIDE
"RTN","PXVRPC6",85,0)
 Q
"RTN","PXVUTIL")
0^19^B13284181
"RTN","PXVUTIL",1,0)
PXVUTIL ;BIR/ADM - VIMM UTILITY ROUTINE ;12/31/15  13:03
"RTN","PXVUTIL",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**201,210,215**;Aug 12, 1996;Build 10
"RTN","PXVUTIL",3,0)
 ;
"RTN","PXVUTIL",4,0)
 ; Reference to UCUMCODE^LEXMUCUM supported by ICR #6225
"RTN","PXVUTIL",5,0)
 ;
"RTN","PXVUTIL",6,0)
VIS ; display VIS name with identifiers
"RTN","PXVUTIL",7,0)
 N C,PXVNAME,PXVDATE,PXVSTAT,PXVLANG,X
"RTN","PXVUTIL",8,0)
 S X=$G(^AUTTIVIS(Y,0))
"RTN","PXVUTIL",9,0)
 S PXVNAME=$P(X,"^"),PXVDATE=$P(X,"^",2),PXVSTAT=$P(X,"^",3),PXVLANG=$P(X,"^",4)
"RTN","PXVUTIL",10,0)
 S X=PXVDATE,PXVDATE=$E(X,4,5)_"-"_$E(X,6,7)_"-"_$E(X,2,3)
"RTN","PXVUTIL",11,0)
 S Y=PXVSTAT,C=$P(^DD(920,.03,0),"^",2) D:Y'="" Y^DIQ S PXVSTAT=Y
"RTN","PXVUTIL",12,0)
 S Y=PXVLANG,C=$P(^DD(920,.04,0),"^",2) D:Y'="" Y^DIQ S PXVLANG=Y
"RTN","PXVUTIL",13,0)
 S Y=PXVNAME_"   "_PXVDATE_"   "_PXVSTAT_"   "_PXVLANG
"RTN","PXVUTIL",14,0)
 Q
"RTN","PXVUTIL",15,0)
 ;;
"RTN","PXVUTIL",16,0)
DUPDX(PXVIEN,PXVDX) ; extrinsic function to check for duplicate diagnoses
"RTN","PXVUTIL",17,0)
 ; PXVIEN - Internal Entry Number of the event, pointing to the
"RTN","PXVUTIL",18,0)
 ;        V IMMUNIZATION file (9000010.11)
"RTN","PXVUTIL",19,0)
 ; PXVDX is the diagnosis entered and used to check for duplicates
"RTN","PXVUTIL",20,0)
 ; 
"RTN","PXVUTIL",21,0)
 ; this code is called by the input transforms of:
"RTN","PXVUTIL",22,0)
 ;        ^DD(9000010.11,1304,0) & ^DD(9000010.113,.01,0)
"RTN","PXVUTIL",23,0)
 ; 
"RTN","PXVUTIL",24,0)
 ; RETURNS a 1 if the diagnosis already exists for this
"RTN","PXVUTIL",25,0)
 ;         entry, 0 if not
"RTN","PXVUTIL",26,0)
 ;
"RTN","PXVUTIL",27,0)
 N TXT K TXT S TXT(2)=" ",TXT(1,"F")="?5"
"RTN","PXVUTIL",28,0)
 I PXVDX=$P($G(^AUPNVIMM(PXVIEN,13)),"^",4) S TXT(1)="Selected diagnosis exists as the Primary Diagnosis for this event." D EN^DDIOL(.TXT,"","") Q 1
"RTN","PXVUTIL",29,0)
 I $D(^AUPNVIMM(PXVIEN,3,"B",PXVDX)) S TXT(1)="Selected diagnosis exists for this event." D EN^DDIOL(.TXT,"","") Q 1
"RTN","PXVUTIL",30,0)
 Q 0
"RTN","PXVUTIL",31,0)
 ;;
"RTN","PXVUTIL",32,0)
RSETDA ; code needed for the routine AUPNSICD to have the correct value in
"RTN","PXVUTIL",33,0)
 ;   DA, as AUPNSICD is not designed to be called from a multiple.
"RTN","PXVUTIL",34,0)
 N DA S DA=D0
"RTN","PXVUTIL",35,0)
 D ^AUPNSICD
"RTN","PXVUTIL",36,0)
 Q
"RTN","PXVUTIL",37,0)
HRS ; called by AH new style x-ref in V IMMUNIZATION file
"RTN","PXVUTIL",38,0)
 ; set number of hours between administration and reading of results
"RTN","PXVUTIL",39,0)
 N PXVX,X1,X2,X3
"RTN","PXVUTIL",40,0)
 S X1=$P($G(^AUPNVIMM(DA,14)),"^",3) ; DATE/TIME READ
"RTN","PXVUTIL",41,0)
 S X2=$P($G(^AUPNVIMM(DA,12)),"^") ; EVENT DATE AND TIME
"RTN","PXVUTIL",42,0)
 S X3=2 ; return difference in seconds
"RTN","PXVUTIL",43,0)
 S PXVX=""
"RTN","PXVUTIL",44,0)
 I $G(X1),$L(X1)>7,$G(X2),$L(X2)>7,$G(X2)'>$G(X1) S PXVX=$$FMDIFF^XLFDT(X1,X2,X3)\3600
"RTN","PXVUTIL",45,0)
 S $P(^AUPNVIMM(DA,14),"^",6)=PXVX
"RTN","PXVUTIL",46,0)
 Q
"RTN","PXVUTIL",47,0)
 ;
"RTN","PXVUTIL",48,0)
DOSAGE(PXIEN) ; Used to compute Dosage (9000010.11,1312.5)
"RTN","PXVUTIL",49,0)
 ;Input:
"RTN","PXVUTIL",50,0)
 ;   PXIEN = (Required) Pointer to #9000010.11
"RTN","PXVUTIL",51,0)
 ;Returns:
"RTN","PXVUTIL",52,0)
 ;   Concatenation of DOSE_" "_DOSE UNITS (e.g., ".5 mL")
"RTN","PXVUTIL",53,0)
 N PXDOSE,PXUNITS
"RTN","PXVUTIL",54,0)
 I $G(PXIEN)="" Q ""
"RTN","PXVUTIL",55,0)
 S PXDOSE=$P($G(^AUPNVIMM(PXIEN,13)),U,12)
"RTN","PXVUTIL",56,0)
 I PXDOSE="" Q ""
"RTN","PXVUTIL",57,0)
 S PXDOSE=$FN(PXDOSE,",")
"RTN","PXVUTIL",58,0)
 S PXUNITS=$P($G(^AUPNVIMM(PXIEN,13)),U,13)
"RTN","PXVUTIL",59,0)
 I PXUNITS S PXUNITS=$P($$UCUMCODE^LEXMUCUM(PXUNITS),U)  ; ICR 6225
"RTN","PXVUTIL",60,0)
 Q PXDOSE_$S(PXUNITS'="":" "_PXUNITS,1:"")
"RTN","PXVUTIL",61,0)
 ;
"RTN","PXVUTIL",62,0)
OFFER() ; called from screen on VIS OFFERED/GIVEN TO PATIENT field (#.01) in 
"RTN","PXVUTIL",63,0)
 ; VIS OFFERED/GIVEN TO PATIENT multiple field (#2) in file #9000010.11
"RTN","PXVUTIL",64,0)
 ; 
"RTN","PXVUTIL",65,0)
 ; PXD is defined by immunization edit process in PCE and is the value of 
"RTN","PXVUTIL",66,0)
 ; Y from the DIR call to select an immunization.
"RTN","PXVUTIL",67,0)
 ;
"RTN","PXVUTIL",68,0)
 N PXVIS,PXDA
"RTN","PXVUTIL",69,0)
 S PXVIS=0
"RTN","PXVUTIL",70,0)
 I $G(DA),$D(^AUTTIMM($P(^AUPNVIMM(DA,0),"^"),4,"B",Y)),'$D(^AUPNVIMM(DA,2,"B",Y)) S PXVIS=1
"RTN","PXVUTIL",71,0)
 I '$G(DA),$G(PXD) S PXDA=+PXD I PXDA,$D(^AUTTIMM(PXDA,4,"B",Y)),'$D(^AUPNVIMM(PXDA,2,"B",Y)) S PXVIS=1
"RTN","PXVUTIL",72,0)
 Q PXVIS
"RTN","PXVUTIL",73,0)
 ;
"RTN","PXVUTIL",74,0)
IMMSEL(PXVIMM,PXVISIT) ; Immunization screen for V Immunization file
"RTN","PXVUTIL",75,0)
 ;
"RTN","PXVUTIL",76,0)
 ; Input:
"RTN","PXVUTIL",77,0)
 ;       PXVIMM: Immunization IEN (#9999999.14)
"RTN","PXVUTIL",78,0)
 ;      PXVISIT: Visit IEN (#9000010)
"RTN","PXVUTIL",79,0)
 ;
"RTN","PXVUTIL",80,0)
 ; Return:
"RTN","PXVUTIL",81,0)
 ;    0: Entry is not selectable
"RTN","PXVUTIL",82,0)
 ;    1: Entry is selectable
"RTN","PXVUTIL",83,0)
 ;
"RTN","PXVUTIL",84,0)
 N PXVHIST,PXVSC,PXVISITDT
"RTN","PXVUTIL",85,0)
 ;
"RTN","PXVUTIL",86,0)
 I '$G(PXVIMM) Q 0
"RTN","PXVUTIL",87,0)
 ;
"RTN","PXVUTIL",88,0)
 S PXVISITDT=""
"RTN","PXVUTIL",89,0)
 I $G(PXVISIT) S PXVISITDT=$P($G(^AUPNVSIT(PXVISIT,0)),U,1)
"RTN","PXVUTIL",90,0)
 ;
"RTN","PXVUTIL",91,0)
 S PXVHIST=0
"RTN","PXVUTIL",92,0)
 S PXVSC=$P($G(^AUPNVSIT(+$G(PXVISIT),0)),U,7)
"RTN","PXVUTIL",93,0)
 I $G(PXVSC)="E" S PXVHIST=1
"RTN","PXVUTIL",94,0)
 ;
"RTN","PXVUTIL",95,0)
 ; For non-historical, only allow active entries
"RTN","PXVUTIL",96,0)
 I 'PXVHIST,'$$SCREEN^XTID(9999999.14,,PXVIMM_",",PXVISITDT) Q 1
"RTN","PXVUTIL",97,0)
 ;
"RTN","PXVUTIL",98,0)
 ; For historical, only allow SELECTABLE FOR HISTORIC entries
"RTN","PXVUTIL",99,0)
 I PXVHIST,$P($G(^AUTTIMM(PXVIMM,6)),U,1)="Y" Q 1
"RTN","PXVUTIL",100,0)
 ;
"RTN","PXVUTIL",101,0)
 Q 0
"RTN","PXVUTIL",102,0)
 ;
"RTN","PXVUTIL",103,0)
IMMCRSEL(PXVICR,PXVIMM) ; Immunization screen for V Imm Contra/Refusal Events file
"RTN","PXVUTIL",104,0)
 ;
"RTN","PXVUTIL",105,0)
 ; Input:
"RTN","PXVUTIL",106,0)
 ;    PXVICR: Contraindication/Refusal Variable Pointer (#9000010.707, #.01)
"RTN","PXVUTIL",107,0)
 ;    PXVIMM: Immunization IEN (#9999999.14)
"RTN","PXVUTIL",108,0)
 ;
"RTN","PXVUTIL",109,0)
 ; Return:
"RTN","PXVUTIL",110,0)
 ;    0: Entry is not selectable
"RTN","PXVUTIL",111,0)
 ;    1: Entry is selectable
"RTN","PXVUTIL",112,0)
 ;
"RTN","PXVUTIL",113,0)
 N PXCONTRA,PXRSLT
"RTN","PXVUTIL",114,0)
 ;
"RTN","PXVUTIL",115,0)
 S PXRSLT=0
"RTN","PXVUTIL",116,0)
 ;
"RTN","PXVUTIL",117,0)
 I '$G(PXVICR) Q PXRSLT
"RTN","PXVUTIL",118,0)
 I '$G(PXVIMM) Q PXRSLT
"RTN","PXVUTIL",119,0)
 ;
"RTN","PXVUTIL",120,0)
 I PXVICR[920.5 D  Q PXRSLT
"RTN","PXVUTIL",121,0)
 . I $$IMMSTAT^PXAPIIM(PXVIMM)?1(1"A",1"H") S PXRSLT=1
"RTN","PXVUTIL",122,0)
 ;
"RTN","PXVUTIL",123,0)
 S PXCONTRA=+PXVICR
"RTN","PXVUTIL",124,0)
 ;
"RTN","PXVUTIL",125,0)
 ; Immunizations Limited To multiple is null
"RTN","PXVUTIL",126,0)
 I '$O(^PXV(920.4,PXCONTRA,3,0)) D  Q PXRSLT
"RTN","PXVUTIL",127,0)
 . I $$IMMSTAT^PXAPIIM(PXVIMM)?1(1"A",1"H") S PXRSLT=1
"RTN","PXVUTIL",128,0)
 ;
"RTN","PXVUTIL",129,0)
 ; PXVIMM is an entry in the Immunizations Limited To multiple
"RTN","PXVUTIL",130,0)
 I $O(^PXV(920.4,PXCONTRA,3,"B",PXVIMM,0)) S PXRSLT=1
"RTN","PXVUTIL",131,0)
 ;
"RTN","PXVUTIL",132,0)
 Q PXRSLT
"RTN","PXVZRT")
0^28^B82546869
"RTN","PXVZRT",1,0)
PXVZRT ;SLC/PBB - VIMM UTILITY ROUTINE ;01/15/2015  4:44 PM
"RTN","PXVZRT",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**206,215**;Aug 12, 1996;Build 10
"RTN","PXVZRT",3,0)
 ;
"RTN","PXVZRT",4,0)
 Q
"RTN","PXVZRT",5,0)
ZRT ;Manipulate update of MFN ZRT segment for Immunization files
"RTN","PXVZRT",6,0)
 I IEN,((NAME="Term")!(NAME="Status")) K XXIEN ;This is the indication that it's first update for any subfile
"RTN","PXVZRT",7,0)
 S:$D(HLNODE(1)) HLNODE=HLNODE_HLNODE(1)
"RTN","PXVZRT",8,0)
 G 920:IFN=920,99999914:IFN=9999999.14,99999928:IFN=9999999.28,9204:IFN=920.4,99999904:IFN=9999999.04,9201:IFN=920.1
"RTN","PXVZRT",9,0)
 Q
"RTN","PXVZRT",10,0)
920 ; Manipulate update of MFN ZRT segment for 920 File
"RTN","PXVZRT",11,0)
 I IEN,NAME="Term" D  Q
"RTN","PXVZRT",12,0)
 .N Y,X1
"RTN","PXVZRT",13,0)
 .S X1=$$UNESC^XUMF0($P(HLNODE,HLFS,3),.HL)
"RTN","PXVZRT",14,0)
 .;Get Name, Date and Language from Term
"RTN","PXVZRT",15,0)
 .F I=1:1 S Y=$P(X1," ",I) Q:Y?1N.N1"/"1N.N1"/"1N.N  I '$L(Y),'$L($P(X1," ",I+1,99)) Q
"RTN","PXVZRT",16,0)
 .I Y="" S ERROR="1^Error - .01 is invalid"_" File #: "_IFN_" HLNODE="_HLNODE Q
"RTN","PXVZRT",17,0)
 .S X1=$P(X1,Y)
"RTN","PXVZRT",18,0)
 .S Y=$L(X1) F I=Y:-1 Q:$E(X1,I)'=" "  S X1=$E(X1,1,Y-1) ;Get rid of spaces on end of .01
"RTN","PXVZRT",19,0)
 .S $P(HLNODE,HLFS,3)=X1
"RTN","PXVZRT",20,0)
 I IEN,NAME="VistA_VIS_Language" D  Q
"RTN","PXVZRT",21,0)
 .N DIC,X,IENS
"RTN","PXVZRT",22,0)
 .S NAME=$$UNESC^XUMF0($P(HLNODE,HLFS,3),.HL)
"RTN","PXVZRT",23,0)
 .S DIC=.85,DIC(0)="M",X=NAME D ^DIC I Y<0 S ERROR="1^Error - .04 LANGUAGE is invalid"_" File #: "_IFN_" HLNODE="_HLNODE Q
"RTN","PXVZRT",24,0)
 .S IENS=IEN_","
"RTN","PXVZRT",25,0)
 .S FDA(IFN,IENS,.04)=+Y
"RTN","PXVZRT",26,0)
 .S OUT=1
"RTN","PXVZRT",27,0)
 .Q
"RTN","PXVZRT",28,0)
 I 'IEN,NAME="Term" D  Q
"RTN","PXVZRT",29,0)
 .;Assuming that the " " delimiter is used in Term
"RTN","PXVZRT",30,0)
 .;Assuming MFS Update will be in the form: 
"RTN","PXVZRT",31,0)
 .; ZRT^Term^ANTHRAX VIS 3/10/2010 ENGLISH
"RTN","PXVZRT",32,0)
 .; ZRT^VistA_VIS_Edition_Date^3/10/2010     in form:mm/dd/yy
"RTN","PXVZRT",33,0)
 .; ZRT^VistA_VIS_Language^ENGLISH
"RTN","PXVZRT",34,0)
 .N DIC,X,X1,X2,X3,Y,XREF,ROOT,FDA,ERR,IENS,IIEN,%DT,I
"RTN","PXVZRT",35,0)
 .S NAME=$$UNESC^XUMF0($P(HLNODE,HLFS,3),.HL)
"RTN","PXVZRT",36,0)
 .S ROOT=$$ROOT^DILFD(IFN,,1)
"RTN","PXVZRT",37,0)
 .;Get Name, Date and Language from Term
"RTN","PXVZRT",38,0)
 .F I=1:1 S Y=$P(NAME," ",I) Q:Y?1N.N1"/"1N.N1"/"1N.N  I '$L(Y),'$L($P(NAME," ",I+1,99)) Q
"RTN","PXVZRT",39,0)
 .I Y="" S ERROR="1^Error - .01 is invalid"_" File #: "_IFN_" HLNODE="_HLNODE Q
"RTN","PXVZRT",40,0)
 .S X1=$P(NAME,Y),X2=Y,X3=$P(NAME,Y,2)
"RTN","PXVZRT",41,0)
 .F I=1:1 Q:$E(X3,I)'=" "  S X3=$E(X3,I+1,$L(X3)) ;Get rid of leading spaces from Language.
"RTN","PXVZRT",42,0)
 .S Y=$L(X1) F I=Y:-1 Q:$E(X1,I)'=" "  S X1=$E(X1,1,Y-1) ;Get rid of spaces on end of .01
"RTN","PXVZRT",43,0)
 .;Get Date from Term
"RTN","PXVZRT",44,0)
 .;put it into form: 3140819
"RTN","PXVZRT",45,0)
 .S X=X2 D ^%DT
"RTN","PXVZRT",46,0)
 .I Y=-1 S ERROR="1^Error - .02 in Term is invalid"_" File #: "_IFN_" HLNODE="_HLNODE Q
"RTN","PXVZRT",47,0)
 .S X2=Y
"RTN","PXVZRT",48,0)
 .;
"RTN","PXVZRT",49,0)
 .S DIC=.85,DIC(0)="M",X=X3 D ^DIC I Y<0 S ERROR="1^Error - .04 LANGUAGE is invalid"_" File #: "_IFN_" HLNODE="_HLNODE Q
"RTN","PXVZRT",50,0)
 .S X3=+Y
"RTN","PXVZRT",51,0)
 .;Lookup B x-ref and see if match of date and Language.
"RTN","PXVZRT",52,0)
 .S IIEN=0
"RTN","PXVZRT",53,0)
 .F  Q:ERROR  S IIEN=$O(@ROOT@("B",X1,IIEN)) Q:'IIEN  S IENS=IIEN_"," I $$GET1^DIQ(920,IENS,.02,"I")=X2,$$GET1^DIQ(920,IENS,.04,"I")=X3 D:IEN  S IEN=IIEN
"RTN","PXVZRT",54,0)
 ..;Here the error generated if more as one entry match ,01  and .02 and .04
"RTN","PXVZRT",55,0)
 ..S ERROR="1^Error - File IENs duplicate: "_IEN_" and "_IIEN_" File #: "_IFN_" HLNODE="_HLNODE Q
"RTN","PXVZRT",56,0)
 .Q:ERROR
"RTN","PXVZRT",57,0)
 .;
"RTN","PXVZRT",58,0)
 .I IEN D
"RTN","PXVZRT",59,0)
 ..M RECORD("BEFORE")=@ROOT@(IEN)
"RTN","PXVZRT",60,0)
 ..S RECORD("STATUS")=$$GETSTAT^XTID(IFN,,IEN_",")
"RTN","PXVZRT",61,0)
 .I 'IEN D  Q:ERROR
"RTN","PXVZRT",62,0)
 ..D CHK^DIE(IFN,.01,,X1,.X)
"RTN","PXVZRT",63,0)
 ..I X="^" S ERROR="1^Error - .01 is invalid"_" File #: "_IFN_" HLNODE="_HLNODE Q
"RTN","PXVZRT",64,0)
 ..K DIC S DIC=IFN,DIC(0)="F" D FILE^DICN K DIC
"RTN","PXVZRT",65,0)
 ..I Y="-1" S ERROR="1^Error - stub entry IFN: "_IFN_" failed HLNODE: "_HLNODE Q
"RTN","PXVZRT",66,0)
 ..S IEN=+Y,RECORD("NEW")=1
"RTN","PXVZRT",67,0)
 .;
"RTN","PXVZRT",68,0)
 .S:'$G(RECORD("NEW")) ^TMP("XUMF EVENT",$J,IFN,"BEFORE",IEN,"REPLACED BY")=""
"RTN","PXVZRT",69,0)
 .S:'$G(RECORD("NEW")) ^TMP("XUMF EVENT",$J,IFN,"BEFORE",IEN,"INHERITS FROM")=""
"RTN","PXVZRT",70,0)
 .;
"RTN","PXVZRT",71,0)
 .S IENS=IEN_","
"RTN","PXVZRT",72,0)
 .;
"RTN","PXVZRT",73,0)
 .S FDA(IFN,IENS,99.99)=VUID
"RTN","PXVZRT",74,0)
 .S FDA(IFN,IENS,99.98)=1
"RTN","PXVZRT",75,0)
 .;
"RTN","PXVZRT",76,0)
 .K ERR
"RTN","PXVZRT",77,0)
 .;
"RTN","PXVZRT",78,0)
 .D FILE^DIE("E","FDA","ERR")
"RTN","PXVZRT",79,0)
 .I $D(ERR) D
"RTN","PXVZRT",80,0)
 ..S ERROR="1^VUID update error IFN: "_IFN_" IEN: "_IEN_" VUID: "_VUID_" HLNODE: "_HLNODE
"RTN","PXVZRT",81,0)
 ..D EM^XUMF1H(ERROR,.ERR) K ERR
"RTN","PXVZRT",82,0)
 .;
"RTN","PXVZRT",83,0)
 .;Execute Additional coding for  4.001,3  ADD-PROCESSING LOGIC
"RTN","PXVZRT",84,0)
 .D ADD^XUMF1H
"RTN","PXVZRT",85,0)
 .;
"RTN","PXVZRT",86,0)
 .; clean multiple flag
"RTN","PXVZRT",87,0)
 .K:'$D(XIEN(IEN)) XIEN
"RTN","PXVZRT",88,0)
 .S XIEN(IEN)=$G(XIEN(IEN))+1
"RTN","PXVZRT",89,0)
 .S OUT=1
"RTN","PXVZRT",90,0)
 Q
"RTN","PXVZRT",91,0)
99999914 ; Manipulate update of MFN ZRT segment for 9999999.14 File
"RTN","PXVZRT",92,0)
 N X,XX,ERR,IENS,IEN1,IENX,X1,X2,X3,X4,X5,X6,DA,DIK,I,FDAA,II,TMP
"RTN","PXVZRT",93,0)
 I IEN,NAME="VistA_CVX_Mapping" D  Q  ;ZRT^VistA_CVX_Mapping^CPT:90701,90743
"RTN","PXVZRT",94,0)
 .S X=$P(HLNODE,HLFS,3) ;X=CPT:90701,90743
"RTN","PXVZRT",95,0)
 .I '$L(X)!(X="""""") D DS(9999999.143,IEN) S OUT=1 Q  ;Q:$G(OUT)  ;If there is nothing coming from Push, wipe anything was there before
"RTN","PXVZRT",96,0)
 .I '$G(XXIEN(9999999.143)) D DS(9999999.143,IEN)  S XXIEN(9999999.143)=1 ;CLEAN SUBFILE ENTRY
"RTN","PXVZRT",97,0)
 .S X1=$P(X,":"),X2=$P(X,":",2)
"RTN","PXVZRT",98,0)
 .D DUP(9999999.143,X1,X2) ; Checup for duplicate coding system (ICD, 10D, CPT...) and codes
"RTN","PXVZRT",99,0)
 .Q:$G(ERROR)
"RTN","PXVZRT",100,0)
 .S IENS=IEN_","
"RTN","PXVZRT",101,0)
 .S IEN1="+1,",FDAA(9999999.143,"+1,"_IENS,.01)=X1
"RTN","PXVZRT",102,0)
 .F I=2:1 S X4=$P(X2,",",I-1) Q:'$L(X4)  S IENX="+"_I_","_IEN1_IENS,FDAA(9999999.1431,IENX,.01)=X4
"RTN","PXVZRT",103,0)
 .D:$D(FDAA) UPDATE^DIE("","FDAA",,"ERR")
"RTN","PXVZRT",104,0)
 .I $D(ERR) D  Q
"RTN","PXVZRT",105,0)
 ..S ERROR="1^subfile update error SUBFILE#: 9999999.1431 HLNODE:"_HLNODE
"RTN","PXVZRT",106,0)
 ..D EM^XUMF1H(ERROR,.ERR)
"RTN","PXVZRT",107,0)
 .Q:$G(ERROR)
"RTN","PXVZRT",108,0)
 .S OUT=1
"RTN","PXVZRT",109,0)
 I IEN,NAME="VistA_CDC_Product_Name" D  Q
"RTN","PXVZRT",110,0)
 .I $P(HLNODE,HLFS,3)="""""" D DS(9999999.145,IEN) S OUT=1 Q
"RTN","PXVZRT",111,0)
 .I '$G(XXIEN(9999999.145)) D DS(9999999.145,IEN)  S XXIEN(9999999.145)=1 ;CLEAN SUBFILE ENTRY
"RTN","PXVZRT",112,0)
 I IEN,NAME="VistA_Synonym" D  Q
"RTN","PXVZRT",113,0)
 .I $P(HLNODE,HLFS,3)="""""" D DS(9999999.141,IEN) S OUT=1 Q
"RTN","PXVZRT",114,0)
 .I '$G(XXIEN(9999999.141)) D DS(9999999.141,IEN)  S XXIEN(9999999.141)=1 ;CLEAN SUBFILE ENTRY
"RTN","PXVZRT",115,0)
 I IEN,NAME="VistA_Inactive_Flag" D  Q
"RTN","PXVZRT",116,0)
 .S:$P(HLNODE,HLFS,3)'=1 $P(HLNODE,HLFS,3)=""""""
"RTN","PXVZRT",117,0)
 I IEN,NAME="vista_has_vis" D  Q
"RTN","PXVZRT",118,0)
 .I $P(HLNODE,HLFS,3)="""""" D DS(9999999.144,IEN) S OUT=1 Q
"RTN","PXVZRT",119,0)
 .I '$G(XXIEN(9999999.144)) D DS(9999999.144,IEN)  S XXIEN(9999999.144)=1 ;CLEAN SUBFILE ENTRY
"RTN","PXVZRT",120,0)
 I IEN,NAME="VistA_Immunization_Group" D  Q
"RTN","PXVZRT",121,0)
 .I $P(HLNODE,HLFS,3)="""""" D DS(9999999.147,IEN) S OUT=1 Q
"RTN","PXVZRT",122,0)
 .I '$G(XXIEN(9999999.147)) D DS(9999999.147,IEN)  S XXIEN(9999999.147)=1 ;CLEAN SUBFILE ENTRY
"RTN","PXVZRT",123,0)
 I IEN,NAME="Status" D IFST(.07,"",1) Q
"RTN","PXVZRT",124,0)
 Q
"RTN","PXVZRT",125,0)
99999928  ; Manipulate update of MFN ZRT segment for 9999999.28 File
"RTN","PXVZRT",126,0)
 N X,ERR,IENS,IEN1,IENX,X1,X2,X4,DA,DIK,I,FDAA
"RTN","PXVZRT",127,0)
 I IEN,NAME="VistA_Skin_Test_Mapping" D  Q
"RTN","PXVZRT",128,0)
 .;ZRT^VistA_Skin_Test_Mapping^CPT:90701,90743
"RTN","PXVZRT",129,0)
 .S X=$P(HLNODE,HLFS,3) ;X=CPT:90701,90743
"RTN","PXVZRT",130,0)
 .I '$L(X)!(X="""""") D DS(9999999.283,IEN) S OUT=1 Q  ;Q:$G(OUT)  ;If there is nothing coming from Push, wipe anything was there before
"RTN","PXVZRT",131,0)
 .I '$G(XXIEN(9999999.283)) D DS(9999999.283,IEN)  S XXIEN(9999999.283)=1 ;CLEAN SUBFILE ENTRY
"RTN","PXVZRT",132,0)
 .S X1=$P(X,":"),X2=$P(X,":",2) ;$$FIND1^DIC(FILE,IENS,FLAGS,[.]VALUE,[.]INDEXES,[.]SCREEN,MSG_ROOT)
"RTN","PXVZRT",133,0)
 .D DUP(9999999.283,X1,X2) ; Checkup for duplicate coding system (ICD, 10D, CPT...) and codes
"RTN","PXVZRT",134,0)
 .Q:$G(ERROR)
"RTN","PXVZRT",135,0)
 .S IENS=IEN_","
"RTN","PXVZRT",136,0)
 .S IEN1="+1,",FDAA(9999999.283,"+1,"_IENS,.01)=X1
"RTN","PXVZRT",137,0)
 .F I=2:1 S X4=$P(X2,",",I-1) Q:'$L(X4)  S IENX="+"_I_","_IEN1_IENS,FDAA(9999999.2831,IENX,.01)=X4
"RTN","PXVZRT",138,0)
 .D:$D(FDAA) UPDATE^DIE("","FDAA",,"ERR")
"RTN","PXVZRT",139,0)
 .I $D(ERR) D  Q
"RTN","PXVZRT",140,0)
 ..S ERROR="1^subfile update error SUBFILE#: 9999999.2831 HLNODE:"_HLNODE
"RTN","PXVZRT",141,0)
 ..D EM^XUMF1H(ERROR,.ERR)
"RTN","PXVZRT",142,0)
 .Q:$G(ERROR)
"RTN","PXVZRT",143,0)
 .S OUT=1
"RTN","PXVZRT",144,0)
 I IEN,NAME="VistA_Inactive_Flag" D  Q
"RTN","PXVZRT",145,0)
 .S:$P(HLNODE,HLFS,3)'=1 $P(HLNODE,HLFS,3)=""""""
"RTN","PXVZRT",146,0)
 I IEN,NAME="VistA_CPT_Code" D  Q
"RTN","PXVZRT",147,0)
 .S OUT=1
"RTN","PXVZRT",148,0)
 I IEN,NAME="Status" D IFST(.03,"",1) Q
"RTN","PXVZRT",149,0)
 Q
"RTN","PXVZRT",150,0)
9204 ; Manipulate update of MFN ZRT segment for 920.4 File
"RTN","PXVZRT",151,0)
 I IEN,NAME="vista_applies_to" D  Q
"RTN","PXVZRT",152,0)
 .I $P(HLNODE,HLFS,3)="""""" D DS(920.43,IEN) S OUT=1 Q
"RTN","PXVZRT",153,0)
 .I '$G(XXIEN(920.43)) D DS(920.43,IEN)  S XXIEN(920.43)=1 ;CLEAN SUBFILE ENTRY
"RTN","PXVZRT",154,0)
 I IEN,NAME="Status" D IFST(.03,0,1) Q
"RTN","PXVZRT",155,0)
 Q
"RTN","PXVZRT",156,0)
9201 ; Manipulate update of MFN ZRT Segment for 920.01 File
"RTN","PXVZRT",157,0)
 I IEN,NAME="Status" D IFST(.03,0,1) Q
"RTN","PXVZRT",158,0)
 Q
"RTN","PXVZRT",159,0)
99999904 ; Manipulate update of MFN ZRT Segment for 9999999.04 File
"RTN","PXVZRT",160,0)
 I IEN,NAME="Status" D IFST(.03,0,1) Q
"RTN","PXVZRT",161,0)
 Q
"RTN","PXVZRT",162,0)
M92002 ;Conversion of File:920 field .02  EDITION DATE to VETS form  02/31/2014
"RTN","PXVZRT",163,0)
 N Y,X ;Date in internal form:  3140231
"RTN","PXVZRT",164,0)
 ;set Y to HL7 Form:  20140231 and subsequently to: >> 2/31/2014 << 
"RTN","PXVZRT",165,0)
 S Y=$$FMTHL7^XLFDT(TMP1(LEV,X2,IENS,I)),TMP1(LEV,X2,IENS,I)=" "_+$E(Y,5,6)_"/"_+$E(Y,7,8)_"/"_$E(Y,1,4)_" "
"RTN","PXVZRT",166,0)
 ;Note that space put at begining and end to get form: >>ADENOVIRUS VIS 6/11/2014 ENGLISH<< 
"RTN","PXVZRT",167,0)
 Q
"RTN","PXVZRT",168,0)
M92004 ;Conversion of File:920 field .04  POINTER TO LANGUAGE FILE (#.85)
"RTN","PXVZRT",169,0)
 S TMP1(LEV,X2,IENS,I)=$$GET1^DIQ(.85,TMP1(LEV,X2,IENS,I)_",",1)
"RTN","PXVZRT",170,0)
 Q
"RTN","PXVZRT",171,0)
M92003 ;Conversion of File:920 field .03 EDITION STATUS
"RTN","PXVZRT",172,0)
 ;Get:   7/26/2013HISTORICENGLISH
"RTN","PXVZRT",173,0)
 ;Get .02 _ .03 _ .04   get rid of space on start and end.
"RTN","PXVZRT",174,0)
 N X,Y,XX,DIC
"RTN","PXVZRT",175,0)
 S XX=$$GET1^DIQ(.85,TMP1(LEV,X2,IENS,.04)_",",1)
"RTN","PXVZRT",176,0)
 S TMP1(LEV,X2,IENS,I)=$E(TMP1(LEV,X2,IENS,.02),2,$L(TMP1(LEV,X2,IENS,.02))-1)_TMP1(LEV,X2,IENS,I)_XX
"RTN","PXVZRT",177,0)
 Q
"RTN","PXVZRT",178,0)
M999142 ;Conversion of File:9999999.14 FIELD:.2  COMBINATION IMMUNIZATION COMVERT FROM 1 to Y  and from 0 to N
"RTN","PXVZRT",179,0)
 N X
"RTN","PXVZRT",180,0)
 S X=TMP1(LEV,X2,IENS,I),TMP1(LEV,X2,IENS,I)=$S(X:"Y",1:"N")
"RTN","PXVZRT",181,0)
 Q
"RTN","PXVZRT",182,0)
M9992803 ;Conversion of File:9999999.28 FIELD:.03  INACTIVE FLAG
"RTN","PXVZRT",183,0)
 S:TMP1(LEV,X2,IENS,I)'=1 TMP1(LEV,X2,IENS,I)=0
"RTN","PXVZRT",184,0)
 Q
"RTN","PXVZRT",185,0)
M999283 ;Conversion of File:9999999.28 FIELD: 3  CODING SYSTEM  From: CPT to CPT:00001,00002
"RTN","PXVZRT",186,0)
 ;TMP1(2,"9999999.283","1,7,",".01")="CPT"    D GETS^DIQ(X2,IENS,"*","","TMP1(LEV)")
"RTN","PXVZRT",187,0)
 N TMP,X4,X3,II
"RTN","PXVZRT",188,0)
 S X4=TMP1(LEV,X2,IENS,I)_":" ;X4=CPT:
"RTN","PXVZRT",189,0)
 D GETS^DIQ(9999999.283,IENS,"**","","TMP") ;TMP(9999999.2831,"1,1,7,",.01)=86485
"RTN","PXVZRT",190,0)
 S II="" F  S II=$O(TMP(9999999.2831,II)) Q:'II  S X3=$G(TMP(9999999.2831,II,.01)) S:$L(X3) X4=X4_X3_","
"RTN","PXVZRT",191,0)
 S:$L(X3) X4=$E(X4,1,$L(X4)-1) S TMP1(LEV,X2,IENS,I)=X4
"RTN","PXVZRT",192,0)
 Q
"RTN","PXVZRT",193,0)
M999143 ;Conversion of File:9999999.14 FIELD: 3  CODING SYSTEM  From: CPT to CPT:00001,00002
"RTN","PXVZRT",194,0)
 ;TMP1(2,"9999999.143","1,7,",".01")="CPT"    D GETS^DIQ(X2,IENS,"*","","TMP1(LEV)")
"RTN","PXVZRT",195,0)
 N TMP,X4,X3,II
"RTN","PXVZRT",196,0)
 S X4=TMP1(LEV,X2,IENS,I)_":" ;X4=CPT:
"RTN","PXVZRT",197,0)
 D GETS^DIQ(9999999.143,IENS,"**","","TMP") ;TMP(9999999.1431,"1,1,7,",.01)=86485
"RTN","PXVZRT",198,0)
 S II="" F  S II=$O(TMP(9999999.1431,II)) Q:'II  S X3=$G(TMP(9999999.1431,II,.01)) S:$L(X3) X4=X4_X3_","
"RTN","PXVZRT",199,0)
 ;S X4=$S($L(X3):$E(X4,1,$L(X4)-1),1:"") S TMP1(LEV,X2,IENS,I)=X4
"RTN","PXVZRT",200,0)
 S:$L(X3) X4=$E(X4,1,$L(X4)-1) S TMP1(LEV,X2,IENS,I)=X4
"RTN","PXVZRT",201,0)
 Q
"RTN","PXVZRT",202,0)
DS(SUBFILE,IENS) ;Delete subfile
"RTN","PXVZRT",203,0)
 N ROOT,IDX,X
"RTN","PXVZRT",204,0)
 S ROOT=$$ROOT^DILFD(SUBFILE,","_IENS,1)
"RTN","PXVZRT",205,0)
 S IDX=0 F  S IDX=$O(@ROOT@(IDX)) Q:'IDX  D
"RTN","PXVZRT",206,0)
 .N DA,DIK,DIC S DA(1)=+IENS,DA=IDX,DIK=$P(ROOT,")")_"," D ^DIK
"RTN","PXVZRT",207,0)
 Q
"RTN","PXVZRT",208,0)
IFST(FIELD,YES,NO) ;Send AE if Inactive flag doesn't match VUID Status.
"RTN","PXVZRT",209,0)
 Q:'$D(FDA(IFN,IEN_",",FIELD))
"RTN","PXVZRT",210,0)
 N X1 S X1=$P(HLNODE,HLFS,3)
"RTN","PXVZRT",211,0)
 Q:X1=1&(FDA(IFN,IEN_",",FIELD)=YES)  ;Match, both active
"RTN","PXVZRT",212,0)
 Q:X1=0&(FDA(IFN,IEN_",",FIELD)=NO)  ;Match, both inactive
"RTN","PXVZRT",213,0)
 S ERROR="1^"_IFN_"99,.02 STATUS HLNODE:"_HLNODE_" Doesn't match "_FIELD_" Inactive Flag "_FDA(IFN,IEN_",",FIELD)
"RTN","PXVZRT",214,0)
 D EM^XUMF1H(ERROR,.ERR)
"RTN","PXVZRT",215,0)
 Q
"RTN","PXVZRT",216,0)
DUP(SUB,X1,X2) ;
"RTN","PXVZRT",217,0)
 ;Checkup for duplicate coding system (ICD, 10D, CPT...)
"RTN","PXVZRT",218,0)
 D GETS^DIQ(IFN,IEN_",","**","","TMP") ;TMP(9999999.143 - .128,"1,7,",.01)=86485   X1=CPT   X2=1234,4567,7890
"RTN","PXVZRT",219,0)
 S II="" F  S II=$O(TMP(SUB,II)) Q:'II  S X3=$G(TMP(SUB,II,.01)) I $L(X3),X3=X1 D  Q
"RTN","PXVZRT",220,0)
 .S ERROR="1^Error - "_II_" Duplicate Coding System"_" File #: "_IFN_" HLNODE="_HLNODE
"RTN","PXVZRT",221,0)
 Q:$G(ERROR)
"RTN","PXVZRT",222,0)
 ;Checkup for duplicate codes. (CPT:90701,90743,90701)
"RTN","PXVZRT",223,0)
 F I=1:1 S X5=$P(X2,",",I) Q:'$L(X5)  S X6(X5)=$G(X6(X5))+1 I X6(X5)>1 D  Q
"RTN","PXVZRT",224,0)
 .S ERROR="1^Error - Duplicate Codes in Coding System"_" File #: "_IFN_" HLNODE="_HLNODE
"RTN","PXVZRT",225,0)
 Q
"SEC","^DIC",920.05,920.05,0,"AUDIT")
@
"SEC","^DIC",920.05,920.05,0,"DD")
@
"SEC","^DIC",920.05,920.05,0,"DEL")
@
"SEC","^DIC",920.05,920.05,0,"LAYGO")
@
"SEC","^DIC",920.05,920.05,0,"RD")
@
"SEC","^DIC",920.05,920.05,0,"WR")
@
"SEC","^DIC",920.6,920.6,0,"AUDIT")
@
"SEC","^DIC",920.6,920.6,0,"DD")
@
"SEC","^DIC",920.6,920.6,0,"DEL")
@
"SEC","^DIC",920.6,920.6,0,"LAYGO")
@
"SEC","^DIC",920.6,920.6,0,"RD")
@
"SEC","^DIC",920.6,920.6,0,"WR")
@
"SEC","^DIC",9000010.11,9000010.11,0,"DD")
@
"SEC","^DIC",9000010.707,9000010.707,0,"AUDIT")
@
"SEC","^DIC",9000010.707,9000010.707,0,"DD")
@
"SEC","^DIC",9000010.707,9000010.707,0,"DEL")
@
"SEC","^DIC",9000010.707,9000010.707,0,"LAYGO")
@
"SEC","^DIC",9000010.707,9000010.707,0,"RD")
@
"SEC","^DIC",9000010.707,9000010.707,0,"WR")
@
"VER")
8.0^22.0
"^DD",811.1,811.1,0)
FIELD^^.05^5
"^DD",811.1,811.1,0,"DDA")
N
"^DD",811.1,811.1,0,"DT")
2950323
"^DD",811.1,811.1,0,"ID",.03)
W "   ",$P(^(0),U,3)
"^DD",811.1,811.1,0,"IX","AA",811.1,.01)

"^DD",811.1,811.1,0,"IX","AA1",811.1,.03)

"^DD",811.1,811.1,0,"IX","AA2",811.1,.05)

"^DD",811.1,811.1,0,"IX","B",811.1,.01)

"^DD",811.1,811.1,0,"NM","PCE CODE MAPPING")

"^DD",811.1,811.1,0,"VRPK")
PX
"^DD",811.1,811.1,.01,0)
FILE ENTRY^RV^^0;1^Q
"^DD",811.1,811.1,.01,1,0)
^.1
"^DD",811.1,811.1,.01,1,1,0)
811.1^B
"^DD",811.1,811.1,.01,1,1,1)
S ^PXD(811.1,"B",$E(X,1,30),DA)=""
"^DD",811.1,811.1,.01,1,1,2)
K ^PXD(811.1,"B",$E(X,1,30),DA)
"^DD",811.1,811.1,.01,1,2,0)
811.1^AA^MUMPS
"^DD",811.1,811.1,.01,1,2,1)
I $P(^PXD(811.1,DA,0),"^",5)'="" S ^PXD(811.1,"AA",$P(X,";"),$P(^PXD(811.1,DA,0),"^",3),$P(^PXD(811.1,DA,0),"^",5),DA)=""
"^DD",811.1,811.1,.01,1,2,2)
K ^PXD(811.1,"AA",$P(X,";"),$P(^PXD(811.1,DA,0),"^",3),$P(^PXD(811.1,DA,0),"^",5))
"^DD",811.1,811.1,.01,1,2,"%D",0)
^^1^1^2950816^
"^DD",811.1,811.1,.01,1,2,"%D",1,0)
PXD("AA",FIRST ; PIECE OF FILE ENTRY FIELD,FROM,ON/OFF FLAG,DA)
"^DD",811.1,811.1,.01,1,2,"DT")
2950221
"^DD",811.1,811.1,.01,3)
Enter the coding system and entry here (e.g. C.90732)
"^DD",811.1,811.1,.01,21,0)
^^6^6^2951121^^^^
"^DD",811.1,811.1,.01,21,1,0)
This field is a variable pointer which allows coded system entries to be
"^DD",811.1,811.1,.01,21,2,0)
mapped to an entry in PCE's supporting files.  For example, a CPT code
"^DD",811.1,811.1,.01,21,3,0)
for Pneumovax, 90732 would be the value entered here, and the Related
"^DD",811.1,811.1,.01,21,4,0)
Supporting entry field would be PNEUMO-VAC in the Immunization file.
"^DD",811.1,811.1,.01,21,5,0)
DO NOT use any general code such as 'OTHER SKIN TESTS' or 'OTHER
"^DD",811.1,811.1,.01,21,6,0)
PROCEDURE'.
"^DD",811.1,811.1,.01,"DT")
2950221
"^DD",811.1,811.1,.01,"V",0)
^.12P^4^3
"^DD",811.1,811.1,.01,"V",1,0)
81^CPT entry^1^C^n^n
"^DD",811.1,811.1,.01,"V",3,0)
9999999.14^IMMUNIZATIONS^3^I^^n
"^DD",811.1,811.1,.01,"V",4,0)
9999999.28^SKIN TEST^4^S^n^n
"^DD",811.1,811.1,.02,0)
RELATED SUPPORTING FILE ENTRY^V^^0;2^Q
"^DD",811.1,811.1,.02,21,0)
^^3^3^2951121^^^^
"^DD",811.1,811.1,.02,21,1,0)
A pointer to the second file encolved in this mapping.
"^DD",811.1,811.1,.02,21,2,0)
DO NOT point this field to anything that is general in nature such
"^DD",811.1,811.1,.02,21,3,0)
as 'OTHER SKIN TESTS' or 'OTHER IMMUNIZATION'.
"^DD",811.1,811.1,.02,"DT")
2950111
"^DD",811.1,811.1,.02,"V",0)
^.12P^5^3
"^DD",811.1,811.1,.02,"V",3,0)
9999999.14^IMMUNIZATION^1^I^n^n
"^DD",811.1,811.1,.02,"V",4,0)
9999999.28^SKIN TEST^2^S^n^n
"^DD",811.1,811.1,.02,"V",5,0)
81^CPT^6^C^^n
"^DD",811.1,811.1,.03,0)
FROM^RF^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>4!($L(X)<2) X
"^DD",811.1,811.1,.03,1,0)
^.1^^-1
"^DD",811.1,811.1,.03,1,1,0)
811.1^AA1^MUMPS
"^DD",811.1,811.1,.03,1,1,1)
I $P(^PXD(811.1,DA,0),"^",5)'="" S ^PXD(811.1,"AA",$P($P(^PXD(811.1,DA,0),"^"),";"),X,$P(^PXD(811.1,DA,0),"^",5),DA)=""
"^DD",811.1,811.1,.03,1,1,2)
K ^PXD(811.1,"AA",$P($P(^PXD(811.1,DA,0),"^"),";"),X,$P(^PXD(811.1,DA,0),"^",5),DA)
"^DD",811.1,811.1,.03,1,1,"DT")
2950221
"^DD",811.1,811.1,.03,3)
Answer must be 2-4 characters in length.
"^DD",811.1,811.1,.03,21,0)
^^3^3^2951121^^^^
"^DD",811.1,811.1,.03,21,1,0)
The 2 or 3 letter mnemonic that stands for the file that the data came
"^DD",811.1,811.1,.03,21,2,0)
from or that is also being populated at this time.
"^DD",811.1,811.1,.03,21,3,0)
IMM = V IMMUNIZATIONS, CPT=V CPT ,and SK=V SKIN TESTS
"^DD",811.1,811.1,.03,"DT")
2950323
"^DD",811.1,811.1,.04,0)
TO^RF^^0;4^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>4!($L(X)<2) X
"^DD",811.1,811.1,.04,1,0)
^.1^^0
"^DD",811.1,811.1,.04,3)
Answer must be 2-4 characters in length.
"^DD",811.1,811.1,.04,21,0)
^^2^2^2951121^^^^
"^DD",811.1,811.1,.04,21,1,0)
The 2 or 3 letter mnemonic that stands of the file that the data is going
"^DD",811.1,811.1,.04,21,2,0)
also be put into. IMM=VIMMUNIZATIONS, CPT=V CPT, and SK=VSKIN TESTS
"^DD",811.1,811.1,.04,"DT")
2950405
"^DD",811.1,811.1,.05,0)
ON/OFF FLAG^RS^1:ON;0:OFF;^0;5^Q
"^DD",811.1,811.1,.05,1,0)
^.1^^-1
"^DD",811.1,811.1,.05,1,1,0)
811.1^AA2^MUMPS
"^DD",811.1,811.1,.05,1,1,1)
S ^PXD(811.1,"AA",$P($P(^PXD(811.1,DA,0),"^"),";"),$P(^PXD(811.1,DA,0),"^",3),X,DA)=""
"^DD",811.1,811.1,.05,1,1,2)
K ^PXD(811.1,"AA",$P($P(^PXD(811.1,DA,0),"^"),";"),$P(^PXD(811.1,DA,0),"^",3),X,DA)
"^DD",811.1,811.1,.05,1,1,"%D",0)
^^1^1^2950816^^^
"^DD",811.1,811.1,.05,1,1,"%D",1,0)
X REF  ,POINTER NUMBER,FROM MNEMONIC,ON/OFF FLAG,DA
"^DD",811.1,811.1,.05,1,1,"DT")
2950210
"^DD",811.1,811.1,.05,21,0)
^^2^2^2950816^
"^DD",811.1,811.1,.05,21,1,0)
A switch that tells us that this mapping is valid, and the mapping
"^DD",811.1,811.1,.05,21,2,0)
and storing of the data is allowed to occur.
"^DD",811.1,811.1,.05,"DT")
2950424
"^DD",920.05,920.05,0)
FIELD^^1^2
"^DD",920.05,920.05,0,"DDA")
N
"^DD",920.05,920.05,0,"DT")
3160212
"^DD",920.05,920.05,0,"IX","B",920.05,.01)

"^DD",920.05,920.05,0,"NM","IMM DEFAULT RESPONSES")

"^DD",920.05,920.05,0,"VRPK")
PX
"^DD",920.05,920.05,.01,0)
FACILITY^RP4a^DIC(4,^0;1^Q
"^DD",920.05,920.05,.01,.1)
Facility
"^DD",920.05,920.05,.01,1,0)
^.1
"^DD",920.05,920.05,.01,1,1,0)
920.05^B
"^DD",920.05,920.05,.01,1,1,1)
S ^PXV(920.05,"B",$E(X,1,30),DA)=""
"^DD",920.05,920.05,.01,1,1,2)
K ^PXV(920.05,"B",$E(X,1,30),DA)
"^DD",920.05,920.05,.01,3)
Enter the facility associated with these immunization default responses.
"^DD",920.05,920.05,.01,21,0)
^.001^3^3^3160204^^^
"^DD",920.05,920.05,.01,21,1,0)
This is the facility associated with this set of default immunization 
"^DD",920.05,920.05,.01,21,2,0)
responses. At multi-division institutions this facility is a division 
"^DD",920.05,920.05,.01,21,3,0)
of that multi-division institution.
"^DD",920.05,920.05,.01,"AUDIT")
y
"^DD",920.05,920.05,.01,"DT")
3160204
"^DD",920.05,920.05,1,0)
IMMUNIZATION^920.051P^^1;0
"^DD",920.05,920.05,1,21,0)
^.001^2^2^3160212^^
"^DD",920.05,920.05,1,21,1,0)
This multiple field contains the default responses for documenting this 
"^DD",920.05,920.05,1,21,2,0)
immunization at each facility.
"^DD",920.05,920.05,1,"DT")
3160210
"^DD",920.05,920.051,0)
IMMUNIZATION SUB-FIELD^^.01^6
"^DD",920.05,920.051,0,"DT")
3160212
"^DD",920.05,920.051,0,"IX","B",920.051,.01)

"^DD",920.05,920.051,0,"NM","IMMUNIZATION")

"^DD",920.05,920.051,0,"UP")
920.05
"^DD",920.05,920.051,.01,0)
IMMUNIZATION^MP9999999.14'Xa^AUTTIMM(^0;1^S DINUM=X
"^DD",920.05,920.051,.01,.1)
Immunization
"^DD",920.05,920.051,.01,1,0)
^.1
"^DD",920.05,920.051,.01,1,1,0)
920.051^B
"^DD",920.05,920.051,.01,1,1,1)
S ^PXV(920.05,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",920.05,920.051,.01,1,1,2)
K ^PXV(920.05,DA(1),1,"B",$E(X,1,30),DA)
"^DD",920.05,920.051,.01,3)
Enter the immunization associated with this set of default responses.
"^DD",920.05,920.051,.01,21,0)
^^2^2^3160210^
"^DD",920.05,920.051,.01,21,1,0)
This is the immunization type associated with this set of default
"^DD",920.05,920.051,.01,21,2,0)
responses.
"^DD",920.05,920.051,.01,"AUDIT")
y
"^DD",920.05,920.051,.01,"DT")
3160307
"^DD",920.05,920.051,1302,0)
ROUTE OF ADMINISTRATION^P920.2'a^PXV(920.2,^13;2^Q
"^DD",920.05,920.051,1302,.1)
Route of Administration
"^DD",920.05,920.051,1302,3)
Enter the default ROUTE OF ADMINISTRATION response for this immunization.
"^DD",920.05,920.051,1302,21,0)
^^2^2^3160209^
"^DD",920.05,920.051,1302,21,1,0)
This field holds the default value for the ROUTE OF ADMINISTRATION 
"^DD",920.05,920.051,1302,21,2,0)
field for the immunization type given.
"^DD",920.05,920.051,1302,"AUDIT")
y
"^DD",920.05,920.051,1302,"DT")
3160212
"^DD",920.05,920.051,1303,0)
SITE OF ADMINISTRATION^P920.3'a^PXV(920.3,^13;3^Q
"^DD",920.05,920.051,1303,.1)
Site of Administration
"^DD",920.05,920.051,1303,3)
Enter the default SITE OF ADMINISTRATION response for this immunization.
"^DD",920.05,920.051,1303,21,0)
^^2^2^3160209^
"^DD",920.05,920.051,1303,21,1,0)
This field holds the default value for the SITE OF ADMINISTRATION 
"^DD",920.05,920.051,1303,21,2,0)
field for the immunization type given.
"^DD",920.05,920.051,1303,"AUDIT")
y
"^DD",920.05,920.051,1303,"DT")
3160212
"^DD",920.05,920.051,1312,0)
DOSE^NJ6,2a^^13;12^K:+X'=X!(X>999)!(X<0)!(X?.E1"."3.N) X
"^DD",920.05,920.051,1312,.1)
Dose
"^DD",920.05,920.051,1312,3)
Type a number between 0 and 999, 2 decimal digits.
"^DD",920.05,920.051,1312,21,0)
^^2^2^3160209^
"^DD",920.05,920.051,1312,21,1,0)
This field holds the default value for the DOSE field for the 
"^DD",920.05,920.051,1312,21,2,0)
immunization type given.
"^DD",920.05,920.051,1312,"AUDIT")
y
"^DD",920.05,920.051,1312,"DT")
3160212
"^DD",920.05,920.051,1313,0)
DOSE UNITS^P757.5'a^LEX(757.5,^13;13^Q
"^DD",920.05,920.051,1313,.1)
Dose Units
"^DD",920.05,920.051,1313,3)
Enter the default DOSE UNITS response for this immunization.
"^DD",920.05,920.051,1313,21,0)
^^2^2^3160310^
"^DD",920.05,920.051,1313,21,1,0)
This field holds the default value for the DOSE UNITS field for the
"^DD",920.05,920.051,1313,21,2,0)
immunization type given.  
"^DD",920.05,920.051,1313,"AUDIT")
y
"^DD",920.05,920.051,1313,"DT")
3160209
"^DD",920.05,920.051,81101,0)
COMMENTS^Fa^^811;1^K:$L(X)>245!($L(X)<1) X
"^DD",920.05,920.051,81101,.1)
Comments
"^DD",920.05,920.051,81101,3)
Answer must be 1-245 characters in length.
"^DD",920.05,920.051,81101,21,0)
^^2^2^3160212^
"^DD",920.05,920.051,81101,21,1,0)
This field holds the default value for the COMMENT field for the 
"^DD",920.05,920.051,81101,21,2,0)
immunization type given.
"^DD",920.05,920.051,81101,"AUDIT")
y
"^DD",920.05,920.051,81101,"DT")
3160212
"^DD",920.4,920.4,.05,0)
CONCEPT CODING SYSTEM^Fa^^VUID;4^K:$L(X)>10!($L(X)<3) X
"^DD",920.4,920.4,.05,.1)
CDC HL7 TABLE 0396 CODE
"^DD",920.4,920.4,.05,3)
Answer must be 3-10 characters in length.
"^DD",920.4,920.4,.05,9)
^
"^DD",920.4,920.4,.05,21,0)
^^2^2^3151208^
"^DD",920.4,920.4,.05,21,1,0)
This is the  HL7 Table 0396 code to describe the coding system used to 
"^DD",920.4,920.4,.05,21,2,0)
represent this concept code.
"^DD",920.4,920.4,.05,"AUDIT")
y
"^DD",920.4,920.4,.05,"DT")
3151208
"^DD",920.6,920.6,0)
FIELD^^1^2
"^DD",920.6,920.6,0,"DDA")
N
"^DD",920.6,920.6,0,"DT")
3160114
"^DD",920.6,920.6,0,"IX","B",920.6,.01)

"^DD",920.6,920.6,0,"NM","IMM ROUTES TO SITES")

"^DD",920.6,920.6,0,"VRPK")
PX
"^DD",920.6,920.6,.01,0)
ROUTE^RP920.2'X^PXV(920.2,^0;1^S DINUM=X
"^DD",920.6,920.6,.01,1,0)
^.1
"^DD",920.6,920.6,.01,1,1,0)
920.6^B
"^DD",920.6,920.6,.01,1,1,1)
S ^PXV(920.6,"B",$E(X,1,30),DA)=""
"^DD",920.6,920.6,.01,1,1,2)
K ^PXV(920.6,"B",$E(X,1,30),DA)
"^DD",920.6,920.6,.01,3)
Enter the route to be mapped.
"^DD",920.6,920.6,.01,21,0)
^^1^1^3160114^
"^DD",920.6,920.6,.01,21,1,0)
This is the route to be mapped.
"^DD",920.6,920.6,.01,"DT")
3160114
"^DD",920.6,920.6,1,0)
SITES^920.61P^^1;0
"^DD",920.6,920.6,1,21,0)
^^1^1^3160114^
"^DD",920.6,920.6,1,21,1,0)
These are the sites that are mapped to this route.
"^DD",920.6,920.61,0)
SITES SUB-FIELD^^.01^1
"^DD",920.6,920.61,0,"DT")
3160114
"^DD",920.6,920.61,0,"IX","B",920.61,.01)

"^DD",920.6,920.61,0,"NM","SITES")

"^DD",920.6,920.61,0,"UP")
920.6
"^DD",920.6,920.61,.01,0)
SITE^MP920.3'^PXV(920.3,^0;1^Q
"^DD",920.6,920.61,.01,1,0)
^.1
"^DD",920.6,920.61,.01,1,1,0)
920.61^B
"^DD",920.6,920.61,.01,1,1,1)
S ^PXV(920.6,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",920.6,920.61,.01,1,1,2)
K ^PXV(920.6,DA(1),1,"B",$E(X,1,30),DA)
"^DD",920.6,920.61,.01,3)
Enter the site that should be mapped to this route.
"^DD",920.6,920.61,.01,21,0)
^^1^1^3160114^
"^DD",920.6,920.61,.01,21,1,0)
This is the site that will be mapped to this route.
"^DD",920.6,920.61,.01,"DT")
3160114
"^DD",9000010.11,9000010.11,0)
FIELD^^1601^60
"^DD",9000010.11,9000010.11,0,"DDA")
N
"^DD",9000010.11,9000010.11,0,"DT")
3160201
"^DD",9000010.11,9000010.11,0,"ID",.02)
W "   ",$S($D(^DPT(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),@("$E("_DIC_"Y,0),0)")
"^DD",9000010.11,9000010.11,0,"ID",.03)
W "   " S AIHSY=Y,Y=$S($D(^AUPNVSIT(+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:"") X:Y ^DD("DD") W Y S Y=AIHSY K AIHSY W @("$E("_DIC_"Y,0),0)")
"^DD",9000010.11,9000010.11,0,"IX","AA",9000010.11,.03)

"^DD",9000010.11,9000010.11,0,"IX","AATOO",9000010.11,.01)

"^DD",9000010.11,9000010.11,0,"IX","AATOO2",9000010.11,.02)

"^DD",9000010.11,9000010.11,0,"IX","AD",9000010.11,.03)

"^DD",9000010.11,9000010.11,0,"IX","AE",9000010.11,1402)

"^DD",9000010.11,9000010.11,0,"IX","AF",9000010.11,1207)

"^DD",9000010.11,9000010.11,0,"IX","AV10",9000010.11,.03)

"^DD",9000010.11,9000010.11,0,"IX","B",9000010.11,.01)

"^DD",9000010.11,9000010.11,0,"IX","C",9000010.11,.02)

"^DD",9000010.11,9000010.11,0,"IX","LN",9000010.11,1207)

"^DD",9000010.11,9000010.11,0,"NM","V IMMUNIZATION")

"^DD",9000010.11,9000010.11,0,"PT",9000010.11,1208)

"^DD",9000010.11,9000010.11,0,"VRPK")
PX
"^DD",9000010.11,9000010.11,.01,0)
IMMUNIZATION^RP9999999.14'a^AUTTIMM(^0;1^Q
"^DD",9000010.11,9000010.11,.01,1,0)
^.1^^-1
"^DD",9000010.11,9000010.11,.01,1,1,0)
9000010.11^B
"^DD",9000010.11,9000010.11,.01,1,1,1)
S ^AUPNVIMM("B",$E(X,1,30),DA)=""
"^DD",9000010.11,9000010.11,.01,1,1,2)
K ^AUPNVIMM("B",$E(X,1,30),DA)
"^DD",9000010.11,9000010.11,.01,1,2,0)
^^TRIGGER^9000010.11^1206
"^DD",9000010.11,9000010.11,.01,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^AUPNVIMM(D0,12)):^(12),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X=DIV S X=$G(DUZ) S DIH=$G(^AUPNVIMM(DIV(0),12)),DIV=X S $P(^(12),U,6)=DIV,DIH=9000010.11,DIG=1206 D ^DICR
"^DD",9000010.11,9000010.11,.01,1,2,2)
Q
"^DD",9000010.11,9000010.11,.01,1,2,"%D",0)
^^3^3^3140422^
"^DD",9000010.11,9000010.11,.01,1,2,"%D",1,0)
The IMMUNIZATION DOCUMENTER field (#1206) will be triggered whenever the
"^DD",9000010.11,9000010.11,.01,1,2,"%D",2,0)
IMMUNIZATION field (#.01) is entered or updated.  The triggered value 
"^DD",9000010.11,9000010.11,.01,1,2,"%D",3,0)
will be the DUZ of the user.
"^DD",9000010.11,9000010.11,.01,1,2,"CREATE VALUE")
S X=$G(DUZ)
"^DD",9000010.11,9000010.11,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",9000010.11,9000010.11,.01,1,2,"DT")
3140422
"^DD",9000010.11,9000010.11,.01,1,2,"FIELD")
IMMUNIZATION DOCUMENTER
"^DD",9000010.11,9000010.11,.01,1,3,0)
9000010.11^AATOO^MUMPS
"^DD",9000010.11,9000010.11,.01,1,3,1)
I $P(^AUPNVIMM(DA,0),U,2)]"",$P(^(0),U,3)]"" S ^AUPNVIMM("AA",$P(^AUPNVIMM(DA,0),U,2),X,(9999999-$P(+^AUPNVSIT($P(^AUPNVIMM(DA,0),U,3),0),".",1)),DA)=""
"^DD",9000010.11,9000010.11,.01,1,3,2)
I $P(^AUPNVIMM(DA,0),U,2)]"",$P(^(0),U,3)]"" K ^AUPNVIMM("AA",$P(^AUPNVIMM(DA,0),U,2),X,(9999999-$P(+^AUPNVSIT($P(^AUPNVIMM(DA,0),U,3),0),".",1)),DA)
"^DD",9000010.11,9000010.11,.01,1,3,"%D",0)
^^5^5^2950901^^
"^DD",9000010.11,9000010.11,.01,1,3,"%D",1,0)
This cross reference is used for searches in sequence by patient,
"^DD",9000010.11,9000010.11,.01,1,3,"%D",2,0)
immunization internal entry, inverted visit date, and internal
"^DD",9000010.11,9000010.11,.01,1,3,"%D",3,0)
entry number.
"^DD",9000010.11,9000010.11,.01,1,3,"%D",4,0)
 
"^DD",9000010.11,9000010.11,.01,1,3,"%D",5,0)
   "AA",PATIENT,IMMUNIZATION,VISIT,DA
"^DD",9000010.11,9000010.11,.01,3)
Enter the name of the immunization given to the patient.
"^DD",9000010.11,9000010.11,.01,21,0)
^.001^2^2^3150421^^^
"^DD",9000010.11,9000010.11,.01,21,1,0)
This is the type of immunization that was given to the patient at the
"^DD",9000010.11,9000010.11,.01,21,2,0)
encounter.
"^DD",9000010.11,9000010.11,.01,"AUDIT")
y
"^DD",9000010.11,9000010.11,.01,"DT")
3150921
"^DD",9000010.11,9000010.11,.02,0)
PATIENT NAME^RP9000001'Ia^AUPNPAT(^0;2^Q
"^DD",9000010.11,9000010.11,.02,1,0)
^.1
"^DD",9000010.11,9000010.11,.02,1,2,0)
9000010.11^AATOO2^MUMPS
"^DD",9000010.11,9000010.11,.02,1,2,1)
I $P(^AUPNVIMM(DA,0),U,3)]"" S ^AUPNVIMM("AA",X,+^AUPNVIMM(DA,0),(9999999-$P(+^AUPNVSIT($P(^AUPNVIMM(DA,0),U,3),0),".",1)),DA)=""
"^DD",9000010.11,9000010.11,.02,1,2,2)
I $P(^AUPNVIMM(DA,0),U,3)]"" K ^AUPNVIMM("AA",X,+^AUPNVIMM(DA,0),(9999999-$P(+^AUPNVSIT($P(^AUPNVIMM(DA,0),U,3),0),".",1)),DA)
"^DD",9000010.11,9000010.11,.02,1,2,"%D",0)
^^2^2^2940127^
"^DD",9000010.11,9000010.11,.02,1,2,"%D",1,0)
This is a Health Summary cross-reference.
"^DD",9000010.11,9000010.11,.02,1,2,"%D",2,0)
"AA",PATIENT,IMMUNIZATION,VISIT,DA
"^DD",9000010.11,9000010.11,.02,1,3,0)
9000010.11^C
"^DD",9000010.11,9000010.11,.02,1,3,1)
S ^AUPNVIMM("C",$E(X,1,30),DA)=""
"^DD",9000010.11,9000010.11,.02,1,3,2)
K ^AUPNVIMM("C",$E(X,1,30),DA)
"^DD",9000010.11,9000010.11,.02,1,3,"%D",0)
^^1^1^2950901^
"^DD",9000010.11,9000010.11,.02,1,3,"%D",1,0)
This cross reference provides a look-up of immunizations by patient name.
"^DD",9000010.11,9000010.11,.02,1,3,"DT")
2950901
"^DD",9000010.11,9000010.11,.02,3)
Enter the patient who was given the immunization.
"^DD",9000010.11,9000010.11,.02,21,0)
^.001^1^1^3140701^^^
"^DD",9000010.11,9000010.11,.02,21,1,0)
This is the patient who was given the immunization.
"^DD",9000010.11,9000010.11,.02,23,0)
^^3^3^3140701^
"^DD",9000010.11,9000010.11,.02,23,1,0)
This is a pointer the Patient/IHS file (#9000001), which is dinumed to 
"^DD",9000010.11,9000010.11,.02,23,2,0)
the PATIENT file (#2).  This field is always stuffed by the application. 
"^DD",9000010.11,9000010.11,.02,23,3,0)
No editing is allowed.
"^DD",9000010.11,9000010.11,.02,"AUDIT")
y
"^DD",9000010.11,9000010.11,.02,"DT")
3150213
"^DD",9000010.11,9000010.11,.03,0)
VISIT^R*P9000010'Ia^AUPNVSIT(^0;3^S DIC("S")="I $P(^(0),U,5)=$P(^AUPNVIMM(DA,0),U,2)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.11,9000010.11,.03,1,0)
^.1
"^DD",9000010.11,9000010.11,.03,1,1,0)
9000010.11^AD
"^DD",9000010.11,9000010.11,.03,1,1,1)
S ^AUPNVIMM("AD",$E(X,1,30),DA)=""
"^DD",9000010.11,9000010.11,.03,1,1,2)
K ^AUPNVIMM("AD",$E(X,1,30),DA)
"^DD",9000010.11,9000010.11,.03,1,1,"%D",0)
^^4^4^2950901^
"^DD",9000010.11,9000010.11,.03,1,1,"%D",1,0)
This cross reference is used for searches by the visit pointer and
"^DD",9000010.11,9000010.11,.03,1,1,"%D",2,0)
internal entry number.
"^DD",9000010.11,9000010.11,.03,1,1,"%D",3,0)
 
"^DD",9000010.11,9000010.11,.03,1,1,"%D",4,0)
  "AD",VISIT pointer, DA
"^DD",9000010.11,9000010.11,.03,1,2,0)
9000010.11^AA^MUMPS
"^DD",9000010.11,9000010.11,.03,1,2,1)
Q:$P(^AUPNVIMM(DA,0),U,2)=""  S ^AUPNVIMM("AA",$P(^AUPNVIMM(DA,0),U,2),+^AUPNVIMM(DA,0),(9999999-$P(+^AUPNVSIT(X,0),".",1)),DA)=""
"^DD",9000010.11,9000010.11,.03,1,2,2)
Q:$P(^AUPNVIMM(DA,0),U,2)=""  K ^AUPNVIMM("AA",$P(^AUPNVIMM(DA,0),U,2),+^AUPNVIMM(DA,0),(9999999-$P(+^AUPNVSIT(X,0),".",1)),DA)
"^DD",9000010.11,9000010.11,.03,1,2,"%D",0)
^.101^4^4^3140626^^
"^DD",9000010.11,9000010.11,.03,1,2,"%D",1,0)
This cross-reference is used for searches in sequence by patient,
"^DD",9000010.11,9000010.11,.03,1,2,"%D",2,0)
Immunization pointer, inverted visit date, and internal entry number.
"^DD",9000010.11,9000010.11,.03,1,2,"%D",3,0)
 
"^DD",9000010.11,9000010.11,.03,1,2,"%D",4,0)
    "AA",PATIENT,IMMUNIZATION,VISIT,DA
"^DD",9000010.11,9000010.11,.03,1,3,0)
9000010.11^AV10^MUMPS
"^DD",9000010.11,9000010.11,.03,1,3,1)
D ADD^AUPNVSIT
"^DD",9000010.11,9000010.11,.03,1,3,2)
D SUB^AUPNVSIT
"^DD",9000010.11,9000010.11,.03,1,3,"%D",0)
^^2^2^2940127^^
"^DD",9000010.11,9000010.11,.03,1,3,"%D",1,0)
This cross-reference adds and subtracts from the dependent entry count in
"^DD",9000010.11,9000010.11,.03,1,3,"%D",2,0)
the VISIT file.
"^DD",9000010.11,9000010.11,.03,3)
Enter the visit date/time for the encounter where the immunization was given.
"^DD",9000010.11,9000010.11,.03,12)
VISIT MUST BE FOR CURRENT PATIENT
"^DD",9000010.11,9000010.11,.03,12.1)
S DIC("S")="I $P(^(0),U,5)=$P(^AUPNVIMM(DA,0),U,2)"
"^DD",9000010.11,9000010.11,.03,21,0)
^.001^2^2^3140422^^
"^DD",9000010.11,9000010.11,.03,21,1,0)
This is the encounter defined in the Visit file that represents when and
"^DD",9000010.11,9000010.11,.03,21,2,0)
where the immunization was given.
"^DD",9000010.11,9000010.11,.03,23,0)
^.001^2^2^3140422^^
"^DD",9000010.11,9000010.11,.03,23,1,0)
This is a pointer to the Visit File (#9000010).  This field is stuffed by
"^DD",9000010.11,9000010.11,.03,23,2,0)
the applications. No editing is allowed.
"^DD",9000010.11,9000010.11,.03,"AUDIT")
y
"^DD",9000010.11,9000010.11,.03,"DT")
3150213
"^DD",9000010.11,9000010.11,.04,0)
SERIES^*Sa^P:PARTIALLY COMPLETE;C:COMPLETE;B:BOOSTER;1:SERIES 1;2:SERIES 2;3:SERIES 3;4:SERIES 4;5:SERIES 5;6:SERIES 6;7:SERIES 7;8:SERIES 8;^0;4^Q
"^DD",9000010.11,9000010.11,.04,.1)
Series
"^DD",9000010.11,9000010.11,.04,1,0)
^.1^^0
"^DD",9000010.11,9000010.11,.04,3)
Enter the series number, booster, partial or complete.
"^DD",9000010.11,9000010.11,.04,12)
Screen prevents selection of inappropriate series of immunization type.
"^DD",9000010.11,9000010.11,.04,12.1)
S DIC("S")="I Y'>$$SERIES^PXVUTL0"
"^DD",9000010.11,9000010.11,.04,21,0)
^.001^2^2^3150211^^^^
"^DD",9000010.11,9000010.11,.04,21,1,0)
This field allows the provider to specify which series of immunization
"^DD",9000010.11,9000010.11,.04,21,2,0)
type was given to the patient.
"^DD",9000010.11,9000010.11,.04,"AUDIT")
y
"^DD",9000010.11,9000010.11,.04,"DT")
3150211
"^DD",9000010.11,9000010.11,.05,0)
LOT^*P9999999.41'a^AUTTIML(^0;5^S DIC("S")="I $P(^(0),U,3)=0,$D(^AUTTIML(""C"",$P(^AUPNVIMM(DA,0),U,1),Y))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.11,9000010.11,.05,3)
Select the lot of the immunization being administered.
"^DD",9000010.11,9000010.11,.05,12)
LOT MUST BE AVAILABLE AND MUST BE A VALID LOT FOR THE IMMUNIZATION BEING ENTERED.
"^DD",9000010.11,9000010.11,.05,12.1)
S DIC("S")="I $P(^(0),U,3)=0,$D(^AUTTIML(""C"",$P(^AUPNVIMM(DA,0),U,1),Y))"
"^DD",9000010.11,9000010.11,.05,21,0)
^^2^2^3140701^
"^DD",9000010.11,9000010.11,.05,21,1,0)
This Indian Health Service field indicates the lot number associated 
"^DD",9000010.11,9000010.11,.05,21,2,0)
with this immunization.
"^DD",9000010.11,9000010.11,.05,23,0)
^.001^5^5^3140625^^^
"^DD",9000010.11,9000010.11,.05,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,.05,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,.05,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,.05,23,4,0)
 
"^DD",9000010.11,9000010.11,.05,23,5,0)
APCDALVR Variable = APCDALVR("APCDTLOT")
"^DD",9000010.11,9000010.11,.05,"AUDIT")
y
"^DD",9000010.11,9000010.11,.05,"DT")
3150213
"^DD",9000010.11,9000010.11,.06,0)
REACTION^Sa^1:FEVER;2:IRRITABILITY;3:LOCAL REACTION OR SWELLING;4:VOMITING;5:RASH OR ITCHING;6:LETHARGY;7:CONVULSIONS;8:ARTHRITIS OR ARTHRALGIAS;9:ANAPHYLAXIS OR COLLAPSE;10:RESPIRATORY DISTRESS;11:OTHER;0:NONE;^0;6^Q
"^DD",9000010.11,9000010.11,.06,3)
Enter the number representing the patients reaction to the immunization.
"^DD",9000010.11,9000010.11,.06,21,0)
^^2^2^2950901^
"^DD",9000010.11,9000010.11,.06,21,1,0)
This is the reaction that may have been observed by the provider as a
"^DD",9000010.11,9000010.11,.06,21,2,0)
result of the immunization given.
"^DD",9000010.11,9000010.11,.06,"AUDIT")
y
"^DD",9000010.11,9000010.11,.06,"DT")
3150213
"^DD",9000010.11,9000010.11,.07,0)
CONTRAINDICATED^Sa^1:YES (DO NOT REPEAT THIS VACCINE).;0:NO (OK TO USE IN THE FUTURE);^0;7^Q
"^DD",9000010.11,9000010.11,.07,3)
Enter 1 if this immunization should not be given to the patient in the future.
"^DD",9000010.11,9000010.11,.07,21,0)
^^3^3^2950901^
"^DD",9000010.11,9000010.11,.07,21,1,0)
This field allows the immunization to be recorded as contraindicated.
"^DD",9000010.11,9000010.11,.07,21,2,0)
Reminders will include a check to see if the previous immunization was 
"^DD",9000010.11,9000010.11,.07,21,3,0)
contraindicated before creating reminders.
"^DD",9000010.11,9000010.11,.07,"AUDIT")
y
"^DD",9000010.11,9000010.11,.07,"DT")
3150213
"^DD",9000010.11,9000010.11,.08,0)
DOSE OVERRIDE^Sa^0:@;1:INVALID--BAD STORAGE;2:INVALID--DEFECTIVE;3:INVALID--EXPIRED;4:INVALID--ADMIN ERROR;9:FORCED VALID;^0;8^Q
"^DD",9000010.11,9000010.11,.08,3)
Select the reason for this dose override.
"^DD",9000010.11,9000010.11,.08,21,0)
^^2^2^3140701^
"^DD",9000010.11,9000010.11,.08,21,1,0)
This Indian Health Service field indicates the dose override status of 
"^DD",9000010.11,9000010.11,.08,21,2,0)
this immunization.
"^DD",9000010.11,9000010.11,.08,23,0)
^.001^3^3^3140625^^
"^DD",9000010.11,9000010.11,.08,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,.08,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,.08,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,.08,"AUDIT")
y
"^DD",9000010.11,9000010.11,.08,"DT")
3150213
"^DD",9000010.11,9000010.11,.09,0)
INJECTION SITE^Sa^LTI:Left Thigh IM;LTS:Left Thigh SQ;RTI:Right Thigh IM;RTS:Right Thigh SQ;BTI:Both Thighs IM;LDI:Left Delt IM;LAS:Left Arm SQ;RDI:Right Delt IM;RAS:Right Arm SQ;O:Oral;IN:Nasal;LID:Left Arm Intradermal;RID:Right Arm Intradermal;^0;9^Q
"^DD",9000010.11,9000010.11,.09,3)
Enter the body site where the injection was given.
"^DD",9000010.11,9000010.11,.09,21,0)
^^2^2^3140701^
"^DD",9000010.11,9000010.11,.09,21,1,0)
This Indian Health Service field identifies the body site where the 
"^DD",9000010.11,9000010.11,.09,21,2,0)
immunization was administered.
"^DD",9000010.11,9000010.11,.09,23,0)
^.001^3^3^3140626^^^
"^DD",9000010.11,9000010.11,.09,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,.09,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,.09,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,.09,"AUDIT")
y
"^DD",9000010.11,9000010.11,.09,"DT")
3140625
"^DD",9000010.11,9000010.11,.11,0)
VOLUME^NJ4,2a^^0;11^K:+X'=X!(X>5)!(X<0)!(X?.E1"."3N.N) X
"^DD",9000010.11,9000010.11,.11,3)
Type a Number between 0 and 5, 2 Decimal Digits
"^DD",9000010.11,9000010.11,.11,21,0)
^^2^2^3140701^
"^DD",9000010.11,9000010.11,.11,21,1,0)
This Indian Health Service field indicates the volume of vaccine 
"^DD",9000010.11,9000010.11,.11,21,2,0)
administered for this immunization.
"^DD",9000010.11,9000010.11,.11,23,0)
^.001^3^3^3140626^^^
"^DD",9000010.11,9000010.11,.11,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,.11,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,.11,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,.11,"AUDIT")
y
"^DD",9000010.11,9000010.11,.11,"DT")
3150213
"^DD",9000010.11,9000010.11,.12,0)
DATE OF VAC INFO STATEMENT^Da^^0;12^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.11,9000010.11,.12,3)
Enter the date the vaccine information statement for this vaccine was offered to the patient.
"^DD",9000010.11,9000010.11,.12,21,0)
^^3^3^3140701^
"^DD",9000010.11,9000010.11,.12,21,1,0)
This Indian Health Service field indicates the date the vaccine 
"^DD",9000010.11,9000010.11,.12,21,2,0)
information statement associated with this immunization was 
"^DD",9000010.11,9000010.11,.12,21,3,0)
offered/given to the patient.
"^DD",9000010.11,9000010.11,.12,23,0)
^.001^3^3^3140625^^
"^DD",9000010.11,9000010.11,.12,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,.12,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,.12,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,.12,"AUDIT")
y
"^DD",9000010.11,9000010.11,.12,"DT")
3150213
"^DD",9000010.11,9000010.11,.13,0)
CREATED BY V CPT ENTRY^NJ9,0a^^0;13^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",9000010.11,9000010.11,.13,3)
Enter the IEN of the V CPT entry that created this V Immunization.
"^DD",9000010.11,9000010.11,.13,21,0)
^^2^2^3140701^
"^DD",9000010.11,9000010.11,.13,21,1,0)
This Indian Health Service field identifies the V CPT entry, if any,
"^DD",9000010.11,9000010.11,.13,21,2,0)
that created this V Immunization entry.
"^DD",9000010.11,9000010.11,.13,23,0)
^.001^3^3^3140625^^
"^DD",9000010.11,9000010.11,.13,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,.13,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,.13,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,.13,"AUDIT")
y
"^DD",9000010.11,9000010.11,.13,"DT")
3150213
"^DD",9000010.11,9000010.11,.14,0)
VAC ELIGIBILITY^P9002084.83'a^BIELIG(^0;14^Q
"^DD",9000010.11,9000010.11,.14,3)
Enter the patient's VFC Eligibility on this visit.
"^DD",9000010.11,9000010.11,.14,21,0)
^^2^2^3140701^
"^DD",9000010.11,9000010.11,.14,21,1,0)
This Indian Health Service field indicates the Vaccine for Children 
"^DD",9000010.11,9000010.11,.14,21,2,0)
(VFC) Program eligibility for this patient on this visit.
"^DD",9000010.11,9000010.11,.14,23,0)
^.001^6^6^3140829^^^
"^DD",9000010.11,9000010.11,.14,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,.14,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,.14,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,.14,23,4,0)
 
"^DD",9000010.11,9000010.11,.14,23,5,0)
This field points to Indian Health Service's BI TABLE ELIGIBILITY CODES file
"^DD",9000010.11,9000010.11,.14,23,6,0)
(#9002084.83) which is not used by the Department of Veterans Affairs.
"^DD",9000010.11,9000010.11,.14,"AUDIT")
y
"^DD",9000010.11,9000010.11,.14,"DT")
3150213
"^DD",9000010.11,9000010.11,.15,0)
IMPORT FROM OUTSIDE REGISTRY^Sa^1:IMPORTED;0:NOT IMPORTED;2:EDITED AFTER IMPORT;^0;15^Q
"^DD",9000010.11,9000010.11,.15,3)
Enter 1 if this immunization was imported from an outside registry.
"^DD",9000010.11,9000010.11,.15,21,0)
^^2^2^3140701^
"^DD",9000010.11,9000010.11,.15,21,1,0)
This Indian Health Service field indicated the import status of this 
"^DD",9000010.11,9000010.11,.15,21,2,0)
immunization from an outside registry.
"^DD",9000010.11,9000010.11,.15,23,0)
^.001^3^3^3140625^^
"^DD",9000010.11,9000010.11,.15,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,.15,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,.15,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,.15,"AUDIT")
y
"^DD",9000010.11,9000010.11,.15,"DT")
3150213
"^DD",9000010.11,9000010.11,.16,0)
NDC^P9002084.95'a^BINDC(^0;16^Q
"^DD",9000010.11,9000010.11,.16,3)
Select the NDC Code for this immunization. Enter
"^DD",9000010.11,9000010.11,.16,21,0)
^.001^2^2^3140829^^^
"^DD",9000010.11,9000010.11,.16,21,1,0)
This Indian Health Service field identifies the National Drug Code 
"^DD",9000010.11,9000010.11,.16,21,2,0)
(NDC) for this vaccine.
"^DD",9000010.11,9000010.11,.16,23,0)
^.001^6^6^3140829^^^^
"^DD",9000010.11,9000010.11,.16,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,.16,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,.16,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,.16,23,4,0)
 
"^DD",9000010.11,9000010.11,.16,23,5,0)
This field points to Indian Health Service's BI TABLE NDC CODES file
"^DD",9000010.11,9000010.11,.16,23,6,0)
(#9002084.95) which is not used by the Department of Veterans Affairs.
"^DD",9000010.11,9000010.11,.16,"AUDIT")
y
"^DD",9000010.11,9000010.11,.16,"DT")
3150213
"^DD",9000010.11,9000010.11,1,0)
ADMINISTRATIVE NOTES^Fa^^1;1^K:$L(X)>160!($L(X)<1) X
"^DD",9000010.11,9000010.11,1,3)
Answer must be 1-160 characters in length
"^DD",9000010.11,9000010.11,1,21,0)
^^2^2^3140701^
"^DD",9000010.11,9000010.11,1,21,1,0)
This Indian Health Service field is a free text field used to document
"^DD",9000010.11,9000010.11,1,21,2,0)
administrative information about this immunization.
"^DD",9000010.11,9000010.11,1,23,0)
^^3^3^3140625^
"^DD",9000010.11,9000010.11,1,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,1,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,1,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,1,"AUDIT")
y
"^DD",9000010.11,9000010.11,1,"DT")
3150213
"^DD",9000010.11,9000010.11,2,0)
VIS OFFERED/GIVEN TO PATIENT^9000010.112PA^^2;0
"^DD",9000010.11,9000010.11,2,21,0)
^.001^3^3^3150518^^
"^DD",9000010.11,9000010.11,2,21,1,0)
This is the Vaccine Information Statement (VIS) that was offered to the 
"^DD",9000010.11,9000010.11,2,21,2,0)
patient prior to the administration of the immunization, along with the
"^DD",9000010.11,9000010.11,2,21,3,0)
date/time it was offered.
"^DD",9000010.11,9000010.11,3,0)
OTHER DIAGNOSIS^9000010.113P^^3;0
"^DD",9000010.11,9000010.11,3,21,0)
^.001^2^2^3140626^^
"^DD",9000010.11,9000010.11,3,21,1,0)
This is a list of diagnoses for this immunization event, in addition to
"^DD",9000010.11,9000010.11,3,21,2,0)
the Primary Diagnosis selected for this event.
"^DD",9000010.11,9000010.11,3,23,0)
^.001^3^3^3140626^^
"^DD",9000010.11,9000010.11,3,23,1,0)
This is a multiple of diagnoses for this immunization event.  They are in
"^DD",9000010.11,9000010.11,3,23,2,0)
addition to the PRIMARY DIAGNOSIS.  They are selected from the ICD
"^DD",9000010.11,9000010.11,3,23,3,0)
DIAGNOSIS file (#80).
"^DD",9000010.11,9000010.11,1101,0)
REMARKS^9000010.1111^^11;0
"^DD",9000010.11,9000010.11,1101,21,0)
^^2^2^2950901^
"^DD",9000010.11,9000010.11,1101,21,1,0)
This is additional comments or remarks related to the immunization given
"^DD",9000010.11,9000010.11,1101,21,2,0)
to the patient.
"^DD",9000010.11,9000010.11,1201,0)
EVENT DATE AND TIME^DXa^^12;1^S %DT="ET" D ^%DT S X=Y K:Y<1!$$TIME^PXVUTL X
"^DD",9000010.11,9000010.11,1201,1,0)
^.1^^-1
"^DD",9000010.11,9000010.11,1201,1,1,0)
^^TRIGGER^9000010.11^1205
"^DD",9000010.11,9000010.11,1201,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^AUPNVIMM(D0,12)):^(12),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC S X=% X ^DD(9000010.11,1201,1,1,1.4)
"^DD",9000010.11,9000010.11,1201,1,1,1.4)
S DIH=$G(^AUPNVIMM(DIV(0),12)),DIV=X S $P(^(12),U,5)=DIV,DIH=9000010.11,DIG=1205 D ^DICR
"^DD",9000010.11,9000010.11,1201,1,1,2)
Q
"^DD",9000010.11,9000010.11,1201,1,1,"%D",0)
^^3^3^3140422^
"^DD",9000010.11,9000010.11,1201,1,1,"%D",1,0)
The DATE/TIME RECORDED field (#1205) will be triggered whenever the 
"^DD",9000010.11,9000010.11,1201,1,1,"%D",2,0)
EVENT DATE AND TIME field (#1201) is entered or updated.  The triggered
"^DD",9000010.11,9000010.11,1201,1,1,"%D",3,0)
value will be NOW.
"^DD",9000010.11,9000010.11,1201,1,1,"CREATE VALUE")
NOW
"^DD",9000010.11,9000010.11,1201,1,1,"DELETE VALUE")
NO EFFECT
"^DD",9000010.11,9000010.11,1201,1,1,"FIELD")
DATE/TIME RECORDED
"^DD",9000010.11,9000010.11,1201,3)
Enter the date and (optional) time the immunization was given.
"^DD",9000010.11,9000010.11,1201,21,0)
^^10^10^3150820^
"^DD",9000010.11,9000010.11,1201,21,1,0)
This is the date and time the immunization was given. This date and time
"^DD",9000010.11,9000010.11,1201,21,2,0)
may be different from the visit date and time. For example, for clinic
"^DD",9000010.11,9000010.11,1201,21,3,0)
appointment visits, the visit date and time is the date and time of the
"^DD",9000010.11,9000010.11,1201,21,4,0)
appointment, not the time the provider performed the clinical event.
"^DD",9000010.11,9000010.11,1201,21,5,0)
 
"^DD",9000010.11,9000010.11,1201,21,6,0)
The date may be an imprecise date such as for an historical 
"^DD",9000010.11,9000010.11,1201,21,7,0)
immunization.
"^DD",9000010.11,9000010.11,1201,21,8,0)
 
"^DD",9000010.11,9000010.11,1201,21,9,0)
Date and time may be within 30 days before or after the visit date, 
"^DD",9000010.11,9000010.11,1201,21,10,0)
with the restriction the date cannot be a future date.
"^DD",9000010.11,9000010.11,1201,23,0)
^^13^13^3150820^^
"^DD",9000010.11,9000010.11,1201,23,1,0)
The PCE User Interface, which allows manual entry of data, will be the primary
"^DD",9000010.11,9000010.11,1201,23,2,0)
source of the immunization date and time.  The immunization date prompt defaults
"^DD",9000010.11,9000010.11,1201,23,3,0)
to the visit date and the time is entered to reflect the actual time the
"^DD",9000010.11,9000010.11,1201,23,4,0)
immunization was given.  The immunization date does not have to be the visit
"^DD",9000010.11,9000010.11,1201,23,5,0)
date, but it must be within 30 days before or after the visit, and not be a
"^DD",9000010.11,9000010.11,1201,23,6,0)
future date.
"^DD",9000010.11,9000010.11,1201,23,7,0)
 
"^DD",9000010.11,9000010.11,1201,23,8,0)
If the user wants to enter an historical immunization, the user should use the
"^DD",9000010.11,9000010.11,1201,23,9,0)
Historical Encounter entry action to document the historical immunization. 
"^DD",9000010.11,9000010.11,1201,23,10,0)
Historical entries will not be eligible for credit.
"^DD",9000010.11,9000010.11,1201,23,11,0)
 
"^DD",9000010.11,9000010.11,1201,23,12,0)
PCE data sources for automatic (scanning) data capture will be blank unless the
"^DD",9000010.11,9000010.11,1201,23,13,0)
immunization date and time are passed to PCE for filing.
"^DD",9000010.11,9000010.11,1201,"AUDIT")
y
"^DD",9000010.11,9000010.11,1201,"DT")
3150820
"^DD",9000010.11,9000010.11,1202,0)
ORDERING PROVIDER^P200'a^VA(200,^12;2^Q
"^DD",9000010.11,9000010.11,1202,3)
Enter the provider who ordered this immunization.
"^DD",9000010.11,9000010.11,1202,21,0)
^^2^2^2960513^
"^DD",9000010.11,9000010.11,1202,21,1,0)
The field can be used to document the provider who ordered the
"^DD",9000010.11,9000010.11,1202,21,2,0)
immunization.
"^DD",9000010.11,9000010.11,1202,"AUDIT")
y
"^DD",9000010.11,9000010.11,1202,"DT")
3150213
"^DD",9000010.11,9000010.11,1203,0)
CLINIC^P40.7'a^DIC(40.7,^12;3^Q
"^DD",9000010.11,9000010.11,1203,3)
Select a clinic stop for this Immunization event.
"^DD",9000010.11,9000010.11,1203,21,0)
^^2^2^3140702^
"^DD",9000010.11,9000010.11,1203,21,1,0)
This Indian Health Service field indicates the clinic stop associated 
"^DD",9000010.11,9000010.11,1203,21,2,0)
with this visit.
"^DD",9000010.11,9000010.11,1203,23,0)
^.001^5^5^3140702^^^
"^DD",9000010.11,9000010.11,1203,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,1203,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,1203,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,1203,23,4,0)
 
"^DD",9000010.11,9000010.11,1203,23,5,0)
APCDALVR Variable = APCDALVR("APCDTCLN")
"^DD",9000010.11,9000010.11,1203,"AUDIT")
y
"^DD",9000010.11,9000010.11,1203,"DT")
3150213
"^DD",9000010.11,9000010.11,1204,0)
ENCOUNTER PROVIDER^P200'a^VA(200,^12;4^Q
"^DD",9000010.11,9000010.11,1204,3)
Enter the provider who gave this immunization.
"^DD",9000010.11,9000010.11,1204,21,0)
^.001^2^2^3140829^^^^
"^DD",9000010.11,9000010.11,1204,21,1,0)
This is the provider who gave this
"^DD",9000010.11,9000010.11,1204,21,2,0)
immunization.
"^DD",9000010.11,9000010.11,1204,23,0)
^.001^1^1^3140829^^^
"^DD",9000010.11,9000010.11,1204,23,1,0)
This person can be any person in the new person file.
"^DD",9000010.11,9000010.11,1204,"AUDIT")
y
"^DD",9000010.11,9000010.11,1204,"DT")
3150213
"^DD",9000010.11,9000010.11,1205,0)
DATE/TIME RECORDED^Da^^12;5^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.11,9000010.11,1205,.1)
Date/Time Recorded
"^DD",9000010.11,9000010.11,1205,3)
Enter the date and time of documentation of the administration of the immunization.
"^DD",9000010.11,9000010.11,1205,5,1,0)
9000010.11^1201^1
"^DD",9000010.11,9000010.11,1205,9)
^
"^DD",9000010.11,9000010.11,1205,21,0)
^.001^3^3^3140416^^
"^DD",9000010.11,9000010.11,1205,21,1,0)
This timestamp field is the date and time of documentation of
"^DD",9000010.11,9000010.11,1205,21,2,0)
administration of the immunization. This field is set automatically 
"^DD",9000010.11,9000010.11,1205,21,3,0)
when the EVENT DATE AND TIME is entered.
"^DD",9000010.11,9000010.11,1205,"AUDIT")
y
"^DD",9000010.11,9000010.11,1205,"DT")
3150213
"^DD",9000010.11,9000010.11,1206,0)
IMMUNIZATION DOCUMENTER^P200'a^VA(200,^12;6^Q
"^DD",9000010.11,9000010.11,1206,.1)
Immunization Documenter
"^DD",9000010.11,9000010.11,1206,3)
Enter the person who documented this immunization in the system.
"^DD",9000010.11,9000010.11,1206,5,1,0)
9000010.11^.01^2
"^DD",9000010.11,9000010.11,1206,21,0)
^^2^2^3140422^
"^DD",9000010.11,9000010.11,1206,21,1,0)
This is the person/provider who documented this immunization by entering
"^DD",9000010.11,9000010.11,1206,21,2,0)
the data into the system by whatever means.
"^DD",9000010.11,9000010.11,1206,"AUDIT")
y
"^DD",9000010.11,9000010.11,1206,"DT")
3150213
"^DD",9000010.11,9000010.11,1207,0)
LOT NUMBER^*P9999999.41'a^AUTTIML(^12;7^S DIC("S")="I '$P(^(0),U,3),$P(^(0),U,9)'<DT,$$ACT^PXVXR" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",9000010.11,9000010.11,1207,.1)
Lot Number
"^DD",9000010.11,9000010.11,1207,1,0)
^.1
"^DD",9000010.11,9000010.11,1207,1,1,0)
9000010.11^LN
"^DD",9000010.11,9000010.11,1207,1,1,1)
S ^AUPNVIMM("LN",$E(X,1,30),DA)=""
"^DD",9000010.11,9000010.11,1207,1,1,2)
K ^AUPNVIMM("LN",$E(X,1,30),DA)
"^DD",9000010.11,9000010.11,1207,1,1,3)
Used for look-up and to determine if a Lot Number entry is being used.
"^DD",9000010.11,9000010.11,1207,1,1,"%D",0)
^^3^3^3150603^
"^DD",9000010.11,9000010.11,1207,1,1,"%D",1,0)
This cross reference is used to determine if an entry in the 
"^DD",9000010.11,9000010.11,1207,1,1,"%D",2,0)
IMMUNIZATION LOT file is being used by an entry in the V IMMUNIZATION
"^DD",9000010.11,9000010.11,1207,1,1,"%D",3,0)
file. Can also be used for V IMMUNIZATION look-ups.
"^DD",9000010.11,9000010.11,1207,1,1,"DT")
3140609
"^DD",9000010.11,9000010.11,1207,1,2,0)
9000010.11^AF^MUMPS
"^DD",9000010.11,9000010.11,1207,1,2,1)
D DECR^PXVXR Q
"^DD",9000010.11,9000010.11,1207,1,2,2)
D INCR^PXVXR Q
"^DD",9000010.11,9000010.11,1207,1,2,"%D",0)
^^2^2^3150616^
"^DD",9000010.11,9000010.11,1207,1,2,"%D",1,0)
This MUMPS type cross reference maintains the number of doses remaining 
"^DD",9000010.11,9000010.11,1207,1,2,"%D",2,0)
unused of this lot number.
"^DD",9000010.11,9000010.11,1207,1,2,"DT")
3150616
"^DD",9000010.11,9000010.11,1207,3)
Enter the lot number for this immunization.
"^DD",9000010.11,9000010.11,1207,12)
Screen requires selection of active lot for selected immunization.
"^DD",9000010.11,9000010.11,1207,12.1)
S DIC("S")="I '$P(^(0),U,3),$P(^(0),U,9)'<DT,$$ACT^PXVXR"
"^DD",9000010.11,9000010.11,1207,21,0)
^^2^2^3150824^
"^DD",9000010.11,9000010.11,1207,21,1,0)
This is the lot number of the immunization entered for this event. If
"^DD",9000010.11,9000010.11,1207,21,2,0)
historical event, enter lot number (if known) in Comments.
"^DD",9000010.11,9000010.11,1207,"AUDIT")
y
"^DD",9000010.11,9000010.11,1207,"DT")
3150824
"^DD",9000010.11,9000010.11,1208,0)
PARENT^P9000010.11'a^AUPNVIMM(^12;8^Q
"^DD",9000010.11,9000010.11,1208,3)
Select the parent event to this one.
"^DD",9000010.11,9000010.11,1208,21,0)
^^3^3^3140702^
"^DD",9000010.11,9000010.11,1208,21,1,0)
This Indian Health Service field indicates the parent immunization, if 
"^DD",9000010.11,9000010.11,1208,21,2,0)
any, associated with this immunization, such as for immunizations given 
"^DD",9000010.11,9000010.11,1208,21,3,0)
in series.
"^DD",9000010.11,9000010.11,1208,23,0)
^.001^5^5^3140626^^^
"^DD",9000010.11,9000010.11,1208,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,1208,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,1208,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,1208,23,4,0)
 
"^DD",9000010.11,9000010.11,1208,23,5,0)
APCDALVR Variable = APCDALVR("APCDTPNT")
"^DD",9000010.11,9000010.11,1208,"AUDIT")
y
"^DD",9000010.11,9000010.11,1208,"DT")
3150213
"^DD",9000010.11,9000010.11,1209,0)
EXTERNAL KEY^Fa^^12;9^K:$L(X)>20!($L(X)<1) X
"^DD",9000010.11,9000010.11,1209,3)
Answer must be 1-20 characters in length.
"^DD",9000010.11,9000010.11,1209,21,0)
^^2^2^3140702^
"^DD",9000010.11,9000010.11,1209,21,1,0)
This Indian Health Service free text field identifies the external key 
"^DD",9000010.11,9000010.11,1209,21,2,0)
associated with this immunization.
"^DD",9000010.11,9000010.11,1209,23,0)
^.001^5^5^3140625^^
"^DD",9000010.11,9000010.11,1209,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,1209,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,1209,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,1209,23,4,0)
 
"^DD",9000010.11,9000010.11,1209,23,5,0)
APCDALVR Variable = APCDALVR("APCDTEXK")
"^DD",9000010.11,9000010.11,1209,"AUDIT")
y
"^DD",9000010.11,9000010.11,1209,"DT")
3150213
"^DD",9000010.11,9000010.11,1210,0)
OUTSIDE PROVIDER NAME^Fa^^12;10^K:$L(X)>30!($L(X)<1) X
"^DD",9000010.11,9000010.11,1210,3)
Answer must be 1-30 characters in length.
"^DD",9000010.11,9000010.11,1210,21,0)
^^2^2^3140702^
"^DD",9000010.11,9000010.11,1210,21,1,0)
This Indian Health Service field contains the name of the outside 
"^DD",9000010.11,9000010.11,1210,21,2,0)
provider associated with this immunization.
"^DD",9000010.11,9000010.11,1210,23,0)
^.001^5^5^3140626^^^
"^DD",9000010.11,9000010.11,1210,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,1210,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,1210,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,1210,23,4,0)
  
"^DD",9000010.11,9000010.11,1210,23,5,0)
APCDALVR Variable = APCDALVR("APCDTOPR")
"^DD",9000010.11,9000010.11,1210,"AUDIT")
y
"^DD",9000010.11,9000010.11,1210,"DT")
3150213
"^DD",9000010.11,9000010.11,1213,0)
ANCILLARY POV^P80'a^ICD9(^12;13^Q
"^DD",9000010.11,9000010.11,1213,3)
Select an ancillary diagnosis for this event.
"^DD",9000010.11,9000010.11,1213,21,0)
^^2^2^3140702^
"^DD",9000010.11,9000010.11,1213,21,1,0)
This Indian Health Service field indicated the ancillary diagnosis 
"^DD",9000010.11,9000010.11,1213,21,2,0)
related to this immunization.
"^DD",9000010.11,9000010.11,1213,23,0)
^^3^3^3140625^
"^DD",9000010.11,9000010.11,1213,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,1213,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,1213,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,1213,"AUDIT")
y
"^DD",9000010.11,9000010.11,1213,"DT")
3150213
"^DD",9000010.11,9000010.11,1214,0)
USER LAST UPDATE^P200'a^VA(200,^12;14^Q
"^DD",9000010.11,9000010.11,1214,3)
Enter the user who last updated this immunization event.
"^DD",9000010.11,9000010.11,1214,21,0)
^.001^2^2^3140819^^
"^DD",9000010.11,9000010.11,1214,21,1,0)
This Indian Health Service field indicates the user who last updated 
"^DD",9000010.11,9000010.11,1214,21,2,0)
information for this immunization.
"^DD",9000010.11,9000010.11,1214,23,0)
^.001^3^3^3140819^^
"^DD",9000010.11,9000010.11,1214,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,1214,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,1214,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,1214,"AUDIT")
y
"^DD",9000010.11,9000010.11,1214,"DT")
3150213
"^DD",9000010.11,9000010.11,1215,0)
ORDERING LOCATION^P44'a^SC(^12;15^Q
"^DD",9000010.11,9000010.11,1215,3)
Select the location within this medical center where this Immunization was ordered.
"^DD",9000010.11,9000010.11,1215,21,0)
^^2^2^3140702^
"^DD",9000010.11,9000010.11,1215,21,1,0)
This Indian Health Service field indicated the hospital location ordering 
"^DD",9000010.11,9000010.11,1215,21,2,0)
this immunization.
"^DD",9000010.11,9000010.11,1215,23,0)
^^3^3^3140625^
"^DD",9000010.11,9000010.11,1215,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,1215,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,1215,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,1215,"AUDIT")
y
"^DD",9000010.11,9000010.11,1215,"DT")
3150213
"^DD",9000010.11,9000010.11,1216,0)
DATE/TIME ENTERED^Da^^12;16^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.11,9000010.11,1216,1,0)
^.1
"^DD",9000010.11,9000010.11,1216,1,1,0)
^^TRIGGER^9000010.11^1217
"^DD",9000010.11,9000010.11,1216,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^AUPNVIMM(D0,12)):^(12),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X=DIV I '$G(APCDVMUX) S X=DUZ X ^DD(9000010.11,1216,1,1,1.4)
"^DD",9000010.11,9000010.11,1216,1,1,1.4)
S DIH=$G(^AUPNVIMM(DIV(0),12)),DIV=X S $P(^(12),U,17)=DIV,DIH=9000010.11,DIG=1217 D ^DICR
"^DD",9000010.11,9000010.11,1216,1,1,2)
Q
"^DD",9000010.11,9000010.11,1216,1,1,"CREATE VALUE")
I '$G(APCDVMUX) S X=DUZ
"^DD",9000010.11,9000010.11,1216,1,1,"DELETE VALUE")
NO EFFECT
"^DD",9000010.11,9000010.11,1216,1,1,"DT")
3120423
"^DD",9000010.11,9000010.11,1216,1,1,"FIELD")
#1217
"^DD",9000010.11,9000010.11,1216,1,2,0)
^^TRIGGER^9000010.11^1218
"^DD",9000010.11,9000010.11,1216,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^AUPNVIMM(D0,12)):^(12),1:"") S X=$P(Y(1),U,18),X=X S DIU=X K Y S X=DIV I '$G(APCDVMUX) S X=$$NOW^XLFDT X ^DD(9000010.11,1216,1,2,1.4)
"^DD",9000010.11,9000010.11,1216,1,2,1.4)
S DIH=$G(^AUPNVIMM(DIV(0),12)),DIV=X S $P(^(12),U,18)=DIV,DIH=9000010.11,DIG=1218 D ^DICR
"^DD",9000010.11,9000010.11,1216,1,2,2)
Q
"^DD",9000010.11,9000010.11,1216,1,2,"CREATE VALUE")
I '$G(APCDVMUX) S X=$$NOW^XLFDT
"^DD",9000010.11,9000010.11,1216,1,2,"DELETE VALUE")
NO EFFECT
"^DD",9000010.11,9000010.11,1216,1,2,"DT")
3120423
"^DD",9000010.11,9000010.11,1216,1,2,"FIELD")
#1218
"^DD",9000010.11,9000010.11,1216,3)
Enter the date and time this event was entered here.
"^DD",9000010.11,9000010.11,1216,21,0)
^^2^2^3140702^
"^DD",9000010.11,9000010.11,1216,21,1,0)
This Indian Health Service field indicates the date and time that this 
"^DD",9000010.11,9000010.11,1216,21,2,0)
immunization information was entered into this record.
"^DD",9000010.11,9000010.11,1216,23,0)
^^3^3^3140625^
"^DD",9000010.11,9000010.11,1216,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,1216,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,1216,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,1216,"AUDIT")
y
"^DD",9000010.11,9000010.11,1216,"DT")
3150213
"^DD",9000010.11,9000010.11,1217,0)
ENTERED BY^P200'a^VA(200,^12;17^Q
"^DD",9000010.11,9000010.11,1217,3)
Select the user who first entered this event.
"^DD",9000010.11,9000010.11,1217,5,1,0)
9000010.11^1216^1
"^DD",9000010.11,9000010.11,1217,21,0)
^^2^2^3140702^
"^DD",9000010.11,9000010.11,1217,21,1,0)
This Indian Health Service field indicates the user who entered this 
"^DD",9000010.11,9000010.11,1217,21,2,0)
immunization record.
"^DD",9000010.11,9000010.11,1217,23,0)
^^3^3^3140625^
"^DD",9000010.11,9000010.11,1217,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,1217,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,1217,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,1217,"AUDIT")
y
"^DD",9000010.11,9000010.11,1217,"DT")
3150213
"^DD",9000010.11,9000010.11,1218,0)
DATE/TIME LAST MODIFIED^Da^^12;18^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.11,9000010.11,1218,1,0)
^.1
"^DD",9000010.11,9000010.11,1218,1,1,0)
^^TRIGGER^9000010.11^1219
"^DD",9000010.11,9000010.11,1218,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^AUPNVIMM(D0,12)):^(12),1:"") S X=$P(Y(1),U,19),X=X S DIU=X K Y S X=DIV I '$G(APCDVMUX) S X=DUZ X ^DD(9000010.11,1218,1,1,1.4)
"^DD",9000010.11,9000010.11,1218,1,1,1.4)
S DIH=$G(^AUPNVIMM(DIV(0),12)),DIV=X S $P(^(12),U,19)=DIV,DIH=9000010.11,DIG=1219 D ^DICR
"^DD",9000010.11,9000010.11,1218,1,1,2)
Q
"^DD",9000010.11,9000010.11,1218,1,1,"CREATE VALUE")
I '$G(APCDVMUX) S X=DUZ
"^DD",9000010.11,9000010.11,1218,1,1,"DELETE VALUE")
NO EFFECT
"^DD",9000010.11,9000010.11,1218,1,1,"DT")
3120423
"^DD",9000010.11,9000010.11,1218,1,1,"FIELD")
#1219
"^DD",9000010.11,9000010.11,1218,3)
Enter the date and time this event was last modified.
"^DD",9000010.11,9000010.11,1218,5,1,0)
9000010.11^1216^2
"^DD",9000010.11,9000010.11,1218,21,0)
^^2^2^3140702^
"^DD",9000010.11,9000010.11,1218,21,1,0)
This Indian Health Service field indicates the date and time this 
"^DD",9000010.11,9000010.11,1218,21,2,0)
immunization record was last modified.
"^DD",9000010.11,9000010.11,1218,23,0)
^.001^3^3^3140626^^^
"^DD",9000010.11,9000010.11,1218,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,1218,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,1218,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,1218,"AUDIT")
y
"^DD",9000010.11,9000010.11,1218,"DT")
3150213
"^DD",9000010.11,9000010.11,1219,0)
LAST MODIFIED BY^P200'a^VA(200,^12;19^Q
"^DD",9000010.11,9000010.11,1219,3)
Select the user who last modified this event.
"^DD",9000010.11,9000010.11,1219,5,1,0)
9000010.11^1218^1
"^DD",9000010.11,9000010.11,1219,21,0)
^^2^2^3140702^
"^DD",9000010.11,9000010.11,1219,21,1,0)
This Indian Health Service field indicates the user who last modified 
"^DD",9000010.11,9000010.11,1219,21,2,0)
this immunization record.
"^DD",9000010.11,9000010.11,1219,23,0)
^.001^3^3^3140625^^
"^DD",9000010.11,9000010.11,1219,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,1219,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,1219,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,1219,"AUDIT")
y
"^DD",9000010.11,9000010.11,1219,"DT")
3150213
"^DD",9000010.11,9000010.11,1220,0)
WARNING ACKNOWLEDGED^Sa^1:YES;^12;20^Q
"^DD",9000010.11,9000010.11,1220,.1)
Warning Acknowledged
"^DD",9000010.11,9000010.11,1220,3)
Enter YES to acknowledge a warning of contraindication/refusal events associated with this immunization.
"^DD",9000010.11,9000010.11,1220,21,0)
^^3^3^3151207^
"^DD",9000010.11,9000010.11,1220,21,1,0)
This field indicates acknowledgement of a contraindication/refusal 
"^DD",9000010.11,9000010.11,1220,21,2,0)
events warning for this immunization with the decision to proceed with
"^DD",9000010.11,9000010.11,1220,21,3,0)
administration.
"^DD",9000010.11,9000010.11,1220,"AUDIT")
y
"^DD",9000010.11,9000010.11,1220,"DT")
3151207
"^DD",9000010.11,9000010.11,1301,0)
EVENT INFORMATION SOURCE^R*P920.1'a^PXV(920.1,^13;1^S DIC("S")="I '$P(^(0),U,3)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.11,9000010.11,1301,.1)
Information Source
"^DD",9000010.11,9000010.11,1301,3)
Select the source of this event's information.
"^DD",9000010.11,9000010.11,1301,12)
SOURCE selected must have a STATUS of ACTIVE
"^DD",9000010.11,9000010.11,1301,12.1)
S DIC("S")="I '$P(^(0),U,3)"
"^DD",9000010.11,9000010.11,1301,21,0)
^.001^2^2^3140626^^^^
"^DD",9000010.11,9000010.11,1301,21,1,0)
This is the source of the information obtained for this immunization
"^DD",9000010.11,9000010.11,1301,21,2,0)
event.  If this is a new event for this patient, no entry is required.
"^DD",9000010.11,9000010.11,1301,23,0)
^.001^3^3^3140626^^^
"^DD",9000010.11,9000010.11,1301,23,1,0)
This field is used to note the source of this immunization event.  If the
"^DD",9000010.11,9000010.11,1301,23,2,0)
event is a new record, no entry is necessary.  The options available for 
"^DD",9000010.11,9000010.11,1301,23,3,0)
this field come from the IMMUNIZATION INFO SOURCE file.
"^DD",9000010.11,9000010.11,1301,"AUDIT")
y
"^DD",9000010.11,9000010.11,1301,"DT")
3150213
"^DD",9000010.11,9000010.11,1302,0)
ROUTE OF ADMINISTRATION^*P920.2'a^PXV(920.2,^13;2^S DIC("S")="I '$$SCREEN^XTID(920.2,,Y_"","")" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.11,9000010.11,1302,.1)
Route of Administration
"^DD",9000010.11,9000010.11,1302,3)
Select the route of administration for this event.
"^DD",9000010.11,9000010.11,1302,12)
Only active IMM ADMINISTRATION ROUTE entries may be selected.
"^DD",9000010.11,9000010.11,1302,12.1)
S DIC("S")="I '$$SCREEN^XTID(920.2,,Y_"","")"
"^DD",9000010.11,9000010.11,1302,21,0)
^.001^2^2^3150813^^^^
"^DD",9000010.11,9000010.11,1302,21,1,0)
This is the method this vaccine was administered.  Select from the list
"^DD",9000010.11,9000010.11,1302,21,2,0)
provided.
"^DD",9000010.11,9000010.11,1302,23,0)
^.001^3^3^3150813^^^
"^DD",9000010.11,9000010.11,1302,23,1,0)
This is the method by which the vaccine was administered. This is
"^DD",9000010.11,9000010.11,1302,23,2,0)
selected from a set of values in the IMM ROUTE OF ADMINISTRATION
"^DD",9000010.11,9000010.11,1302,23,3,0)
file (#920.2).
"^DD",9000010.11,9000010.11,1302,"AUDIT")
y
"^DD",9000010.11,9000010.11,1302,"DT")
3150813
"^DD",9000010.11,9000010.11,1303,0)
SITE OF ADMINISTRATION (BODY)^*P920.3'a^PXV(920.3,^13;3^S DIC("S")="I '$$SCREEN^XTID(920.3,,Y_"","")" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",9000010.11,9000010.11,1303,.1)
Site of Administration (Body)
"^DD",9000010.11,9000010.11,1303,3)
Select the site the vaccine was administered.
"^DD",9000010.11,9000010.11,1303,12)
Only active IMM ADMINISTRATION SITE (BODY) entries may be selected.
"^DD",9000010.11,9000010.11,1303,12.1)
S DIC("S")="I '$$SCREEN^XTID(920.3,,Y_"","")"
"^DD",9000010.11,9000010.11,1303,21,0)
^.001^2^2^3140625^^^
"^DD",9000010.11,9000010.11,1303,21,1,0)
This is the area of the patient's body through which the vaccine was
"^DD",9000010.11,9000010.11,1303,21,2,0)
administered.
"^DD",9000010.11,9000010.11,1303,23,0)
^^3^3^3140701^
"^DD",9000010.11,9000010.11,1303,23,1,0)
This is the area of the patient's body through which the vaccine was 
"^DD",9000010.11,9000010.11,1303,23,2,0)
administered.  It is selected from a list provided by the IMM 
"^DD",9000010.11,9000010.11,1303,23,3,0)
ADMINISTRATION SITE (BODY) file (#920.3).
"^DD",9000010.11,9000010.11,1303,"AUDIT")
y
"^DD",9000010.11,9000010.11,1303,"DT")
3150226
"^DD",9000010.11,9000010.11,1304,0)
PRIMARY DIAGNOSIS^*P80'Xa^ICD9(^13;4^S DIC("S")="D ^AUPNSICD" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X I $D(X),$D(D0),$$DUPDX^PXVUTIL(D0,X) K X
"^DD",9000010.11,9000010.11,1304,.1)
Primary Diagnosis
"^DD",9000010.11,9000010.11,1304,3)
Select the primary (or initial) diagnosis for this immunization.
"^DD",9000010.11,9000010.11,1304,12)
Diagnosis must be appropriate and active.
"^DD",9000010.11,9000010.11,1304,12.1)
S DIC("S")="D ^AUPNSICD"
"^DD",9000010.11,9000010.11,1304,21,0)
^.001^2^2^3140620^^^
"^DD",9000010.11,9000010.11,1304,21,1,0)
This is the primary (or initial) diagnosis for this immunization event. It
"^DD",9000010.11,9000010.11,1304,21,2,0)
is selected from the ISC DIAGNOSIS file.
"^DD",9000010.11,9000010.11,1304,23,0)
^.001^4^4^3140620^^
"^DD",9000010.11,9000010.11,1304,23,1,0)
This is the primary diagnosis for this immunization.  This field is a
"^DD",9000010.11,9000010.11,1304,23,2,0)
pointer to the ICD DIAGNOSIS file (#80).  Selection is screened to make sure
"^DD",9000010.11,9000010.11,1304,23,3,0)
it's appropriate and active.  An immunization event can have more than
"^DD",9000010.11,9000010.11,1304,23,4,0)
one diagnosis - see the OTHER DIAGNOSIS field (#2).
"^DD",9000010.11,9000010.11,1304,"AUDIT")
y
"^DD",9000010.11,9000010.11,1304,"DT")
3150605
"^DD",9000010.11,9000010.11,1312,0)
DOSE^NJ6,2aO^^13;12^K:+X'=X!(X>999)!(X<0)!(X?.E1"."3N.N) X
"^DD",9000010.11,9000010.11,1312,2)
S Y(0)=Y S:Y Y=$FN(Y,",")
"^DD",9000010.11,9000010.11,1312,2.1)
S:Y Y=$FN(Y,",")
"^DD",9000010.11,9000010.11,1312,3)
Type a number between 0 and 999, 2 fractional digits.
"^DD",9000010.11,9000010.11,1312,21,0)
^^2^2^3150819^
"^DD",9000010.11,9000010.11,1312,21,1,0)
This is the amount of vaccine product administered for this immunization.
"^DD",9000010.11,9000010.11,1312,21,2,0)
The units are expressed in the DOSE UNITS field (#1313).
"^DD",9000010.11,9000010.11,1312,"AUDIT")
y
"^DD",9000010.11,9000010.11,1312,"DT")
3150819
"^DD",9000010.11,9000010.11,1312.5,0)
DOSAGE^CJ10^^ ; ^S X=$$DOSAGE^PXVUTIL(D0)
"^DD",9000010.11,9000010.11,1312.5,9.01)

"^DD",9000010.11,9000010.11,1312.5,9.1)
S X=$$DOSAGE^PXVUTIL(D0)
"^DD",9000010.11,9000010.11,1312.5,21,0)
^^2^2^3150819^
"^DD",9000010.11,9000010.11,1312.5,21,1,0)
A computed field that concatenates the DOSE (#1312) and DOSE UNITS (#1313)
"^DD",9000010.11,9000010.11,1312.5,21,2,0)
fields. The resulting output will look something likes this: ".5 mL".
"^DD",9000010.11,9000010.11,1312.5,"DT")
3150819
"^DD",9000010.11,9000010.11,1313,0)
DOSE UNITS^P757.5'aO^LEX(757.5,^13;13^Q
"^DD",9000010.11,9000010.11,1313,2)
S Y(0)=Y S:Y Y=$P($$UCUMCODE^LEXMUCUM(Y),"^")
"^DD",9000010.11,9000010.11,1313,2.1)
S:Y Y=$P($$UCUMCODE^LEXMUCUM(Y),"^")
"^DD",9000010.11,9000010.11,1313,3)
Enter the units that reflect the actual quantity of the vaccine product administered.
"^DD",9000010.11,9000010.11,1313,21,0)
^.001^2^2^3150819^^
"^DD",9000010.11,9000010.11,1313,21,1,0)
This is the units that reflect the actual quantity of the vaccine product 
"^DD",9000010.11,9000010.11,1313,21,2,0)
administered.
"^DD",9000010.11,9000010.11,1313,"AUDIT")
y
"^DD",9000010.11,9000010.11,1313,"DT")
3150819
"^DD",9000010.11,9000010.11,1401,0)
RESULTS^Sa^T:TAKE;N:NO TAKE;I:INDETERMINATE;^14;1^Q
"^DD",9000010.11,9000010.11,1401,.1)
Inoculation Results
"^DD",9000010.11,9000010.11,1401,3)
Enter whether the results were Take, No Take or Indeterminate.
"^DD",9000010.11,9000010.11,1401,21,0)
^.001^1^1^3150522^^
"^DD",9000010.11,9000010.11,1401,21,1,0)
This is the interpretation of the inoculation result.
"^DD",9000010.11,9000010.11,1401,"AUDIT")
y
"^DD",9000010.11,9000010.11,1401,"DT")
3150522
"^DD",9000010.11,9000010.11,1402,0)
READING^NJ2,0a^^14;2^K:+X'=X!(X>40)!(X<0)!(X?.E1"."1N.N) X
"^DD",9000010.11,9000010.11,1402,.1)
Reading in Millimeters (mm)
"^DD",9000010.11,9000010.11,1402,1,0)
^.1
"^DD",9000010.11,9000010.11,1402,1,1,0)
9000010.11^AE
"^DD",9000010.11,9000010.11,1402,1,1,1)
S ^AUPNVIMM("AE",$E(X,1,30),DA)=""
"^DD",9000010.11,9000010.11,1402,1,1,2)
K ^AUPNVIMM("AE",$E(X,1,30),DA)
"^DD",9000010.11,9000010.11,1402,1,1,"%D",0)
^^2^2^3150127^
"^DD",9000010.11,9000010.11,1402,1,1,"%D",1,0)
This cross reference searches on the inoculation results across all 
"^DD",9000010.11,9000010.11,1402,1,1,"%D",2,0)
patients.
"^DD",9000010.11,9000010.11,1402,1,1,"DT")
3150127
"^DD",9000010.11,9000010.11,1402,3)
Enter a whole number between 0 and 40.
"^DD",9000010.11,9000010.11,1402,21,0)
^^1^1^3150126^
"^DD",9000010.11,9000010.11,1402,21,1,0)
This is the objective, measurable reading following the inoculation.
"^DD",9000010.11,9000010.11,1402,"AUDIT")
y
"^DD",9000010.11,9000010.11,1402,"DT")
3150127
"^DD",9000010.11,9000010.11,1403,0)
DATE/TIME READ^DXa^^14;3^S %DT="ET" D ^%DT S X=Y K:Y<1!$$TIME^PXVUTL X
"^DD",9000010.11,9000010.11,1403,.1)
Reading Date/Time
"^DD",9000010.11,9000010.11,1403,1,0)
^.1^^-1
"^DD",9000010.11,9000010.11,1403,1,1,0)
^^TRIGGER^9000010.11^1405
"^DD",9000010.11,9000010.11,1403,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^AUPNVIMM(D0,14)):^(14),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC S X=% X ^DD(9000010.11,1403,1,1,1.4)
"^DD",9000010.11,9000010.11,1403,1,1,1.4)
S DIH=$G(^AUPNVIMM(DIV(0),14)),DIV=X S $P(^(14),U,5)=DIV,DIH=9000010.11,DIG=1405 D ^DICR
"^DD",9000010.11,9000010.11,1403,1,1,2)
Q
"^DD",9000010.11,9000010.11,1403,1,1,"CREATE VALUE")
NOW
"^DD",9000010.11,9000010.11,1403,1,1,"DELETE VALUE")
NO EFFECT
"^DD",9000010.11,9000010.11,1403,1,1,"FIELD")
READING RECORDED
"^DD",9000010.11,9000010.11,1403,3)
Enter the date and (optional) time the immunization was read.
"^DD",9000010.11,9000010.11,1403,21,0)
^^3^3^3150820^
"^DD",9000010.11,9000010.11,1403,21,1,0)
This is the date and time of the reading of the immunization results.
"^DD",9000010.11,9000010.11,1403,21,2,0)
Time entry is optional and imprecise date is allowed for historical
"^DD",9000010.11,9000010.11,1403,21,3,0)
immunizations.
"^DD",9000010.11,9000010.11,1403,"AUDIT")
y
"^DD",9000010.11,9000010.11,1403,"DT")
3150820
"^DD",9000010.11,9000010.11,1404,0)
READER^P200'a^VA(200,^14;4^Q
"^DD",9000010.11,9000010.11,1404,.1)
Reader of Inoculation Results
"^DD",9000010.11,9000010.11,1404,3)
Enter the name of the person who read the inoculation results.
"^DD",9000010.11,9000010.11,1404,21,0)
^.001^2^2^3150127^^
"^DD",9000010.11,9000010.11,1404,21,1,0)
This is the name of the person who read and interpreted the results of 
"^DD",9000010.11,9000010.11,1404,21,2,0)
the inoculation.
"^DD",9000010.11,9000010.11,1404,"AUDIT")
y
"^DD",9000010.11,9000010.11,1404,"DT")
3150127
"^DD",9000010.11,9000010.11,1405,0)
READING RECORDED^Da^^14;5^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.11,9000010.11,1405,.1)
Date/Time Reading is Recorded
"^DD",9000010.11,9000010.11,1405,3)
Enter the date and time of the reading of the inoculation results.
"^DD",9000010.11,9000010.11,1405,5,1,0)
9000010.11^1403^1
"^DD",9000010.11,9000010.11,1405,9)
^
"^DD",9000010.11,9000010.11,1405,21,0)
^^3^3^3150127^
"^DD",9000010.11,9000010.11,1405,21,1,0)
This timestamp field is the date and time of documentation of reading of 
"^DD",9000010.11,9000010.11,1405,21,2,0)
the inoculation results. This field is set automatically when the 
"^DD",9000010.11,9000010.11,1405,21,3,0)
DATE/TIME READ is entered.
"^DD",9000010.11,9000010.11,1405,"AUDIT")
y
"^DD",9000010.11,9000010.11,1405,"DT")
3150127
"^DD",9000010.11,9000010.11,1406,0)
HOURS READ POST-INOCULATION^NJ3,0a^^14;6^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X
"^DD",9000010.11,9000010.11,1406,.1)
Hours Between Inoculation and Reading
"^DD",9000010.11,9000010.11,1406,3)
Type a number between 0 and 100, 0 decimal digits.
"^DD",9000010.11,9000010.11,1406,21,0)
^^2^2^3150127^
"^DD",9000010.11,9000010.11,1406,21,1,0)
This is the number of hours between the inoculation and the reading of 
"^DD",9000010.11,9000010.11,1406,21,2,0)
the results.
"^DD",9000010.11,9000010.11,1406,"AUDIT")
y
"^DD",9000010.11,9000010.11,1406,"DT")
3150818
"^DD",9000010.11,9000010.11,1501,0)
READING COMMENT^Fa^^15;1^K:$L(X)>245!($L(X)<1) X
"^DD",9000010.11,9000010.11,1501,3)
Enter a reading comment 1-245 characters in length.
"^DD",9000010.11,9000010.11,1501,21,0)
^^2^2^3150128^
"^DD",9000010.11,9000010.11,1501,21,1,0)
This is a comment related to the reading of the patient's inoculation. 
"^DD",9000010.11,9000010.11,1501,21,2,0)
The provider may enter this manually via the PCE User Interface.
"^DD",9000010.11,9000010.11,1501,"AUDIT")
y
"^DD",9000010.11,9000010.11,1501,"DT")
3150128
"^DD",9000010.11,9000010.11,1601,0)
WARNING OVERRIDE REASON^Fa^^16;1^K:$L(X)>245!($L(X)<3) X
"^DD",9000010.11,9000010.11,1601,.1)
Warning Override Justification
"^DD",9000010.11,9000010.11,1601,3)
Answer must be 3-245 characters in length.
"^DD",9000010.11,9000010.11,1601,21,0)
^^2^2^3160112^
"^DD",9000010.11,9000010.11,1601,21,1,0)
This is the reason for overriding the warning of existing
"^DD",9000010.11,9000010.11,1601,21,2,0)
contraindication and/or refusal reasons.
"^DD",9000010.11,9000010.11,1601,"AUDIT")
y
"^DD",9000010.11,9000010.11,1601,"DT")
3160201
"^DD",9000010.11,9000010.11,2601,0)
SNOMED CT^9000010.1126A^^26;0
"^DD",9000010.11,9000010.11,2601,21,0)
^.001^2^2^3140829^^^
"^DD",9000010.11,9000010.11,2601,21,1,0)
This Indian Health Service field indicates the SNOMED Clinical Terms (CT)
"^DD",9000010.11,9000010.11,2601,21,2,0)
that describe this immunization and their preferred terms.
"^DD",9000010.11,9000010.11,2601,23,0)
^.001^3^3^3140829^^
"^DD",9000010.11,9000010.11,2601,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,2601,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,2601,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,2701,0)
LOINC CODES^9000010.1127A^^27;0
"^DD",9000010.11,9000010.11,2701,21,0)
^.001^2^2^3140829^^
"^DD",9000010.11,9000010.11,2701,21,1,0)
This Indian Health Service field is the LOINC codes that identifies this
"^DD",9000010.11,9000010.11,2701,21,2,0)
immunization, along with their descriptions.
"^DD",9000010.11,9000010.11,2701,23,0)
^.001^3^3^3140829^^
"^DD",9000010.11,9000010.11,2701,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.11,2701,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.11,2701,23,3,0)
of the file.
"^DD",9000010.11,9000010.11,80101,0)
EDITED FLAG^Sa^1:EDITED;^801;1^Q
"^DD",9000010.11,9000010.11,80101,3)
Enter 1 if the original immunization data is being edited.
"^DD",9000010.11,9000010.11,80101,21,0)
^.001^2^2^3150813^^^
"^DD",9000010.11,9000010.11,80101,21,1,0)
This field is automatically set to 1 if PCE detects that any original
"^DD",9000010.11,9000010.11,80101,21,2,0)
immunization data is being edited.
"^DD",9000010.11,9000010.11,80101,23,0)
^.001^2^2^3150813^^^
"^DD",9000010.11,9000010.11,80101,23,1,0)
PCE filing logic automatically compares the before and after pictures of the
"^DD",9000010.11,9000010.11,80101,23,2,0)
record to determine if the edited flag should be set to "1".
"^DD",9000010.11,9000010.11,80101,"AUDIT")
y
"^DD",9000010.11,9000010.11,80101,"DT")
3150213
"^DD",9000010.11,9000010.11,80102,0)
AUDIT TRAIL^Fa^^801;2^K:$L(X)>85!($L(X)<2) X
"^DD",9000010.11,9000010.11,80102,.1)
Audit Trail
"^DD",9000010.11,9000010.11,80102,3)
Answer must be 2 to 85 characters.
"^DD",9000010.11,9000010.11,80102,21,0)
^.001^3^3^3150813^^^^
"^DD",9000010.11,9000010.11,80102,21,1,0)
This field is populated automatically by the PCE filing logic.  The format
"^DD",9000010.11,9000010.11,80102,21,2,0)
of the field is as follows:  Pointer to PCE data source file_"-"_A for Add
"^DD",9000010.11,9000010.11,80102,21,3,0)
or E for Edit_" "_DUZ of the person who entered the data_";"...
"^DD",9000010.11,9000010.11,80102,23,0)
^.001^14^14^3150813^^^^
"^DD",9000010.11,9000010.11,80102,23,1,0)
The PCE filing logic requires a pointer to the PCE data source file.  If this
"^DD",9000010.11,9000010.11,80102,23,2,0)
is not passed, the PCE filing logic will not process the data.
"^DD",9000010.11,9000010.11,80102,23,3,0)
 
"^DD",9000010.11,9000010.11,80102,23,4,0)
If the record is a new record, then an "A" is used to specify the source that
"^DD",9000010.11,9000010.11,80102,23,5,0)
added the data.  If the record existed previously, PCE filing logic compares
"^DD",9000010.11,9000010.11,80102,23,6,0)
the old and new records of information.  An "E" will be automatically used if
"^DD",9000010.11,9000010.11,80102,23,7,0)
the filing logic finds the data has been edited.  If "E" is used, then the
"^DD",9000010.11,9000010.11,80102,23,8,0)
Edited Flag field is automatically set to 1.
"^DD",9000010.11,9000010.11,80102,23,9,0)
 
"^DD",9000010.11,9000010.11,80102,23,10,0)
The DUZ is stored in its internal format to represent the user who performed
"^DD",9000010.11,9000010.11,80102,23,11,0)
the adding or editing of data for this record.
"^DD",9000010.11,9000010.11,80102,23,12,0)
 
"^DD",9000010.11,9000010.11,80102,23,13,0)
Iterations of editing will be concatenated to the previous data source
"^DD",9000010.11,9000010.11,80102,23,14,0)
value, up to 85 characters.
"^DD",9000010.11,9000010.11,80102,"AUDIT")
y
"^DD",9000010.11,9000010.11,80102,"DT")
3150213
"^DD",9000010.11,9000010.11,81101,0)
COMMENTS^Fa^^811;1^K:$L(X)>245!($L(X)<1) X
"^DD",9000010.11,9000010.11,81101,3)
Enter a comment 1-245 characters in length.
"^DD",9000010.11,9000010.11,81101,21,0)
^^2^2^2950901^^
"^DD",9000010.11,9000010.11,81101,21,1,0)
This is a comment related to the patient's immunization.  The provider may enter
"^DD",9000010.11,9000010.11,81101,21,2,0)
this manually via the PCE User Interface.
"^DD",9000010.11,9000010.11,81101,"AUDIT")
y
"^DD",9000010.11,9000010.11,81101,"DT")
3150213
"^DD",9000010.11,9000010.11,81201,0)
VERIFIED^SIa^1:ELECTRONICALLY SIGNED;2:VERIFIED BY PACKAGE;^812;1^Q
"^DD",9000010.11,9000010.11,81201,3)
Enter 1 if verified by electronic signature or 2 if verified by package.
"^DD",9000010.11,9000010.11,81201,21,0)
^.001^2^2^3150813^^^
"^DD",9000010.11,9000010.11,81201,21,1,0)
This is used to note how the event was verified and is automatically
"^DD",9000010.11,9000010.11,81201,21,2,0)
entered by the software.
"^DD",9000010.11,9000010.11,81201,23,0)
^.001^1^1^3150813^^^
"^DD",9000010.11,9000010.11,81201,23,1,0)
This is automatically entered by the software and is uneditable for users.
"^DD",9000010.11,9000010.11,81201,"AUDIT")
y
"^DD",9000010.11,9000010.11,81201,"DT")
3150213
"^DD",9000010.11,9000010.11,81202,0)
PACKAGE^P9.4'Ia^DIC(9.4,^812;2^Q
"^DD",9000010.11,9000010.11,81202,.1)
Package
"^DD",9000010.11,9000010.11,81202,3)
Enter the VistA package from which this record originated.
"^DD",9000010.11,9000010.11,81202,21,0)
^^4^4^3150813^
"^DD",9000010.11,9000010.11,81202,21,1,0)
This is the VistA package from which this immunization record 
"^DD",9000010.11,9000010.11,81202,21,2,0)
originated through PCE.
"^DD",9000010.11,9000010.11,81202,21,3,0)
 
"^DD",9000010.11,9000010.11,81202,21,4,0)
This is automatically entered by the software and uneditable by users.
"^DD",9000010.11,9000010.11,81202,"AUDIT")
y
"^DD",9000010.11,9000010.11,81202,"DT")
3150813
"^DD",9000010.11,9000010.11,81203,0)
DATA SOURCE^P839.7'Ia^PX(839.7,^812;3^Q
"^DD",9000010.11,9000010.11,81203,3)
Select the data source for this immunization entry through PCE.
"^DD",9000010.11,9000010.11,81203,21,0)
^.001^2^2^3150213^^^
"^DD",9000010.11,9000010.11,81203,21,1,0)
This is the data source for this immunization, automatically entered 
"^DD",9000010.11,9000010.11,81203,21,2,0)
through the PCS software and uneditable by users.
"^DD",9000010.11,9000010.11,81203,"AUDIT")
y
"^DD",9000010.11,9000010.11,81203,"DT")
3150213
"^DD",9000010.11,9000010.1111,0)
REMARKS SUB-FIELD^^.01^1
"^DD",9000010.11,9000010.1111,0,"NM","REMARKS")

"^DD",9000010.11,9000010.1111,0,"UP")
9000010.11
"^DD",9000010.11,9000010.1111,.01,0)
REMARKS^W^^0;1^Q
"^DD",9000010.11,9000010.1111,.01,3)
Enter comments related to the immunization encounter with the patient.
"^DD",9000010.11,9000010.1111,.01,21,0)
^^2^2^2950901^
"^DD",9000010.11,9000010.1111,.01,21,1,0)
This field can be used to enter comments related to the immunization
"^DD",9000010.11,9000010.1111,.01,21,2,0)
encounter with the patient.
"^DD",9000010.11,9000010.1111,.01,"DT")
2861007
"^DD",9000010.11,9000010.112,0)
VIS OFFERED/GIVEN TO PATIENT SUB-FIELD^^.02^2
"^DD",9000010.11,9000010.112,0,"DT")
3150827
"^DD",9000010.11,9000010.112,0,"IX","B",9000010.112,.01)

"^DD",9000010.11,9000010.112,0,"IX","D",9000010.112,.02)

"^DD",9000010.11,9000010.112,0,"NM","VIS OFFERED/GIVEN TO PATIENT")

"^DD",9000010.11,9000010.112,0,"UP")
9000010.11
"^DD",9000010.11,9000010.112,.01,0)
VIS OFFERED/GIVEN TO PATIENT^M*P920'a^AUTTIVIS(^0;1^S DIC("S")="I $$OFFER^PXVUTIL" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",9000010.11,9000010.112,.01,.1)
VIS Offered/Given to the Patient
"^DD",9000010.11,9000010.112,.01,1,0)
^.1
"^DD",9000010.11,9000010.112,.01,1,1,0)
9000010.112^B
"^DD",9000010.11,9000010.112,.01,1,1,1)
S ^AUPNVIMM(DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",9000010.11,9000010.112,.01,1,1,2)
K ^AUPNVIMM(DA(1),2,"B",$E(X,1,30),DA)
"^DD",9000010.11,9000010.112,.01,2)
S Y(0)=Y S Y(0)=Y D VIS^PXVUTIL
"^DD",9000010.11,9000010.112,.01,2.1)
S Y(0)=Y D VIS^PXVUTIL
"^DD",9000010.11,9000010.112,.01,3)
Enter the VIS offered /given to the patient.
"^DD",9000010.11,9000010.112,.01,12)
Screen allows selection of Vaccine Information Statements appropriate for this immunization.
"^DD",9000010.11,9000010.112,.01,12.1)
S DIC("S")="I $$OFFER^PXVUTIL"
"^DD",9000010.11,9000010.112,.01,21,0)
^.001^2^2^3150518^^^^
"^DD",9000010.11,9000010.112,.01,21,1,0)
This is the name of the Vaccine Information Statement offered to or given 
"^DD",9000010.11,9000010.112,.01,21,2,0)
to the patient before administration of the immunization.
"^DD",9000010.11,9000010.112,.01,"AUDIT")
y
"^DD",9000010.11,9000010.112,.01,"AX")
I $G(DA)>1
"^DD",9000010.11,9000010.112,.01,"DT")
3150827
"^DD",9000010.11,9000010.112,.02,0)
DATE VIS OFFERED/GIVEN^DXa^^0;2^S %DT="EXP" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.11,9000010.112,.02,.1)
Date VIS Offered/Given
"^DD",9000010.11,9000010.112,.02,1,0)
^.1
"^DD",9000010.11,9000010.112,.02,1,1,0)
9000010.112^D
"^DD",9000010.11,9000010.112,.02,1,1,1)
S ^AUPNVIMM(DA(1),2,"D",$E(X,1,30),DA)=""
"^DD",9000010.11,9000010.112,.02,1,1,2)
K ^AUPNVIMM(DA(1),2,"D",$E(X,1,30),DA)
"^DD",9000010.11,9000010.112,.02,1,1,3)
USED FOR LOOKUPS
"^DD",9000010.11,9000010.112,.02,1,1,"%D",0)
^^2^2^3150220^
"^DD",9000010.11,9000010.112,.02,1,1,"%D",1,0)
This x-ref is used to do a (reverse) lookup for the latest VIS offered
"^DD",9000010.11,9000010.112,.02,1,1,"%D",2,0)
for this event.
"^DD",9000010.11,9000010.112,.02,1,1,"DT")
3150220
"^DD",9000010.11,9000010.112,.02,3)
Enter the date the VIS was offered/given to the patient.
"^DD",9000010.11,9000010.112,.02,21,0)
^.001^2^2^3140507^^
"^DD",9000010.11,9000010.112,.02,21,1,0)
This is the date the Vaccine Information Statement was offered to or 
"^DD",9000010.11,9000010.112,.02,21,2,0)
given to the patient.
"^DD",9000010.11,9000010.112,.02,"AUDIT")
y
"^DD",9000010.11,9000010.112,.02,"DT")
3150220
"^DD",9000010.11,9000010.1126,0)
SNOMED CT SUB-FIELD^^.019^2
"^DD",9000010.11,9000010.1126,0,"DT")
3130222
"^DD",9000010.11,9000010.1126,0,"IX","B",9000010.1126,.01)

"^DD",9000010.11,9000010.1126,0,"NM","SNOMED CT")

"^DD",9000010.11,9000010.1126,0,"UP")
9000010.11
"^DD",9000010.11,9000010.1126,.01,0)
SNOMED CT^Fa^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",9000010.11,9000010.1126,.01,1,0)
^.1
"^DD",9000010.11,9000010.1126,.01,1,1,0)
9000010.1126^B
"^DD",9000010.11,9000010.1126,.01,1,1,1)
S ^AUPNVIMM(DA(1),26,"B",$E(X,1,30),DA)=""
"^DD",9000010.11,9000010.1126,.01,1,1,2)
K ^AUPNVIMM(DA(1),26,"B",$E(X,1,30),DA)
"^DD",9000010.11,9000010.1126,.01,3)
Answer must be 1-30 characters in length.
"^DD",9000010.11,9000010.1126,.01,21,0)
^^2^2^3140702^^
"^DD",9000010.11,9000010.1126,.01,21,1,0)
This Indian Health Service field indicates a SNOMED Clinical Term (CT)
"^DD",9000010.11,9000010.1126,.01,21,2,0)
that describes this immunization.
"^DD",9000010.11,9000010.1126,.01,23,0)
^^3^3^3140701^^
"^DD",9000010.11,9000010.1126,.01,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.1126,.01,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.1126,.01,23,3,0)
of the file.
"^DD",9000010.11,9000010.1126,.01,"AUDIT")
y
"^DD",9000010.11,9000010.1126,.01,"DT")
3140702
"^DD",9000010.11,9000010.1126,.019,0)
SNOMED PREFERRED TERM^CJ8^^ ; ^S Y(9000010.1126,.019,1)=$S($D(^AUPNVIMM(D0,26,D1,0)):^(0),1:"") S X=$P(Y(9000010.1126,.019,1),U,1),X=$$CONCPT^AUPNVUTL(X)
"^DD",9000010.11,9000010.1126,.019,9)
^
"^DD",9000010.11,9000010.1126,.019,9.01)
9000010.1126^.01
"^DD",9000010.11,9000010.1126,.019,9.1)
AUPNPT(#.01)
"^DD",9000010.11,9000010.1126,.019,21,0)
^^2^2^3140702^
"^DD",9000010.11,9000010.1126,.019,21,1,0)
This Indian Health Service field is a preferred term describing the
"^DD",9000010.11,9000010.1126,.019,21,2,0)
associated SNOMED clinical term.
"^DD",9000010.11,9000010.1126,.019,23,0)
^^3^3^3140625^
"^DD",9000010.11,9000010.1126,.019,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.1126,.019,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.1126,.019,23,3,0)
of the file.
"^DD",9000010.11,9000010.1126,.019,"DT")
3140702
"^DD",9000010.11,9000010.1127,0)
LOINC CODES SUB-FIELD^^.019^2
"^DD",9000010.11,9000010.1127,0,"DT")
3130222
"^DD",9000010.11,9000010.1127,0,"IX","B",9000010.1127,.01)

"^DD",9000010.11,9000010.1127,0,"NM","LOINC CODES")

"^DD",9000010.11,9000010.1127,0,"UP")
9000010.11
"^DD",9000010.11,9000010.1127,.01,0)
LOINC CODES^Fa^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",9000010.11,9000010.1127,.01,1,0)
^.1
"^DD",9000010.11,9000010.1127,.01,1,1,0)
9000010.1127^B
"^DD",9000010.11,9000010.1127,.01,1,1,1)
S ^AUPNVIMM(DA(1),27,"B",$E(X,1,30),DA)=""
"^DD",9000010.11,9000010.1127,.01,1,1,2)
K ^AUPNVIMM(DA(1),27,"B",$E(X,1,30),DA)
"^DD",9000010.11,9000010.1127,.01,3)
Answer must be 1-30 characters in length.
"^DD",9000010.11,9000010.1127,.01,21,0)
^^2^2^3140702^
"^DD",9000010.11,9000010.1127,.01,21,1,0)
This Indian Health Service field is a LOINC code that identifies this
"^DD",9000010.11,9000010.1127,.01,21,2,0)
immunization.
"^DD",9000010.11,9000010.1127,.01,23,0)
^^3^3^3140625^
"^DD",9000010.11,9000010.1127,.01,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.1127,.01,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.1127,.01,23,3,0)
of the file.
"^DD",9000010.11,9000010.1127,.01,"AUDIT")
y
"^DD",9000010.11,9000010.1127,.01,"DT")
3140702
"^DD",9000010.11,9000010.1127,.019,0)
LOINC TEXT^CJ8^^ ; ^S Y(9000010.1127,.019,1)=$S($D(^AUPNVIMM(D0,27,D1,0)):^(0),1:"") S X=$P(Y(9000010.1127,.019,1),U,1),X=$$LOINCPT^AUPNVUTL(X)
"^DD",9000010.11,9000010.1127,.019,9)
^
"^DD",9000010.11,9000010.1127,.019,9.01)
9000010.1127^.01
"^DD",9000010.11,9000010.1127,.019,9.1)
AUPNLOINCPT(#.01)
"^DD",9000010.11,9000010.1127,.019,21,0)
^^2^2^3140702^
"^DD",9000010.11,9000010.1127,.019,21,1,0)
This Indian Health Service field is LOINC text describing the associated
"^DD",9000010.11,9000010.1127,.019,21,2,0)
LOINC code.
"^DD",9000010.11,9000010.1127,.019,23,0)
^^3^3^3140625^
"^DD",9000010.11,9000010.1127,.019,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000010.11,9000010.1127,.019,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000010.11,9000010.1127,.019,23,3,0)
of the file.
"^DD",9000010.11,9000010.1127,.019,"DT")
3140702
"^DD",9000010.11,9000010.113,0)
OTHER DIAGNOSIS SUB-FIELD^^.01^1
"^DD",9000010.11,9000010.113,0,"DT")
3140701
"^DD",9000010.11,9000010.113,0,"IX","B",9000010.113,.01)

"^DD",9000010.11,9000010.113,0,"NM","OTHER DIAGNOSIS")

"^DD",9000010.11,9000010.113,0,"UP")
9000010.11
"^DD",9000010.11,9000010.113,.01,0)
OTHER DIAGNOSIS^M*P80'aX^ICD9(^0;1^S DIC("S")="D RSETDA^PXVUTIL" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",9000010.11,9000010.113,.01,.1)
Other Diagnosis
"^DD",9000010.11,9000010.113,.01,1,0)
^.1
"^DD",9000010.11,9000010.113,.01,1,1,0)
9000010.113^B
"^DD",9000010.11,9000010.113,.01,1,1,1)
S ^AUPNVIMM(DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",9000010.11,9000010.113,.01,1,1,2)
K ^AUPNVIMM(DA(1),3,"B",$E(X,1,30),DA)
"^DD",9000010.11,9000010.113,.01,3)
Select a diagnosis for this immunization event.
"^DD",9000010.11,9000010.113,.01,12)
Selection must be appropriate and active.
"^DD",9000010.11,9000010.113,.01,12.1)
S DIC("S")="D RSETDA^PXVUTIL"
"^DD",9000010.11,9000010.113,.01,21,0)
^.001^3^3^3140620^^
"^DD",9000010.11,9000010.113,.01,21,1,0)
This is a diagnosis for this immunization event, in addition to the
"^DD",9000010.11,9000010.113,.01,21,2,0)
PRIMARY DIAGNOSIS.  A primary diagnosis should be selected before
"^DD",9000010.11,9000010.113,.01,21,3,0)
selecting one here.
"^DD",9000010.11,9000010.113,.01,23,0)
^^3^3^3140620^
"^DD",9000010.11,9000010.113,.01,23,1,0)
This is a diagnosis for this immunization event.  It is in addition to the
"^DD",9000010.11,9000010.113,.01,23,2,0)
PRIMARY DIAGNOSIS for this event.  This diagnosis is selected from the
"^DD",9000010.11,9000010.113,.01,23,3,0)
ICD DIAGNOSIS file (#80).
"^DD",9000010.11,9000010.113,.01,"AUDIT")
y
"^DD",9000010.11,9000010.113,.01,"AX")

"^DD",9000010.11,9000010.113,.01,"DT")
3140821
"^DD",9000010.12,9000010.12,0)
FIELD^^808^29
"^DD",9000010.12,9000010.12,0,"DDA")
N
"^DD",9000010.12,9000010.12,0,"DT")
3150813
"^DD",9000010.12,9000010.12,0,"ID",.02)
W "   ",$S($D(^DPT(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),@("$E("_DIC_"Y,0),0)")
"^DD",9000010.12,9000010.12,0,"ID",.03)
W "   " S AIHSY=Y,Y=$S($D(^AUPNVSIT(+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:"") X:Y ^DD("DD") W Y S Y=AIHSY K AIHSY W @("$E("_DIC_"Y,0),0)")
"^DD",9000010.12,9000010.12,0,"IX","AA",9000010.12,.03)

"^DD",9000010.12,9000010.12,0,"IX","AATOO",9000010.12,.01)

"^DD",9000010.12,9000010.12,0,"IX","AATOO2",9000010.12,.02)

"^DD",9000010.12,9000010.12,0,"IX","AD",9000010.12,.03)

"^DD",9000010.12,9000010.12,0,"IX","AE",9000010.12,.05)

"^DD",9000010.12,9000010.12,0,"IX","AV10",9000010.12,.03)

"^DD",9000010.12,9000010.12,0,"IX","B",9000010.12,.01)

"^DD",9000010.12,9000010.12,0,"IX","C",9000010.12,.02)

"^DD",9000010.12,9000010.12,0,"NM","V SKIN TEST")

"^DD",9000010.12,9000010.12,0,"VRPK")
PX
"^DD",9000010.12,9000010.12,.01,0)
SKIN TEST^R*P9999999.28'a^AUTTSK(^0;1^S DIC("S")="I $P(^(0),U,3)'=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.12,9000010.12,.01,1,0)
^.1^^-1
"^DD",9000010.12,9000010.12,.01,1,1,0)
9000010.12^B
"^DD",9000010.12,9000010.12,.01,1,1,1)
S ^AUPNVSK("B",$E(X,1,30),DA)=""
"^DD",9000010.12,9000010.12,.01,1,1,2)
K ^AUPNVSK("B",$E(X,1,30),DA)
"^DD",9000010.12,9000010.12,.01,1,3,0)
9000010.12^AATOO^MUMPS
"^DD",9000010.12,9000010.12,.01,1,3,1)
I $P(^AUPNVSK(DA,0),U,2)]"",$P(^(0),U,3)]"" S ^AUPNVSK("AA",$P(^AUPNVSK(DA,0),U,2),X,(9999999-$P(+^AUPNVSIT($P(^AUPNVSK(DA,0),U,3),0),".",1)),DA)=""
"^DD",9000010.12,9000010.12,.01,1,3,2)
I $P(^AUPNVSK(DA,0),U,2)]"",$P(^(0),U,3)]"" K ^AUPNVSK("AA",$P(^AUPNVSK(DA,0),U,2),X,(9999999-$P(+^AUPNVSIT($P(^AUPNVSK(DA,0),U,3),0),".",1)),DA)
"^DD",9000010.12,9000010.12,.01,1,3,"%D",0)
^^4^4^2950901^
"^DD",9000010.12,9000010.12,.01,1,3,"%D",1,0)
This cross reference is used for searches in sequence by patient, Skin
"^DD",9000010.12,9000010.12,.01,1,3,"%D",2,0)
test pointer, inverted Visit date, and internal entry number.
"^DD",9000010.12,9000010.12,.01,1,3,"%D",3,0)
 
"^DD",9000010.12,9000010.12,.01,1,3,"%D",4,0)
    "AA",PATIENT,SKIN TEST,VISIT,DA
"^DD",9000010.12,9000010.12,.01,3)
Enter the Skin Test that was given to the patient.
"^DD",9000010.12,9000010.12,.01,12)
Allow only active Skin Test types to be selected.
"^DD",9000010.12,9000010.12,.01,12.1)
S DIC("S")="I $P(^(0),U,3)'=1"
"^DD",9000010.12,9000010.12,.01,21,0)
^.001^2^2^3150421^^^^
"^DD",9000010.12,9000010.12,.01,21,1,0)
This is the type of Skin Test that was given to the patient at the
"^DD",9000010.12,9000010.12,.01,21,2,0)
encounter.  
"^DD",9000010.12,9000010.12,.01,23,0)
^.001^2^2^3150421^^^^
"^DD",9000010.12,9000010.12,.01,23,1,0)
Only active Skin Test entries in the Skin Test File (#9999999.28) are
"^DD",9000010.12,9000010.12,.01,23,2,0)
 selectable.
"^DD",9000010.12,9000010.12,.01,"AUDIT")
y
"^DD",9000010.12,9000010.12,.01,"DT")
3150421
"^DD",9000010.12,9000010.12,.02,0)
PATIENT NAME^RP9000001'Ia^AUPNPAT(^0;2^Q
"^DD",9000010.12,9000010.12,.02,1,0)
^.1
"^DD",9000010.12,9000010.12,.02,1,2,0)
9000010.12^AATOO2^MUMPS
"^DD",9000010.12,9000010.12,.02,1,2,1)
I $P(^AUPNVSK(DA,0),U,3)]"" S ^AUPNVSK("AA",X,+^AUPNVSK(DA,0),(9999999-$P(+^AUPNVSIT($P(^AUPNVSK(DA,0),U,3),0),".",1)),DA)=""
"^DD",9000010.12,9000010.12,.02,1,2,2)
I $P(^AUPNVSK(DA,0),U,3)]"" K ^AUPNVSK("AA",X,+^AUPNVSK(DA,0),(9999999-$P(+^AUPNVSIT($P(^AUPNVSK(DA,0),U,3),0),".",1)),DA)
"^DD",9000010.12,9000010.12,.02,1,2,"%D",0)
^^4^4^2950901^
"^DD",9000010.12,9000010.12,.02,1,2,"%D",1,0)
This cross reference is used to search in sequence by patient, skin test
"^DD",9000010.12,9000010.12,.02,1,2,"%D",2,0)
pointer, inverted visit date, and internal entry number.
"^DD",9000010.12,9000010.12,.02,1,2,"%D",3,0)
 
"^DD",9000010.12,9000010.12,.02,1,2,"%D",4,0)
  "AA",PATIENT,SKIN TEST,VISIT,DA
"^DD",9000010.12,9000010.12,.02,1,3,0)
9000010.12^C
"^DD",9000010.12,9000010.12,.02,1,3,1)
S ^AUPNVSK("C",$E(X,1,30),DA)=""
"^DD",9000010.12,9000010.12,.02,1,3,2)
K ^AUPNVSK("C",$E(X,1,30),DA)
"^DD",9000010.12,9000010.12,.02,1,3,"%D",0)
^^1^1^2950901^
"^DD",9000010.12,9000010.12,.02,1,3,"%D",1,0)
This cross reference allows look-up by patient name.
"^DD",9000010.12,9000010.12,.02,1,3,"DT")
2950901
"^DD",9000010.12,9000010.12,.02,3)
Enter the patient who was given the skin test.
"^DD",9000010.12,9000010.12,.02,21,0)
^^1^1^2950901^
"^DD",9000010.12,9000010.12,.02,21,1,0)
This is the patient who received the skin test.
"^DD",9000010.12,9000010.12,.02,23,0)
^^3^3^2950901^
"^DD",9000010.12,9000010.12,.02,23,1,0)
This is a pointer to the Patient/IHS file (#9000001) which is dinumed to
"^DD",9000010.12,9000010.12,.02,23,2,0)
the Patient File (#2).  This field is always stuffed by the application.
"^DD",9000010.12,9000010.12,.02,23,3,0)
No editing is allowed.
"^DD",9000010.12,9000010.12,.02,"AUDIT")
y
"^DD",9000010.12,9000010.12,.02,"DT")
3150213
"^DD",9000010.12,9000010.12,.03,0)
VISIT^R*P9000010'Ia^AUPNVSIT(^0;3^S DIC("S")="I $P(^(0),U,5)=$P(^AUPNVSK(DA,0),U,2)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.12,9000010.12,.03,1,0)
^.1
"^DD",9000010.12,9000010.12,.03,1,1,0)
9000010.12^AD
"^DD",9000010.12,9000010.12,.03,1,1,1)
S ^AUPNVSK("AD",$E(X,1,30),DA)=""
"^DD",9000010.12,9000010.12,.03,1,1,2)
K ^AUPNVSK("AD",$E(X,1,30),DA)
"^DD",9000010.12,9000010.12,.03,1,1,"%D",0)
^^1^1^2950901^
"^DD",9000010.12,9000010.12,.03,1,1,"%D",1,0)
This cross reference allows look-up of entries by patient name.
"^DD",9000010.12,9000010.12,.03,1,2,0)
9000010.12^AA^MUMPS
"^DD",9000010.12,9000010.12,.03,1,2,1)
Q:$P(^AUPNVSK(DA,0),U,2)=""  S ^AUPNVSK("AA",$P(^AUPNVSK(DA,0),U,2),+^AUPNVSK(DA,0),(9999999-$P(+^AUPNVSIT(X,0),".",1)),DA)=""
"^DD",9000010.12,9000010.12,.03,1,2,2)
Q:$P(^AUPNVSK(DA,0),U,2)=""  K ^AUPNVSK("AA",$P(^AUPNVSK(DA,0),U,2),+^AUPNVSK(DA,0),(9999999-$P(+^AUPNVSIT(X,0),".",1)),DA)
"^DD",9000010.12,9000010.12,.03,1,2,"%D",0)
^^4^4^2950901^
"^DD",9000010.12,9000010.12,.03,1,2,"%D",1,0)
This cross reference is used for searches in sequence by patient, skin
"^DD",9000010.12,9000010.12,.03,1,2,"%D",2,0)
test pointer, inverted visit date, and internal entry number.
"^DD",9000010.12,9000010.12,.03,1,2,"%D",3,0)
 
"^DD",9000010.12,9000010.12,.03,1,2,"%D",4,0)
    "AA",PATIENT,SKIN TEST,VISIT,DA
"^DD",9000010.12,9000010.12,.03,1,3,0)
9000010.12^AV10^MUMPS
"^DD",9000010.12,9000010.12,.03,1,3,1)
D ADD^AUPNVSIT
"^DD",9000010.12,9000010.12,.03,1,3,2)
D SUB^AUPNVSIT
"^DD",9000010.12,9000010.12,.03,1,3,"%D",0)
^^2^2^2940127^
"^DD",9000010.12,9000010.12,.03,1,3,"%D",1,0)
This cross-reference is for adding and subtracting from the dependent
"^DD",9000010.12,9000010.12,.03,1,3,"%D",2,0)
entry count in the VISIT file.
"^DD",9000010.12,9000010.12,.03,3)
Enter the visit date/time for the encounter where the skin test was done.
"^DD",9000010.12,9000010.12,.03,12)
VISIT MUST BE FOR CURRENT PATIENT
"^DD",9000010.12,9000010.12,.03,12.1)
S DIC("S")="I $P(^(0),U,5)=$P(^AUPNVSK(DA,0),U,2)"
"^DD",9000010.12,9000010.12,.03,21,0)
^^2^2^2950901^
"^DD",9000010.12,9000010.12,.03,21,1,0)
This is the encounter defined in the Visit file that represents when and
"^DD",9000010.12,9000010.12,.03,21,2,0)
where the skin test was done.
"^DD",9000010.12,9000010.12,.03,23,0)
^^2^2^2950901^
"^DD",9000010.12,9000010.12,.03,23,1,0)
This is a pointer to the Visit File (#9000010).  This field is stuffed by
"^DD",9000010.12,9000010.12,.03,23,2,0)
the applications.  No editing is allowed.
"^DD",9000010.12,9000010.12,.03,"AUDIT")
y
"^DD",9000010.12,9000010.12,.03,"DT")
3150213
"^DD",9000010.12,9000010.12,.04,0)
RESULTS^SXa^P:POSITIVE;N:NEGATIVE;D:DOUBTFUL;O:NO TAKE;^0;4^I X="N",$P(^AUPNVSK(DA,0),U,5)]"",$P(^AUPNVSK(DA,0),U,5)>10 K X
"^DD",9000010.12,9000010.12,.04,.1)
Test Interpretation
"^DD",9000010.12,9000010.12,.04,1,0)
^.1^^0
"^DD",9000010.12,9000010.12,.04,3)
Enter whether the results were positive, negative, doubtful or no take, if known.
"^DD",9000010.12,9000010.12,.04,10)
082/SKREST
"^DD",9000010.12,9000010.12,.04,21,0)
^^1^1^3150126^
"^DD",9000010.12,9000010.12,.04,21,1,0)
This is the interpretation of skin test results.
"^DD",9000010.12,9000010.12,.04,"AUDIT")
y
"^DD",9000010.12,9000010.12,.04,"DT")
3150213
"^DD",9000010.12,9000010.12,.05,0)
READING^NJ2,0Xa^^0;5^K:+X'=X!(X>40)!(X<0)!(X?.E1"."1N.N) X
"^DD",9000010.12,9000010.12,.05,.1)
Reading in Millimeters (mm)
"^DD",9000010.12,9000010.12,.05,1,0)
^.1^^-1
"^DD",9000010.12,9000010.12,.05,1,2,0)
9000010.12^AE
"^DD",9000010.12,9000010.12,.05,1,2,1)
S ^AUPNVSK("AE",$E(X,1,30),DA)=""
"^DD",9000010.12,9000010.12,.05,1,2,2)
K ^AUPNVSK("AE",$E(X,1,30),DA)
"^DD",9000010.12,9000010.12,.05,1,2,"%D",0)
^^4^4^2950901^
"^DD",9000010.12,9000010.12,.05,1,2,"%D",1,0)
This cross-reference searches on the results of skin tests across all
"^DD",9000010.12,9000010.12,.05,1,2,"%D",2,0)
patients.
"^DD",9000010.12,9000010.12,.05,1,2,"%D",3,0)
 
"^DD",9000010.12,9000010.12,.05,1,2,"%D",4,0)
   "AE",READING,DA
"^DD",9000010.12,9000010.12,.05,3)
Enter a whole number between 0 and 40.
"^DD",9000010.12,9000010.12,.05,10)
082/SKREAD
"^DD",9000010.12,9000010.12,.05,21,0)
^.001^1^1^3150126^^^
"^DD",9000010.12,9000010.12,.05,21,1,0)
This is the induration in millimeters (mm).
"^DD",9000010.12,9000010.12,.05,"AUDIT")
y
"^DD",9000010.12,9000010.12,.05,"DT")
3150213
"^DD",9000010.12,9000010.12,.06,0)
DATE READ^DXa^^0;6^S %DT="ET" D ^%DT S X=Y K:Y<1!$$TIME^PXVUTL X
"^DD",9000010.12,9000010.12,.06,.1)
Reading Date/Time
"^DD",9000010.12,9000010.12,.06,1,0)
^.1^^-1
"^DD",9000010.12,9000010.12,.06,1,1,0)
^^TRIGGER^9000010.12^1220
"^DD",9000010.12,9000010.12,.06,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^AUPNVSK(D0,12)):^(12),1:"") S X=$P(Y(1),U,20),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC S X=% X ^DD(9000010.12,.06,1,1,1.4)
"^DD",9000010.12,9000010.12,.06,1,1,1.4)
S DIH=$G(^AUPNVSK(DIV(0),12)),DIV=X S $P(^(12),U,20)=DIV,DIH=9000010.12,DIG=1220 D ^DICR
"^DD",9000010.12,9000010.12,.06,1,1,2)
Q
"^DD",9000010.12,9000010.12,.06,1,1,"%D",0)
^^2^2^3150728^
"^DD",9000010.12,9000010.12,.06,1,1,"%D",1,0)
This trigger sets the SKIN TEST READING RECORDED field (#1220) when the 
"^DD",9000010.12,9000010.12,.06,1,1,"%D",2,0)
DATE READ is entered.
"^DD",9000010.12,9000010.12,.06,1,1,"CREATE VALUE")
NOW
"^DD",9000010.12,9000010.12,.06,1,1,"DELETE VALUE")
NO EFFECT
"^DD",9000010.12,9000010.12,.06,1,1,"DT")
3150728
"^DD",9000010.12,9000010.12,.06,1,1,"FIELD")
SKIN TEST READING RECORDED
"^DD",9000010.12,9000010.12,.06,3)
Enter the date and (optional) time the skin test was read.
"^DD",9000010.12,9000010.12,.06,21,0)
^^2^2^3150820^
"^DD",9000010.12,9000010.12,.06,21,1,0)
This is the date and time of the reading of the skin test. Time entry is
"^DD",9000010.12,9000010.12,.06,21,2,0)
optional and imprecise date is allowed for historical skin tests.
"^DD",9000010.12,9000010.12,.06,"AUDIT")
y
"^DD",9000010.12,9000010.12,.06,"DT")
3150820
"^DD",9000010.12,9000010.12,.07,0)
READER^P200'a^VA(200,^0;7^Q
"^DD",9000010.12,9000010.12,.07,3)
Enter the name of the person who read the skin test.
"^DD",9000010.12,9000010.12,.07,21,0)
^^2^2^3141216^
"^DD",9000010.12,9000010.12,.07,21,1,0)
This is the name of the person who read and interpreted the results of 
"^DD",9000010.12,9000010.12,.07,21,2,0)
the skin test.
"^DD",9000010.12,9000010.12,.07,"AUDIT")
y
"^DD",9000010.12,9000010.12,.07,"DT")
3150213
"^DD",9000010.12,9000010.12,801,0)
PRIMARY DIAGNOSIS^*P80'a^ICD9(^80;1^S DIC("S")="D ^AUPNSICD" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.12,9000010.12,801,.1)
Primary Diagnosis
"^DD",9000010.12,9000010.12,801,3)
Enter the primary diagnosis code associated with this skin test.
"^DD",9000010.12,9000010.12,801,12)
Diagnosis cannot be an inactive code and it must be appropriate.
"^DD",9000010.12,9000010.12,801,12.1)
S DIC("S")="D ^AUPNSICD"
"^DD",9000010.12,9000010.12,801,21,0)
^.001^2^2^3150730^^^^
"^DD",9000010.12,9000010.12,801,21,1,0)
This is the diagnosis from the ICD Diagnosis file associated with the 
"^DD",9000010.12,9000010.12,801,21,2,0)
skin test performed.
"^DD",9000010.12,9000010.12,801,"AUDIT")
y
"^DD",9000010.12,9000010.12,801,"DT")
3150730
"^DD",9000010.12,9000010.12,802,0)
DIAGNOSIS 2^*P80'a^ICD9(^80;2^S DIC("S")="D ^AUPNSICD" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.12,9000010.12,802,.1)
Diagnosis 2
"^DD",9000010.12,9000010.12,802,3)
Enter the ICD Diagnosis related to the skin test performed.
"^DD",9000010.12,9000010.12,802,12)
Diagnosis cannot be an inactive code and it must be appropriate.
"^DD",9000010.12,9000010.12,802,12.1)
S DIC("S")="D ^AUPNSICD"
"^DD",9000010.12,9000010.12,802,21,0)
^.001^2^2^3150729^^
"^DD",9000010.12,9000010.12,802,21,1,0)
This is the diagnosis from the ICD Diagnosis file associated with the 
"^DD",9000010.12,9000010.12,802,21,2,0)
skin test performed.
"^DD",9000010.12,9000010.12,802,"AUDIT")
y
"^DD",9000010.12,9000010.12,802,"DT")
3150729
"^DD",9000010.12,9000010.12,803,0)
DIAGNOSIS 3^*P80'a^ICD9(^80;3^S DIC("S")="D ^AUPNSICD" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.12,9000010.12,803,.1)
Diagnosis 3
"^DD",9000010.12,9000010.12,803,3)
Enter the ICD Diagnosis related to the skin test performed.
"^DD",9000010.12,9000010.12,803,12)
Diagnosis cannot be an inactive code and it must be appropriate.
"^DD",9000010.12,9000010.12,803,12.1)
S DIC("S")="D ^AUPNSICD"
"^DD",9000010.12,9000010.12,803,21,0)
^^2^2^3150729^
"^DD",9000010.12,9000010.12,803,21,1,0)
This is the diagnosis from the ICD Diagnosis file associated with the 
"^DD",9000010.12,9000010.12,803,21,2,0)
skin test performed.
"^DD",9000010.12,9000010.12,803,"AUDIT")
y
"^DD",9000010.12,9000010.12,803,"DT")
3150729
"^DD",9000010.12,9000010.12,804,0)
DIAGNOSIS 4^*P80'a^ICD9(^80;4^S DIC("S")="D ^AUPNSICD" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.12,9000010.12,804,.1)
Diagnosis 4
"^DD",9000010.12,9000010.12,804,3)
Enter the ICD Diagnosis related to the skin test performed.
"^DD",9000010.12,9000010.12,804,12)
Diagnosis cannot be an inactive code and it must be appropriate.
"^DD",9000010.12,9000010.12,804,12.1)
S DIC("S")="D ^AUPNSICD"
"^DD",9000010.12,9000010.12,804,21,0)
^^2^2^3150729^
"^DD",9000010.12,9000010.12,804,21,1,0)
This is the diagnosis from the ICD Diagnosis file associated with the 
"^DD",9000010.12,9000010.12,804,21,2,0)
skin test performed.
"^DD",9000010.12,9000010.12,804,"AUDIT")
y
"^DD",9000010.12,9000010.12,804,"DT")
3150729
"^DD",9000010.12,9000010.12,805,0)
DIAGNOSIS 5^*P80'a^ICD9(^80;5^S DIC("S")="D ^AUPNSICD" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.12,9000010.12,805,.1)
Diagnosis 5
"^DD",9000010.12,9000010.12,805,3)
Enter the ICD Diagnosis related to the skin test performed.
"^DD",9000010.12,9000010.12,805,12)
Diagnosis cannot be an inactive code and it must be appropriate.
"^DD",9000010.12,9000010.12,805,12.1)
S DIC("S")="D ^AUPNSICD"
"^DD",9000010.12,9000010.12,805,21,0)
^^2^2^3150729^
"^DD",9000010.12,9000010.12,805,21,1,0)
This is the diagnosis from the ICD Diagnosis file associated with the 
"^DD",9000010.12,9000010.12,805,21,2,0)
skin test performed.
"^DD",9000010.12,9000010.12,805,"AUDIT")
y
"^DD",9000010.12,9000010.12,805,"DT")
3150729
"^DD",9000010.12,9000010.12,806,0)
DIAGNOSIS 6^*P80'a^ICD9(^80;6^S DIC("S")="D ^AUPNSICD" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.12,9000010.12,806,.1)
Diagnosis 6
"^DD",9000010.12,9000010.12,806,3)
Enter the ICD Diagnosis related to the skin test performed.
"^DD",9000010.12,9000010.12,806,12)
Diagnosis cannot be an inactive code and it must be appropriate.
"^DD",9000010.12,9000010.12,806,12.1)
S DIC("S")="D ^AUPNSICD"
"^DD",9000010.12,9000010.12,806,21,0)
^^2^2^3150729^
"^DD",9000010.12,9000010.12,806,21,1,0)
This is the diagnosis from the ICD Diagnosis file associated with the 
"^DD",9000010.12,9000010.12,806,21,2,0)
skin test performed.
"^DD",9000010.12,9000010.12,806,"AUDIT")
y
"^DD",9000010.12,9000010.12,806,"DT")
3150729
"^DD",9000010.12,9000010.12,807,0)
DIAGNOSIS 7^*P80'a^ICD9(^80;7^S DIC("S")="D ^AUPNSICD" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.12,9000010.12,807,.1)
Diagnosis 7
"^DD",9000010.12,9000010.12,807,3)
Enter the ICD Diagnosis related to the skin test performed.
"^DD",9000010.12,9000010.12,807,12)
Diagnosis cannot be an inactive code and it must be appropriate.
"^DD",9000010.12,9000010.12,807,12.1)
S DIC("S")="D ^AUPNSICD"
"^DD",9000010.12,9000010.12,807,21,0)
^^2^2^3150729^
"^DD",9000010.12,9000010.12,807,21,1,0)
This is the diagnosis from the ICD Diagnosis file associated with the 
"^DD",9000010.12,9000010.12,807,21,2,0)
skin test performed.
"^DD",9000010.12,9000010.12,807,"AUDIT")
y
"^DD",9000010.12,9000010.12,807,"DT")
3150729
"^DD",9000010.12,9000010.12,808,0)
DIAGNOSIS 8^*P80'a^ICD9(^80;8^S DIC("S")="D ^AUPNSICD" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.12,9000010.12,808,.1)
Diagnosis 8
"^DD",9000010.12,9000010.12,808,3)
Enter the ICD Diagnosis related to the skin test performed.
"^DD",9000010.12,9000010.12,808,12)
Diagnosis cannot be an inactive code and it must be appropriate.
"^DD",9000010.12,9000010.12,808,12.1)
S DIC("S")="D ^AUPNSICD"
"^DD",9000010.12,9000010.12,808,21,0)
^^2^2^3150729^
"^DD",9000010.12,9000010.12,808,21,1,0)
This is the diagnosis from the ICD Diagnosis file associated with the 
"^DD",9000010.12,9000010.12,808,21,2,0)
skin test performed.
"^DD",9000010.12,9000010.12,808,"AUDIT")
y
"^DD",9000010.12,9000010.12,808,"DT")
3150729
"^DD",9000010.12,9000010.12,1201,0)
EVENT DATE AND TIME^DXa^^12;1^S %DT="ET" D ^%DT S X=Y K:Y<1!$$TIME^PXVUTL X
"^DD",9000010.12,9000010.12,1201,.1)
Placement Date and Time
"^DD",9000010.12,9000010.12,1201,1,0)
^.1^^-1
"^DD",9000010.12,9000010.12,1201,1,1,0)
^^TRIGGER^9000010.12^1211
"^DD",9000010.12,9000010.12,1201,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^AUPNVSK(D0,12)):^(12),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC S X=% X ^DD(9000010.12,1201,1,1,1.4)
"^DD",9000010.12,9000010.12,1201,1,1,1.4)
S DIH=$G(^AUPNVSK(DIV(0),12)),DIV=X S $P(^(12),U,11)=DIV,DIH=9000010.12,DIG=1211 D ^DICR
"^DD",9000010.12,9000010.12,1201,1,1,2)
Q
"^DD",9000010.12,9000010.12,1201,1,1,"%D",0)
^^3^3^3141216^
"^DD",9000010.12,9000010.12,1201,1,1,"%D",1,0)
The SKIN TEST PLACEMENT RECORDED field (#1211) will be triggered 
"^DD",9000010.12,9000010.12,1201,1,1,"%D",2,0)
whenever the EVENT DATE AND TIME field (#1201) is entered or updated.
"^DD",9000010.12,9000010.12,1201,1,1,"%D",3,0)
The triggered value will be NOW.
"^DD",9000010.12,9000010.12,1201,1,1,"CREATE VALUE")
NOW
"^DD",9000010.12,9000010.12,1201,1,1,"DELETE VALUE")
NO EFFECT
"^DD",9000010.12,9000010.12,1201,1,1,"DT")
3141216
"^DD",9000010.12,9000010.12,1201,1,1,"FIELD")
SKIN TEST PLACEMENT RECORDED
"^DD",9000010.12,9000010.12,1201,3)
Enter the date and (optional) time the skin test was placed.
"^DD",9000010.12,9000010.12,1201,21,0)
^^9^9^3150820^
"^DD",9000010.12,9000010.12,1201,21,1,0)
This is the date and time the skin test was placed. This date and time 
"^DD",9000010.12,9000010.12,1201,21,2,0)
may be different from the visit date and time. For example, for clinic
"^DD",9000010.12,9000010.12,1201,21,3,0)
appointment visits, the visit date and time is the date and time of the
"^DD",9000010.12,9000010.12,1201,21,4,0)
appointment, not the time the provider performed the clinical event.
"^DD",9000010.12,9000010.12,1201,21,5,0)
 
"^DD",9000010.12,9000010.12,1201,21,6,0)
The date may be an imprecise date such as for an historical skin test.
"^DD",9000010.12,9000010.12,1201,21,7,0)
 
"^DD",9000010.12,9000010.12,1201,21,8,0)
Date and time may be within 30 days before or after the visit date, 
"^DD",9000010.12,9000010.12,1201,21,9,0)
with the restriction the date cannot be a future date.
"^DD",9000010.12,9000010.12,1201,23,0)
^^13^13^3150820^
"^DD",9000010.12,9000010.12,1201,23,1,0)
The PCE User Interface, which allows manual entry of data, will be the 
"^DD",9000010.12,9000010.12,1201,23,2,0)
primary source of the event date and time. The event date prompt
"^DD",9000010.12,9000010.12,1201,23,3,0)
defaults to the visit date and the time is entered to reflect the actual
"^DD",9000010.12,9000010.12,1201,23,4,0)
time the skin test was done. The event date does not have to be the
"^DD",9000010.12,9000010.12,1201,23,5,0)
visit date, but it must be within 30 days before or after the visit, and
"^DD",9000010.12,9000010.12,1201,23,6,0)
not be a future date.
"^DD",9000010.12,9000010.12,1201,23,7,0)
 
"^DD",9000010.12,9000010.12,1201,23,8,0)
If a user wants to enter an historical skin test, the user should use 
"^DD",9000010.12,9000010.12,1201,23,9,0)
the Historical Encounter entry action to document the historical skin
"^DD",9000010.12,9000010.12,1201,23,10,0)
test. Historical entries will not be eligible for workload credit.
"^DD",9000010.12,9000010.12,1201,23,11,0)
 
"^DD",9000010.12,9000010.12,1201,23,12,0)
PCE data sources for automatic (scanning) data capture will be blank 
"^DD",9000010.12,9000010.12,1201,23,13,0)
unless the event date and time are passed to PCE for filing.
"^DD",9000010.12,9000010.12,1201,"AUDIT")
y
"^DD",9000010.12,9000010.12,1201,"DT")
3150820
"^DD",9000010.12,9000010.12,1202,0)
ORDERING PROVIDER^P200'a^VA(200,^12;2^Q
"^DD",9000010.12,9000010.12,1202,3)
Enter the provider who ordered this skin test.
"^DD",9000010.12,9000010.12,1202,21,0)
^^1^1^2960513^
"^DD",9000010.12,9000010.12,1202,21,1,0)
This field can be used to document the provider who ordered the skin test.
"^DD",9000010.12,9000010.12,1202,"AUDIT")
y
"^DD",9000010.12,9000010.12,1202,"DT")
3150213
"^DD",9000010.12,9000010.12,1204,0)
ENCOUNTER PROVIDER^P200'a^VA(200,^12;4^Q
"^DD",9000010.12,9000010.12,1204,.1)
Provider Placing Skin Test
"^DD",9000010.12,9000010.12,1204,3)
Enter the provider who placed the skin test.
"^DD",9000010.12,9000010.12,1204,21,0)
^^1^1^3141216^
"^DD",9000010.12,9000010.12,1204,21,1,0)
This is the provider who placed the skin test.
"^DD",9000010.12,9000010.12,1204,23,0)
^.001^1^1^3141216^^^
"^DD",9000010.12,9000010.12,1204,23,1,0)
This person can be any person in the new person file.
"^DD",9000010.12,9000010.12,1204,"AUDIT")
y
"^DD",9000010.12,9000010.12,1204,"DT")
3150213
"^DD",9000010.12,9000010.12,1211,0)
SKIN TEST PLACEMENT RECORDED^Da^^12;11^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.12,9000010.12,1211,.1)
Date/Time Skin Test Placement Recorded
"^DD",9000010.12,9000010.12,1211,3)
Enter the date and time of documentation of the placement of the skin test.
"^DD",9000010.12,9000010.12,1211,5,1,0)
9000010.12^1201^1
"^DD",9000010.12,9000010.12,1211,21,0)
^^3^3^3141217^
"^DD",9000010.12,9000010.12,1211,21,1,0)
This timestamp field is the date and time of documentation of placement 
"^DD",9000010.12,9000010.12,1211,21,2,0)
of the skin test. This field is set automatically when the EVENT DATE
"^DD",9000010.12,9000010.12,1211,21,3,0)
AND TIME is entered.
"^DD",9000010.12,9000010.12,1211,"AUDIT")
y
"^DD",9000010.12,9000010.12,1211,"DT")
3150213
"^DD",9000010.12,9000010.12,1212,0)
ANATOMIC LOCATION OF PLACEMENT^*P920.3'a^PXV(920.3,^12;12^S DIC("S")="I '$$SCREEN^XTID(920.3,,Y_"","")" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",9000010.12,9000010.12,1212,.1)
Anatomic Location of Skin Test Placement
"^DD",9000010.12,9000010.12,1212,3)
Select the anatomic location of skin test placement.
"^DD",9000010.12,9000010.12,1212,12)
Only active IMM ADMINISTRATION SITE (BODY) entries may be selected.
"^DD",9000010.12,9000010.12,1212,12.1)
S DIC("S")="I '$$SCREEN^XTID(920.3,,Y_"","")"
"^DD",9000010.12,9000010.12,1212,21,0)
^.001^1^1^3141216^^
"^DD",9000010.12,9000010.12,1212,21,1,0)
This is the area of the patient's body where the skin test was placed.
"^DD",9000010.12,9000010.12,1212,23,0)
^^3^3^3141216^
"^DD",9000010.12,9000010.12,1212,23,1,0)
This is the area of the patient's body where the skin test was placed. 
"^DD",9000010.12,9000010.12,1212,23,2,0)
It is selected from a list of entries in the IMM ADMINISTRATION SITE
"^DD",9000010.12,9000010.12,1212,23,3,0)
(BODY) file (#920.3).
"^DD",9000010.12,9000010.12,1212,"AUDIT")
y
"^DD",9000010.12,9000010.12,1212,"DT")
3150226
"^DD",9000010.12,9000010.12,1214,0)
HOURS READ POST-PLACEMENT^NJ3,0Ia^^12;14^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X
"^DD",9000010.12,9000010.12,1214,.1)
Hours Between Placement and Reading
"^DD",9000010.12,9000010.12,1214,3)
Type a number between 0 and 100, 0 decimal digits.
"^DD",9000010.12,9000010.12,1214,21,0)
^.001^2^2^3150205^^^
"^DD",9000010.12,9000010.12,1214,21,1,0)
This is the number of hours between the placement of the skin test and 
"^DD",9000010.12,9000010.12,1214,21,2,0)
the reading of the skin test.
"^DD",9000010.12,9000010.12,1214,23,0)
^.001^2^2^3150205^^
"^DD",9000010.12,9000010.12,1214,23,1,0)
This field is set by cross references on the EVENT DATE AND TIME field 
"^DD",9000010.12,9000010.12,1214,23,2,0)
(#1201) and the DATE READ field (#.06).
"^DD",9000010.12,9000010.12,1214,"AUDIT")
y
"^DD",9000010.12,9000010.12,1214,"DT")
3150818
"^DD",9000010.12,9000010.12,1220,0)
SKIN TEST READING RECORDED^Da^^12;20^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.12,9000010.12,1220,.1)
Date/Time Skin Test Reading Recorded
"^DD",9000010.12,9000010.12,1220,3)
Enter the date and time of documentation of the reading of the skin test.
"^DD",9000010.12,9000010.12,1220,5,1,0)
9000010.12^.06^1
"^DD",9000010.12,9000010.12,1220,21,0)
^.001^3^3^3150728^^
"^DD",9000010.12,9000010.12,1220,21,1,0)
This timestamp field is the date and time of documentation of reading 
"^DD",9000010.12,9000010.12,1220,21,2,0)
of the skin test. This field is set automatically when the DATE READ is 
"^DD",9000010.12,9000010.12,1220,21,3,0)
entered.
"^DD",9000010.12,9000010.12,1220,"AUDIT")
y
"^DD",9000010.12,9000010.12,1220,"DT")
3150728
"^DD",9000010.12,9000010.12,1301,0)
READING COMMENTS^Fa^^13;1^K:$L(X)>245!($L(X)<1) X
"^DD",9000010.12,9000010.12,1301,.1)
Reading Comments
"^DD",9000010.12,9000010.12,1301,3)
Enter a reading comment 1-245 characters in length.
"^DD",9000010.12,9000010.12,1301,21,0)
^^2^2^3141217^
"^DD",9000010.12,9000010.12,1301,21,1,0)
This is a comment related to the reading of the patient's skin test. 
"^DD",9000010.12,9000010.12,1301,21,2,0)
The provider may enter this manually via the PCE User Interface.
"^DD",9000010.12,9000010.12,1301,"AUDIT")
y
"^DD",9000010.12,9000010.12,1301,"DT")
3150213
"^DD",9000010.12,9000010.12,80101,0)
EDITED FLAG^Sa^1:EDITED;^801;1^Q
"^DD",9000010.12,9000010.12,80101,3)
Answer is automatically entered by PCE filing logic.
"^DD",9000010.12,9000010.12,80101,21,0)
^.001^2^2^3151112^^
"^DD",9000010.12,9000010.12,80101,21,1,0)
This field is automatically set to 1 if PCE detects that any original skin test
"^DD",9000010.12,9000010.12,80101,21,2,0)
data is being edited.
"^DD",9000010.12,9000010.12,80101,23,0)
^.001^2^2^3151112^^
"^DD",9000010.12,9000010.12,80101,23,1,0)
PCE filing logic automatically compares the before and after pictures of the
"^DD",9000010.12,9000010.12,80101,23,2,0)
record to determine if the edited flag should be set to "1".
"^DD",9000010.12,9000010.12,80101,"AUDIT")
y
"^DD",9000010.12,9000010.12,80101,"DT")
3150213
"^DD",9000010.12,9000010.12,80102,0)
AUDIT TRAIL^Fa^^801;2^K:$L(X)>85!($L(X)<2) X
"^DD",9000010.12,9000010.12,80102,3)
Answer must be 2 to 85 characters.
"^DD",9000010.12,9000010.12,80102,21,0)
^.001^4^4^3151112^^
"^DD",9000010.12,9000010.12,80102,21,1,0)
This field is populated automatically be the PCE filing logic. The 
"^DD",9000010.12,9000010.12,80102,21,2,0)
format of the field is as follows:  Pointer to PCE data source
"^DD",9000010.12,9000010.12,80102,21,3,0)
file_"-"_A for Add or E for Edit_" "_DUZ of the person who entered the
"^DD",9000010.12,9000010.12,80102,21,4,0)
data_";"...
"^DD",9000010.12,9000010.12,80102,23,0)
^.001^14^14^3151112^^^^
"^DD",9000010.12,9000010.12,80102,23,1,0)
The PCE filing logic requires a pointer to the PCE data source file.  If this
"^DD",9000010.12,9000010.12,80102,23,2,0)
is not passed, then PCE filing logic will not process the data.
"^DD",9000010.12,9000010.12,80102,23,3,0)
 
"^DD",9000010.12,9000010.12,80102,23,4,0)
If the record is a new record, then an "A" is used to specify the source that
"^DD",9000010.12,9000010.12,80102,23,5,0)
added the data.  If the record existed previously, PCE filing logic compares
"^DD",9000010.12,9000010.12,80102,23,6,0)
the old and new records of information.  An "E" will be automatically used if
"^DD",9000010.12,9000010.12,80102,23,7,0)
the filing logic finds the data has been edited.  If "E" is used, then the
"^DD",9000010.12,9000010.12,80102,23,8,0)
Edited Flag field is automatically set to 1.
"^DD",9000010.12,9000010.12,80102,23,9,0)
 
"^DD",9000010.12,9000010.12,80102,23,10,0)
The DUZ is stored in its internal format to represent the user who performed
"^DD",9000010.12,9000010.12,80102,23,11,0)
the adding or editing of data for this record.
"^DD",9000010.12,9000010.12,80102,23,12,0)
 
"^DD",9000010.12,9000010.12,80102,23,13,0)
Iterations of editing will be concatenated to the previous data source value,
"^DD",9000010.12,9000010.12,80102,23,14,0)
up to 85 characters.
"^DD",9000010.12,9000010.12,80102,"AUDIT")
y
"^DD",9000010.12,9000010.12,80102,"DT")
3150213
"^DD",9000010.12,9000010.12,81101,0)
PLACEMENT COMMENTS^Fa^^811;1^K:$L(X)>245!($L(X)<1) X
"^DD",9000010.12,9000010.12,81101,.1)
Placement Comments
"^DD",9000010.12,9000010.12,81101,3)
Enter a placement comment 1-245 characters in length.
"^DD",9000010.12,9000010.12,81101,21,0)
^^2^2^3141216^
"^DD",9000010.12,9000010.12,81101,21,1,0)
This is a comment related to the placement of the patient's skin test.
"^DD",9000010.12,9000010.12,81101,21,2,0)
The provider may enter this manually via the PCE User Interface.
"^DD",9000010.12,9000010.12,81101,"AUDIT")
y
"^DD",9000010.12,9000010.12,81101,"DT")
3150213
"^DD",9000010.12,9000010.12,81201,0)
VERIFIED^SIa^1:ELECTRONICALLY SIGNED;2:VERIFIED BY PACKAGE;^812;1^Q
"^DD",9000010.12,9000010.12,81201,3)
This is automatically entered by the software and is uneditable.
"^DD",9000010.12,9000010.12,81201,21,0)
^.001^2^2^3150213^^
"^DD",9000010.12,9000010.12,81201,21,1,0)
This is used to note how the event was verified and is automatically
"^DD",9000010.12,9000010.12,81201,21,2,0)
entered by the software.
"^DD",9000010.12,9000010.12,81201,23,0)
^.001^1^1^3150213^^
"^DD",9000010.12,9000010.12,81201,23,1,0)
This is automatically entered by the software and is uneditable for users.
"^DD",9000010.12,9000010.12,81201,"AUDIT")
y
"^DD",9000010.12,9000010.12,81201,"DT")
3150213
"^DD",9000010.12,9000010.12,81202,0)
PACKAGE^P9.4'Ia^DIC(9.4,^812;2^Q
"^DD",9000010.12,9000010.12,81202,.1)
Package
"^DD",9000010.12,9000010.12,81202,3)
Enter the VistA package from which this record originated.
"^DD",9000010.12,9000010.12,81202,21,0)
^^4^4^3150813^
"^DD",9000010.12,9000010.12,81202,21,1,0)
This is the VistA package from which this skin test record 
"^DD",9000010.12,9000010.12,81202,21,2,0)
originated through PCE.
"^DD",9000010.12,9000010.12,81202,21,3,0)
 
"^DD",9000010.12,9000010.12,81202,21,4,0)
This is automatically entered by the software and uneditable by users.
"^DD",9000010.12,9000010.12,81202,"AUDIT")
y
"^DD",9000010.12,9000010.12,81202,"DT")
3150813
"^DD",9000010.12,9000010.12,81203,0)
DATA SOURCE^P839.7'Ia^PX(839.7,^812;3^Q
"^DD",9000010.12,9000010.12,81203,3)
Select the data source for this skin test entry through PCE.
"^DD",9000010.12,9000010.12,81203,21,0)
^^2^2^3150213^
"^DD",9000010.12,9000010.12,81203,21,1,0)
This is the data source for this skin test, automatically entered 
"^DD",9000010.12,9000010.12,81203,21,2,0)
through the PCS software and uneditable by users.
"^DD",9000010.12,9000010.12,81203,"AUDIT")
y
"^DD",9000010.12,9000010.12,81203,"DT")
3150213
"^DD",9000010.707,9000010.707,0)
FIELD^^1204^14
"^DD",9000010.707,9000010.707,0,"DDA")
N
"^DD",9000010.707,9000010.707,0,"DT")
3151231
"^DD",9000010.707,9000010.707,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^AUPNPAT(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(9000001,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",9000010.707,9000010.707,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^AUPNVSIT(+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(9000010,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",9000010.707,9000010.707,0,"ID",.04)
S %I=Y,Y=$S('$D(^(0)):"",$D(^AUTTIMM(+$P(^(0),U,4),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(9999999.14,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",9000010.707,9000010.707,0,"IX","AD",9000010.707,.03)

"^DD",9000010.707,9000010.707,0,"IX","AV10",9000010.707,.03)

"^DD",9000010.707,9000010.707,0,"IX","B",9000010.707,.01)

"^DD",9000010.707,9000010.707,0,"IX","C",9000010.707,.02)

"^DD",9000010.707,9000010.707,0,"NM","V IMM CONTRA/REFUSAL EVENTS")
 
"^DD",9000010.707,9000010.707,0,"VRPK")
PX
"^DD",9000010.707,9000010.707,.01,0)
CONTRAINDICATION/REFUSAL^RVa^^0;1^
"^DD",9000010.707,9000010.707,.01,.1)
Contraindication/Refusal
"^DD",9000010.707,9000010.707,.01,1,0)
^.1
"^DD",9000010.707,9000010.707,.01,1,1,0)
9000010.707^B
"^DD",9000010.707,9000010.707,.01,1,1,1)
S ^AUPNVICR("B",$E(X,1,30),DA)=""
"^DD",9000010.707,9000010.707,.01,1,1,2)
K ^AUPNVICR("B",$E(X,1,30),DA)
"^DD",9000010.707,9000010.707,.01,1,2,0)
^^TRIGGER^9000010.707^.06
"^DD",9000010.707,9000010.707,.01,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^AUPNVICR(D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y X ^DD(9000010.707,.01,1,2,1.1) S DIH=$G(^AUPNVICR(DIV(0),0)),DIV=X S $P(^(0),U,6)=DIV,DIH=9000010.707,DIG=.06 D ^DICR
"^DD",9000010.707,9000010.707,.01,1,2,1.1)
S X=DIV N %I,%H,% D NOW^%DTC S X=% S X=X,Y(1)=$G(X) S X=1,Y(2)=$G(X) S X=12,X=$E(Y(1),Y(2),X)
"^DD",9000010.707,9000010.707,.01,1,2,2)
Q
"^DD",9000010.707,9000010.707,.01,1,2,"%D",0)
^^3^3^3151117^
"^DD",9000010.707,9000010.707,.01,1,2,"%D",1,0)
The DATE/TIME RECORDED field (#.06) will be triggered whenever the
"^DD",9000010.707,9000010.707,.01,1,2,"%D",2,0)
CONTRAINDICATION/REFUSAL field (#.01) is entered or updated. The 
"^DD",9000010.707,9000010.707,.01,1,2,"%D",3,0)
triggered value will be NOW.
"^DD",9000010.707,9000010.707,.01,1,2,"CREATE VALUE")
$E(NOW,1,12)
"^DD",9000010.707,9000010.707,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",9000010.707,9000010.707,.01,1,2,"DT")
3151117
"^DD",9000010.707,9000010.707,.01,1,2,"FIELD")
DATE/TIME RECORDED
"^DD",9000010.707,9000010.707,.01,3)
Enter the Contraindication or Refusal Reason for this event.
"^DD",9000010.707,9000010.707,.01,21,0)
^^2^2^3151112^
"^DD",9000010.707,9000010.707,.01,21,1,0)
This is the contraindication or refusal reason for this 
"^DD",9000010.707,9000010.707,.01,21,2,0)
non-administration event.
"^DD",9000010.707,9000010.707,.01,"AUDIT")
y
"^DD",9000010.707,9000010.707,.01,"DT")
3160325
"^DD",9000010.707,9000010.707,.01,"V",0)
^.12P^2^2
"^DD",9000010.707,9000010.707,.01,"V",1,0)
920.4^Select the Contraindication^1^C^y^n
"^DD",9000010.707,9000010.707,.01,"V",1,1)
S DIC("S")="I '$$SCREEN^XTID(920.4,,Y_"","")"
"^DD",9000010.707,9000010.707,.01,"V",1,2)
Only active contraindication reasons may be selected.
"^DD",9000010.707,9000010.707,.01,"V",2,0)
920.5^Select the Refusal Reason^2^R^y^n
"^DD",9000010.707,9000010.707,.01,"V",2,1)
S DIC("S")="I '$$SCREEN^XTID(920.5,,Y_"","")"
"^DD",9000010.707,9000010.707,.01,"V",2,2)
Only active refusal reasons may be selected.
"^DD",9000010.707,9000010.707,.02,0)
PATIENT NAME^RP9000001'a^AUPNPAT(^0;2^Q
"^DD",9000010.707,9000010.707,.02,.1)
Patient Name
"^DD",9000010.707,9000010.707,.02,1,0)
^.1
"^DD",9000010.707,9000010.707,.02,1,1,0)
9000010.707^C
"^DD",9000010.707,9000010.707,.02,1,1,1)
S ^AUPNVICR("C",$E(X,1,30),DA)=""
"^DD",9000010.707,9000010.707,.02,1,1,2)
K ^AUPNVICR("C",$E(X,1,30),DA)
"^DD",9000010.707,9000010.707,.02,1,1,"%D",0)
^^1^1^3151112^
"^DD",9000010.707,9000010.707,.02,1,1,"%D",1,0)
This cross reference allows look-up by patient name.
"^DD",9000010.707,9000010.707,.02,1,1,"DT")
3151112
"^DD",9000010.707,9000010.707,.02,3)
Enter the patient for whom the immunization was contraindicated or refused.
"^DD",9000010.707,9000010.707,.02,21,0)
^.001^2^2^3151112^^^
"^DD",9000010.707,9000010.707,.02,21,1,0)
This is the patient for whom the immunization was contraindicated or 
"^DD",9000010.707,9000010.707,.02,21,2,0)
refused.
"^DD",9000010.707,9000010.707,.02,23,0)
^.001^3^3^3151112^^
"^DD",9000010.707,9000010.707,.02,23,1,0)
This is a pointer to the Patient/IHS file (#9000001) which is dinumed 
"^DD",9000010.707,9000010.707,.02,23,2,0)
to the Patient File (#2). This field is always stuffed by the
"^DD",9000010.707,9000010.707,.02,23,3,0)
application.  No editing is allowed.  
"^DD",9000010.707,9000010.707,.02,"AUDIT")
y
"^DD",9000010.707,9000010.707,.02,"DT")
3160325
"^DD",9000010.707,9000010.707,.03,0)
VISIT^R*P9000010'a^AUPNVSIT(^0;3^S DIC("S")="I $P(^(0),U,5)=$P(^AUPNVICR(DA,0),U,2)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.707,9000010.707,.03,.1)
Visit
"^DD",9000010.707,9000010.707,.03,1,0)
^.1
"^DD",9000010.707,9000010.707,.03,1,1,0)
9000010.707^AD
"^DD",9000010.707,9000010.707,.03,1,1,1)
S ^AUPNVICR("AD",$E(X,1,30),DA)=""
"^DD",9000010.707,9000010.707,.03,1,1,2)
K ^AUPNVICR("AD",$E(X,1,30),DA)
"^DD",9000010.707,9000010.707,.03,1,1,"%D",0)
^^1^1^3151112^
"^DD",9000010.707,9000010.707,.03,1,1,"%D",1,0)
This cross reference allows look-up of entries by patient name.
"^DD",9000010.707,9000010.707,.03,1,1,"DT")
3151112
"^DD",9000010.707,9000010.707,.03,1,2,0)
9000010.707^AV10^MUMPS
"^DD",9000010.707,9000010.707,.03,1,2,1)
D ADD^AUPNVSIT
"^DD",9000010.707,9000010.707,.03,1,2,2)
D SUB^AUPNVSIT
"^DD",9000010.707,9000010.707,.03,1,2,"%D",0)
^^2^2^3160325^
"^DD",9000010.707,9000010.707,.03,1,2,"%D",1,0)
This cross-reference adds and subtracts from the dependent entry count 
"^DD",9000010.707,9000010.707,.03,1,2,"%D",2,0)
in the VISIT file.
"^DD",9000010.707,9000010.707,.03,1,2,"DT")
3160325
"^DD",9000010.707,9000010.707,.03,3)
Enter the visit date/time for this encounter.
"^DD",9000010.707,9000010.707,.03,12)
Visit must be for current patient.
"^DD",9000010.707,9000010.707,.03,12.1)
S DIC("S")="I $P(^(0),U,5)=$P(^AUPNVICR(DA,0),U,2)"
"^DD",9000010.707,9000010.707,.03,21,0)
^.001^2^2^3151112^^
"^DD",9000010.707,9000010.707,.03,21,1,0)
This is the encounter defined in the Visit file that represents when and 
"^DD",9000010.707,9000010.707,.03,21,2,0)
where this immunization contraindication or refusal event occurred.
"^DD",9000010.707,9000010.707,.03,23,0)
^.001^2^2^3151112^^
"^DD",9000010.707,9000010.707,.03,23,1,0)
This is the pointer to the VISIT file (#9000010). This field is stuffed 
"^DD",9000010.707,9000010.707,.03,23,2,0)
by the applications. No editing is allowed.
"^DD",9000010.707,9000010.707,.03,"AUDIT")
y
"^DD",9000010.707,9000010.707,.03,"DT")
3160325
"^DD",9000010.707,9000010.707,.04,0)
IMMUNIZATION^RP9999999.14'a^AUTTIMM(^0;4^Q
"^DD",9000010.707,9000010.707,.04,.1)
Immunization
"^DD",9000010.707,9000010.707,.04,3)
Enter the immunization contraindicated or refused.
"^DD",9000010.707,9000010.707,.04,21,0)
^.001^1^1^3151231^^
"^DD",9000010.707,9000010.707,.04,21,1,0)
This is the immunization that is contraindicated or refused.
"^DD",9000010.707,9000010.707,.04,"AUDIT")
y
"^DD",9000010.707,9000010.707,.04,"DT")
3151231
"^DD",9000010.707,9000010.707,.05,0)
WARN UNTIL DATE^Da^^0;5^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.707,9000010.707,.05,.1)
Warn Until Date
"^DD",9000010.707,9000010.707,.05,3)
Enter a date until which a warning should be given for this contraindication/refusal.
"^DD",9000010.707,9000010.707,.05,21,0)
^^2^2^3151119^^
"^DD",9000010.707,9000010.707,.05,21,1,0)
This is the date until which a warning of this contraindication/refusal
"^DD",9000010.707,9000010.707,.05,21,2,0)
should be presented.
"^DD",9000010.707,9000010.707,.05,"AUDIT")
y
"^DD",9000010.707,9000010.707,.05,"DT")
3151119
"^DD",9000010.707,9000010.707,.06,0)
DATE/TIME RECORDED^DaX^^0;6^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.707,9000010.707,.06,.1)
Date/Time Recorded
"^DD",9000010.707,9000010.707,.06,3)
Enter the date and time this event was documented.
"^DD",9000010.707,9000010.707,.06,5,1,0)
9000010.707^.01^2
"^DD",9000010.707,9000010.707,.06,"AUDIT")
y
"^DD",9000010.707,9000010.707,.06,"DT")
3160310
"^DD",9000010.707,9000010.707,1201,0)
EVENT DATE AND TIME^Da^^12;1^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.707,9000010.707,1201,.1)
Event Date and Time
"^DD",9000010.707,9000010.707,1201,3)
Enter the date and (optional) time if this contraindication/refusal event.
"^DD",9000010.707,9000010.707,1201,"AUDIT")
y
"^DD",9000010.707,9000010.707,1201,"DT")
3151112
"^DD",9000010.707,9000010.707,1204,0)
ENCOUNTER PROVIDER^P200'a^VA(200,^12;4^Q
"^DD",9000010.707,9000010.707,1204,.1)
Encounter Provider
"^DD",9000010.707,9000010.707,1204,3)
Enter the provider associated with this contraindication/refusal event.
"^DD",9000010.707,9000010.707,1204,21,0)
^^2^2^3151112^
"^DD",9000010.707,9000010.707,1204,21,1,0)
This is the provider associated with this contraindication/refusal 
"^DD",9000010.707,9000010.707,1204,21,2,0)
event.
"^DD",9000010.707,9000010.707,1204,23,0)
^^1^1^3151112^
"^DD",9000010.707,9000010.707,1204,23,1,0)
This person can be any person in the new person file.
"^DD",9000010.707,9000010.707,1204,"AUDIT")
y
"^DD",9000010.707,9000010.707,1204,"DT")
3151112
"^DD",9000010.707,9000010.707,80101,0)
EDITED FLAG^Sa^1:EDITED;^801;1^Q
"^DD",9000010.707,9000010.707,80101,3)
Enter 1 if this event data is being edited.
"^DD",9000010.707,9000010.707,80101,21,0)
^^2^2^3151112^
"^DD",9000010.707,9000010.707,80101,21,1,0)
This field is automatically set to 1 if PCE detects that any original 
"^DD",9000010.707,9000010.707,80101,21,2,0)
contraindication/refusal event data is being edited.
"^DD",9000010.707,9000010.707,80101,23,0)
^^2^2^3151112^^
"^DD",9000010.707,9000010.707,80101,23,1,0)
PCE filing logic automatically compares the before and after pictures 
"^DD",9000010.707,9000010.707,80101,23,2,0)
of the record to determine if the edited flag should be set to "1".
"^DD",9000010.707,9000010.707,80101,"AUDIT")
y
"^DD",9000010.707,9000010.707,80101,"DT")
3160310
"^DD",9000010.707,9000010.707,80102,0)
AUDIT TRAIL^Fa^^801;2^K:$L(X)>85!($L(X)<2) X
"^DD",9000010.707,9000010.707,80102,3)
Answer must be 2-85 characters in length.
"^DD",9000010.707,9000010.707,80102,21,0)
^^4^4^3151112^
"^DD",9000010.707,9000010.707,80102,21,1,0)
This field is populated automatically be the PCE filing logic. The 
"^DD",9000010.707,9000010.707,80102,21,2,0)
format of the field is as follows:  Pointer to PCE data source
"^DD",9000010.707,9000010.707,80102,21,3,0)
file_"-"_A for Add or E for Edit_" "_DUZ of the person who entered the
"^DD",9000010.707,9000010.707,80102,21,4,0)
data_";"...
"^DD",9000010.707,9000010.707,80102,23,0)
^^15^15^3151112^
"^DD",9000010.707,9000010.707,80102,23,1,0)
The PCE filing logic requires a pointer to the PCE data source file. If 
"^DD",9000010.707,9000010.707,80102,23,2,0)
this is not passed, then PCE filing logic will not process the data.
"^DD",9000010.707,9000010.707,80102,23,3,0)
 
"^DD",9000010.707,9000010.707,80102,23,4,0)
If the record is a new record, then an "A" is used to specify the 
"^DD",9000010.707,9000010.707,80102,23,5,0)
source that added the data.  If the record existed previously, PCE
"^DD",9000010.707,9000010.707,80102,23,6,0)
filing logic compares the old and new records of information.  An "E"
"^DD",9000010.707,9000010.707,80102,23,7,0)
will be automatically used if the filing logic finds the data has been
"^DD",9000010.707,9000010.707,80102,23,8,0)
edited.  If "E" is used, then the Edited Flag field is automatically set
"^DD",9000010.707,9000010.707,80102,23,9,0)
to 1.
"^DD",9000010.707,9000010.707,80102,23,10,0)
 
"^DD",9000010.707,9000010.707,80102,23,11,0)
The DUZ is stored in its internal format to represent the user who 
"^DD",9000010.707,9000010.707,80102,23,12,0)
performed the adding or editing of data for this record.
"^DD",9000010.707,9000010.707,80102,23,13,0)
 
"^DD",9000010.707,9000010.707,80102,23,14,0)
Iterations of editing will be concatenated to the previous data source 
"^DD",9000010.707,9000010.707,80102,23,15,0)
value, up to 85 characters.
"^DD",9000010.707,9000010.707,80102,"AUDIT")
y
"^DD",9000010.707,9000010.707,80102,"DT")
3151112
"^DD",9000010.707,9000010.707,81101,0)
COMMENTS^Fa^^811;1^K:$L(X)>245!($L(X)<1) X
"^DD",9000010.707,9000010.707,81101,.1)
Comments
"^DD",9000010.707,9000010.707,81101,3)
Answer must be 1-245 characters in length.
"^DD",9000010.707,9000010.707,81101,21,0)
^^2^2^3151112^
"^DD",9000010.707,9000010.707,81101,21,1,0)
This is a comment related to this contraindication/refusal event. The 
"^DD",9000010.707,9000010.707,81101,21,2,0)
provider may enter this manually via the PCE User Interface.
"^DD",9000010.707,9000010.707,81101,"AUDIT")
y
"^DD",9000010.707,9000010.707,81101,"DT")
3151112
"^DD",9000010.707,9000010.707,81201,0)
VERIFIED^Sa^1:ELECTRONICALLY SIGNED;2:VERIFIED BY PACKAGE;^812;1^Q
"^DD",9000010.707,9000010.707,81201,3)
Enter 1 if verified by electronic signature or 2 if verified by package.
"^DD",9000010.707,9000010.707,81201,21,0)
^^2^2^3160310^
"^DD",9000010.707,9000010.707,81201,21,1,0)
This is used to note how the event was verified and is automatically 
"^DD",9000010.707,9000010.707,81201,21,2,0)
entered by the software. 
"^DD",9000010.707,9000010.707,81201,23,0)
^^2^2^3160310^
"^DD",9000010.707,9000010.707,81201,23,1,0)
This is automatically entered by the software and is uneditable by
"^DD",9000010.707,9000010.707,81201,23,2,0)
users.
"^DD",9000010.707,9000010.707,81201,"AUDIT")
y
"^DD",9000010.707,9000010.707,81201,"DT")
3160310
"^DD",9000010.707,9000010.707,81202,0)
PACKAGE^P9.4'a^DIC(9.4,^812;2^Q
"^DD",9000010.707,9000010.707,81202,3)
Enter the VistA package from which this record originated.
"^DD",9000010.707,9000010.707,81202,21,0)
^^2^2^3160310^
"^DD",9000010.707,9000010.707,81202,21,1,0)
This is the VistA package from which this immunization record originated 
"^DD",9000010.707,9000010.707,81202,21,2,0)
through PCE.
"^DD",9000010.707,9000010.707,81202,23,0)
^^2^2^3160310^
"^DD",9000010.707,9000010.707,81202,23,1,0)
This is automatically entered by the software and is uneditable by 
"^DD",9000010.707,9000010.707,81202,23,2,0)
users.
"^DD",9000010.707,9000010.707,81202,"AUDIT")
y
"^DD",9000010.707,9000010.707,81202,"DT")
3160310
"^DD",9000010.707,9000010.707,81203,0)
DATA SOURCE^P839.7'a^PX(839.7,^812;3^Q
"^DD",9000010.707,9000010.707,81203,3)
Select the data source for this contraindication/refusal event.
"^DD",9000010.707,9000010.707,81203,21,0)
^^2^2^3151112^
"^DD",9000010.707,9000010.707,81203,21,1,0)
This is the data source for this event, automatically entered through the 
"^DD",9000010.707,9000010.707,81203,21,2,0)
PCE software and uneditable by users.
"^DD",9000010.707,9000010.707,81203,"AUDIT")
y
"^DD",9000010.707,9000010.707,81203,"DT")
3151112
"^DD",9999999.41,9999999.41,.18,0)
NDC CODE (VA)^FaXO^^0;18^D P01^PXVNDC
"^DD",9999999.41,9999999.41,.18,.1)
NDC Code
"^DD",9999999.41,9999999.41,.18,2)
S Y(0)=Y S:Y Y=$$NDCOUT^PXVNDC(Y)
"^DD",9999999.41,9999999.41,.18,2.1)
S:Y Y=$$NDCOUT^PXVNDC(Y)
"^DD",9999999.41,9999999.41,.18,3)
Enter the National Drug Code (NDC) for this lot.
"^DD",9999999.41,9999999.41,.18,4)
D QUEST^PXVNDC
"^DD",9999999.41,9999999.41,.18,21,0)
^^1^1^3160209^
"^DD",9999999.41,9999999.41,.18,21,1,0)
This is the National Drug Code (NDC) for this lot.
"^DD",9999999.41,9999999.41,.18,"AUDIT")
y
"^DD",9999999.41,9999999.41,.18,"DT")
3160217
"^DIC",811.1,811.1,0)
PCE CODE MAPPING^811.1IV
"^DIC",811.1,811.1,0,"GL")
^PXD(811.1,
"^DIC",811.1,811.1,"%",0)
^1.005^^0
"^DIC",811.1,811.1,"%D",0)
^^7^7^3160314^
"^DIC",811.1,811.1,"%D",1,0)
This file is used to map entries from two different file to each other.
"^DIC",811.1,811.1,"%D",2,0)
It functions as a table.
"^DIC",811.1,811.1,"%D",3,0)
 
"^DIC",811.1,811.1,"%D",4,0)
NOTE: As of patch PX*1.0*215, this file has been superseded. The mappings 
"^DIC",811.1,811.1,"%D",5,0)
of immunizations and skin tests to CPT codes are now contained in the
"^DIC",811.1,811.1,"%D",6,0)
CODING SYSTEM multiple of the IMMUNIZATION (#9999999.14) and SKIN TEST
"^DIC",811.1,811.1,"%D",7,0)
(#9999999.28) files themselves.
"^DIC",811.1,"B","PCE CODE MAPPING",811.1)

"^DIC",920.05,920.05,0)
IMM DEFAULT RESPONSES^920.05
"^DIC",920.05,920.05,0,"GL")
^PXV(920.05,
"^DIC",920.05,920.05,"%",0)
^1.005^^0
"^DIC",920.05,920.05,"%D",0)
^1.001^2^2^3160307^^
"^DIC",920.05,920.05,"%D",1,0)
This file stores the facility default responses for data prompts in the
"^DIC",920.05,920.05,"%D",2,0)
immunization data entry process.
"^DIC",920.05,"B","IMM DEFAULT RESPONSES",920.05)

"^DIC",920.6,920.6,0)
IMM ROUTES TO SITES^920.6
"^DIC",920.6,920.6,0,"GL")
^PXV(920.6,
"^DIC",920.6,920.6,"%",0)
^1.005^^0
"^DIC",920.6,920.6,"%D",0)
^^2^2^3160114^
"^DIC",920.6,920.6,"%D",1,0)
This file contains a mapping of applicable immunization administration 
"^DIC",920.6,920.6,"%D",2,0)
sites for a given administration route.
"^DIC",920.6,"B","IMM ROUTES TO SITES",920.6)

"^DIC",9000010.11,9000010.11,0)
V IMMUNIZATION^9000010.11IP
"^DIC",9000010.11,9000010.11,0,"GL")
^AUPNVIMM(
"^DIC",9000010.11,9000010.11,"%",0)
^1.005^^0
"^DIC",9000010.11,9000010.11,"%D",0)
^^18^18^3160328^
"^DIC",9000010.11,9000010.11,"%D",1,0)
In order to preserve the continuity of files shared by the Indian Health 
"^DIC",9000010.11,9000010.11,"%D",2,0)
Service and the Department of Veterans Affairs, this file includes fields 
"^DIC",9000010.11,9000010.11,"%D",3,0)
used by Indian Health Service that will not be used by the Department of 
"^DIC",9000010.11,9000010.11,"%D",4,0)
Veterans Affairs. These fields may point to other files and routines not 
"^DIC",9000010.11,9000010.11,"%D",5,0)
deployed by the Department of Veterans Affairs. Inclusion of these fields, 
"^DIC",9000010.11,9000010.11,"%D",6,0)
as designed, was approved by the DBA.  These fields were initially 
"^DIC",9000010.11,9000010.11,"%D",7,0)
introduced with the release of the VISTA IMMUNIZATION ENHANCEMENTS 1.0 
"^DIC",9000010.11,9000010.11,"%D",8,0)
(PX*1*201) for the VistA Immunization Enhancements Project.  Additional 
"^DIC",9000010.11,9000010.11,"%D",9,0)
fields may be included in later enhancements.  
"^DIC",9000010.11,9000010.11,"%D",10,0)
  
"^DIC",9000010.11,9000010.11,"%D",11,0)
This file contains immunizations specific to a particular visit for a 
"^DIC",9000010.11,9000010.11,"%D",12,0)
particular patient.  This file contains one record for each immunization.
"^DIC",9000010.11,9000010.11,"%D",13,0)
 
"^DIC",9000010.11,9000010.11,"%D",14,0)
In the VA, if an immunization is entered into PCE that has a related CPT
"^DIC",9000010.11,9000010.11,"%D",15,0)
or ICD code, then a V CPT or V POV entry will automatically be created
"^DIC",9000010.11,9000010.11,"%D",16,0)
with the CPT or ICD code for the immunization.  The CODING SYSTEM multiple
"^DIC",9000010.11,9000010.11,"%D",17,0)
of the IMMUNIZATION file (#9999999.14) contains the definitions of what
"^DIC",9000010.11,9000010.11,"%D",18,0)
immunization is related to what CPT and ICD codes.
"^DIC",9000010.11,"B","V IMMUNIZATION",9000010.11)

"^DIC",9000010.12,9000010.12,0)
V SKIN TEST^9000010.12IP
"^DIC",9000010.12,9000010.12,0,"GL")
^AUPNVSK(
"^DIC",9000010.12,9000010.12,"%",0)
^1.005^^0
"^DIC",9000010.12,9000010.12,"%D",0)
^^14^14^3160328^
"^DIC",9000010.12,9000010.12,"%D",1,0)
This file has been designed for joint use by the Indian Health Service and
"^DIC",9000010.12,9000010.12,"%D",2,0)
the Department of Veteran Affairs. There will be one record for each type
"^DIC",9000010.12,9000010.12,"%D",3,0)
of skin test given to a patient on a given visit.  Data must exist for a
"^DIC",9000010.12,9000010.12,"%D",4,0)
patient and a visit before data can be entered here.  The record is
"^DIC",9000010.12,9000010.12,"%D",5,0)
normally created when a skin test is given, and the results, if available,
"^DIC",9000010.12,9000010.12,"%D",6,0)
are entered at a later date and matched to the original record.  If
"^DIC",9000010.12,9000010.12,"%D",7,0)
results are entered and a skin test given does not exist, a new record is
"^DIC",9000010.12,9000010.12,"%D",8,0)
created.
"^DIC",9000010.12,9000010.12,"%D",9,0)
 
"^DIC",9000010.12,9000010.12,"%D",10,0)
In the VA, if a skin test is entered into PCE that has a related CPT or
"^DIC",9000010.12,9000010.12,"%D",11,0)
ICD code, then a CPT or ICD entry will automatically be entered into the V
"^DIC",9000010.12,9000010.12,"%D",12,0)
CPT or V POV file.  This supports getting workload credit from clinical
"^DIC",9000010.12,9000010.12,"%D",13,0)
activities. The CODING SYSTEM multiple of the SKIN TEST file (#9999999.28)
"^DIC",9000010.12,9000010.12,"%D",14,0)
defines the relationships between Skin Tests and CPT and ICD codes.
"^DIC",9000010.12,"B","V SKIN TEST",9000010.12)

"^DIC",9000010.707,9000010.707,0)
V IMM CONTRA/REFUSAL EVENTS^9000010.707
"^DIC",9000010.707,9000010.707,0,"GL")
^AUPNVICR(
"^DIC",9000010.707,9000010.707,"%",0)
^1.005^^0
"^DIC",9000010.707,9000010.707,"%D",0)
^^4^4^3151117^
"^DIC",9000010.707,9000010.707,"%D",1,0)
This file is used to document immunization non-administration events,
"^DIC",9000010.707,9000010.707,"%D",2,0)
capturing the reasons for not administering immunizations, either that
"^DIC",9000010.707,9000010.707,"%D",3,0)
administration was contraindicated or that it was refused by the 
"^DIC",9000010.707,9000010.707,"%D",4,0)
patient.
"^DIC",9000010.707,"B","V IMM CONTRA/REFUSAL EVENTS",9000010.707)

**END**
**END**
