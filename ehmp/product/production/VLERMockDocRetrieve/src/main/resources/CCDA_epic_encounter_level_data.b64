<?xml version="1.0" encoding="UTF-8"?>
<ClinicalDocument xmlns="urn:hl7-org:v3">
  <realmCode code="US" />
  <typeId extension="POCD_HD000040" root="2.16.840.1.113883.1.3" />
  <templateId root="1.2.840.114350.1.72.1.51693" />
  <templateId root="2.16.840.1.113883.10.20.22.1.1" />
  <templateId root="2.16.840.1.113883.10.20.22.1.2" />
  <id assigningAuthorityName="EPC" extension="909271f6-84a0-11e4-9fe1-a30549b5e469" root="1.2.840.114350.1.13.81002.1.7.1.1" />
  <code code="34133-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Summarization of Episode Note" />
  <title>Continuity of Care Document</title>
  <effectiveTime value="20141215152308-0600" />
  <confidentialityCode code="N" codeSystem="2.16.840.1.113883.5.25" />
  <languageCode code="en-US" />
  <recordTarget>
    <patientRole>
      <id extension="S815698900" root="1.2.840.114350.1.13.81002.1.7.3.688884.100" />
      <addr use="HP">
        <streetAddressLine>1234 Testing Blvd.</streetAddressLine>
        <city>FITCHBURG</city>
        <state>WI</state>
        <postalCode>53719</postalCode>
        <country>US</country>
      </addr>
      <telecom use="HP" value="tel:+1-608-555-8945" />
      <telecom use="WP" value="tel:+1-608-995-8741" />
      <patient>
        <name use="L">
          <given>Arthur</given>
          <family>Willis</family>
        </name>
        <administrativeGenderCode code="M" codeSystem="2.16.840.1.113883.5.1" codeSystemName="AdministrativeGenderCode" displayName="Male" />
        <birthTime value="19561014" />
        <maritalStatusCode code="D" codeSystem="2.16.840.1.113883.5.2" codeSystemName="MaritalStatusCode" displayName="Divorced" />
        <religiousAffiliationCode code="1041" codeSystem="2.16.840.1.113883.5.1076" codeSystemName="ReligiousAffiliation" />
        <raceCode code="2106-3" codeSystem="2.16.840.1.113883.6.238" codeSystemName="CDC Race and Ethnicity" displayName="White" />
        <ethnicGroupCode code="2186-5" codeSystem="2.16.840.1.113883.6.238" codeSystemName="CDC Race and Ethnicity" displayName="White-Not of Hispanic Origin" />
        <languageCommunication>
          <languageCode code="eng" />
          <preferenceInd value="true" />
        </languageCommunication>
      </patient>
      <providerOrganization>
        <id extension="10800" root="1.2.840.114350.1.13.81002.1.7.2.688879" />
        <name>Epic 2014 SU QA</name>
        <telecom use="WP" value="tel:+1-608-111-2222" />
        <addr>
          <streetAddressLine>600 E Main Place apt 123</streetAddressLine>
          <city>MADISON</city>
          <state>WI</state>
          <postalCode>53717</postalCode>
        </addr>
      </providerOrganization>
    </patientRole>
  </recordTarget>
  <author>
    <time value="20141215152308" />
    <assignedAuthor>
      <id extension="8.1" root="1.2.840.114350.1.1" />
      <addr nullFlavor="NA">
        <streetAddressLine nullFlavor="UNK" />
        <city nullFlavor="UNK" />
      </addr>
      <telecom nullFlavor="NA" />
      <assignedAuthoringDevice>
        <manufacturerModelName>Epic - Version 8.1</manufacturerModelName>
        <softwareName>Epic - Version 8.1</softwareName>
      </assignedAuthoringDevice>
      <representedOrganization>
        <id extension="10800" root="1.2.840.114350.1.13.81002.1.7.2.688879" />
        <name>Epic 2014 SU QA</name>
        <telecom use="WP" value="tel:+1-608-111-2222" />
        <addr>
          <streetAddressLine>600 E Main Place apt 123</streetAddressLine>
          <city>MADISON</city>
          <state>WI</state>
          <postalCode>53717</postalCode>
        </addr>
      </representedOrganization>
    </assignedAuthor>
  </author>
  <custodian>
    <assignedCustodian>
      <representedCustodianOrganization>
        <id extension="10800" root="1.2.840.114350.1.13.81002.1.7.2.688879" />
        <name>Epic 2014 SU QA</name>
        <telecom use="WP" value="tel:+1-608-111-2222" />
        <addr>
          <streetAddressLine>600 E Main Place apt 123</streetAddressLine>
          <city>MADISON</city>
          <state>WI</state>
          <postalCode>53717</postalCode>
        </addr>
      </representedCustodianOrganization>
    </assignedCustodian>
  </custodian>
  <documentationOf typeCode="DOC">
    <serviceEvent classCode="PCPR">
      <effectiveTime>
        <low value="20141214" />
        <high value="20141215" />
      </effectiveTime>
      <performer typeCode="PRF">
        <templateId root="2.16.840.1.113883.3.88.11.32.4" />
        <templateId root="2.16.840.1.113883.3.88.11.83.4" />
        <templateId root="1.3.6.1.4.1.19376.1.5.3.1.2.3" />
        <functionCode code="PCP" codeSystem="2.16.840.1.113883.5.88" codeSystemName="ParticipationFunction" displayName="Primary Care Provider">
          <originalText>Primary Care Provider</originalText>
        </functionCode>
        <time>
          <low value="20080519" />
          <high nullFlavor="PINF" />
        </time>
        <assignedEntity>
          <id extension="1000000038" root="2.16.840.1.113883.4.6" />
          <addr use="WP">
            <streetAddressLine>1979 Milky Way</streetAddressLine>
            <streetAddressLine>Barn-G1474 (Local)</streetAddressLine>
            <city>Verona</city>
            <state>WI</state>
            <postalCode>53593</postalCode>
            <country>USA</country>
          </addr>
          <telecom use="WP" value="tel:+1-608-777-4189" />
          <assignedPerson>
            <name>
              <given>Becky</given>
              <family>Graveen</family>
            </name>
          </assignedPerson>
        </assignedEntity>
      </performer>
    </serviceEvent>
  </documentationOf>
  <componentOf>
    <encompassingEncounter>
      <id extension="10000251829" root="1.2.840.114350.1.13.81002.1.7.3.698084.8" />
      <code code="AMB" codeSystem="2.16.840.1.113883.13.1" displayName="Office Visit">
        <translation code="101" codeSystem="1.2.840.114350.1.13.81002.1.7.4.698084.30" displayName="Office Visit" />
      </code>
      <effectiveTime value="20141214">
        <low value="20141214" />
      </effectiveTime>
      <encounterParticipant typeCode="ATND">
        <time value="20141214" />
        <assignedEntity>
          <id extension="1000000038" root="2.16.840.1.113883.4.6" />
          <addr use="WP">
            <streetAddressLine>1979 Milky Way</streetAddressLine>
            <streetAddressLine>Barn-G1474 (Local)</streetAddressLine>
            <city>Verona</city>
            <state>WI</state>
            <postalCode>53593</postalCode>
            <country>USA</country>
          </addr>
          <telecom use="WP" value="tel:+1-608-777-4189" />
          <assignedPerson>
            <name>
              <given>Becky</given>
              <family>Graveen</family>
            </name>
          </assignedPerson>
        </assignedEntity>
      </encounterParticipant>
      <location>
        <healthCareFacility>
          <id extension="10800" root="1.2.840.114350.1.13.81002.1.7.2.688879" />
        </healthCareFacility>
      </location>
    </encompassingEncounter>
  </componentOf>
  <component>
    <structuredBody>
      <component>
        <section>
          <code code="X-DOCCMT" displayName="Document Comments" />
          <title>Source Comments</title>
            <text>This is a custom comment organization's can enter.</text>
        </section>
      </component>
      <component>
        <section>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.1" />
          <code code="42349-1" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="REASON FOR REFERRAL" />
          <title>Reason for Referral</title>
          <text>
            <table>
              <colgroup>
                <col width="16%" />
                <col width="16%" />
                <col width="18%" />
                <col width="16%" />
                <col width="16%" />
                <col width="18%" />
              </colgroup>
              <thead>
                <tr>
                  <th>Outgoing Referral</th>
                  <th>Reason</th>
                  <th>Specialty</th>
                  <th>Diagnoses / Procedures</th>
                  <th>Referred By Contact</th>
                  <th>Referred To Contact</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>
                    <paragraph>Radiology Services (Routine)</paragraph>
                    <paragraph styleCode="flagData">Pending Review</paragraph>
                  </td>
                  <td>
                    <paragraph>Specialty Services Required</paragraph>
                  </td>
                  <td>Radiology</td>
                  <td>
                    <paragraph styleCode="cellHeader">Diagnoses</paragraph>
                    <paragraph>Shortness of breath</paragraph>
                    <paragraph styleCode="cellHeader">Procedures</paragraph>
                    <paragraph>CHEST X-RAY 2 VW</paragraph>
                  </td>
                  <td>
                    <paragraph>Graveen, Becky, MD</paragraph>
                    <paragraph>1979 Milky Way</paragraph>
                    <paragraph>Barn-G1474 (Local)</paragraph>
                    <paragraph>Verona, WI 53593</paragraph>
                    <paragraph>Phone: 608-777-4189</paragraph>
                  </td>
                  <td>
                    <paragraph />
                  </td>
                </tr>
                <tr>
                  <td>
                    <paragraph>Consultation (Routine)</paragraph>
                    <paragraph styleCode="flagData">Pending Review</paragraph>
                  </td>
                  <td>
                    <paragraph>Specialty Services Required</paragraph>
                  </td>
                  <td>Family Practice</td>
                  <td>
                    <paragraph styleCode="cellHeader">Diagnoses</paragraph>
                    <paragraph>Nasal foreign body, subsequent encounter</paragraph>
                    <paragraph styleCode="cellHeader">Procedures</paragraph>
                    <paragraph>REMOVE NASAL FOREIGN BODY</paragraph>
                  </td>
                  <td>
                    <paragraph>Graveen, Becky, MD</paragraph>
                    <paragraph>1979 Milky Way</paragraph>
                    <paragraph>Barn-G1474 (Local)</paragraph>
                    <paragraph>Verona, WI 53593</paragraph>
                    <paragraph>Phone: 608-777-4189</paragraph>
                  </td>
                  <td>
                    <paragraph />
                  </td>
                </tr>
              </tbody>
            </table>
          </text>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.22.2.12" />
          <code code="29299-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="REASON FOR VISIT" />
          <title>Reason for Visit</title>
          <text>
            <table>
              <colgroup>
                <col width="25%" />
                <col width="75%" />
              </colgroup>
              <thead>
                <tr>
                  <th>Reason</th>
                  <th>Comments</th>
                </tr>
              </thead>
              <tbody>
                <tr ID="rfv4-1">
                  <td ID="reason5">Nasal Obstruction</td>
                  <td ID="comment5" />
                </tr>
              </tbody>
            </table>
          </text>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.1.3" />
          <templateId root="2.16.840.1.113883.3.88.11.83.127" />
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.1.5.3.3" />
          <templateId root="2.16.840.1.113883.10.20.22.2.22" />
          <code code="46240-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="HISTORY OF ENCOUNTERS" />
          <title>Encounter Details</title>
          <text>
            <table>
              <colgroup>
                <col width="10%" />
                <col width="15%" />
                <col width="25%" />
                <col width="25%" />
                <col width="25%" />
              </colgroup>
              <thead>
                <tr>
                  <th>Date</th>
                  <th>Type</th>
                  <th>Department</th>
                  <th>Care Team</th>
                  <th>Description</th>
                </tr>
              </thead>
              <tbody>
                <tr ID="encounter6" styleCode="normRow">
                  <td>12/14/2014</td>
                  <td ID="type7">Office Visit</td>
                  <td>
                    <paragraph>WI Harbor Bluff North Family Practice</paragraph>
                  </td>
                  <td>
                    <paragraph styleCode="Bold">Graveen, Becky, MD</paragraph>
                    <paragraph>1979 Milky Way</paragraph>
                    <paragraph>Barn-G1474 (Local)</paragraph>
                    <paragraph>Verona, WI 53593</paragraph>
                    <paragraph>608-777-4189</paragraph>
                  </td>
                  <td ID="encounter6desc">Nasal foreign body, subsequent encounter (Primary Dx); Shortness of breath</td>
                </tr>
              </tbody>
            </table>
          </text>
          <entry>
            <encounter classCode="ENC" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.22.4.49" />
              <id assigningAuthorityName="EPIC" extension="10000251829" root="1.2.840.114350.1.13.81002.1.7.3.698084.8" />
              <code nullFlavor="OTH">
                <translation code="101" codeSystem="1.2.840.114350.1.13.81002.1.7.4.698084.30" displayName="Office Visit" codeSystemName="Epic.EncounterType">
                  <originalText>
                    <reference value="#type7" />
                  </originalText>
                </translation>
              </code>
              <text>
                <reference value="#encounter6desc" />
              </text>
              <statusCode code="normal" />
              <effectiveTime>
                <low value="20141214" />
              </effectiveTime>
              <performer typeCode="PRF">
                <assignedEntity classCode="ASSIGNED">
                  <id extension="1000000038" root="2.16.840.1.113883.4.6" />
                  <addr>
                    <streetAddressLine>1979 Milky Way</streetAddressLine>
                    <streetAddressLine>Barn-G1474 (Local)</streetAddressLine>
                    <city>Verona</city>
                    <state>WI</state>
                    <postalCode>53593</postalCode>
                    <country>USA</country>
                  </addr>
                  <telecom use="WP" value="tel:+1-608-777-4189" />
                  <assignedPerson>
                    <name>
                      <given>Becky</given>
                      <family>Graveen</family>
                    </name>
                  </assignedPerson>
                  <representedOrganization>
                    <name nullFlavor="UNK" />
                    <telecom nullFlavor="UNK" />
                    <addr nullFlavor="UNK" />
                  </representedOrganization>
                </assignedEntity>
              </performer>
              <participant typeCode="LOC">
                <templateId root="2.16.840.1.113883.10.20.22.4.32" />
                <participantRole classCode="SDLOC">
                  <id extension="1185" root="1.2.840.114350.1.13.81002.1.7.2.686980" />
                  <code nullFlavor="UNK">
                    <originalText>Family Practice</originalText>
                  </code>
                  <playingEntity classCode="PLC">
                    <name>WI Harbor Bluff North Family Practice</name>
                    <desc>Family Practice</desc>
                  </playingEntity>
                </participantRole>
              </participant>
              <entryRelationship typeCode="RSON">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28" />
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5" />
                  <id extension="491359" root="1.2.840.114350.1.13.81002.1.7.2.696871" />
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem" />
                  <text>Nasal foreign body, subsequent encounter</text>
                  <statusCode code="completed" />
                  <effectiveTime nullFlavor="UNK">
                    <low nullFlavor="UNK" />
                  </effectiveTime>
                  <value code="74699008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Nasal foreign body, subsequent encounter" xsi:type="CD" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="RSON">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28" />
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5" />
                  <id extension="10026" root="1.2.840.114350.1.13.81002.1.7.2.696871" />
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem" />
                  <text>Shortness of breath</text>
                  <statusCode code="completed" />
                  <effectiveTime nullFlavor="UNK">
                    <low nullFlavor="UNK" />
                  </effectiveTime>
                  <value code="267036007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Shortness of breath" xsi:type="CD" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="RSON" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <code code="COMMENT" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" />
                  <text>
                    <reference value="#encounter6desc" />
                  </text>
                  <statusCode code="completed" />
                  <author>
                    <time value="20141214" />
                    <assignedAuthor>
                      <id extension="1000000038" root="2.16.840.1.113883.4.6" />
                      <addr>
                        <streetAddressLine>1979 Milky Way</streetAddressLine>
                        <streetAddressLine>Barn-G1474 (Local)</streetAddressLine>
                        <city>Verona</city>
                        <state>WI</state>
                        <country>USA</country>
                      </addr>
                      <telecom use="WP" value="tel:+1-608-777-4189" />
                      <assignedPerson>
                        <name>
                          <given>Becky</given>
                          <family>Graveen</family>
                        </name>
                      </assignedPerson>
                      <representedOrganization>
                        <id extension="10800" root="1.2.840.114350.1.13.81002.1.7.2.688879" />
                        <name>Epic 2014 SU QA</name>
                        <telecom use="WP" value="tel:+1-608-111-2222" />
                        <addr>
                          <streetAddressLine>600 E Main Place apt 123</streetAddressLine>
                          <city>MADISON</city>
                          <state>WI</state>
                          <postalCode>53717</postalCode>
                        </addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
              <reference typeCode="REFR">
                <externalObservation>
                  <code code="5" codeSystem="1.2.840.114350.1.13.81002.1.7.3.688882.8100" codeSystemName="Epic.Encounter.Contents" />
                </externalObservation>
              </reference>
            </encounter>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.22.2.6.1" />
          <id root="909C0EE6-84A0-11E4-9FE1-A30549B5E469" />
          <code code="48765-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Allergies, Adverse Reactions, Alerts" />
          <title>Active Allergies and Adverse Reactions - as of 12/15/2014</title>
          <text>
            <table>
              <colgroup>
                <col width="25%" />
                <col width="13%" />
                <col width="12%" />
                <col width="25%" />
                <col width="25%" />
              </colgroup>
              <thead>
                <tr>
                  <th>Allergen</th>
                  <th>Noted Date</th>
                  <th>Severity</th>
                  <th>Reactions</th>
                  <th>Comments</th>
                </tr>
              </thead>
              <tbody>
                <tr ID="allergy8">
                  <td ID="allergy8allergen">Shellfish-Derived Products</td>
                  <td ID="allergy8noted">12/14/2014</td>
                  <td ID="allergy8severity">Medium</td>
                  <td>
                    <content ID="allergy8reaction1">Nausea and Vomiting</content>, <content ID="allergy8reaction2">Swelling</content></td>
                  <td ID="allergy8comments">
                    <paragraph>Shellfish causes patient's lips and face to swell. Has caused serious nausea in the past.</paragraph>
                  </td>
                </tr>
                <tr ID="allergy9">
                  <td ID="allergy9allergen">Sulfa Antibiotics</td>
                  <td ID="allergy9noted">12/14/2014</td>
                  <td ID="allergy9severity">Medium</td>
                  <td>
                    <content ID="allergy9reaction1">Rash</content>, <content ID="allergy9reaction2">Swelling</content></td>
                  <td ID="allergy9comments" />
                </tr>
              </tbody>
            </table>
          </text>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.22.4.30" />
              <id extension="44568" root="1.2.840.114350.1.13.81002.1.7.2.768076" />
              <code code="48765-2" codeSystem="2.16.840.1.113883.6.1" />
              <statusCode code="active" />
              <effectiveTime>
                <low value="20141214" />
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN" negationInd="false">
                  <templateId root="2.16.840.1.113883.10.20.22.4.7" />
                  <id extension="44568" root="1.2.840.114350.1.13.81002.1.7.2.768076" />
                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" />
                  <text>
                    <reference value="#allergy8" />
                  </text>
                  <statusCode code="completed" />
                  <effectiveTime>
                    <low value="20141214" />
                    <high nullFlavor="PINF" />
                  </effectiveTime>
                  <value code="59037007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Drug Intolerance" xsi:type="CD" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                  <author>
                    <time value="20141214" />
                    <assignedAuthor>
                      <id extension="5114" root="1.2.840.114350.1.13.81002.1.7.2.697780" />
                      <addr>
                        <streetAddressLine>1979 Milky Way</streetAddressLine>
                        <streetAddressLine>VH-G1244</streetAddressLine>
                        <city>Verona</city>
                        <state>WI</state>
                        <postalCode>53593</postalCode>
                      </addr>
                      <telecom use="WP" value="tel:+1-608-777-4189" />
                      <assignedPerson>
                        <name>
                          <given>Becky</given>
                          <family>Graveen</family>
                        </name>
                      </assignedPerson>
                      <representedOrganization>
                        <id extension="10800" root="1.2.840.114350.1.13.81002.1.7.2.688879" />
                        <name>Epic 2014 SU QA</name>
                        <telecom use="WP" value="tel:+1-608-111-2222" />
                        <addr>
                          <streetAddressLine>600 E Main Place apt 123</streetAddressLine>
                          <city>MADISON</city>
                          <state>WI</state>
                          <postalCode>53717</postalCode>
                        </addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <participant typeCode="CSM">
                    <participantRole classCode="MANU">
                      <playingEntity classCode="MMAT">
                        <code code="N0000185020" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT">
                          <originalText>
                            <reference value="#allergy8allergen" />
                          </originalText>
                          <translation code="N0000007624" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000168415" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000168510" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                        </code>
                        <name>SHELLFISH-DERIVED PRODUCTS</name>
                      </playingEntity>
                    </participantRole>
                  </participant>
                  <entryRelationship typeCode="MFST" inversionInd="true">
                    <observation classCode="OBS" moodCode="EVN">
                      <templateId root="2.16.840.1.113883.10.20.22.4.9" />
                      <id extension="9" root="1.2.840.114350.1.13.81002.1.7.4.768076.3008" />
                      <code code="RXNASSESS" />
                      <text>
                        <reference value="#allergy8reaction1" />
                      </text>
                      <statusCode code="completed" />
                      <effectiveTime>
                        <low value="20141214" />
                        <high nullFlavor="PINF" />
                      </effectiveTime>
                      <value code="16932000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Nausea and Vomiting" xsi:type="CD" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                        <originalText>
                          <reference value="#allergy8reaction1" />
                        </originalText>
                      </value>
                    </observation>
                  </entryRelationship>
                  <entryRelationship typeCode="MFST" inversionInd="true">
                    <observation classCode="OBS" moodCode="EVN">
                      <templateId root="2.16.840.1.113883.10.20.22.4.9" />
                      <id extension="11" root="1.2.840.114350.1.13.81002.1.7.4.768076.3008" />
                      <code code="RXNASSESS" />
                      <text>
                        <reference value="#allergy8reaction2" />
                      </text>
                      <statusCode code="completed" />
                      <effectiveTime>
                        <low value="20141214" />
                        <high nullFlavor="PINF" />
                      </effectiveTime>
                      <value code="65124004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Swelling" xsi:type="CD" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                        <originalText>
                          <reference value="#allergy8reaction2" />
                        </originalText>
                      </value>
                    </observation>
                  </entryRelationship>
                  <entryRelationship typeCode="SUBJ" inversionInd="true">
                    <observation classCode="OBS" moodCode="EVN">
                      <templateId root="2.16.840.1.113883.10.20.22.4.8" />
                      <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity" />
                      <text>
                        <reference value="#allergy8severity" />
                      </text>
                      <statusCode code="completed" />
                      <value code="6736007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Moderate" xsi:type="CD" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    </observation>
                  </entryRelationship>
                  <entryRelationship typeCode="REFR" inversionInd="true">
                    <observation classCode="OBS" moodCode="EVN">
                      <templateId root="2.16.840.1.113883.10.20.22.4.28" />
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status" />
                      <statusCode code="completed" />
                      <value code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active" xsi:type="CE" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="SUBJ" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" />
                  <text>
                    <reference value="#allergy8comments" />
                  </text>
                  <statusCode code="completed" />
                  <author>
                    <time value="20141214" />
                    <assignedAuthor>
                      <id extension="5114" root="1.2.840.114350.1.13.81002.1.7.2.697780" />
                      <addr>
                        <streetAddressLine>1979 Milky Way</streetAddressLine>
                        <streetAddressLine>VH-G1244</streetAddressLine>
                        <city>Verona</city>
                        <state>WI</state>
                        <postalCode>53593</postalCode>
                      </addr>
                      <telecom use="WP" value="tel:+1-608-777-4189" />
                      <assignedPerson>
                        <name>
                          <given>Becky</given>
                          <family>Graveen</family>
                        </name>
                      </assignedPerson>
                      <representedOrganization>
                        <id extension="10800" root="1.2.840.114350.1.13.81002.1.7.2.688879" />
                        <name>Epic 2014 SU QA</name>
                        <telecom use="WP" value="tel:+1-608-111-2222" />
                        <addr>
                          <streetAddressLine>600 E Main Place apt 123</streetAddressLine>
                          <city>MADISON</city>
                          <state>WI</state>
                          <postalCode>53717</postalCode>
                        </addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.22.4.30" />
              <id extension="44569" root="1.2.840.114350.1.13.81002.1.7.2.768076" />
              <code code="48765-2" codeSystem="2.16.840.1.113883.6.1" />
              <statusCode code="active" />
              <effectiveTime>
                <low value="20141214" />
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN" negationInd="false">
                  <templateId root="2.16.840.1.113883.10.20.22.4.7" />
                  <id extension="44569" root="1.2.840.114350.1.13.81002.1.7.2.768076" />
                  <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" />
                  <text>
                    <reference value="#allergy9" />
                  </text>
                  <statusCode code="completed" />
                  <effectiveTime>
                    <low value="20141214" />
                    <high nullFlavor="PINF" />
                  </effectiveTime>
                  <value code="59037007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Drug Intolerance" xsi:type="CD" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                  <author>
                    <time value="20141214" />
                    <assignedAuthor>
                      <id extension="5114" root="1.2.840.114350.1.13.81002.1.7.2.697780" />
                      <addr>
                        <streetAddressLine>1979 Milky Way</streetAddressLine>
                        <streetAddressLine>VH-G1244</streetAddressLine>
                        <city>Verona</city>
                        <state>WI</state>
                        <postalCode>53593</postalCode>
                      </addr>
                      <telecom use="WP" value="tel:+1-608-777-4189" />
                      <assignedPerson>
                        <name>
                          <given>Becky</given>
                          <family>Graveen</family>
                        </name>
                      </assignedPerson>
                      <representedOrganization>
                        <id extension="10800" root="1.2.840.114350.1.13.81002.1.7.2.688879" />
                        <name>Epic 2014 SU QA</name>
                        <telecom use="WP" value="tel:+1-608-111-2222" />
                        <addr>
                          <streetAddressLine>600 E Main Place apt 123</streetAddressLine>
                          <city>MADISON</city>
                          <state>WI</state>
                          <postalCode>53717</postalCode>
                        </addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <participant typeCode="CSM">
                    <participantRole classCode="MANU">
                      <playingEntity classCode="MMAT">
                        <code code="N0000179452" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT">
                          <originalText>
                            <reference value="#allergy9allergen" />
                          </originalText>
                          <translation code="N0000006054" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000006329" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000006675" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000006849" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000006868" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000006871" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000006879" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000006886" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000006888" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000006904" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000006913" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000006967" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000007270" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000007968" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000008034" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000008036" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000008048" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000166861" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000166862" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000166863" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000166864" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000166866" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000166867" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000166868" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000166869" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000166871" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000167190" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000178934" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000178992" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000178993" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000179258" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                          <translation code="N0000179292" codeSystem="2.16.840.1.113883.3.26.1.5" codeSystemName="NDF-RT" />
                        </code>
                        <name>SULFA ANTIBIOTICS</name>
                      </playingEntity>
                    </participantRole>
                  </participant>
                  <entryRelationship typeCode="MFST" inversionInd="true">
                    <observation classCode="OBS" moodCode="EVN">
                      <templateId root="2.16.840.1.113883.10.20.22.4.9" />
                      <id extension="5" root="1.2.840.114350.1.13.81002.1.7.4.768076.3008" />
                      <code code="RXNASSESS" />
                      <text>
                        <reference value="#allergy9reaction1" />
                      </text>
                      <statusCode code="completed" />
                      <effectiveTime>
                        <low value="20141214" />
                        <high nullFlavor="PINF" />
                      </effectiveTime>
                      <value code="271807003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Rash" xsi:type="CD" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                        <originalText>
                          <reference value="#allergy9reaction1" />
                        </originalText>
                      </value>
                    </observation>
                  </entryRelationship>
                  <entryRelationship typeCode="MFST" inversionInd="true">
                    <observation classCode="OBS" moodCode="EVN">
                      <templateId root="2.16.840.1.113883.10.20.22.4.9" />
                      <id extension="11" root="1.2.840.114350.1.13.81002.1.7.4.768076.3008" />
                      <code code="RXNASSESS" />
                      <text>
                        <reference value="#allergy9reaction2" />
                      </text>
                      <statusCode code="completed" />
                      <effectiveTime>
                        <low value="20141214" />
                        <high nullFlavor="PINF" />
                      </effectiveTime>
                      <value code="65124004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Swelling" xsi:type="CD" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                        <originalText>
                          <reference value="#allergy9reaction2" />
                        </originalText>
                      </value>
                    </observation>
                  </entryRelationship>
                  <entryRelationship typeCode="SUBJ" inversionInd="true">
                    <observation classCode="OBS" moodCode="EVN">
                      <templateId root="2.16.840.1.113883.10.20.22.4.8" />
                      <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity" />
                      <text>
                        <reference value="#allergy9severity" />
                      </text>
                      <statusCode code="completed" />
                      <value code="6736007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Moderate" xsi:type="CD" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    </observation>
                  </entryRelationship>
                  <entryRelationship typeCode="REFR" inversionInd="true">
                    <observation classCode="OBS" moodCode="EVN">
                      <templateId root="2.16.840.1.113883.10.20.22.4.28" />
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status" />
                      <statusCode code="completed" />
                      <value code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active" xsi:type="CE" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.22.2.1.1" />
          <id root="90B32CF2-84A0-11E4-9FE1-A30549B5E469" />
          <code code="10160-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="History of Medication Usage" />
          <title>Current Medications - as of 12/15/2014</title>
          <text>
            <list>
              <item>
                <content styleCode="flagData">Please check all current medications with the patient. </content>
              </item>
            </list>
            <br />
            <table>
              <colgroup>
                <col width="25%" />
                <col width="25%" />
                <col width="13%" />
                <col width="12%" />
                <col width="8%" />
                <col width="8%" />
                <col width="9%" />
              </colgroup>
              <thead>
                <tr>
                  <th>Prescription</th>
                  <th>Sig.</th>
                  <th>Disp.</th>
                  <th>Refills</th>
                  <th>Start Date</th>
                  <th>End Date</th>
                  <th>Status</th>
                </tr>
              </thead>
              <tbody>
                <tr ID="currx10">
                  <td ID="med10">acetaminophen (TYLENOL) 500 MG PO tablet</td>
                  <td ID="sig10">Take one tablet by mouth every 6 hours as needed for Pain for up to 30 days.</td>
                  <td>
                    <paragraph>30 each</paragraph>
                  </td>
                  <td>0</td>
                  <td>12/14/2014</td>
                  <td>01/13/2015</td>
                  <td>Active</td>
                </tr>
              </tbody>
            </table>
          </text>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="INT">
              <templateId root="2.16.840.1.113883.10.20.22.4.16" />
              <id extension="3155765" root="1.2.840.114350.1.13.81002.1.7.2.798268" />
              <text mediaType="text/xml">
                <reference value="#sig10" />
              </text>
              <statusCode code="completed" />
              <effectiveTime xsi:type="IVL_TS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                <low value="20141214" />
                <high value="20150114055900+0000" />
              </effectiveTime>
              <effectiveTime xsi:type="PIVL_TS" institutionSpecified="false" operator="A" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                <period unit="h" value="6" />
              </effectiveTime>
              <routeCode code="C38288" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="NCI Thesaurus" displayName="Oral" />
              <doseQuantity unit="MG" value="500" />
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" />
                  <templateId root="2.16.840.1.113883.10.20.1.53" />
                  <templateId root="2.16.840.1.113883.3.88.11.32.9" />
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2" />
                  <templateId root="2.16.840.1.113883.3.249.11.100.13" />
                  <templateId root="2.16.840.1.113883.10.20.22.4.23" />
                  <manufacturedMaterial>
                    <code code="198440" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Acetaminophen 500 Mg Po Tabs">
                      <originalText>
                        <reference value="#med10" />
                      </originalText>
                      <translation code="0182-8453-89" codeSystem="2.16.840.1.113883.6.69" displayName="Acetaminophen 500 Mg Po Tabs" codeSystemName="NDC" />
                      <translation code="284" codeSystem="2.16.840.1.113883.6.253" displayName="Acetaminophen 500 Mg Po Tabs" codeSystemName="Medispan Drug Descriptor ID" />
                      <translation code="64200010000315" codeSystem="2.16.840.1.113883.6.68" displayName="Acetaminophen 500 Mg Po Tabs" codeSystemName="Medi-Span Generic Product Identifier" />
                      <translation code="284" codeSystem="2.16.840.1.113883.6.162" displayName="Acetaminophen 500 Mg Po Tabs" codeSystemName="Med-File (Medi-Span)" />
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <author>
                <time value="20141215011511+0000" />
                <assignedAuthor>
                  <id extension="1000000038" root="2.16.840.1.113883.4.6" />
                  <addr>
                    <streetAddressLine>1979 Milky Way</streetAddressLine>
                    <streetAddressLine>Barn-G1474 (Local)</streetAddressLine>
                    <city>Verona</city>
                    <state>WI</state>
                    <postalCode>53593</postalCode>
                    <country>US</country>
                  </addr>
                  <telecom use="WP" value="tel:+1-608-777-4189" />
                  <assignedPerson>
                    <name>
                      <given>Becky</given>
                      <family>Graveen</family>
                    </name>
                  </assignedPerson>
                  <representedOrganization>
                    <id extension="10800" root="1.2.840.114350.1.13.81002.1.7.2.688879" />
                    <name>Epic 2014 SU QA</name>
                    <telecom use="WP" value="tel:+1-608-111-2222" />
                    <addr>
                      <streetAddressLine>600 E Main Place apt 123</streetAddressLine>
                      <city>MADISON</city>
                      <state>WI</state>
                      <postalCode>53717</postalCode>
                    </addr>
                  </representedOrganization>
                </assignedAuthor>
              </author>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <code code="329505003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Over the counter products" />
                  <statusCode code="completed" />
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="SUBJ" inversionInd="true">
                <act classCode="ACT" moodCode="INT">
                  <templateId root="2.16.840.1.113883.10.20.22.4.20" />
                  <code code="311401005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" />
                  <text>
                    <reference value="#sig10" />
                  </text>
                  <statusCode code="completed" />
                  <author>
                    <time value="20141215011511+0000" />
                    <assignedAuthor>
                      <id extension="1000000038" root="2.16.840.1.113883.4.6" />
                      <addr>
                        <streetAddressLine>1979 Milky Way</streetAddressLine>
                        <streetAddressLine>Barn-G1474 (Local)</streetAddressLine>
                        <city>Verona</city>
                        <state>WI</state>
                        <postalCode>53593</postalCode>
                        <country>US</country>
                      </addr>
                      <telecom use="WP" value="tel:+1-608-777-4189" />
                      <assignedPerson>
                        <name>
                          <given>Becky</given>
                          <family>Graveen</family>
                        </name>
                      </assignedPerson>
                      <representedOrganization>
                        <id extension="10800" root="1.2.840.114350.1.13.81002.1.7.2.688879" />
                        <name>Epic 2014 SU QA</name>
                        <telecom use="WP" value="tel:+1-608-111-2222" />
                        <addr>
                          <streetAddressLine>600 E Main Place apt 123</streetAddressLine>
                          <city>MADISON</city>
                          <state>WI</state>
                          <postalCode>53717</postalCode>
                        </addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <supply classCode="SPLY" moodCode="INT">
                  <templateId root="2.16.840.1.113883.10.20.22.4.17" />
                  <id extension="3155765" root="1.2.840.114350.1.13.81002.1.7.2.798268" />
                  <statusCode code="completed" />
                  <repeatNumber value="1" />
                  <quantity value="30" />
                  <product>
                    <manufacturedProduct classCode="MANU">
                      <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" />
                      <templateId root="2.16.840.1.113883.10.20.1.53" />
                      <templateId root="2.16.840.1.113883.3.88.11.32.9" />
                      <templateId root="2.16.840.1.113883.3.88.11.83.8.2" />
                      <templateId root="2.16.840.1.113883.3.249.11.100.13" />
                      <templateId root="2.16.840.1.113883.10.20.22.4.23" />
                      <manufacturedMaterial>
                        <code code="198440" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Acetaminophen 500 Mg Po Tabs">
                          <originalText>
                            <reference value="#med10" />
                          </originalText>
                          <translation code="0182-8453-89" codeSystem="2.16.840.1.113883.6.69" displayName="Acetaminophen 500 Mg Po Tabs" codeSystemName="NDC" />
                          <translation code="284" codeSystem="2.16.840.1.113883.6.253" displayName="Acetaminophen 500 Mg Po Tabs" codeSystemName="Medispan Drug Descriptor ID" />
                          <translation code="64200010000315" codeSystem="2.16.840.1.113883.6.68" displayName="Acetaminophen 500 Mg Po Tabs" codeSystemName="Medi-Span Generic Product Identifier" />
                          <translation code="284" codeSystem="2.16.840.1.113883.6.162" displayName="Acetaminophen 500 Mg Po Tabs" codeSystemName="Med-File (Medi-Span)" />
                        </code>
                      </manufacturedMaterial>
                    </manufacturedProduct>
                  </product>
                </supply>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.47" />
                  <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status" />
                  <statusCode code="completed" />
                  <value code="55561003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Active" xsi:type="CE" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                </observation>
              </entryRelationship>
            </substanceAdministration>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.22.2.5.1" />
          <id root="90B64BC6-84A0-11E4-9FE1-A30549B5E469" />
          <code code="11450-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="PROBLEM LIST" />
          <title>Active Problems - as of 12/15/2014</title>
          <text>
            <table>
              <thead>
                <tr>
                  <th>Patient Care Coordination Note</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td styleCode="noIndent">
                    <paragraph>This is where clinicians document patient care coordination notes. These are considered longitudinal for the patient. <br /></paragraph>
                  </td>
                </tr>
              </tbody>
            </table>
            <table>
              <colgroup>
                <col width="25%" />
                <col width="75%" />
              </colgroup>
              <thead>
                <tr>
                  <th>Problem</th>
                  <th>Noted Date</th>
                </tr>
              </thead>
              <tbody>
                <tr ID="problem11" styleCode="normRow">
                  <td ID="problem11name" styleCode="header">Nasal foreign body</td>
                  <td>10/08/2014</td>
                </tr>
                <tr styleCode="normRow">
                  <td ID="problem11comment" styleCode="allIndent" colspan="2">
                    <paragraph styleCode="cellHeader">Overview: </paragraph>
                    <paragraph>Patient appears to have accidentally lodged an object in his right nasal cavity.</paragraph>
                  </td>
                </tr>
                <tr ID="problem12" styleCode="altRow">
                  <td ID="problem12name" styleCode="header">Shortness of breath</td>
                  <td>09/17/2012</td>
                </tr>
                <tr styleCode="altRow">
                  <td ID="problem12comment" styleCode="allIndent" colspan="2">
                    <paragraph styleCode="cellHeader">Overview: </paragraph>
                    <paragraph>Usually on exertion, but sometimes occurs even during short walks.</paragraph>
                    <br />
                    <paragraph styleCode="cellHeader">Last Assessment &amp; Plan: </paragraph>
                    <paragraph>Patient still expresses difficulty breathing at times.</paragraph>
                  </td>
                </tr>
              </tbody>
            </table>
          </text>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.22.4.3" />
              <id extension="44565" root="1.2.840.114350.1.13.81002.1.7.2.768076" />
              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" />
              <statusCode code="active" />
              <effectiveTime>
                <low value="20141008" />
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.22.4.4" />
                  <id extension="44565" root="1.2.840.114350.1.13.81002.1.7.2.768076" />
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem" />
                  <text>
                    <reference value="#problem11name" />
                  </text>
                  <statusCode code="completed" />
                  <effectiveTime>
                    <low value="20141008" />
                  </effectiveTime>
                  <value code="74699008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Nasal foreign body" xsi:type="CD" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <originalText>
                      <reference value="#problem11name" />
                    </originalText>
                    <translation code="932" codeSystem="2.16.840.1.113883.6.103" displayName="Nasal foreign body" codeSystemName="ICD-9CM" />
                    <translation code="T17.1XXA" codeSystem="2.16.840.1.113883.6.90" displayName="Nasal foreign body" codeSystemName="ICD-10-CM" />
                  </value>
                  <author>
                    <time value="20141215004657+0000" />
                    <assignedAuthor>
                      <id extension="5114" root="1.2.840.114350.1.13.81002.1.7.2.697780" />
                      <addr>
                        <streetAddressLine>1979 Milky Way</streetAddressLine>
                        <streetAddressLine>VH-G1244</streetAddressLine>
                        <city>Verona</city>
                        <state>WI</state>
                        <postalCode>53593</postalCode>
                      </addr>
                      <telecom use="WP" value="tel:+1-608-777-4189" />
                      <assignedPerson>
                        <name>
                          <given>Becky</given>
                          <family>Graveen</family>
                        </name>
                      </assignedPerson>
                      <representedOrganization>
                        <id extension="10800" root="1.2.840.114350.1.13.81002.1.7.2.688879" />
                        <name>Epic 2014 SU QA</name>
                        <telecom use="WP" value="tel:+1-608-111-2222" />
                        <addr>
                          <streetAddressLine>600 E Main Place apt 123</streetAddressLine>
                          <city>MADISON</city>
                          <state>WI</state>
                          <postalCode>53717</postalCode>
                        </addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status" />
                      <statusCode code="completed" />
                      <effectiveTime>
                        <low value="20141008" />
                      </effectiveTime>
                      <value code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active" xsi:type="CE" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="SUBJ" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" />
                  <text>
                    <reference value="#problem11comment" />
                  </text>
                  <statusCode code="completed" />
                  <author>
                    <time value="20141215004657+0000" />
                    <assignedAuthor>
                      <id extension="5114" root="1.2.840.114350.1.13.81002.1.7.2.697780" />
                      <addr>
                        <streetAddressLine>1979 Milky Way</streetAddressLine>
                        <streetAddressLine>VH-G1244</streetAddressLine>
                        <city>Verona</city>
                        <state>WI</state>
                        <postalCode>53593</postalCode>
                      </addr>
                      <telecom use="WP" value="tel:+1-608-777-4189" />
                      <assignedPerson>
                        <name>
                          <given>Becky</given>
                          <family>Graveen</family>
                        </name>
                      </assignedPerson>
                      <representedOrganization>
                        <id extension="10800" root="1.2.840.114350.1.13.81002.1.7.2.688879" />
                        <name>Epic 2014 SU QA</name>
                        <telecom use="WP" value="tel:+1-608-111-2222" />
                        <addr>
                          <streetAddressLine>600 E Main Place apt 123</streetAddressLine>
                          <city>MADISON</city>
                          <state>WI</state>
                          <postalCode>53717</postalCode>
                        </addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.22.4.3" />
              <id extension="44566" root="1.2.840.114350.1.13.81002.1.7.2.768076" />
              <code code="CONC" codeSystem="2.16.840.1.113883.5.6" />
              <statusCode code="active" />
              <effectiveTime>
                <low value="20120917" />
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.22.4.4" />
                  <id extension="44566" root="1.2.840.114350.1.13.81002.1.7.2.768076" />
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem" />
                  <text>
                    <reference value="#problem12name" />
                  </text>
                  <statusCode code="completed" />
                  <effectiveTime>
                    <low value="20120917" />
                  </effectiveTime>
                  <value code="267036007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Shortness of breath" xsi:type="CD" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <originalText>
                      <reference value="#problem12name" />
                    </originalText>
                    <translation code="786.05" codeSystem="2.16.840.1.113883.6.103" displayName="Shortness of breath" codeSystemName="ICD-9CM" />
                    <translation code="R06.02" codeSystem="2.16.840.1.113883.6.90" displayName="Shortness of breath" codeSystemName="ICD-10-CM" />
                  </value>
                  <author>
                    <time value="20141215003610+0000" />
                    <assignedAuthor>
                      <id extension="5114" root="1.2.840.114350.1.13.81002.1.7.2.697780" />
                      <addr>
                        <streetAddressLine>1979 Milky Way</streetAddressLine>
                        <streetAddressLine>VH-G1244</streetAddressLine>
                        <city>Verona</city>
                        <state>WI</state>
                        <postalCode>53593</postalCode>
                      </addr>
                      <telecom use="WP" value="tel:+1-608-777-4189" />
                      <assignedPerson>
                        <name>
                          <given>Becky</given>
                          <family>Graveen</family>
                        </name>
                      </assignedPerson>
                      <representedOrganization>
                        <id extension="10800" root="1.2.840.114350.1.13.81002.1.7.2.688879" />
                        <name>Epic 2014 SU QA</name>
                        <telecom use="WP" value="tel:+1-608-111-2222" />
                        <addr>
                          <streetAddressLine>600 E Main Place apt 123</streetAddressLine>
                          <city>MADISON</city>
                          <state>WI</state>
                          <postalCode>53717</postalCode>
                        </addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status" />
                      <statusCode code="completed" />
                      <effectiveTime>
                        <low value="20120917" />
                      </effectiveTime>
                      <value code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active" xsi:type="CE" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="SUBJ" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" />
                  <text>
                    <reference value="#problem12comment" />
                  </text>
                  <statusCode code="completed" />
                  <author>
                    <time value="20141215003610+0000" />
                    <assignedAuthor>
                      <id extension="5114" root="1.2.840.114350.1.13.81002.1.7.2.697780" />
                      <addr>
                        <streetAddressLine>1979 Milky Way</streetAddressLine>
                        <streetAddressLine>VH-G1244</streetAddressLine>
                        <city>Verona</city>
                        <state>WI</state>
                        <postalCode>53593</postalCode>
                      </addr>
                      <telecom use="WP" value="tel:+1-608-777-4189" />
                      <assignedPerson>
                        <name>
                          <given>Becky</given>
                          <family>Graveen</family>
                        </name>
                      </assignedPerson>
                      <representedOrganization>
                        <id extension="10800" root="1.2.840.114350.1.13.81002.1.7.2.688879" />
                        <name>Epic 2014 SU QA</name>
                        <telecom use="WP" value="tel:+1-608-111-2222" />
                        <addr>
                          <streetAddressLine>600 E Main Place apt 123</streetAddressLine>
                          <city>MADISON</city>
                          <state>WI</state>
                          <postalCode>53717</postalCode>
                        </addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
            </act>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.22.2.20" />
          <id root="90BA7714-84A0-11E4-9FE1-A30549B5E469" />
          <code code="11348-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="HISTORY OF PAST ILLNESS" />
          <title>Resolved Problems - as of 12/15/2014</title>
          <text>
            <table>
              <colgroup>
                <col width="25%" />
                <col width="12%" />
                <col width="63%" />
              </colgroup>
              <thead>
                <tr>
                  <th>Problem</th>
                  <th>Noted Date</th>
                  <th>Resolved Date</th>
                </tr>
              </thead>
              <tbody>
                <tr ID="problem13" styleCode="normRow">
                  <td ID="problem13name" styleCode="header">Impacted ear wax</td>
                  <td>08/06/2011</td>
                  <td>10/18/2011</td>
                </tr>
              </tbody>
            </table>
          </text>
          <entry>
            <observation classCode="OBS" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.22.4.4" />
              <id extension="44567" root="1.2.840.114350.1.13.81002.1.7.2.768076" />
              <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem" />
              <text>
                <reference value="#problem13name" />
              </text>
              <statusCode code="completed" />
              <effectiveTime>
                <low value="20110806" />
                <high value="20111018" />
              </effectiveTime>
              <value code="18070006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Impacted ear wax" xsi:type="CD" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                <originalText>
                  <reference value="#problem13name" />
                </originalText>
                <translation code="380.4" codeSystem="2.16.840.1.113883.6.103" displayName="Impacted ear wax" codeSystemName="ICD-9CM" />
                <translation code="H61.20" codeSystem="2.16.840.1.113883.6.90" displayName="Impacted ear wax" codeSystemName="ICD-10-CM" />
              </value>
              <author>
                <time value="20141215003728+0000" />
                <assignedAuthor>
                  <id extension="5114" root="1.2.840.114350.1.13.81002.1.7.2.697780" />
                  <addr>
                    <streetAddressLine>1979 Milky Way</streetAddressLine>
                    <streetAddressLine>VH-G1244</streetAddressLine>
                    <city>Verona</city>
                    <state>WI</state>
                    <postalCode>53593</postalCode>
                  </addr>
                  <telecom use="WP" value="tel:+1-608-777-4189" />
                  <assignedPerson>
                    <name>
                      <given>Becky</given>
                      <family>Graveen</family>
                    </name>
                  </assignedPerson>
                  <representedOrganization>
                    <id extension="10800" root="1.2.840.114350.1.13.81002.1.7.2.688879" />
                    <name>Epic 2014 SU QA</name>
                    <telecom use="WP" value="tel:+1-608-111-2222" />
                    <addr>
                      <streetAddressLine>600 E Main Place apt 123</streetAddressLine>
                      <city>MADISON</city>
                      <state>WI</state>
                      <postalCode>53717</postalCode>
                    </addr>
                  </representedOrganization>
                </assignedAuthor>
              </author>
              <entryRelationship typeCode="REFR">
                <observation classCode="OBS" moodCode="EVN">
                  <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status" />
                  <statusCode code="completed" />
                  <effectiveTime>
                    <low value="20110806" />
                    <high value="20111018" />
                  </effectiveTime>
                  <value code="413322009" codeSystem="2.16.840.1.113883.6.96" displayName="Resolved" xsi:type="CE" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                </observation>
              </entryRelationship>
            </observation>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.22.2.2.1" />
          <id root="90BBB41C-84A0-11E4-9FE1-A30549B5E469" />
          <code code="11369-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="HISTORY OF IMMUNIZATIONS" />
          <title>Immunizations - as of 12/15/2014</title>
          <text>
            <table>
              <colgroup>
                <col width="25%" />
                <col width="50%" />
                <col width="25%" />
              </colgroup>
              <thead>
                <tr>
                  <th>Name</th>
                  <th>Dates Previously Given</th>
                  <th>Next Due</th>
                </tr>
              </thead>
              <tbody>
                <tr ID="immunization14">
                  <td ID="immunization14Name">Hepatitis A</td>
                  <td>
                    <content>06/14/2009</content>
                  </td>
                  <td />
                </tr>
                <tr ID="immunization15">
                  <td ID="immunization15Name">Influenza Virus Vaccine - Whole</td>
                  <td>
                    <content>11/19/2013</content>, <content><content styleCode="flagData">09/24/2012</content> (<content ID="immunization16Comment">Contaminated Dose - Bad dose, had to reschedule</content>)</content>, <content>10/17/2011</content></td>
                  <td>10/05/2015</td>
                </tr>
              </tbody>
            </table>
          </text>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="EVN" negationInd="false">
              <templateId root="2.16.840.1.113883.10.20.22.4.52" />
              <id extension="44570" root="1.2.840.114350.1.13.81002.1.7.2.768076" />
              <code code="IMMUNIZ" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" />
              <text mediaType="text/xml">
                <reference value="#immunization14" />
              </text>
              <statusCode code="completed" />
              <effectiveTime value="20090614" />
              <routeCode code="C28161" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="NCI Thesaurus" displayName="Intramuscular" />
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" />
                  <templateId root="2.16.840.1.113883.10.20.1.53" />
                  <templateId root="2.16.840.1.113883.3.88.11.32.9" />
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2" />
                  <templateId root="2.16.840.1.113883.3.249.11.100.13" />
                  <templateId root="2.16.840.1.113883.10.20.22.4.54" />
                  <manufacturedMaterial>
                    <code code="52" codeSystem="2.16.840.1.113883.12.292" codeSystemName="CVX" displayName="HEPATITIS A">
                      <originalText>
                        <reference value="#immunization14Name" />
                      </originalText>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="EVN" negationInd="false">
              <templateId root="2.16.840.1.113883.10.20.22.4.52" />
              <id extension="44571" root="1.2.840.114350.1.13.81002.1.7.2.768076" />
              <code code="IMMUNIZ" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" />
              <text mediaType="text/xml">
                <reference value="#immunization15" />
              </text>
              <statusCode code="completed" />
              <effectiveTime value="20111017" />
              <routeCode code="C28161" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="NCI Thesaurus" displayName="Intramuscular" />
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" />
                  <templateId root="2.16.840.1.113883.10.20.1.53" />
                  <templateId root="2.16.840.1.113883.3.88.11.32.9" />
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2" />
                  <templateId root="2.16.840.1.113883.3.249.11.100.13" />
                  <templateId root="2.16.840.1.113883.10.20.22.4.54" />
                  <manufacturedMaterial>
                    <code code="144" codeSystem="2.16.840.1.113883.12.292" codeSystemName="CVX" displayName="INFLUENZA VIRUS VACCINE - WHOLE">
                      <originalText>
                        <reference value="#immunization15Name" />
                      </originalText>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="EVN" negationInd="true">
              <templateId root="2.16.840.1.113883.10.20.22.4.52" />
              <id extension="44572" root="1.2.840.114350.1.13.81002.1.7.2.768076" />
              <code code="IMMUNIZ" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" />
              <text mediaType="text/xml">
                <reference value="#immunization15" />
              </text>
              <statusCode code="completed" />
              <effectiveTime value="20120924" />
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" />
                  <templateId root="2.16.840.1.113883.10.20.1.53" />
                  <templateId root="2.16.840.1.113883.3.88.11.32.9" />
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2" />
                  <templateId root="2.16.840.1.113883.3.249.11.100.13" />
                  <templateId root="2.16.840.1.113883.10.20.22.4.54" />
                  <manufacturedMaterial>
                    <code code="144" codeSystem="2.16.840.1.113883.12.292" codeSystemName="CVX" displayName="INFLUENZA VIRUS VACCINE - WHOLE">
                      <originalText>
                        <reference value="#immunization15Name" />
                      </originalText>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <entryRelationship typeCode="SUBJ" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" />
                  <text>
                    <reference value="#immunization16Comment" />
                  </text>
                  <statusCode code="completed" />
                </act>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="EVN" negationInd="false">
              <templateId root="2.16.840.1.113883.10.20.22.4.52" />
              <id extension="44573" root="1.2.840.114350.1.13.81002.1.7.2.768076" />
              <code code="IMMUNIZ" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" />
              <text mediaType="text/xml">
                <reference value="#immunization15" />
              </text>
              <statusCode code="completed" />
              <effectiveTime value="20131119" />
              <routeCode code="C28161" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="NCI Thesaurus" displayName="Intramuscular" />
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" />
                  <templateId root="2.16.840.1.113883.10.20.1.53" />
                  <templateId root="2.16.840.1.113883.3.88.11.32.9" />
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2" />
                  <templateId root="2.16.840.1.113883.3.249.11.100.13" />
                  <templateId root="2.16.840.1.113883.10.20.22.4.54" />
                  <manufacturedMaterial>
                    <code code="144" codeSystem="2.16.840.1.113883.12.292" codeSystemName="CVX" displayName="INFLUENZA VIRUS VACCINE - WHOLE">
                      <originalText>
                        <reference value="#immunization15Name" />
                      </originalText>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
            </substanceAdministration>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.1.15" />
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.16" />
          <templateId root="2.16.840.1.113883.10.20.22.2.17" />
          <code code="29762-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Social history" />
          <title>Social History - as of 12/15/2014</title>
          <text>
            <table>
              <colgroup>
                <col width="25%" />
                <col width="13%" />
                <col width="12%" />
                <col width="10%" />
                <col width="15%" />
                <col width="25%" />
              </colgroup>
              <thead>
                <tr>
                  <th>Tobacco Use</th>
                  <th>Types</th>
                  <th>Packs/Day</th>
                  <th>Years Used</th>
                  <th>Date</th>
                  <th>Comments</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Former smoker</td>
                  <td>Cigarettes</td>
                  <td>0.75</td>
                  <td>18</td>
                  <td>06/12/1975 - 03/11/1993</td>
                  <td>Quit smoking many years ago now.</td>
                </tr>
              </tbody>
            </table>
            <table>
              <colgroup>
                <col width="25%" />
                <col width="13%" />
                <col width="12%" />
                <col width="50%" />
              </colgroup>
              <thead>
                <tr>
                  <th>Alcohol Use</th>
                  <th>Drinks/Week</th>
                  <th>oz/Week</th>
                  <th>Comments</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Yes</td>
                  <td>
                    <paragraph>5 Drinks containing 0.5 oz of alcohol</paragraph>
                  </td>
                  <td>2.5 </td>
                  <td>Glasses of wine with dinner and other alcholic beverages throughout the week.</td>
                </tr>
              </tbody>
            </table>
          </text>
          <entry>
            <observation classCode="OBS" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.22.4.78" />
              <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" />
              <statusCode code="completed" />
              <effectiveTime>
                <low value="19750612" />
                <high value="19930311" />
              </effectiveTime>
              <value code="8517006" codeSystem="2.16.840.1.113883.6.96" displayName="Former smoker" xsi:type="CD" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
            </observation>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.22.2.4.1" />
          <code code="8716-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Vital Signs" />
          <title>Last Filed Vital Signs</title>
          <text>
            <table>
              <colgroup>
                <col width="25%" />
                <col width="25%" />
                <col width="50%" />
              </colgroup>
              <thead>
                <tr>
                  <th>Vital Sign</th>
                  <th>Reading</th>
                  <th>Time Taken</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td styleCode="cellHeader">Blood Pressure</td>
                  <td>
                    <content ID="sysBP_5489512320">120</content>/<content ID="diaBP_5489512320">60</content></td>
                  <td>12/14/2014  6:32 PM CST</td>
                </tr>
                <tr>
                  <td styleCode="cellHeader">Pulse</td>
                  <td ID="pulse_5489512320">72</td>
                  <td>12/14/2014  6:32 PM CST</td>
                </tr>
                <tr>
                  <td styleCode="cellHeader">Temperature</td>
                  <td ID="temp_5489512320">36.9 °C (98.5 °F)</td>
                  <td>12/14/2014  6:32 PM CST</td>
                </tr>
                <tr>
                  <td styleCode="cellHeader">Respiratory Rate</td>
                  <td ID="resp_5489512320">18</td>
                  <td>12/14/2014  6:32 PM CST</td>
                </tr>
                <tr>
                  <td styleCode="cellHeader">Height</td>
                  <td ID="height_5489512320">1.778 m (5' 10")</td>
                  <td>12/14/2014  6:32 PM CST</td>
                </tr>
                <tr>
                  <td styleCode="cellHeader">Weight</td>
                  <td ID="weight_5489512320">80.74 kg (178 lb)</td>
                  <td>12/14/2014  6:32 PM CST</td>
                </tr>
                <tr>
                  <td styleCode="cellHeader">Body Mass Index</td>
                  <td ID="bmi_5489512320">25.54</td>
                  <td>12/14/2014  6:32 PM CST</td>
                </tr>
                <tr>
                  <td styleCode="cellHeader">Oxygen Saturation</td>
                  <td ID="SpO2_5489512320">99%</td>
                  <td>12/14/2014  6:32 PM CST</td>
                </tr>
              </tbody>
            </table>
          </text>
          <entry typeCode="DRIV">
            <organizer classCode="CLUSTER" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.22.4.26" />
              <id extension="5489512320-Z56114" root="1.2.840.114350.1.13.81002.1.7.1.2109" />
              <code code="46680005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Vital signs" />
              <statusCode code="completed" />
              <effectiveTime value="20141215003200+0000" />
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.22.4.27" />
                  <id extension="5489512320-sysBP-Z56114" root="1.2.840.114350.1.13.81002.1.7.1.2109.1" />
                  <code code="8480-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="SYSTOLIC BLOOD PRESSURE" />
                  <text>
                    <reference value="#sysBP_5489512320" />
                  </text>
                  <statusCode code="completed" />
                  <effectiveTime value="20141215003200+0000" />
                  <value xsi:type="PQ" unit="mm[Hg]" value="120" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.22.4.27" />
                  <id extension="5489512320-diaBP-Z56114" root="1.2.840.114350.1.13.81002.1.7.1.2109.1" />
                  <code code="8462-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="DIASTOLIC BLOOD PRESSURE" />
                  <text>
                    <reference value="#diaBP_5489512320" />
                  </text>
                  <statusCode code="completed" />
                  <effectiveTime value="20141215003200+0000" />
                  <value xsi:type="PQ" unit="mm[Hg]" value="60" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.22.4.27" />
                  <id extension="5489512320-pulse-Z56114" root="1.2.840.114350.1.13.81002.1.7.1.2109.1" />
                  <code code="8867-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="HEART RATE" />
                  <text>
                    <reference value="#pulse_5489512320" />
                  </text>
                  <statusCode code="completed" />
                  <effectiveTime value="20141215003200+0000" />
                  <value xsi:type="PQ" unit="/min" value="72" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.22.4.27" />
                  <id extension="5489512320-tempC83-Z56114" root="1.2.840.114350.1.13.81002.1.7.1.2109.1" />
                  <code code="8310-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="BODY TEMPERATURE" />
                  <text>
                    <reference value="#temp_5489512320" />
                  </text>
                  <statusCode code="completed" />
                  <effectiveTime value="20141215003200+0000" />
                  <value xsi:type="PQ" unit="Cel" value="36.9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.22.4.27" />
                  <id extension="5489512320-resp-Z56114" root="1.2.840.114350.1.13.81002.1.7.1.2109.1" />
                  <code code="9279-1" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="RESPIRATORY RATE" />
                  <text>
                    <reference value="#resp_5489512320" />
                  </text>
                  <statusCode code="completed" />
                  <effectiveTime value="20141215003200+0000" />
                  <value xsi:type="PQ" unit="/min" value="18" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.22.4.27" />
                  <id extension="5489512320-heightC83-Z56114" root="1.2.840.114350.1.13.81002.1.7.1.2109.1" />
                  <code code="8302-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="HEIGHT" />
                  <text>
                    <reference value="#height_5489512320" />
                  </text>
                  <statusCode code="completed" />
                  <effectiveTime value="20141215003200+0000" />
                  <value xsi:type="PQ" unit="cm" value="177.8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.22.4.27" />
                  <id extension="5489512320-weightC83-Z56114" root="1.2.840.114350.1.13.81002.1.7.1.2109.1" />
                  <code code="3141-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="WEIGHT" />
                  <text>
                    <reference value="#weight_5489512320" />
                  </text>
                  <statusCode code="completed" />
                  <effectiveTime value="20141215003200+0000" />
                  <value xsi:type="PQ" unit="kg" value="80.74" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.22.4.27" />
                  <id extension="5489512320-bmi-Z56114" root="1.2.840.114350.1.13.81002.1.7.1.2109.1" />
                  <code code="39156-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="BODY MASS INDEX" />
                  <text>
                    <reference value="#bmi_5489512320" />
                  </text>
                  <statusCode code="completed" />
                  <effectiveTime value="20141215003200+0000" />
                  <value xsi:type="PQ" unit="kg/m2" value="25.54" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.22.4.27" />
                  <id extension="5489512320-SpO2-Z56114" root="1.2.840.114350.1.13.81002.1.7.1.2109.1" />
                  <code code="2710-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="OXYGEN SATURATION" />
                  <text>
                    <reference value="#SpO2_5489512320" />
                  </text>
                  <statusCode code="completed" />
                  <effectiveTime value="20141215003200+0000" />
                  <value xsi:type="PQ" unit="%" value="99" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                </observation>
              </component>
            </organizer>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.22.2.14" />
          <code code="47420-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Functional Status" />
          <title>Functional Status</title>
          <text>
            <table>
              <colgroup>
                <col width="75%" />
                <col width="25%" />
              </colgroup>
              <thead>
                <tr>
                  <th>Functional Status</th>
                  <th>Response</th>
                </tr>
              </thead>
              <tbody>
                <tr ID="question19">
                  <td>Is the person deaf or does he/she have serious dificulty hearing?</td>
                  <td>
                    <content>No</content>
                  </td>
                </tr>
                <tr ID="question20">
                  <td>Is this person blind or does he/she have serious difficulty seeing when wearing glasses?  </td>
                  <td>
                    <content>No</content>
                  </td>
                </tr>
                <tr ID="question21">
                  <td>Does this person have serious difficulty walking or climbing stairs? </td>
                  <td>
                    <content>No</content> - <content>Not always, but sometimes</content></td>
                </tr>
                <tr ID="question22">
                  <td>Does this person have difficulty dressing or bathing?</td>
                  <td>
                    <content>No</content>
                  </td>
                </tr>
                <tr ID="question23">
                  <td>Because of a physical, mental, or emotional condition, does this person have difficulty doing errands alone such as visiting a doctor's office or shopping? </td>
                  <td>
                    <content>Yes</content> - <content>Can get out of breath with mild exertion</content></td>
                </tr>
              </tbody>
            </table>
            <table>
              <colgroup>
                <col width="75%" />
                <col width="25%" />
              </colgroup>
              <thead>
                <tr>
                  <th>Cognitive Status</th>
                  <th>Response</th>
                </tr>
              </thead>
              <tbody>
                <tr ID="question24">
                  <td>Because of a physical, mental, or emotional condition, does this person have serious difficulty concentrating, remembering, or making decisions? </td>
                  <td>
                    <content>No</content>
                  </td>
                </tr>
              </tbody>
            </table>
          </text>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.22.2.45" />
          <id root="90C5220E-84A0-11E4-9FE1-A30549B5E469" />
          <code code="69730-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Instructions" />
          <title>Instructions</title>
          <text>
            <list styleCode="TOC">
              <item>
                <caption>Patient Instructions - Venture, Thaddeus, MD - 12/15/2014  2:17 PM CST</caption>
                <br />
                <paragraph>Patient has been instructed to reduce time at work and avoid confrontations to reduce stress levels. Patient also been instructed to try to take short walks if feeling up to it and try to cut out very sugary and salty foods from diet. </paragraph>
              </item>
            </list>
          </text>
        </section>
      </component>
      <component>
        <section>
          <code code="10160-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="HISTORY OF MEDICATION USE" />
          <title>Prescriptions Ordered During Visit</title>
          <text>
            <table>
              <colgroup>
                <col width="25%" />
                <col width="25%" />
                <col width="13%" />
                <col width="12%" />
                <col width="12%" />
                <col width="13%" />
              </colgroup>
              <thead>
                <tr>
                  <th>Prescription</th>
                  <th>Sig.</th>
                  <th>Disp.</th>
                  <th>Refills</th>
                  <th>Start Date</th>
                  <th>End Date</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td ID="med26">acetaminophen (TYLENOL) 500 MG PO tablet</td>
                  <td ID="sig26">Take one tablet by mouth every 6 hours as needed for Pain for up to 30 days.</td>
                  <td>
                    <paragraph>30 each</paragraph>
                  </td>
                  <td>0</td>
                  <td>12/14/2014</td>
                  <td>01/13/2015</td>
                </tr>
                <tr>
                  <td ID="med27">acetaminophen (TYLENOL) 160 MG PO chewable tablet</td>
                  <td ID="sig27">Take one tablet by mouth every 4 hours as needed for Pain for up to 30 days.</td>
                  <td>
                    <paragraph>30 each</paragraph>
                  </td>
                  <td>0</td>
                  <td>12/14/2014</td>
                  <td>12/14/2014</td>
                </tr>
              </tbody>
            </table>
          </text>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="INT">
              <templateId root="2.16.840.1.113883.10.20.22.4.16" />
              <id extension="3155765" root="1.2.840.114350.1.13.81002.1.7.2.798268" />
              <text mediaType="text/xml">
                <reference value="#sig26" />
              </text>
              <statusCode code="completed" />
              <effectiveTime xsi:type="IVL_TS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                <low value="20141214" />
                <high value="20150114055900+0000" />
              </effectiveTime>
              <effectiveTime xsi:type="PIVL_TS" institutionSpecified="false" operator="A" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                <period unit="h" value="6" />
              </effectiveTime>
              <doseQuantity unit="MG" value="500" />
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" />
                  <templateId root="2.16.840.1.113883.10.20.1.53" />
                  <templateId root="2.16.840.1.113883.3.88.11.32.9" />
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2" />
                  <templateId root="2.16.840.1.113883.3.249.11.100.13" />
                  <templateId root="2.16.840.1.113883.10.20.22.4.23" />
                  <manufacturedMaterial>
                    <code code="198440" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Acetaminophen 500 Mg Po Tabs">
                      <originalText>
                        <reference value="#med26" />
                      </originalText>
                      <translation code="0182-8453-89" codeSystem="2.16.840.1.113883.6.69" displayName="Acetaminophen 500 Mg Po Tabs" codeSystemName="NDC" />
                      <translation code="284" codeSystem="2.16.840.1.113883.6.253" displayName="Acetaminophen 500 Mg Po Tabs" codeSystemName="Medispan Drug Descriptor ID" />
                      <translation code="64200010000315" codeSystem="2.16.840.1.113883.6.68" displayName="Acetaminophen 500 Mg Po Tabs" codeSystemName="Medi-Span Generic Product Identifier" />
                      <translation code="284" codeSystem="2.16.840.1.113883.6.162" displayName="Acetaminophen 500 Mg Po Tabs" codeSystemName="Med-File (Medi-Span)" />
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <author>
                <time value="20141215011511+0000" />
                <assignedAuthor>
                  <id extension="1000000038" root="2.16.840.1.113883.4.6" />
                  <addr>
                    <streetAddressLine>1979 Milky Way</streetAddressLine>
                    <streetAddressLine>Barn-G1474 (Local)</streetAddressLine>
                    <city>Verona</city>
                    <state>WI</state>
                    <postalCode>53593</postalCode>
                    <country>US</country>
                  </addr>
                  <telecom use="WP" value="tel:+1-608-777-4189" />
                  <assignedPerson>
                    <name>
                      <given>Becky</given>
                      <family>Graveen</family>
                    </name>
                  </assignedPerson>
                  <representedOrganization>
                    <id extension="10800" root="1.2.840.114350.1.13.81002.1.7.2.688879" />
                    <name>Epic 2014 SU QA</name>
                    <telecom use="WP" value="tel:+1-608-111-2222" />
                    <addr>
                      <streetAddressLine>600 E Main Place apt 123</streetAddressLine>
                      <city>MADISON</city>
                      <state>WI</state>
                      <postalCode>53717</postalCode>
                    </addr>
                  </representedOrganization>
                </assignedAuthor>
              </author>
              <entryRelationship typeCode="SUBJ" inversionInd="true">
                <act classCode="ACT" moodCode="INT">
                  <templateId root="2.16.840.1.113883.10.20.22.4.20" />
                  <code code="311401005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" />
                  <text>
                    <reference value="#sig26" />
                  </text>
                  <statusCode code="completed" />
                  <author>
                    <time value="20141215011511+0000" />
                    <assignedAuthor>
                      <id extension="1000000038" root="2.16.840.1.113883.4.6" />
                      <addr>
                        <streetAddressLine>1979 Milky Way</streetAddressLine>
                        <streetAddressLine>Barn-G1474 (Local)</streetAddressLine>
                        <city>Verona</city>
                        <state>WI</state>
                        <postalCode>53593</postalCode>
                        <country>US</country>
                      </addr>
                      <telecom use="WP" value="tel:+1-608-777-4189" />
                      <assignedPerson>
                        <name>
                          <given>Becky</given>
                          <family>Graveen</family>
                        </name>
                      </assignedPerson>
                      <representedOrganization>
                        <id extension="10800" root="1.2.840.114350.1.13.81002.1.7.2.688879" />
                        <name>Epic 2014 SU QA</name>
                        <telecom use="WP" value="tel:+1-608-111-2222" />
                        <addr>
                          <streetAddressLine>600 E Main Place apt 123</streetAddressLine>
                          <city>MADISON</city>
                          <state>WI</state>
                          <postalCode>53717</postalCode>
                        </addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <supply classCode="SPLY" moodCode="INT">
                  <templateId root="2.16.840.1.113883.10.20.22.4.17" />
                  <id extension="3155765" root="1.2.840.114350.1.13.81002.1.7.2.798268" />
                  <statusCode code="completed" />
                  <repeatNumber value="1" />
                  <quantity value="30" />
                  <product>
                    <manufacturedProduct classCode="MANU">
                      <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" />
                      <templateId root="2.16.840.1.113883.10.20.1.53" />
                      <templateId root="2.16.840.1.113883.3.88.11.32.9" />
                      <templateId root="2.16.840.1.113883.3.88.11.83.8.2" />
                      <templateId root="2.16.840.1.113883.3.249.11.100.13" />
                      <templateId root="2.16.840.1.113883.10.20.22.4.23" />
                      <manufacturedMaterial>
                        <code code="198440" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Acetaminophen 500 Mg Po Tabs">
                          <originalText>
                            <reference value="#med26" />
                          </originalText>
                          <translation code="0182-8453-89" codeSystem="2.16.840.1.113883.6.69" displayName="Acetaminophen 500 Mg Po Tabs" codeSystemName="NDC" />
                          <translation code="284" codeSystem="2.16.840.1.113883.6.253" displayName="Acetaminophen 500 Mg Po Tabs" codeSystemName="Medispan Drug Descriptor ID" />
                          <translation code="64200010000315" codeSystem="2.16.840.1.113883.6.68" displayName="Acetaminophen 500 Mg Po Tabs" codeSystemName="Medi-Span Generic Product Identifier" />
                          <translation code="284" codeSystem="2.16.840.1.113883.6.162" displayName="Acetaminophen 500 Mg Po Tabs" codeSystemName="Med-File (Medi-Span)" />
                        </code>
                      </manufacturedMaterial>
                    </manufacturedProduct>
                  </product>
                </supply>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.47" />
                  <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status" />
                  <statusCode code="completed" />
                  <value code="55561003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Active" xsi:type="CE" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                </observation>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="INT">
              <templateId root="2.16.840.1.113883.10.20.22.4.16" />
              <id extension="3155764" root="1.2.840.114350.1.13.81002.1.7.2.798268" />
              <text mediaType="text/xml">
                <reference value="#sig27" />
              </text>
              <statusCode code="completed" />
              <effectiveTime xsi:type="IVL_TS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                <low value="20141214" />
                <high value="20141214" />
              </effectiveTime>
              <effectiveTime xsi:type="PIVL_TS" institutionSpecified="false" operator="A" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                <period unit="h" value="4" />
              </effectiveTime>
              <doseQuantity unit="MG" value="160" />
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" />
                  <templateId root="2.16.840.1.113883.10.20.1.53" />
                  <templateId root="2.16.840.1.113883.3.88.11.32.9" />
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2" />
                  <templateId root="2.16.840.1.113883.3.249.11.100.13" />
                  <templateId root="2.16.840.1.113883.10.20.22.4.23" />
                  <manufacturedMaterial>
                    <code code="313820" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Acetaminophen 160 Mg Po Chew">
                      <originalText>
                        <reference value="#med27" />
                      </originalText>
                      <translation code="63868-158" codeSystem="2.16.840.1.113883.6.69" displayName="Acetaminophen 160 Mg Po Chew" codeSystemName="NDC" />
                      <translation code="24336" codeSystem="2.16.840.1.113883.6.253" displayName="Acetaminophen 160 Mg Po Chew" codeSystemName="Medispan Drug Descriptor ID" />
                      <translation code="64200010000515" codeSystem="2.16.840.1.113883.6.68" displayName="Acetaminophen 160 Mg Po Chew" codeSystemName="Medi-Span Generic Product Identifier" />
                      <translation code="24336" codeSystem="2.16.840.1.113883.6.162" displayName="Acetaminophen 160 Mg Po Chew" codeSystemName="Med-File (Medi-Span)" />
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <author>
                <time value="20141215011418+0000" />
                <assignedAuthor>
                  <id extension="1000000038" root="2.16.840.1.113883.4.6" />
                  <addr>
                    <streetAddressLine>1979 Milky Way</streetAddressLine>
                    <streetAddressLine>Barn-G1474 (Local)</streetAddressLine>
                    <city>Verona</city>
                    <state>WI</state>
                    <postalCode>53593</postalCode>
                    <country>US</country>
                  </addr>
                  <telecom use="WP" value="tel:+1-608-777-4189" />
                  <assignedPerson>
                    <name>
                      <given>Becky</given>
                      <family>Graveen</family>
                    </name>
                  </assignedPerson>
                  <representedOrganization>
                    <id extension="10800" root="1.2.840.114350.1.13.81002.1.7.2.688879" />
                    <name>Epic 2014 SU QA</name>
                    <telecom use="WP" value="tel:+1-608-111-2222" />
                    <addr>
                      <streetAddressLine>600 E Main Place apt 123</streetAddressLine>
                      <city>MADISON</city>
                      <state>WI</state>
                      <postalCode>53717</postalCode>
                    </addr>
                  </representedOrganization>
                </assignedAuthor>
              </author>
              <entryRelationship typeCode="SUBJ" inversionInd="true">
                <act classCode="ACT" moodCode="INT">
                  <templateId root="2.16.840.1.113883.10.20.22.4.20" />
                  <code code="311401005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" />
                  <text>
                    <reference value="#sig27" />
                  </text>
                  <statusCode code="completed" />
                  <author>
                    <time value="20141215011418+0000" />
                    <assignedAuthor>
                      <id extension="1000000038" root="2.16.840.1.113883.4.6" />
                      <addr>
                        <streetAddressLine>1979 Milky Way</streetAddressLine>
                        <streetAddressLine>Barn-G1474 (Local)</streetAddressLine>
                        <city>Verona</city>
                        <state>WI</state>
                        <postalCode>53593</postalCode>
                        <country>US</country>
                      </addr>
                      <telecom use="WP" value="tel:+1-608-777-4189" />
                      <assignedPerson>
                        <name>
                          <given>Becky</given>
                          <family>Graveen</family>
                        </name>
                      </assignedPerson>
                      <representedOrganization>
                        <id extension="10800" root="1.2.840.114350.1.13.81002.1.7.2.688879" />
                        <name>Epic 2014 SU QA</name>
                        <telecom use="WP" value="tel:+1-608-111-2222" />
                        <addr>
                          <streetAddressLine>600 E Main Place apt 123</streetAddressLine>
                          <city>MADISON</city>
                          <state>WI</state>
                          <postalCode>53717</postalCode>
                        </addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <supply classCode="SPLY" moodCode="INT">
                  <templateId root="2.16.840.1.113883.10.20.22.4.17" />
                  <id extension="3155764" root="1.2.840.114350.1.13.81002.1.7.2.798268" />
                  <statusCode code="completed" />
                  <repeatNumber value="1" />
                  <quantity value="30" />
                  <product>
                    <manufacturedProduct classCode="MANU">
                      <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" />
                      <templateId root="2.16.840.1.113883.10.20.1.53" />
                      <templateId root="2.16.840.1.113883.3.88.11.32.9" />
                      <templateId root="2.16.840.1.113883.3.88.11.83.8.2" />
                      <templateId root="2.16.840.1.113883.3.249.11.100.13" />
                      <templateId root="2.16.840.1.113883.10.20.22.4.23" />
                      <manufacturedMaterial>
                        <code code="313820" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Acetaminophen 160 Mg Po Chew">
                          <originalText>
                            <reference value="#med27" />
                          </originalText>
                          <translation code="63868-158" codeSystem="2.16.840.1.113883.6.69" displayName="Acetaminophen 160 Mg Po Chew" codeSystemName="NDC" />
                          <translation code="24336" codeSystem="2.16.840.1.113883.6.253" displayName="Acetaminophen 160 Mg Po Chew" codeSystemName="Medispan Drug Descriptor ID" />
                          <translation code="64200010000515" codeSystem="2.16.840.1.113883.6.68" displayName="Acetaminophen 160 Mg Po Chew" codeSystemName="Medi-Span Generic Product Identifier" />
                          <translation code="24336" codeSystem="2.16.840.1.113883.6.162" displayName="Acetaminophen 160 Mg Po Chew" codeSystemName="Med-File (Medi-Span)" />
                        </code>
                      </manufacturedMaterial>
                    </manufacturedProduct>
                  </product>
                </supply>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.47" />
                  <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status" />
                  <statusCode code="completed" />
                  <value code="73425007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="No Longer Active" xsi:type="CE" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                </observation>
              </entryRelationship>
            </substanceAdministration>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.22.2.9" />
          <id root="90DF2C4E-84A0-11E4-9FE1-A30549B5E469" />
          <code code="51847-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="ASSESSMENT AND PLAN" />
          <title>Progress Notes</title>
          <text>
            <list styleCode="TOC">
              <item>
                <caption>Venture, Thaddeus, MD - 12/15/2014  2:30 PM CST</caption>
                <br />
                <paragraph>
                  <br />HPI Comments: Patient has had difficulty breathing in the past and has issues curbing unhealthy diet habits.<br /><br />Review of Systems <br />Constitutional: Positive for appetite change (Due to stress). Negative for activity change. <br />HENT: Negative for congestion, postnasal drip and sore throat.  <br />Eyes: Negative for discharge and itching. <br />Respiratory: Positive for cough (Mild cough) and chest tightness (Related to shortness of breath). Negative for wheezing.  <br />Cardiovascular: Positive for chest pain (Painful when having bouts of shortness of breath). <br />Gastrointestinal: Negative for nausea, diarrhea and abdominal distention. <br />Endocrine: Negative for cold intolerance and heat intolerance. <br />Genitourinary: Negative.  <br />Musculoskeletal: Negative.  <br />Skin: Negative for color change and rash. <br />Allergic/Immunologic: Negative.  <br />Neurological: Positive for light-headedness (Expressed mild light-headedness when short of breath). Negative for dizziness and facial asymmetry. <br />Hematological: Negative.  <br />Psychiatric/Behavioral: Negative.  <br /><br />Physical Exam <br />Constitutional: He is oriented to person, place, and time and well-developed, well-nourished, and in no distress. No distress. <br />HENT: <br />Right Ear: External ear normal. <br />Left Ear: External ear normal. <br />Nose: Nose normal. <br />Eyes: Conjunctivae and EOM are normal. Pupils are equal, round, and reactive to light. Right eye exhibits no discharge. <br />Neck: Normal range of motion. Neck supple. <br />Cardiovascular: Normal rate, regular rhythm and normal heart sounds.  <br />Pulmonary/Chest: Breath sounds normal. He is in respiratory distress (Shortness of breath). <br />Abdominal: Bowel sounds are normal. He exhibits no distension. <br />Musculoskeletal: Normal range of motion. <br />Neurological: He is alert and oriented to person, place, and time. <br />Skin: Skin is warm and dry. <br /><br />Patient says they will reduce time at work and make an attempt to improve dietary habits.</paragraph>
              </item>
            </list>
          </text>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.22.2.10" />
          <code code="18776-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Treatment plan" />
          <title>Plan of Care</title>
          <text>
            <table ID="planOfCare28">
              <colgroup>
                <col width="25%" />
                <col width="75%" />
              </colgroup>
              <thead>
                <tr>
                  <th>Patient Goal Type</th>
                  <th>Goal</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Blood Pressure</td>
                  <td>
                    <paragraph styleCode="Bold" ID="planOfCare28goal1">Blood Pressure below 140/90</paragraph>
                    <paragraph ID="planOfCare28goal1note">Custom comment for lowering the patient's blood pressure.</paragraph>
                  </td>
                </tr>
              </tbody>
            </table>
          </text>
          <entry>
            <observation classCode="OBS" moodCode="PRP">
              <templateId root="2.16.840.1.113883.10.20.22.4.44" />
              <id extension="8093" root="1.2.840.114350.1.13.81002.1.7.2.737179" />
              <code nullFlavor="UNK">
                <originalText>
                  <reference value="#planOfCare28goal1" />
                </originalText>
              </code>
              <entryRelationship typeCode="COMP">
                <act classCode="ACT" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.22.4.64" />
                  <code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="comment" />
                  <text>
                    <reference value="#planOfCare28goal1note" />
                  </text>
                  <statusCode code="completed" />
                </act>
              </entryRelationship>
            </observation>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.22.2.7.1" />
          <id root="90E62A08-84A0-11E4-9FE1-A30549B5E469" />
          <code code="47519-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="History of procedures" />
          <title>Procedures</title>
          <text>
            <table>
              <colgroup>
                <col width="25%" />
                <col width="10%" />
                <col width="15%" />
                <col width="25%" />
                <col width="25%" />
              </colgroup>
              <thead>
                <tr>
                  <th>Procedure Name</th>
                  <th>Priority</th>
                  <th>Date/Time</th>
                  <th>Associated Diagnosis</th>
                  <th>Comments</th>
                </tr>
              </thead>
              <tbody>
                <tr ID="procedure29" styleCode="normRow">
                  <td ID="procedure29name">REMOVE NASAL FOREIGN BODY</td>
                  <td>Routine</td>
                  <td>12/14/2014  3:14 PM CST</td>
                  <td>
                    <paragraph>Nasal foreign body, subsequent encounter</paragraph>
                  </td>
                  <td>
                    <paragraph styleCode="header">Results for this procedure are in the results section.</paragraph>
                  </td>
                </tr>
              </tbody>
            </table>
          </text>
          <entry>
            <procedure classCode="PROC" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.22.4.14" />
              <id extension="3155762" root="1.2.840.114350.1.13.81002.1.7.2.798268" />
              <code code="30300" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="REMOVE NASAL FOREIGN BODY">
                <originalText>
                  <reference value="#procedure29name" />
                </originalText>
              </code>
              <text>
                <reference value="#procedure29" />
              </text>
              <statusCode code="completed" />
              <effectiveTime value="20141214211400+0000">
                <low value="20141214211400+0000" />
                <high value="20141214211400+0000" />
              </effectiveTime>
              <entryRelationship typeCode="RSON">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28" />
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5" />
                  <id extension="491359" root="1.2.840.114350.1.13.81002.1.7.2.696871" />
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem" />
                  <text>Nasal foreign body, subsequent encounter</text>
                  <statusCode code="completed" />
                  <effectiveTime nullFlavor="UNK">
                    <low nullFlavor="UNK" />
                  </effectiveTime>
                  <value code="74699008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Nasal foreign body, subsequent encounter" xsi:type="CD" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                </observation>
              </entryRelationship>
            </procedure>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.22.2.3.1" />
          <id root="90E8F724-84A0-11E4-9FE1-A30549B5E469" />
          <code code="30954-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="STUDIES SUMMARY" />
          <title>Results</title>
          <text>
            <list styleCode="TOC">
              <item ID="Result33">
                <caption>CHEST X-RAY 2 VW (12/14/2014  5:27 PM CST)</caption>
                <table>
                  <thead>
                    <tr>
                      <th>Impressions</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td ID="Result33Impression" styleCode="pre">
                        <paragraph>2 VM X-ray on patient did not reveal any additional information.</paragraph>
                      </td>
                    </tr>
                  </tbody>
                </table>
                <table>
                  <thead>
                    <tr>
                      <th>Narrative</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td ID="Result33Narrative" styleCode="pre">
                        <paragraph>No masses found on patient's lungs or other symptoms resulting in</paragraph>
                        <paragraph>troubled breathing. Patient still works full-time, though has</paragraph>
                        <paragraph>been advised to cut back on hours as it appears to be</paragraph>
                        <paragraph>contributing to health issues.</paragraph>
                      </td>
                    </tr>
                  </tbody>
                </table>
              </item>
              <item ID="Result32">
                <caption>REMOVE NASAL FOREIGN BODY (12/14/2014  3:14 PM CST)</caption>
                <table>
                  <thead>
                    <tr>
                      <th>Impressions</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td ID="Result32Impression" styleCode="pre">
                        <paragraph>Foreign body removed from patient's nasal cavity.</paragraph>
                      </td>
                    </tr>
                  </tbody>
                </table>
                <table>
                  <thead>
                    <tr>
                      <th>Narrative</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td ID="Result32Narrative" styleCode="pre">
                        <paragraph>Patient had previously been in an accident that lodged a foreign</paragraph>
                        <paragraph>object in right nasal cavity. Not severe, but was causing the</paragraph>
                        <paragraph>patient serious discomfort and exacerbating patient's past issue</paragraph>
                        <paragraph>of breathing normally.</paragraph>
                      </td>
                    </tr>
                  </tbody>
                </table>
              </item>
            </list>
          </text>
          <entry typeCode="DRIV">
            <organizer classCode="BATTERY" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.22.4.1" />
              <id extension="3155762" root="1.2.840.114350.1.13.81002.1.7.2.798268" />
              <code code="30300" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="REMOVE NASAL FOREIGN BODY" />
              <statusCode code="completed" />
              <effectiveTime>
                <low value="20141214151400" />
              </effectiveTime>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.22.4.2" />
                  <templateId root="1.2.840.114350.1.72.3.1" />
                  <id extension="3155762" root="1.2.840.114350.1.13.81002.1.7.7.798268.1010" />
                  <code codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" nullFlavor="UNK">
                    <translation code="IMP" codeSystemName="Epic.ResultText" />
                  </code>
                  <text>
                    <reference value="#Result32Impression" />
                  </text>
                  <statusCode code="completed" />
                  <effectiveTime value="20141214151400" />
                  <value xsi:type="ED" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <reference value="#Result32Impression" />
                  </value>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.22.4.2" />
                  <templateId root="1.2.840.114350.1.72.3.1" />
                  <id extension="3155762" root="1.2.840.114350.1.13.81002.1.7.7.798268.1000" />
                  <code codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" nullFlavor="UNK">
                    <translation code="NAR" codeSystemName="Epic.ResultText" />
                  </code>
                  <text>
                    <reference value="#Result32Narrative" />
                  </text>
                  <statusCode code="completed" />
                  <effectiveTime value="20141214151400" />
                  <value xsi:type="ED" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <reference value="#Result32Narrative" />
                  </value>
                </observation>
              </component>
              <component typeCode="COMP">
                <encounter classCode="ENC" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.22.4.49" />
                  <id extension="10000251829" root="1.2.840.114350.1.13.81002.1.7.3.698084.8" />
                  <code code="101" codeSystem="1.2.840.114350.1.13.81002.1.7.4.698084.30" codeSystemName="Epic.EncounterType" displayName="Office Visit" />
                  <effectiveTime>
                    <low value="20141214" />
                  </effectiveTime>
                </encounter>
              </component>
            </organizer>
          </entry>
          <entry typeCode="DRIV">
            <organizer classCode="BATTERY" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.22.4.1" />
              <id extension="3155763" root="1.2.840.114350.1.13.81002.1.7.2.798268" />
              <code code="71020" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="CHEST X-RAY 2 VW" />
              <statusCode code="completed" />
              <effectiveTime>
                <low value="20141214172700" />
              </effectiveTime>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.22.4.2" />
                  <templateId root="1.2.840.114350.1.72.3.1" />
                  <id extension="3155763" root="1.2.840.114350.1.13.81002.1.7.7.798268.1010" />
                  <code codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" nullFlavor="UNK">
                    <translation code="IMP" codeSystemName="Epic.ResultText" />
                  </code>
                  <text>
                    <reference value="#Result33Impression" />
                  </text>
                  <statusCode code="completed" />
                  <effectiveTime value="20141214172700" />
                  <value xsi:type="ED" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <reference value="#Result33Impression" />
                  </value>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.22.4.2" />
                  <templateId root="1.2.840.114350.1.72.3.1" />
                  <id extension="3155763" root="1.2.840.114350.1.13.81002.1.7.7.798268.1000" />
                  <code codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" nullFlavor="UNK">
                    <translation code="NAR" codeSystemName="Epic.ResultText" />
                  </code>
                  <text>
                    <reference value="#Result33Narrative" />
                  </text>
                  <statusCode code="completed" />
                  <effectiveTime value="20141214172700" />
                  <value xsi:type="ED" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <reference value="#Result33Narrative" />
                  </value>
                </observation>
              </component>
              <component typeCode="COMP">
                <encounter classCode="ENC" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.22.4.49" />
                  <id extension="10000251829" root="1.2.840.114350.1.13.81002.1.7.3.698084.8" />
                  <code code="101" codeSystem="1.2.840.114350.1.13.81002.1.7.4.698084.30" codeSystemName="Epic.EncounterType" displayName="Office Visit" />
                  <effectiveTime>
                    <low value="20141214" />
                  </effectiveTime>
                </encounter>
              </component>
            </organizer>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <id root="90EAE124-84A0-11E4-9FE1-A30549B5E469" />
          <code code="X-VDX" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="VISIT DIAGNOSES" />
          <title>Visit Diagnoses</title>
          <text>
            <list>
              <item ID="vdx34">
                <caption ID="vdx34Name">Nasal foreign body, subsequent encounter - Primary</caption>
              </item>
              <item ID="vdx35">
                <caption ID="vdx35Name">Shortness of breath</caption>
                <paragraph>Shortness of breath</paragraph>
              </item>
            </list>
          </text>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.22.4.80" />
              <id extension="491359" root="1.2.840.114350.1.13.81002.1.7.2.696871" />
              <code code="29308-4" codeSystem="2.16.840.1.113883.6.1" displayName="Encounter Diagnosis" />
              <statusCode code="active" />
              <effectiveTime>
                <low nullFlavor="UNK" />
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.22.4.4" />
                  <id extension="491359" root="1.2.840.114350.1.13.81002.1.7.2.696871" />
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem" />
                  <text>
                    <reference value="#vdx34Name" />
                  </text>
                  <statusCode code="completed" />
                  <effectiveTime>
                    <low nullFlavor="UNK" />
                  </effectiveTime>
                  <value code="74699008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Nasal foreign body, subsequent encounter" xsi:type="CD" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <originalText>
                      <reference value="#vdx34Name" />
                    </originalText>
                    <translation code="T17.1XXD" codeSystem="2.16.840.1.113883.6.90" displayName="Nasal foreign body, subsequent encounter" codeSystemName="ICD-10-CM" />
                  </value>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status" />
                      <statusCode code="completed" />
                      <effectiveTime>
                        <low nullFlavor="UNK" />
                      </effectiveTime>
                      <value code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active" xsi:type="CE" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.22.4.80" />
              <id extension="10026" root="1.2.840.114350.1.13.81002.1.7.2.696871" />
              <code code="29308-4" codeSystem="2.16.840.1.113883.6.1" displayName="Encounter Diagnosis" />
              <statusCode code="active" />
              <effectiveTime>
                <low nullFlavor="UNK" />
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.22.4.4" />
                  <id extension="10026" root="1.2.840.114350.1.13.81002.1.7.2.696871" />
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem" />
                  <text>
                    <reference value="#vdx35Name" />
                  </text>
                  <statusCode code="completed" />
                  <effectiveTime>
                    <low nullFlavor="UNK" />
                  </effectiveTime>
                  <value code="267036007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Shortness of breath" xsi:type="CD" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <originalText>
                      <reference value="#vdx35Name" />
                    </originalText>
                    <translation code="786.05" codeSystem="2.16.840.1.113883.6.103" displayName="Shortness of breath" codeSystemName="ICD-9CM" />
                    <translation code="R06.02" codeSystem="2.16.840.1.113883.6.90" displayName="Shortness of breath" codeSystemName="ICD-10-CM" />
                  </value>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status" />
                      <statusCode code="completed" />
                      <effectiveTime>
                        <low nullFlavor="UNK" />
                      </effectiveTime>
                      <value code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active" xsi:type="CE" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.22.2.38" />
          <id root="90EC1120-84A0-11E4-9FE1-A30549B5E469" />
          <code code="29549-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="MEDICATIONS ADMINISTERED" />
          <title>Administered Medications</title>
          <text>
            <content ID="nof36">Not on file</content>
          </text>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="EVN" nullFlavor="ASKU">
              <templateId root="2.16.840.1.113883.10.20.22.4.16" />
              <id nullFlavor="NA" />
              <text mediaType="text/xml" />
              <statusCode code="completed" />
              <effectiveTime xsi:type="IVL_TS" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                <low nullFlavor="UNK" />
                <high nullFlavor="UNK" />
              </effectiveTime>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" />
                  <templateId root="2.16.840.1.113883.10.20.1.53" />
                  <templateId root="2.16.840.1.113883.3.88.11.32.9" />
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2" />
                  <templateId root="2.16.840.1.113883.3.249.11.100.13" />
                  <templateId root="2.16.840.1.113883.10.20.22.4.23" />
                  <manufacturedMaterial>
                    <code codeSystem="2.16.840.1.113883.6.88" nullFlavor="NI">
                      <originalText>
                        <reference value="#nof36" />
                      </originalText>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
            </substanceAdministration>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <code code="X-DOCCMT" displayName="Document Comments" />
          <title>Additional Source Comments</title>
            <text>This is a custom comment organization's can enter.</text>
        </section>
      </component>
    </structuredBody>
  </component>
</ClinicalDocument>
