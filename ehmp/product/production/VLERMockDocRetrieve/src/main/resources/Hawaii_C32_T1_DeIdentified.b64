<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="cda2detail.xsl"?>

<ClinicalDocument xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:hl7-org:v3" xmlns:_ns0="http://www.w3.org/2001/XMLSchema-instance">
  <realmCode code="US"/>
  <typeId root="2.16.840.1.113883.1.3" extension="POCD_HD000040"/>
  <templateId root="1.2.840.114350.1.72.1.51693"/>
  <templateId root="2.16.840.1.113883.10" extension="IMPL_CDAR2_LEVEL1"/>
  <templateId root="2.16.840.1.113883.10.20.3"/>
  <templateId root="2.16.840.1.113883.10.20.1"/>
  <templateId root="2.16.840.1.113883.3.88.11.32.1"/>
  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.1.5"/>
  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.1.2"/>
  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.1.1"/>
  <id root="1.2.840.114350.1.13.105.2.7.8.688883.1341802" assigningAuthorityName="EPC"/>
  <code code="34133-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Summarization of Episode Note"/>
  <title>Continuity of Care Document</title>
  <effectiveTime value="20140312100547-1000"/>
  <confidentialityCode code="N" codeSystem="2.16.840.1.113883.5.25"/>
  <languageCode code="en-US"/>
  <setId root="1.2.840.114350.1.13.105.2.7.1.1" extension="b4955126-7e35-11e3-b67b-b0016e60b51d" assigningAuthorityName="EPC"/>
  <versionNumber value="17"/>
  <recordTarget>
    <patientRole>
      <id root="1.2.840.114350.1.13.105.2.7.5.737384.0" extension="0123456789"/>
      <addr use="HP">
				<streetAddressLine>STREET ADDRESS</streetAddressLine>
				<city>CITY</city>
				<state>HI</state>
				<postalCode>012345</postalCode>
				<country>US</country>
			</addr>
      <telecom value="tel:+1-000-123-4567" use="HP"/>
      <telecom value="tel:+1-000-123-4567" use="WP"/>
      <telecom value="tel:+1-000-123-4567" use="MC"/>
      <patient>
        <name use="L">
					<given>FIRST_NAME</given>
					<given>MIDDLE_NAME</given>
					<family>LAST_NAME_T1</family>
				</name>
        <name use="P">
					<given>FIRST_NAME</given>
					<given>MI</given>
					<family>LAST_NAME_T1</family>
				</name>
        <name use="P">
					<given>FIRST_NAME</given>
					<given>MIDDLE_NAME</given>
					<family>LAST_NAME_T1</family>
				</name>
        <administrativeGenderCode code="M" codeSystem="2.16.840.1.113883.5.1" codeSystemName="AdministrativeGenderCode" displayName="Male"/>
        <birthTime value="19000101"/>
        <maritalStatusCode code="M" codeSystem="2.16.840.1.113883.5.2" codeSystemName="MaritalStatusCode" displayName="Married"/>
        <religiousAffiliationCode code="Catholic" codeSystem="2.16.840.1.113883.5.1076" codeSystemName="ReligiousAffiliation"/>
        <raceCode code="2106-3" codeSystem="2.16.840.1.113883.6.238" codeSystemName="CDC Race and Ethnicity" displayName="WHITE"/>
        <ethnicGroupCode code="37" codeSystem="2.16.840.1.113883.6.238" codeSystemName="CDC Race and Ethnicity" displayName="NON HISPANIC OR LATINO"/>
        <languageCommunication>
          <languageCode code="English"/>
          <preferenceInd value="true"/>
        </languageCommunication>
      </patient>
      <providerOrganization>
        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
        <name>HAWAII PACIFIC HEALTH SA</name>
        <telecom value="tel:+1-123-4567" use="WP"/>
        <addr>
					<streetAddressLine>STREET ADDRESS</streetAddressLine>
					<city>HONOLULU</city>
					<state>HI</state>
					<postalCode>012345</postalCode>
				</addr>
      </providerOrganization>
    </patientRole>
  </recordTarget>
  <author>
    <time value="20140312100547-1000"/>
    <assignedAuthor>
      <id nullFlavor="NA"/>
      <addr nullFlavor="NA">
				<streetAddressLine nullFlavor="UNK"/>
				<city nullFlavor="UNK"/>
			</addr>
      <telecom nullFlavor="NA"/>
      <assignedPerson>
        <name nullFlavor="NA"/>
      </assignedPerson>
      <representedOrganization>
        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
        <name>HAWAII PACIFIC HEALTH SA</name>
        <telecom value="tel:+1-123-4567" use="WP"/>
        <addr>
					<streetAddressLine>STREET ADDRESS</streetAddressLine>
					<city>HONOLULU</city>
					<state>HI</state>
					<postalCode>012345</postalCode>
				</addr>
      </representedOrganization>
    </assignedAuthor>
  </author>
  <author>
    <time value="20140312100547-1000"/>
    <assignedAuthor>
      <id root="1.2.840.114350.1.1" extension="7.8"/>
      <addr nullFlavor="NA">
				<streetAddressLine nullFlavor="UNK"/>
				<city nullFlavor="UNK"/>
			</addr>
      <telecom nullFlavor="NA"/>
      <assignedAuthoringDevice>
        <manufacturerModelName>Epic - Version 7.8</manufacturerModelName>
        <softwareName>Epic - Version 7.8</softwareName>
      </assignedAuthoringDevice>
      <representedOrganization>
        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
        <name>HAWAII PACIFIC HEALTH SA</name>
        <telecom value="tel:+1-123-4567" use="WP"/>
        <addr>
					<streetAddressLine>STREET ADDRESS</streetAddressLine>
					<city>HONOLULU</city>
					<state>HI</state>
					<postalCode>012345</postalCode>
				</addr>
      </representedOrganization>
    </assignedAuthor>
  </author>
  <custodian>
    <assignedCustodian>
      <representedCustodianOrganization>
        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
        <name>HAWAII PACIFIC HEALTH SA</name>
        <telecom value="tel:+1-123-4567" use="WP"/>
        <addr>
					<streetAddressLine>STREET ADDRESS</streetAddressLine>
					<city>HONOLULU</city>
					<state>HI</state>
					<postalCode>012345</postalCode>
				</addr>
      </representedCustodianOrganization>
    </assignedCustodian>
  </custodian>
  <participant typeCode="IND">
    <templateId root="2.16.840.1.113883.3.88.11.32.3"/>
    <templateId root="2.16.840.1.113883.3.88.11.83.3"/>
    <templateId root="1.3.6.1.4.1.19376.1.5.3.1.2.4"/>
    <time value="20110214"/>
    <associatedEntity classCode="ECON">
      <id nullFlavor="UNK"/>
      <code code="Spouse" codeSystem="2.16.840.1.113883.5.111" codeSystemName="RoleCode" displayName="Spouse"/>
      <addr>
				<streetAddressLine>STREET ADDRESS</streetAddressLine>
				<city>CITY</city>
				<state>HI</state>
				<postalCode>012345</postalCode>
				<country>US</country>
			</addr>
      <telecom value="tel:+1-000-123-4567" use="HP"/>
      <telecom value="tel:+1-000-123-4567" use="MC"/>
      <associatedPerson>
        <name use="P">
					<given>ECON_CONTACT_LAST_NAME, CONTACT_FIRST_NAME</given>
				</name>
      </associatedPerson>
    </associatedEntity>
  </participant>
  <documentationOf typeCode="DOC">
    <serviceEvent classCode="PCPR">
      <effectiveTime>
        <low value="19480528"/>
        <high value="20140312"/>
      </effectiveTime>
      <performer typeCode="PRF">
        <templateId root="2.16.840.1.113883.3.88.11.32.4"/>
        <templateId root="2.16.840.1.113883.3.88.11.83.4"/>
        <templateId root="1.3.6.1.4.1.19376.1.5.3.1.2.3"/>
        <functionCode code="PP" codeSystem="2.16.840.1.113883.12.443" codeSystemName="Provider Role" displayName="Primary Care Provider">
          <originalText>Primary Care Provider</originalText>
        </functionCode>
        <time>
          <low value="20110211"/>
          <high nullFlavor="PINF"/>
        </time>
        <assignedEntity>
          <id root="2.16.840.1.113883.4.6" extension="0123456789"/>
          <addr use="WP">
						<streetAddressLine>STREET ADDRESS</streetAddressLine>
						<streetAddressLine>STREET ADDRESS 2</streetAddressLine>
						<city>CITY</city>
						<state>HI</state>
						<postalCode>012345</postalCode>
					</addr>
          <telecom value="tel:+1-000-123-4567" use="WP"/>
          <telecom value="fax:+1-000-123-4567"/>
          <assignedPerson>
            <name>
							<given>PHY_FIRST_NAME</given>
							<given>MI</given>
							<family>PHY_LAST_NAME</family>
						</name>
          </assignedPerson>
          <representedOrganization>
            <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
            <name>HAWAII PACIFIC HEALTH SA</name>
            <telecom value="tel:+1-123-4567" use="WP"/>
            <addr>
							<streetAddressLine>STREET ADDRESS</streetAddressLine>
							<city>HONOLULU</city>
							<state>HI</state>
							<postalCode>012345</postalCode>
						</addr>
          </representedOrganization>
        </assignedEntity>
      </performer>
    </serviceEvent>
  </documentationOf>
  <component>
    <structuredBody>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.1.2"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.13"/>
          <templateId root="2.16.840.1.113883.3.88.11.83.102"/>
          <code code="48765-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Allergies, Adverse Reactions, Alerts"/>
          <title>Active Allergies and Adverse Reactions</title>
          <text><table ID="_nbAllergy" border="1" width="100%"><thead><tr><th>Allergen</th><th>Reaction</th><th>Severity</th><th>Event Type</th><th>Event Date</th><th>Source</th></tr>
</thead><tbody><tr><td>AMOXICILLIN</td><td>Diarrhea</td><td><content ID="#allergy1severity">Moderate</content></td><td>propensity to adverse reactions to drug</td><td>20060706</td><td>HAWAII PACIFIC HEALTH SA</td></tr></tbody></table><content ID="#allergy1severity">Moderate</content>
<tr ID="allergy1"><td ID="allergy1allergen">Amoxicillin</td><td ID="allergy1noted">07/06/2006</td><td ID="allergy1severity">Medium</td><td><content ID="allergy1reaction1">Diarrhea</content></td><td ID="allergy1comments"/></tr>
</text>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.3"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.6"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.6"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="119995"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low value="20060706"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN" negationInd="false">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
                  <templateId root="2.16.840.1.113883.10.20.1.18"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1" extension="allergy"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="119995"/>
                  <code code="419511003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="propensity to adverse reactions to drug"/>
                  <text>
										<reference value="#allergy1"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low value="20060706"/>
                    <high nullFlavor="PINF"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="723" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm"/>
                  <author>
                    <time value="20060706"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.105.2.7.2.697780" extension="KEC03"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>
													<given>PHY_FIRST_NAME</given>
													<given>MI</given>
													<family>PHY_LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <participant typeCode="CSM">
                    <participantRole classCode="MANU">
                      <playingEntity classCode="MMAT">
                        <code code="723" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm">
                          <originalText>
														<reference value="#allergy1allergen"/>
													</originalText>
                        </code>
                        <name>AMOXICILLIN</name>
                      </playingEntity>
                    </participantRole>
                  </participant>
                  <entryRelationship typeCode="MFST" inversionInd="true">
                    <observation classCode="OBS" moodCode="EVN">
                      <templateId root="2.16.840.1.113883.10.20.1.54"/>
                      <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                      <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5" extension="reaction"/>
                      <templateId root="2.16.840.1.113883.10.20.1.28"/>
                      <id root="1.2.840.114350.1.13.105.2.7.4.768076.3008" extension="4"/>
                      <code code="RXNASSESS"/>
                      <text>
												<reference value="#allergy1reaction1"/>
											</text>
                      <statusCode code="completed"/>
                      <effectiveTime>
                        <low value="20060706"/>
                        <high nullFlavor="PINF"/>
                      </effectiveTime>
                      <value xsi:type="CD" code="62315008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Diarrhea">
                        <originalText>
													<reference value="#allergy1reaction1"/>
												</originalText>
                      </value>
                    </observation>
                  </entryRelationship>
                  <entryRelationship typeCode="SUBJ" inversionInd="true">
                    <observation classCode="OBS" moodCode="EVN">
                      <templateId root="2.16.840.1.113883.10.20.1.55"/>
                      <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.1"/>
                      <code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode" displayName="Severity"/>
                      <text>
												<reference value="#allergy1severity"/>
											</text>
                      <statusCode code="completed"/>
                      <value xsi:type="CD" code="6736007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Moderate"/>
                    </observation>
                  </entryRelationship>
                  <entryRelationship typeCode="REFR" inversionInd="true">
                    <observation classCode="OBS" moodCode="EVN">
                      <templateId root="2.16.840.1.113883.10.20.1.39"/>
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.1.8"/>
          <templateId root="2.16.840.1.113883.3.88.11.83.112"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.19"/>
          <id root="b5783028-aa21-11e3-8bff-b0016e60b51d"/>
          <code code="10160-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="HISTORY OF MEDICATION USE"/>
          <title>Medications</title>
          <text><table ID="_nbMedications" border="1" width="100%">
	<thead>
<tr><th>Medications</th><th>Medication Brand Name</th><th>Medication Status</th><th>Order Date</th><th>Order Expiration</th><th>Provider (Ordering)</th><th>Prescription #</th><th>Fill Status</th><th>Quantity Dispensed</th><th>Dispense Date</th><th>Sig</th><th>Source</th><th>Reaction</th><th>Indicate Medication Stopped</th><th>Administrative Timing</th><th>Route Code</th><th>Body Site</th><th>Dose Quanity</th><th>Dose Restriction</th><th>Product Form</th><th>Delivery Method</th><th>Drug Manufacture</th><th>Type of Medication</th><th>Indication</th><th>Vehicle</th><th>Dose Indicator</th><th>Order Number</th><th>Total Fills</th><th>FulFillment Instructions</th><th>Dispensing Provider</th><th>Pharmacy Location</th><th>Fill Number</th></tr>
</thead>
<tbody>
<tr><td><content ID="#med2">naproxen (NAPROSYN) 500 MG tablet</content></td><td>--</td><td>Active</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td><content ID="#sig2">Take 1 Tab by mouth two times daily as needed for PAIN. Take with food/milk to reduce GI upset.</content></td><td>HAWAII PACIFIC HEALTH SA</td><td>--</td><td>--</td><td>From: 20140101 every 0.5 d </td><td>Oral</td><td>--</td><td>500 mg</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Prescription Drug</td><td>--</td><td>--</td><td>--</td><td>100240528</td><td>1</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td><content ID="#med3">aspirin 81 MG tablet</content></td><td>--</td><td>Active</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td><content ID="#sig3">Take 1 Tab by mouth one time per day.</content></td><td>HAWAII PACIFIC HEALTH SA</td><td>--</td><td>--</td><td>--</td><td>Oral</td><td>--</td><td>1</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Over the counter products</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td><content ID="#med4">metformin (GLUCOPHAGE) 1000 MG tablet</content></td><td>--</td><td>Active</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td><content ID="#sig4">Take 1 Tab by mouth twice per day with breakfast and dinner.</content></td><td>HAWAII PACIFIC HEALTH SA</td><td>--</td><td>--</td><td>--</td><td>Oral</td><td>--</td><td>1</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Prescription Drug</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td><content ID="#med5">spironolactone 25mg - hydrochlorothiazide 25mg (ALDACTAZIDE 25-25) 25-25 MG TABS</content></td><td>--</td><td>Active</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td><content ID="#sig5">Take 1 Tab by mouth one time per day.</content></td><td>HAWAII PACIFIC HEALTH SA</td><td>--</td><td>--</td><td>--</td><td>Oral</td><td>--</td><td>1</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Prescription Drug</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td><content ID="#med6">Testosterone (ANDROGEL) 20.25 MG/1.25GM (1.62%) GEL</content></td><td>--</td><td>Active</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td><content ID="#sig6">Place onto the skin one time per day.</content></td><td>HAWAII PACIFIC HEALTH SA</td><td>--</td><td>--</td><td>--</td><td>Transdermal</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Prescription Drug</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
</tbody></table><content ID="#med2">naproxen (NAPROSYN) 500 MG tablet</content>
<content ID="#sig2">Take 1 Tab by mouth two times daily as needed for PAIN. Take with food/milk to reduce GI upset.</content>
<content ID="#med3">aspirin 81 MG tablet</content>
<content ID="#sig3">Take 1 Tab by mouth one time per day.</content>
<content ID="#med4">metformin (GLUCOPHAGE) 1000 MG tablet</content>
<content ID="#sig4">Take 1 Tab by mouth twice per day with breakfast and dinner.</content>
<content ID="#med5">spironolactone 25mg - hydrochlorothiazide 25mg (ALDACTAZIDE 25-25) 25-25 MG TABS</content>
<content ID="#sig5">Take 1 Tab by mouth one time per day.</content>
<content ID="#med6">Testosterone (ANDROGEL) 20.25 MG/1.25GM (1.62%) GEL</content>
<content ID="#sig6">Place onto the skin one time per day.</content>
<tr ID="currx2"><td ID="med2">naproxen (NAPROSYN) 500 MG tablet</td><td ID="sig2">Take 1 Tab by mouth two times daily as needed for PAIN. Take with food/milk to reduce GI upset.</td><td><paragraph>30 Tab</paragraph></td><td>0</td><td>01/01/2014</td><td/></tr>
<tr ID="currx3"><td ID="med3">aspirin 81 MG tablet</td><td ID="sig3">Take 1 Tab by mouth one time per day.</td><td/><td/><td/><td/></tr>
<tr ID="currx4"><td ID="med4">metformin (GLUCOPHAGE) 1000 MG tablet</td><td ID="sig4">Take 1 Tab by mouth twice per day with breakfast and dinner.</td><td/><td/><td/><td/></tr>
<tr ID="currx5"><td ID="med5">spironolactone 25mg - hydrochlorothiazide 25mg (ALDACTAZIDE 25-25) 25-25 MG TABS</td><td ID="sig5">Take 1 Tab by mouth one time per day.</td><td/><td/><td/><td/></tr>
<tr ID="currx6"><td ID="med6">Testosterone (ANDROGEL) 20.25 MG/1.25GM (1.62%) GEL</td><td ID="sig6">Place onto the skin one time per day.</td><td/><td/><td/><td/></tr>
</text>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="INT">
              <templateId root="2.16.840.1.113883.10.20.1.24"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.8"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.8"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="100240528"/>
              <text mediaType="text/xml">
								<reference value="#sig2"/>
							</text>
              <statusCode code="completed"/>
              <effectiveTime xsi:type="IVL_TS">
                <low value="20140101"/>
                <high nullFlavor="UNK"/>
              </effectiveTime>
              <effectiveTime xsi:type="PIVL_TS" operator="A" institutionSpecified="true">
                <period value="0.5" unit="d"/>
              </effectiveTime>
              <routeCode code="C38288" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="NCI Thesaurus" displayName="Oral"/>
              <doseQuantity value="500" unit="mg"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.53"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                  <manufacturedMaterial>
                    <code code="198014" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Naproxen 500 Mg Po Tabs">
                      <originalText>
												<reference value="#med2"/>
											</originalText>
                      <translation code="0093-0149-01" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NDC" displayName="Naproxen 500 Mg Po Tabs"/>
                      <translation code="14432" codeSystem="2.16.840.1.113883.6.162" codeSystemName="Med-File (Medi-Span)" displayName="Naproxen 500 Mg Po Tabs"/>
                      <translation code="105899" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Naprosyn 500 Mg Po Tabs"/>
                      <translation code="0004-6316-01" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NDC" displayName="Naprosyn 500 Mg Po Tabs"/>
                      <translation code="14429" codeSystem="2.16.840.1.113883.6.162" codeSystemName="Med-File (Medi-Span)" displayName="Naprosyn 500 Mg Po Tabs"/>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <author>
                <time value="20140101213913+0000"/>
                <assignedAuthor>
                  <id root="2.16.840.1.113883.4.6" extension="1811952971"/>
                  <addr>
										<streetAddressLine>STREET_ADDRESS</streetAddressLine>
										<streetAddressLine>SUITE B</streetAddressLine>
										<city>CITY</city>
										<state>HI</state>
										<postalCode>012345</postalCode>
									</addr>
                  <telecom value="tel:+1-000-123-4567" use="WP"/>
                  <telecom value="fax:+1-000-123-4567" use="WP"/>
                  <assignedPerson>
                    <name>
											<given>FIRST_NAME</given>
											<family>LAST_NAME</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                    <name>HAWAII PACIFIC HEALTH SA</name>
                    <telecom value="tel:+1-123-4567" use="WP"/>
                    <addr>
											<streetAddressLine>STREET ADDRESS</streetAddressLine>
											<city>HONOLULU</city>
											<state>HI</state>
											<postalCode>012345</postalCode>
										</addr>
                  </representedOrganization>
                </assignedAuthor>
              </author>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.3.88.11.32.10"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.1"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="SUBJ" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.40"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.12"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.11"/>
                  <code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
                  <text>
										<reference value="#sig2"/>
									</text>
                  <statusCode code="completed"/>
                  <author>
                    <time value="20140101213913+0000"/>
                    <assignedAuthor>
                      <id root="2.16.840.1.113883.4.6" extension="1811952971"/>
                      <addr>
												<streetAddressLine>STREET_ADDRESS</streetAddressLine>
												<streetAddressLine>SUITE B</streetAddressLine>
												<city>CITY</city>
												<state>HI</state>
												<postalCode>012345</postalCode>
											</addr>
                      <telecom value="tel:+1-000-123-4567" use="WP"/>
                      <telecom value="fax:+1-000-123-4567" use="WP"/>
                      <assignedPerson>
                        <name>
													<given>FIRST_NAME</given>
													<family>LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <supply classCode="SPLY" moodCode="INT">
                  <templateId root="2.16.840.1.113883.3.88.1.11.32.11"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="100240528"/>
                  <statusCode code="completed"/>
                  <repeatNumber value="1"/>
                  <quantity value="30"/>
                  <product>
                    <manufacturedProduct classCode="MANU">
                      <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                      <templateId root="2.16.840.1.113883.10.20.1.53"/>
                      <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                      <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                      <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                      <manufacturedMaterial>
                        <code code="198014" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Naproxen 500 Mg Po Tabs">
                          <originalText>
														<reference value="#med2"/>
													</originalText>
                          <translation code="0093-0149-01" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NDC" displayName="Naproxen 500 Mg Po Tabs"/>
                          <translation code="14432" codeSystem="2.16.840.1.113883.6.162" codeSystemName="Med-File (Medi-Span)" displayName="Naproxen 500 Mg Po Tabs"/>
                          <translation code="105899" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Naprosyn 500 Mg Po Tabs"/>
                          <translation code="0004-6316-01" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NDC" displayName="Naprosyn 500 Mg Po Tabs"/>
                          <translation code="14429" codeSystem="2.16.840.1.113883.6.162" codeSystemName="Med-File (Medi-Span)" displayName="Naprosyn 500 Mg Po Tabs"/>
                        </code>
                      </manufacturedMaterial>
                    </manufacturedProduct>
                  </product>
                </supply>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.47"/>
                  <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>
                  <statusCode code="completed"/>
                  <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Active"/>
                </observation>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="INT">
              <templateId root="2.16.840.1.113883.10.20.1.24"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.8"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.8"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="94449086"/>
              <text mediaType="text/xml">
								<reference value="#sig3"/>
							</text>
              <statusCode code="completed"/>
              <effectiveTime xsi:type="IVL_TS">
                <low nullFlavor="UNK"/>
                <high nullFlavor="UNK"/>
              </effectiveTime>
              <routeCode code="C38288" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="NCI Thesaurus" displayName="Oral"/>
              <doseQuantity value="1"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.53"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                  <manufacturedMaterial>
                    <code code="243670" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Aspirin 81 Mg Po Tabs">
                      <originalText>
												<reference value="#med3"/>
											</originalText>
                      <translation code="43292-55808" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NDC" displayName="Aspirin 81 Mg Po Tabs"/>
                      <translation code="24939" codeSystem="2.16.840.1.113883.6.162" codeSystemName="Med-File (Medi-Span)" displayName="Aspirin 81 Mg Po Tabs"/>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <author>
                <time value="20131017014149+0000"/>
                <assignedAuthor>
                  <id nullFlavor="UNK"/>
                  <addr>
										<streetAddressLine>STREET_ADDRESS</streetAddressLine>
										<city>Honolulu</city>
										<state>HI</state>
										<postalCode>012345</postalCode>
									</addr>
                  <telecom value="tel:+1-000-123-4567" use="WP"/>
                  <assignedPerson>
                    <name>
											<given>FIRST_NAME</given>
											<family>LAST_NAME</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                    <name>HAWAII PACIFIC HEALTH SA</name>
                    <telecom value="tel:+1-123-4567" use="WP"/>
                    <addr>
											<streetAddressLine>STREET ADDRESS</streetAddressLine>
											<city>HONOLULU</city>
											<state>HI</state>
											<postalCode>012345</postalCode>
										</addr>
                  </representedOrganization>
                </assignedAuthor>
              </author>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.3.88.11.32.10"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.1"/>
                  <code code="329505003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Over the counter products"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="SUBJ" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.40"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.12"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.11"/>
                  <code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
                  <text>
										<reference value="#sig3"/>
									</text>
                  <statusCode code="completed"/>
                  <author>
                    <time value="20131017014149+0000"/>
                    <assignedAuthor>
                      <id nullFlavor="UNK"/>
                      <addr>
												<streetAddressLine>STREET_ADDRESS</streetAddressLine>
												<city>Honolulu</city>
												<state>HI</state>
												<postalCode>012345</postalCode>
											</addr>
                      <telecom value="tel:+1-000-123-4567" use="WP"/>
                      <assignedPerson>
                        <name>
													<given>FIRST_NAME</given>
													<family>LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.47"/>
                  <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>
                  <statusCode code="completed"/>
                  <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Active"/>
                </observation>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="INT">
              <templateId root="2.16.840.1.113883.10.20.1.24"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.8"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.8"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="60586112"/>
              <text mediaType="text/xml">
								<reference value="#sig4"/>
							</text>
              <statusCode code="completed"/>
              <effectiveTime xsi:type="IVL_TS">
                <low nullFlavor="UNK"/>
                <high nullFlavor="UNK"/>
              </effectiveTime>
              <routeCode code="C38288" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="NCI Thesaurus" displayName="Oral"/>
              <doseQuantity value="1"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.53"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                  <manufacturedMaterial>
                    <code code="861004" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Metformin Hcl 1000 Mg Po Tabs">
                      <originalText>
												<reference value="#med4"/>
											</originalText>
                      <translation code="0093-7214-01" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NDC" displayName="Metformin Hcl 1000 Mg Po Tabs"/>
                      <translation code="58554" codeSystem="2.16.840.1.113883.6.162" codeSystemName="Med-File (Medi-Span)" displayName="Metformin Hcl 1000 Mg Po Tabs"/>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <author>
                <time value="20130213192702+0000"/>
                <assignedAuthor>
                  <id nullFlavor="UNK"/>
                  <addr>
										<streetAddressLine>STREET_ADDRESS</streetAddressLine>
										<streetAddressLine>Suite B</streetAddressLine>
										<city>CITY</city>
										<state>HI</state>
										<postalCode>012345</postalCode>
									</addr>
                  <telecom value="tel:+1-000-123-4567" use="WP"/>
                  <assignedPerson>
                    <name>
											<given>FIRST_NAME</given>
											<family>LAST_NAME</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                    <name>HAWAII PACIFIC HEALTH SA</name>
                    <telecom value="tel:+1-123-4567" use="WP"/>
                    <addr>
											<streetAddressLine>STREET ADDRESS</streetAddressLine>
											<city>HONOLULU</city>
											<state>HI</state>
											<postalCode>012345</postalCode>
										</addr>
                  </representedOrganization>
                </assignedAuthor>
              </author>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.3.88.11.32.10"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.1"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="SUBJ" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.40"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.12"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.11"/>
                  <code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
                  <text>
										<reference value="#sig4"/>
									</text>
                  <statusCode code="completed"/>
                  <author>
                    <time value="20130213192702+0000"/>
                    <assignedAuthor>
                      <id nullFlavor="UNK"/>
                      <addr>
												<streetAddressLine>STREET_ADDRESS</streetAddressLine>
												<streetAddressLine>Suite B</streetAddressLine>
												<city>CITY</city>
												<state>HI</state>
												<postalCode>012345</postalCode>
											</addr>
                      <telecom value="tel:+1-000-123-4567" use="WP"/>
                      <assignedPerson>
                        <name>
													<given>FIRST_NAME</given>
													<family>LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.47"/>
                  <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>
                  <statusCode code="completed"/>
                  <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Active"/>
                </observation>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="INT">
              <templateId root="2.16.840.1.113883.10.20.1.24"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.8"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.8"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="85041227"/>
              <text mediaType="text/xml">
								<reference value="#sig5"/>
							</text>
              <statusCode code="completed"/>
              <effectiveTime xsi:type="IVL_TS">
                <low nullFlavor="UNK"/>
                <high nullFlavor="UNK"/>
              </effectiveTime>
              <routeCode code="C38288" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="NCI Thesaurus" displayName="Oral"/>
              <doseQuantity value="1"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.53"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                  <manufacturedMaterial>
                    <code code="198224" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Spironolactone-Hctz 25-25 Mg Po Tabs">
                      <originalText>
												<reference value="#med5"/>
											</originalText>
                      <translation code="0378-0141-01" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NDC" displayName="Spironolactone-Hctz 25-25 Mg Po Tabs"/>
                      <translation code="20108" codeSystem="2.16.840.1.113883.6.162" codeSystemName="Med-File (Medi-Span)" displayName="Spironolactone-Hctz 25-25 Mg Po Tabs"/>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <author>
                <time value="20130213192702+0000"/>
                <assignedAuthor>
                  <id nullFlavor="UNK"/>
                  <addr>
										<streetAddressLine>STREET_ADDRESS</streetAddressLine>
										<streetAddressLine>Suite B</streetAddressLine>
										<city>CITY</city>
										<state>HI</state>
										<postalCode>012345</postalCode>
									</addr>
                  <telecom value="tel:+1-000-123-4567" use="WP"/>
                  <assignedPerson>
                    <name>
											<given>FIRST_NAME</given>
											<family>LAST_NAME</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                    <name>HAWAII PACIFIC HEALTH SA</name>
                    <telecom value="tel:+1-123-4567" use="WP"/>
                    <addr>
											<streetAddressLine>STREET ADDRESS</streetAddressLine>
											<city>HONOLULU</city>
											<state>HI</state>
											<postalCode>012345</postalCode>
										</addr>
                  </representedOrganization>
                </assignedAuthor>
              </author>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.3.88.11.32.10"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.1"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="SUBJ" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.40"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.12"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.11"/>
                  <code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
                  <text>
										<reference value="#sig5"/>
									</text>
                  <statusCode code="completed"/>
                  <author>
                    <time value="20130213192702+0000"/>
                    <assignedAuthor>
                      <id nullFlavor="UNK"/>
                      <addr>
												<streetAddressLine>STREET_ADDRESS</streetAddressLine>
												<streetAddressLine>Suite B</streetAddressLine>
												<city>CITY</city>
												<state>HI</state>
												<postalCode>012345</postalCode>
											</addr>
                      <telecom value="tel:+1-000-123-4567" use="WP"/>
                      <assignedPerson>
                        <name>
													<given>FIRST_NAME</given>
													<family>LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.47"/>
                  <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>
                  <statusCode code="completed"/>
                  <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Active"/>
                </observation>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="INT">
              <templateId root="2.16.840.1.113883.10.20.1.24"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.8"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.8"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="85041229"/>
              <text mediaType="text/xml">
								<reference value="#sig6"/>
							</text>
              <statusCode code="completed"/>
              <effectiveTime xsi:type="IVL_TS">
                <low nullFlavor="UNK"/>
                <high nullFlavor="UNK"/>
              </effectiveTime>
              <routeCode code="C38305" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="NCI Thesaurus" displayName="Transdermal"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.53"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                  <manufacturedMaterial>
                    <code code="1100709" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Testosterone 20.25 Mg/1.25gm (1.62%) Trans-D Gel">
                      <originalText>
												<reference value="#med6"/>
											</originalText>
                      <translation code="175525" codeSystem="2.16.840.1.113883.6.162" codeSystemName="Med-File (Medi-Span)" displayName="Testosterone 20.25 Mg/1.25gm (1.62%) Trans-D Gel"/>
                      <translation code="1100711" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Androgel 20.25 Mg/1.25gm (1.62%) Trans-D Gel"/>
                      <translation code="0051-8462-31" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NDC" displayName="Androgel 20.25 Mg/1.25gm (1.62%) Trans-D Gel"/>
                      <translation code="176036" codeSystem="2.16.840.1.113883.6.162" codeSystemName="Med-File (Medi-Span)" displayName="Androgel 20.25 Mg/1.25gm (1.62%) Trans-D Gel"/>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <author>
                <time value="20130213192702+0000"/>
                <assignedAuthor>
                  <id nullFlavor="UNK"/>
                  <addr>
										<streetAddressLine>STREET_ADDRESS</streetAddressLine>
										<streetAddressLine>Suite B</streetAddressLine>
										<city>CITY</city>
										<state>HI</state>
										<postalCode>012345</postalCode>
									</addr>
                  <telecom value="tel:+1-000-123-4567" use="WP"/>
                  <assignedPerson>
                    <name>
											<given>FIRST_NAME</given>
											<family>LAST_NAME</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                    <name>HAWAII PACIFIC HEALTH SA</name>
                    <telecom value="tel:+1-123-4567" use="WP"/>
                    <addr>
											<streetAddressLine>STREET ADDRESS</streetAddressLine>
											<city>HONOLULU</city>
											<state>HI</state>
											<postalCode>012345</postalCode>
										</addr>
                  </representedOrganization>
                </assignedAuthor>
              </author>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.3.88.11.32.10"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.1"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="SUBJ" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.40"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.12"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.11"/>
                  <code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
                  <text>
										<reference value="#sig6"/>
									</text>
                  <statusCode code="completed"/>
                  <author>
                    <time value="20130213192702+0000"/>
                    <assignedAuthor>
                      <id nullFlavor="UNK"/>
                      <addr>
												<streetAddressLine>STREET_ADDRESS</streetAddressLine>
												<streetAddressLine>Suite B</streetAddressLine>
												<city>CITY</city>
												<state>HI</state>
												<postalCode>012345</postalCode>
											</addr>
                      <telecom value="tel:+1-000-123-4567" use="WP"/>
                      <assignedPerson>
                        <name>
													<given>FIRST_NAME</given>
													<family>LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.47"/>
                  <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>
                  <statusCode code="completed"/>
                  <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Active"/>
                </observation>
              </entryRelationship>
            </substanceAdministration>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.1.11"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.6"/>
          <templateId root="2.16.840.1.113883.3.88.11.83.103"/>
          <id root="b5bff304-aa21-11e3-8bff-b0016e60b51d"/>
          <code code="11450-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="PROBLEM LIST"/>
          <title>Active Problems</title>
          <text><table ID="_nbConditionProblems" border="1" width="100%"><thead><tr><th>Problem</th><th>Status</th><th>Problem Code</th><th>Problem Type</th><th>Date of Onset</th><th>Date Resolved</th><th>Cause of Death</th><th>Age at Onset</th><th>Age at Death</th><th>Time of Death</th><th>Provider</th><th>Source</th></tr>
</thead><tbody><tr><td ID="#problem7name">Cardiac pacemaker in situ</td><td>Active</td><td>161692001</td><td>Problem</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA </td></tr><tr><td ID="#problem8name">Unspecified sinusitis (chronic)</td><td>Active</td><td>40055000</td><td>Problem</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA </td></tr><tr><td ID="#problem9name">Brachial neuritis or radiculitis NOS</td><td>Active</td><td>72893007</td><td>Problem</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA </td></tr><tr><td ID="#problem10name">Congenital spondylolisthesis</td><td>Active</td><td>13236000</td><td>Problem</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA </td></tr><tr><td ID="#problem11name">Spinal stenosis, lumbar region, without neurogenic claudication</td><td>Active</td><td>18347007</td><td>Problem</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA </td></tr><tr><td ID="#problem12name">Thoracic or lumbosacral neuritis or radiculitis, unspecified</td><td>Active</td><td>202796002</td><td>Problem</td><td>20061002</td><td>--</td><td>--</td><td>106</td><td>--</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA </td></tr><tr><td ID="#problem13name">Lumbosacral spondylosis without myelopathy</td><td>Active</td><td>48210000</td><td>Problem</td><td>20061002</td><td>--</td><td>--</td><td>106</td><td>--</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA </td></tr><tr><td ID="#problem14name">Degeneration of lumbar or lumbosacral intervertebral disc</td><td>Active</td><td>60937000</td><td>Problem</td><td>20061002</td><td>--</td><td>--</td><td>106</td><td>--</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA </td></tr><tr><td ID="#problem15name">Lumbago</td><td>Active</td><td>279039007</td><td>Problem</td><td>20061002</td><td>--</td><td>--</td><td>106</td><td>--</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA </td></tr><tr><td ID="#problem16name">Elevated sedimentation rate</td><td>Active</td><td>165468009</td><td>Problem</td><td>20070501</td><td>--</td><td>--</td><td>107</td><td>--</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA </td></tr><tr><td ID="#problem17name">Other abnormal blood chemistry</td><td>Active</td><td>166318006</td><td>Problem</td><td>20070501</td><td>--</td><td>--</td><td>107</td><td>--</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA </td></tr><tr><td ID="#problem18name">Obesity</td><td>Active</td><td>414916001</td><td>Problem</td><td>20110818</td><td>--</td><td>--</td><td>111</td><td>--</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA </td></tr><tr><td ID="#problem19name">HTN (hypertension)</td><td>Active</td><td>38341003</td><td>Problem</td><td>20110818</td><td>--</td><td>--</td><td>111</td><td>--</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA </td></tr><tr><td ID="#problem20name">Pacemaker reprogramming/check</td><td>Active</td><td>308273005</td><td>Problem</td><td>20130520</td><td>--</td><td>--</td><td>113</td><td>--</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA </td></tr><tr><td ID="#problem21name">SSS (sick sinus syndrome)</td><td>Active</td><td>36083008</td><td>Problem</td><td>20130520</td><td>--</td><td>--</td><td>113</td><td>--</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA </td></tr><tr><td ID="#problem22name">Pacemaker lead failure</td><td>Active</td><td>213035005</td><td>Problem</td><td>20130712</td><td>--</td><td>--</td><td>113</td><td>--</td><td>--</td><td>--</td><td>--</td></tr></tbody></table><td ID="#problem7name">Cardiac pacemaker in situ</td>
<td ID="#problem8name">Unspecified sinusitis (chronic)</td>
<td ID="#problem9name">Brachial neuritis or radiculitis NOS</td>
<td ID="#problem10name">Congenital spondylolisthesis</td>
<td ID="#problem11name">Spinal stenosis, lumbar region, without neurogenic claudication</td>
<td ID="#problem12name">Thoracic or lumbosacral neuritis or radiculitis, unspecified</td>
<td ID="#problem13name">Lumbosacral spondylosis without myelopathy</td>
<td ID="#problem14name">Degeneration of lumbar or lumbosacral intervertebral disc</td>
<td ID="#problem15name">Lumbago</td>
<td ID="#problem16name">Elevated sedimentation rate</td>
<td ID="#problem17name">Other abnormal blood chemistry</td>
<td ID="#problem18name">Obesity</td>
<td ID="#problem19name">HTN (hypertension)</td>
<td ID="#problem20name">Pacemaker reprogramming/check</td>
<td ID="#problem21name">SSS (sick sinus syndrome)</td>
<td ID="#problem22name">Pacemaker lead failure</td>
<tr ID="problem22" styleCode="normRow"><td ID="problem22name" styleCode="header">Pacemaker lead failure</td><td>07/12/2013</td></tr>
<tr ID="problem20" styleCode="altRow"><td ID="problem20name" styleCode="header">Pacemaker reprogramming/check</td><td>05/20/2013</td></tr>
<tr ID="problem21" styleCode="normRow"><td ID="problem21name" styleCode="header">SSS (sick sinus syndrome)</td><td>05/20/2013</td></tr>
<tr ID="problem18" styleCode="altRow"><td ID="problem18name" styleCode="header">Obesity</td><td>08/18/2011</td></tr>
<tr ID="problem19" styleCode="normRow"><td ID="problem19name" styleCode="header">HTN (hypertension)</td><td>08/18/2011</td></tr>
<tr ID="problem16" styleCode="altRow"><td ID="problem16name" styleCode="header">Elevated sedimentation rate</td><td>05/01/2007</td></tr>
<tr ID="problem17" styleCode="normRow"><td ID="problem17name" styleCode="header">Other abnormal blood chemistry</td><td>05/01/2007</td></tr>
<tr ID="problem12" styleCode="altRow"><td ID="problem12name" styleCode="header">Thoracic or lumbosacral neuritis or radiculitis, unspecified</td><td>10/02/2006</td></tr>
<tr ID="problem13" styleCode="normRow"><td ID="problem13name" styleCode="header">Lumbosacral spondylosis without myelopathy</td><td>10/02/2006</td></tr>
<tr ID="problem14" styleCode="altRow"><td ID="problem14name" styleCode="header">Degeneration of lumbar or lumbosacral intervertebral disc</td><td>10/02/2006</td></tr>
<tr ID="problem15" styleCode="normRow"><td ID="problem15name" styleCode="header">Lumbago</td><td>10/02/2006</td></tr>
<tr ID="problem7" styleCode="altRow"><td ID="problem7name" styleCode="header">Cardiac pacemaker in situ</td><td/></tr>
<tr ID="problem8" styleCode="normRow"><td ID="problem8name" styleCode="header">Unspecified sinusitis (chronic)</td><td/></tr>
<tr ID="problem9" styleCode="altRow"><td ID="problem9name" styleCode="header">Brachial neuritis or radiculitis NOS</td><td/></tr>
<tr ID="problem10" styleCode="normRow"><td ID="problem10name" styleCode="header">Congenital spondylolisthesis</td><td/></tr>
<tr ID="problem11" styleCode="altRow"><td ID="problem11name" styleCode="header">Spinal stenosis, lumbar region, without neurogenic claudication</td><td/></tr>
<td ID="problem11comment" colspan="2" styleCode="allIndent"><paragraph styleCode="cellHeader">Overview:</paragraph><paragraph>STENOSIS (SEE ALSO STRICTURE) SPINAL, LUMBAR</paragraph></td>
</text>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.7"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.7"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="120030"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="120030"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>
										<reference value="#problem7name"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="161692001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Cardiac pacemaker in situ">
                    <originalText>
											<reference value="#problem7name"/>
										</originalText>
                    <translation code="V45.01" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9CM" displayName="Cardiac pacemaker in situ"/>
                    <translation code="Z95.0" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD-10-CM" displayName="Cardiac pacemaker in situ"/>
                  </value>
                  <author>
                    <time value="20060706230417+0000"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.105.2.7.2.697780" extension="KEC03"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>
													<given>PHY_FIRST_NAME</given>
													<given>MI</given>
													<family>PHY_LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <effectiveTime>
                        <low nullFlavor="UNK"/>
                      </effectiveTime>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.7"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.7"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="120031"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="120031"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>
										<reference value="#problem8name"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="40055000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Unspecified sinusitis (chronic)">
                    <originalText>
											<reference value="#problem8name"/>
										</originalText>
                    <translation code="473.9" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9CM" displayName="Unspecified sinusitis (chronic)"/>
                    <translation code="J32.9" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD-10-CM" displayName="Unspecified sinusitis (chronic)"/>
                  </value>
                  <author>
                    <time value="20060706230418+0000"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.105.2.7.2.697780" extension="KEC03"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>
													<given>PHY_FIRST_NAME</given>
													<given>MI</given>
													<family>PHY_LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <effectiveTime>
                        <low nullFlavor="UNK"/>
                      </effectiveTime>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.7"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.7"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="120032"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="120032"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>
										<reference value="#problem9name"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="72893007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Brachial neuritis or radiculitis NOS">
                    <originalText>
											<reference value="#problem9name"/>
										</originalText>
                    <translation code="723.4" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9CM" displayName="Brachial neuritis or radiculitis NOS"/>
                    <translation code="M54.12" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD-10-CM" displayName="Brachial neuritis or radiculitis NOS"/>
                  </value>
                  <author>
                    <time value="20060706230420+0000"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.105.2.7.2.697780" extension="KEC03"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>
													<given>PHY_FIRST_NAME</given>
													<given>MI</given>
													<family>PHY_LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <effectiveTime>
                        <low nullFlavor="UNK"/>
                      </effectiveTime>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.7"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.7"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="120033"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="120033"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>
										<reference value="#problem10name"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="13236000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Congenital spondylolisthesis">
                    <originalText>
											<reference value="#problem10name"/>
										</originalText>
                    <translation code="756.12" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9CM" displayName="Congenital spondylolisthesis"/>
                    <translation code="Q76.2" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD-10-CM" displayName="Congenital spondylolisthesis"/>
                  </value>
                  <author>
                    <time value="20060706230421+0000"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.105.2.7.2.697780" extension="KEC03"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>
													<given>PHY_FIRST_NAME</given>
													<given>MI</given>
													<family>PHY_LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <effectiveTime>
                        <low nullFlavor="UNK"/>
                      </effectiveTime>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.7"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.7"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="120034"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="120034"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>
										<reference value="#problem11name"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="18347007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Spinal stenosis, lumbar region, without neurogenic claudication">
                    <originalText>
											<reference value="#problem11name"/>
										</originalText>
                    <translation code="724.02" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9CM" displayName="Spinal stenosis, lumbar region, without neurogenic claudication"/>
                    <translation code="M48.06" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD-10-CM" displayName="Spinal stenosis, lumbar region, without neurogenic claudication"/>
                  </value>
                  <author>
                    <time value="20060706230422+0000"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.105.2.7.2.697780" extension="KEC03"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>
													<given>PHY_FIRST_NAME</given>
													<given>MI</given>
													<family>PHY_LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <effectiveTime>
                        <low nullFlavor="UNK"/>
                      </effectiveTime>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="SUBJ" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.40"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.12"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.11"/>
                  <code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
                  <text>
										<reference value="#problem11comment"/>
									</text>
                  <statusCode code="completed"/>
                  <author>
                    <time value="20060706230422+0000"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.105.2.7.2.697780" extension="KEC03"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>
													<given>PHY_FIRST_NAME</given>
													<given>MI</given>
													<family>PHY_LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.7"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.7"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="285425"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low value="20061002"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="285425"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>
										<reference value="#problem12name"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low value="20061002"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="202796002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Thoracic or lumbosacral neuritis or radiculitis, unspecified">
                    <originalText>
											<reference value="#problem12name"/>
										</originalText>
                    <translation code="724.4" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9CM" displayName="Thoracic or lumbosacral neuritis or radiculitis, unspecified"/>
                    <translation code="M54.10" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD-10-CM" displayName="Thoracic or lumbosacral neuritis or radiculitis, unspecified"/>
                  </value>
                  <author>
                    <time value="20061002231131+0000"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.105.2.7.2.697780" extension="MMC03"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>
													<given>FIRST_NAME</given>
													<given>MI</given>
													<family>LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <effectiveTime>
                        <low value="20061002"/>
                      </effectiveTime>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.7"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.7"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="285426"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low value="20061002"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="285426"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>
										<reference value="#problem13name"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low value="20061002"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="48210000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Lumbosacral spondylosis without myelopathy">
                    <originalText>
											<reference value="#problem13name"/>
										</originalText>
                    <translation code="721.3" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9CM" displayName="Lumbosacral spondylosis without myelopathy"/>
                    <translation code="M47.817" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD-10-CM" displayName="Lumbosacral spondylosis without myelopathy"/>
                  </value>
                  <author>
                    <time value="20061002231131+0000"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.105.2.7.2.697780" extension="MMC03"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>
													<given>FIRST_NAME</given>
													<given>MI</given>
													<family>LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <effectiveTime>
                        <low value="20061002"/>
                      </effectiveTime>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.7"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.7"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="285427"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low value="20061002"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="285427"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>
										<reference value="#problem14name"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low value="20061002"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="60937000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Degeneration of lumbar or lumbosacral intervertebral disc">
                    <originalText>
											<reference value="#problem14name"/>
										</originalText>
                    <translation code="722.52" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9CM" displayName="Degeneration of lumbar or lumbosacral intervertebral disc"/>
                    <translation code="M51.37" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD-10-CM" displayName="Degeneration of lumbar or lumbosacral intervertebral disc"/>
                  </value>
                  <author>
                    <time value="20061002231131+0000"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.105.2.7.2.697780" extension="MMC03"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>
													<given>FIRST_NAME</given>
													<given>MI</given>
													<family>LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <effectiveTime>
                        <low value="20061002"/>
                      </effectiveTime>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.7"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.7"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="285428"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low value="20061002"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="285428"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>
										<reference value="#problem15name"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low value="20061002"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="279039007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Lumbago">
                    <originalText>
											<reference value="#problem15name"/>
										</originalText>
                    <translation code="724.2" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9CM" displayName="Lumbago"/>
                    <translation code="M54.5" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD-10-CM" displayName="Lumbago"/>
                  </value>
                  <author>
                    <time value="20061002231131+0000"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.105.2.7.2.697780" extension="MMC03"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>
													<given>FIRST_NAME</given>
													<given>MI</given>
													<family>LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <effectiveTime>
                        <low value="20061002"/>
                      </effectiveTime>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.7"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.7"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="554962"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low value="20070501"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="554962"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>
										<reference value="#problem16name"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low value="20070501"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="165468009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Elevated sedimentation rate">
                    <originalText>
											<reference value="#problem16name"/>
										</originalText>
                    <translation code="790.1" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9CM" displayName="Elevated sedimentation rate"/>
                    <translation code="R70.0" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD-10-CM" displayName="Elevated sedimentation rate"/>
                  </value>
                  <author>
                    <time value="20070502004820+0000"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.105.2.7.2.697780" extension="CM047"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>
													<given>FIRST_NAME</given>
													<given>R</given>
													<family>LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <effectiveTime>
                        <low value="20070501"/>
                      </effectiveTime>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.7"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.7"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="554963"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low value="20070501"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="554963"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>
										<reference value="#problem17name"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low value="20070501"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="166318006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Other abnormal blood chemistry">
                    <originalText>
											<reference value="#problem17name"/>
										</originalText>
                    <translation code="790.6" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9CM" displayName="Other abnormal blood chemistry"/>
                    <translation code="R79.89" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD-10-CM" displayName="Other abnormal blood chemistry"/>
                  </value>
                  <author>
                    <time value="20070502004820+0000"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.105.2.7.2.697780" extension="CM047"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>
													<given>FIRST_NAME</given>
													<given>R</given>
													<family>LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <effectiveTime>
                        <low value="20070501"/>
                      </effectiveTime>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.7"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.7"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="2694503"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low value="20110818"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="2694503"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>
										<reference value="#problem18name"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low value="20110818"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="414916001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Obesity">
                    <originalText>
											<reference value="#problem18name"/>
										</originalText>
                    <translation code="278.00" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9CM" displayName="Obesity"/>
                    <translation code="E66.9" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD-10-CM" displayName="Obesity"/>
                  </value>
                  <author>
                    <time value="20110818233039+0000"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.105.2.7.2.697780" extension="AS111"/>
                      <addr nullFlavor="UNK"/>
                      <telecom value="tel:+1-000-123-4567" use="WP"/>
                      <assignedPerson>
                        <name>
													PHY_FIRST_NAME
													<given>MI</given>
													<family>PHY_LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <effectiveTime>
                        <low value="20110818"/>
                      </effectiveTime>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.7"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.7"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="2694505"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low value="20110818"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="2694505"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>
										<reference value="#problem19name"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low value="20110818"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="38341003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="HTN (hypertension)">
                    <originalText>
											<reference value="#problem19name"/>
										</originalText>
                    <translation code="401.9" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9CM" displayName="HTN (hypertension)"/>
                    <translation code="I10" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD-10-CM" displayName="HTN (hypertension)"/>
                  </value>
                  <author>
                    <time value="20110818233052+0000"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.105.2.7.2.697780" extension="AS111"/>
                      <addr nullFlavor="UNK"/>
                      <telecom value="tel:+1-000-123-4567" use="WP"/>
                      <assignedPerson>
                        <name>
													<given>PHY_FIRST_NAME</given>
													<given>MI</given>
													<family>PHY_LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <effectiveTime>
                        <low value="20110818"/>
                      </effectiveTime>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.7"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.7"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="4902565"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low value="20130520"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="4902565"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>
										<reference value="#problem20name"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low value="20130520"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="308273005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Pacemaker reprogramming/check">
                    <originalText>
											<reference value="#problem20name"/>
										</originalText>
                    <translation code="V53.31" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9CM" displayName="Pacemaker reprogramming/check"/>
                    <translation code="Z45.018" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD-10-CM" displayName="Pacemaker reprogramming/check"/>
                  </value>
                  <author>
                    <time value="20130521000245+0000"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.105.2.7.2.697780" extension="JTF03"/>
                      <addr nullFlavor="UNK"/>
                      <telecom value="tel:+1-000-123-4567" use="WP"/>
                      <assignedPerson>
                        <name>
													<given>FIRST_NAME</given>
													<given>T</given>
													<family>LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <effectiveTime>
                        <low value="20130520"/>
                      </effectiveTime>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.7"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.7"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="4902567"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low value="20130520"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="4902567"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>
										<reference value="#problem21name"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low value="20130520"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="36083008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="SSS (sick sinus syndrome)">
                    <originalText>
											<reference value="#problem21name"/>
										</originalText>
                    <translation code="427.81" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9CM" displayName="SSS (sick sinus syndrome)"/>
                    <translation code="I49.5" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD-10-CM" displayName="SSS (sick sinus syndrome)"/>
                  </value>
                  <author>
                    <time value="20130521000250+0000"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.105.2.7.2.697780" extension="JTF03"/>
                      <addr nullFlavor="UNK"/>
                      <telecom value="tel:+1-000-123-4567" use="WP"/>
                      <assignedPerson>
                        <name>
													<given>FIRST_NAME</given>
													<given>T</given>
													<family>LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <effectiveTime>
                        <low value="20130520"/>
                      </effectiveTime>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.7"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.7"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="5085275"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low value="20130712"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="5085275"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>
										<reference value="#problem22name"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low value="20130712"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="213035005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Pacemaker lead failure">
                    <originalText>
											<reference value="#problem22name"/>
										</originalText>
                    <translation code="996.01" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9CM" displayName="Pacemaker lead failure"/>
                    <translation code="T82.118A" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD-10-CM" displayName="Pacemaker lead failure"/>
                  </value>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <effectiveTime>
                        <low value="20130712"/>
                      </effectiveTime>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.1.3"/>
          <templateId root="2.16.840.1.113883.3.88.11.83.127"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.1.5.3.3"/>
          <code code="46240-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="HISTORY OF ENCOUNTERS"/>
          <title>Encounters from 12/12/2013 to 03/12/2014</title>
          <text>

	<table ID="_nbEncounter" border="1" width="100%">
		<thead>
			<tr>
			<th>Date/Time</th>
			<th>Encounter Type</th>
			<th>Encounter Description</th>
			<th>Encounter Note</th>
			<th>Admission Type</th>
			<th>Provider</th>
			<th>Admission Source</th>
			<th>Facility Location</th>
			<th>In Facility Duration</th>
			<th>Reason for visit</th>
			<th>Source</th>
			<th>Patient Class</th>
			<th>Discharge Disposition</th>
			<th>Health Care Facility Name</th>
			<th>Health Care Facility Location Type</th>
			<th>Health Care Facility ID</th>
			<th>Health Care Facility Address</th>
			</tr>
		</thead>
		<tbody>
			<tr>
			<td>
		20140204152406-1000 20140204 FromTo
			</td>
			<td>
	Office Visit
			</td>
			<td>
	<td ID="type27">Office Visit
	</td>
			</td>
			<td>
	<td ID="encounter23desc">Cardiac Pacemaker in Situ (Primary Dx); Htn (Hypertension); Sss (Sick Sinus Syndrome)
	</td>
			</td>
			<td>
					--
			</td>
			<td>
							PHY_FIRST_NAME PHY_LAST_NAME
			</td>
			<td>
					--
			</td>
			<td>
							Cardiology - KMC Main
			</td>
			<td>
	--
			</td>

			<td>
								SSS (sick sinus syndrome)
 
			</td>
			<td>
				Cardio
			</td>
			<td>
	--
			</td>
			<td>
	--
			</td>
			<td>
				--
			</td>
			<td>
	--
			</td>
			<td>
					--
			</td>
			<td>
				--
			</td>
			</tr>
			<tr>
			<td>
		20140116092151-1000 20140116 FromTo
			</td>
			<td>
	Office Visit
			</td>
			<td>
	<td ID="type28">Office Visit
	</td>
			</td>
			<td>
	<td ID="encounter24desc">Personal History of Urinary Calculi (Primary Dx)
	</td>
			</td>
			<td>
					--
			</td>
			<td>
							FIRST_NAME LAST_NAME
			</td>
			<td>
					--
			</td>
			<td>
							Urology - KMC Main
			</td>
			<td>
	--
			</td>

			<td>
								Personal history of urinary calculi
 
			</td>
			<td>
				Urology
			</td>
			<td>
	--
			</td>
			<td>
	--
			</td>
			<td>
				--
			</td>
			<td>
	--
			</td>
			<td>
					--
			</td>
			<td>
				--
			</td>
			</tr>
			<tr>
			<td>
		20140101102802-1000
			</td>
			<td>
	Hospital Encounter
			</td>
			<td>
	<td ID="type29">Hospital Encounter
	</td>
			</td>
			<td>
	<td ID="encounter25desc">Emergency
	</td>
			</td>
			<td>
					--
			</td>
			<td>
							FIRST_NAME LAST_NAME,
							FIRST_NAME LAST_NAME
			</td>
			<td>
							Wilcox Memorial Hospital
			</td>
			<td>
							Emergency - Dept. - Wilcox Memorial Hospital
			</td>
			<td>
	--
			</td>

			<td>
								History of kidney stones
 
			</td>
			<td>
				Emerg
			</td>
			<td>
	--
			</td>
			<td>
	--
			</td>
			<td>
				--
			</td>
			<td>
	--
			</td>
			<td>
					--
			</td>
			<td>
				--
			</td>
			</tr>
			<tr>
			<td>
		20131216104048-1000
			</td>
			<td>
	Hospital Encounter
			</td>
			<td>
	<td ID="type30">Hospital Encounter
	</td>
			</td>
			<td>
	<td ID="encounter26desc">Outpatient
	</td>
			</td>
			<td>
					--
			</td>
			<td>
							FIRST_NAME LAST_NAME
			</td>
			<td>
							Wilcox Memorial Hospital
			</td>
			<td>
							Radiology - WMH
			</td>
			<td>
	--
			</td>

			<td>
					--
			</td>
			<td>
				Radiology
			</td>
			<td>
	--
			</td>
			<td>
	--
			</td>
			<td>
				--
			</td>
			<td>
	--
			</td>
			<td>
					--
			</td>
			<td>
				--
			</td>
			</tr>
		</tbody>
	</table>
<td ID="type27">Office Visit</td>
<td ID="encounter23desc">Cardiac Pacemaker in Situ (Primary Dx); Htn (Hypertension); Sss (Sick Sinus Syndrome)</td>
<td ID="encounter23desc">Cardiac Pacemaker in Situ (Primary Dx); Htn (Hypertension); Sss (Sick Sinus Syndrome)</td>
<td ID="type28">Office Visit</td>
<td ID="encounter24desc">Personal History of Urinary Calculi (Primary Dx)</td>
<td ID="encounter24desc">Personal History of Urinary Calculi (Primary Dx)</td>
<td ID="type29">Hospital Encounter</td>
<td ID="encounter25desc">Emergency</td>
<td ID="encounter25desc">Emergency</td>
<td ID="type30">Hospital Encounter</td>
<td ID="encounter26desc">Outpatient</td>
<td ID="encounter26desc">Outpatient</td>
<tr ID="encounter23" styleCode="normRow"><td>02/04/2014</td><td ID="type27">Office Visit</td><td ID="type27specialty">Cardio</td><td><paragraph>PHY_LAST_NAME, PHY_FIRST_NAME, DO</paragraph></td><td ID="encounter23desc">Cardiac Pacemaker in Situ (Primary Dx); Htn (Hypertension); Sss (Sick Sinus Syndrome)</td></tr>
<tr ID="encounter24" styleCode="altRow"><td>01/16/2014</td><td ID="type28">Office Visit</td><td ID="type28specialty">Urology</td><td><paragraph>PHY_LAST_NAME, PHY_FIRST_NAME, MD</paragraph></td><td ID="encounter24desc">Personal History of Urinary Calculi (Primary Dx)</td></tr>
<tr ID="encounter25" styleCode="normRow"><td>01/01/2014</td><td ID="type29">Hospital Encounter</td><td ID="type29specialty">Emerg</td><td><paragraph>PHY_LAST_NAME, PHY_FIRST_NAME, MD</paragraph><paragraph>CLIN_LAST_NAME, CLIN_FIRST_NAME, RN</paragraph></td><td ID="encounter25desc">Emergency</td></tr>
<tr ID="encounter26" styleCode="altRow"><td>12/16/2013</td><td ID="type30">Hospital Encounter</td><td ID="type30specialty">Radiology</td><td><paragraph>PHY_LAST_NAME, PHY_FIRST_NAME, MD</paragraph></td><td ID="encounter26desc">Outpatient</td></tr>
</text>
          <entry>
            <encounter classCode="ENC" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.21"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.16"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.14"/>
              <id root="1.2.840.114350.1.13.105.2.7.3.698084.8" extension="00000000" assigningAuthorityName="EPIC"/>
              <code code="101" codeSystem="1.2.840.114350.1.13.105.2.7.4.698084.30" codeSystemName="Epic.EncounterType" codeSystemVersion="Epic,2010" displayName="Office Visit">
                <originalText>
									<reference value="#type27"/>
								</originalText>
              </code>
              <text>
								<reference value="#encounter23desc"/>
							</text>
              <statusCode code="normal"/>
              <effectiveTime>
                <low value="20140204152406-1000"/>
                <high value="20140204"/>
              </effectiveTime>
              <performer typeCode="PRF">
                <assignedEntity classCode="ASSIGNED">
                  <id root="2.16.840.1.113883.4.6" extension="0123456789"/>
                  <addr>
										<streetAddressLine>STREET_ADDRESS</streetAddressLine>
										<streetAddressLine>Suite B</streetAddressLine>
										<city>CITY</city>
										<state>HI</state>
										<postalCode>012345</postalCode>
									</addr>
                  <telecom value="tel:+1-000-123-4567" use="WP"/>
                  <telecom value="fax:+1-000-123-4567"/>
                  <assignedPerson>
                    <name>
											<given>PHY_FIRST_NAME</given>
											<given>MI</given>
											<family>PHY_LAST_NAME</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <name nullFlavor="UNK"/>
                    <telecom nullFlavor="UNK"/>
                    <addr nullFlavor="UNK"/>
                  </representedOrganization>
                </assignedEntity>
              </performer>
              <participant typeCode="ATND">
                <participantRole>
                  <id root="2.16.840.1.113883.4.6" extension="1063679330"/>
                  <addr use="WP">
										<streetAddressLine>STREET_ADDRESS</streetAddressLine>
										<streetAddressLine>Suite B</streetAddressLine>
										<city>CITY</city>
										<state>HI</state>
										<postalCode>012345</postalCode>
									</addr>
                  <telecom value="tel:+1-000-123-4567" use="WP"/>
                  <telecom value="fax:+1-000-123-4567"/>
                  <playingEntity>
                    <name>
											<given>PHY_FIRST_NAME</given>
											<family>PHY_LAST_NAME</family>
										</name>
                  </playingEntity>
                </participantRole>
              </participant>
              <participant typeCode="ATND">
                <participantRole>
                  <id root="2.16.840.1.113883.4.6" extension="1063679330"/>
                </participantRole>
              </participant>
              <participant typeCode="LOC">
                <templateId root="2.16.840.1.113883.10.20.1.45"/>
                <participantRole classCode="SDLOC">
                  <id root="1.2.840.114350.1.13.105.2.7.2.686980" extension="11002002"/>
                  <playingEntity classCode="PLC">
                    <name>Cardiology - KMC Main</name>
                    <desc>Cardio</desc>
                  </playingEntity>
                </participantRole>
              </participant>
              <entryRelationship typeCode="RSON">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.696871" extension="14957"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>Cardiac pacemaker in situ</text>
                  <statusCode code="completed"/>
                  <effectiveTime nullFlavor="UNK">
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="161692001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Cardiac pacemaker in situ"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="RSON">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.696871" extension="104091"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>HTN (hypertension)</text>
                  <statusCode code="completed"/>
                  <effectiveTime nullFlavor="UNK">
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="38341003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="HTN (hypertension)"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="RSON">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.696871" extension="163426"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>SSS (sick sinus syndrome)</text>
                  <statusCode code="completed"/>
                  <effectiveTime nullFlavor="UNK">
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="36083008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="SSS (sick sinus syndrome)"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="RSON" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <code code="COMMENT" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
                  <text>
										<reference value="#encounter23desc"/>
									</text>
                  <statusCode code="completed"/>
                  <author>
                    <time value="20140204152406-1000"/>
                    <assignedAuthor>
                      <id root="2.16.840.1.113883.4.6" extension="1063679330"/>
                      <addr>
												<streetAddressLine>STREET_ADDRESS</streetAddressLine>
												<streetAddressLine>Suite B</streetAddressLine>
												<city>CITY</city>
												<state>HI</state>
											</addr>
                      <telecom value="tel:+1-000-123-4567" use="WP"/>
                      <telecom value="fax:+1-000-123-4567"/>
                      <assignedPerson>
                        <name>
													<given>PHY_FIRST_NAME</given>
													<given>MI</given>
													<family>PHY_LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
              <reference typeCode="REFR">
                <externalObservation>
                  <code code="1" codeSystem="1.2.840.114350.1.13.105.2.7.3.688882.8100" codeSystemName="Epic.Encounter.Contents"/>
                </externalObservation>
              </reference>
            </encounter>
          </entry>
          <entry>
            <encounter classCode="ENC" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.21"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.16"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.14"/>
              <id root="1.2.840.114350.1.13.105.2.7.3.698084.8" extension="00000000" assigningAuthorityName="EPIC"/>
              <code code="101" codeSystem="1.2.840.114350.1.13.105.2.7.4.698084.30" codeSystemName="Epic.EncounterType" codeSystemVersion="Epic,2010" displayName="Office Visit">
                <originalText>
									<reference value="#type28"/>
								</originalText>
              </code>
              <text>
								<reference value="#encounter24desc"/>
							</text>
              <statusCode code="normal"/>
              <effectiveTime>
                <low value="20140116092151-1000"/>
                <high value="20140116"/>
              </effectiveTime>
              <performer typeCode="PRF">
                <assignedEntity classCode="ASSIGNED">
                  <id root="2.16.840.1.113883.4.6" extension="0123456789"/>
                  <addr>
										<streetAddressLine>STREET_ADDRESS</streetAddressLine>
										<streetAddressLine>SUITE B</streetAddressLine>
										<city>CITY</city>
										<state>HI</state>
										<postalCode>012345</postalCode>
									</addr>
                  <telecom value="tel:+1-000-123-4567" use="WP"/>
                  <telecom value="fax:+1-000-123-4567"/>
                  <assignedPerson>
                    <name>
											<given>FIRST_NAME</given>
											<given>MI</given>
											<family>LAST_NAME</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <name nullFlavor="UNK"/>
                    <telecom nullFlavor="UNK"/>
                    <addr nullFlavor="UNK"/>
                  </representedOrganization>
                </assignedEntity>
              </performer>
              <participant typeCode="ATND">
                <participantRole>
                  <id root="2.16.840.1.113883.4.6" extension="1255405999"/>
                  <addr use="WP">
										<streetAddressLine>STREET_ADDRESS</streetAddressLine>
										<streetAddressLine>SUITE B</streetAddressLine>
										<city>CITY</city>
										<state>HI</state>
										<postalCode>012345</postalCode>
									</addr>
                  <telecom value="tel:+1-000-123-4567" use="WP"/>
                  <telecom value="fax:+1-000-123-4567"/>
                  <playingEntity>
                    <name>
											<given>FIRST_NAME</given>
											<family>LAST_NAME</family>
										</name>
                  </playingEntity>
                </participantRole>
              </participant>
              <participant typeCode="ATND">
                <participantRole>
                  <id root="2.16.840.1.113883.4.6" extension="1255405999"/>
                </participantRole>
              </participant>
              <participant typeCode="LOC">
                <templateId root="2.16.840.1.113883.10.20.1.45"/>
                <participantRole classCode="SDLOC">
                  <id root="1.2.840.114350.1.13.105.2.7.2.686980" extension="11002009"/>
                  <playingEntity classCode="PLC">
                    <name>Urology - KMC Main</name>
                    <desc>Urology</desc>
                  </playingEntity>
                </participantRole>
              </participant>
              <entryRelationship typeCode="RSON">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.696871" extension="14629"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>Personal history of urinary calculi</text>
                  <statusCode code="completed"/>
                  <effectiveTime nullFlavor="UNK">
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="161548009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Personal history of urinary calculi"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="RSON" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <code code="COMMENT" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
                  <text>
										<reference value="#encounter24desc"/>
									</text>
                  <statusCode code="completed"/>
                  <author>
                    <time value="20140116092151-1000"/>
                    <assignedAuthor>
                      <id root="2.16.840.1.113883.4.6" extension="1255405999"/>
                      <addr>
												<streetAddressLine>STREET_ADDRESS</streetAddressLine>
												<streetAddressLine>SUITE B</streetAddressLine>
												<city>CITY</city>
												<state>HI</state>
											</addr>
                      <telecom value="tel:+1-000-123-4567" use="WP"/>
                      <telecom value="fax:+1-000-123-4567"/>
                      <assignedPerson>
                        <name>
													<given>FIRST_NAME</given>
													<given>MI</given>
													<family>LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
              <reference typeCode="REFR">
                <externalObservation>
                  <code code="2" codeSystem="1.2.840.114350.1.13.105.2.7.3.688882.8100" codeSystemName="Epic.Encounter.Contents"/>
                </externalObservation>
              </reference>
            </encounter>
          </entry>
          <entry>
            <encounter classCode="ENC" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.21"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.16"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.14"/>
              <id root="1.2.840.114350.1.13.105.2.7.3.698084.8" extension="00000000" assigningAuthorityName="EPIC"/>
              <code code="3" codeSystem="1.2.840.114350.1.13.105.2.7.4.698084.30" codeSystemName="Epic.EncounterType" codeSystemVersion="Epic,2010" displayName="Hospital Encounter">
                <originalText>
									<reference value="#type29"/>
								</originalText>
              </code>
              <text>
								<reference value="#encounter25desc"/>
							</text>
              <statusCode code="normal"/>
              <effectiveTime>
                <low value="20140101102802-1000"/>
                <high value="20140101102802-1000"/>
              </effectiveTime>
              <performer typeCode="PRF">
                <assignedEntity classCode="ASSIGNED">
                  <id root="2.16.840.1.113883.4.6" extension="000000000"/>
                  <addr>
										<streetAddressLine>STREET_ADDRESS</streetAddressLine>
										<streetAddressLine>SUITE B</streetAddressLine>
										<city>CITY</city>
										<state>HI</state>
										<postalCode>012345</postalCode>
									</addr>
                  <telecom value="tel:+1-000-123-4567" use="WP"/>
                  <telecom value="fax:+1-000-123-4567"/>
                  <assignedPerson>
                    <name>
											<given>FIRST_NAME</given>
											<family>LAST_NAME</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <name nullFlavor="UNK"/>
                    <telecom nullFlavor="UNK"/>
                    <addr nullFlavor="UNK"/>
                  </representedOrganization>
                </assignedEntity>
              </performer>
              <performer typeCode="PRF">
                <assignedEntity classCode="ASSIGNED">
                  <id nullFlavor="UNK"/>
                  <addr nullFlavor="UNK"/>
                  <telecom nullFlavor="UNK"/>
                  <assignedPerson>
                    <name>
											<given>FIRST_NAME</given>
											<given>R</given>
											<family>LAST_NAME</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <name nullFlavor="UNK"/>
                    <telecom nullFlavor="UNK"/>
                    <addr nullFlavor="UNK"/>
                  </representedOrganization>
                </assignedEntity>
              </performer>
              <participant typeCode="ATND">
                <participantRole>
                  <id root="2.16.840.1.113883.4.6" extension="1811952971"/>
                  <addr use="WP">
										<streetAddressLine>STREET_ADDRESS</streetAddressLine>
										<streetAddressLine>SUITE B</streetAddressLine>
										<city>CITY</city>
										<state>HI</state>
										<postalCode>012345</postalCode>
									</addr>
                  <telecom value="tel:+1-000-123-4567" use="WP"/>
                  <telecom value="fax:+1-000-123-4567"/>
                  <playingEntity>
                    <name>
											<given>FIRST_NAME</given>
											<family>LAST_NAME</family>
										</name>
                  </playingEntity>
                </participantRole>
              </participant>
              <participant typeCode="ATND">
                <participantRole>
                  <id nullFlavor="UNK"/>
                  <playingEntity>
                    <name>
											<given>FIRST_NAME</given>
											<family>LAST_NAME</family>
										</name>
                  </playingEntity>
                </participantRole>
              </participant>
              <participant typeCode="LOC">
                <templateId root="2.16.840.1.113883.10.20.1.45"/>
                <participantRole classCode="SDLOC">
                  <id root="1.2.840.114350.1.13.105.2.7.2.686980" extension="10001000"/>
                  <playingEntity classCode="PLC">
                    <name>Emergency - Dept. - Wilcox Memorial Hospital</name>
                    <desc>Emerg</desc>
                  </playingEntity>
                </participantRole>
              </participant>
              <participant typeCode="ORG">
                <participantRole>
                  <id root="1.2.840.114350.1.13.105.2.7.2.688879" extension="7801"/>
                  <playingEntity>
                    <name>Wilcox Memorial Hospital</name>
                  </playingEntity>
                </participantRole>
              </participant>
              <entryRelationship typeCode="RSON">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.696871" extension="204111"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>Left flank pain</text>
                  <statusCode code="completed"/>
                  <effectiveTime nullFlavor="UNK">
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="162049009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Left flank pain"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="RSON">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.696871" extension="205005"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>Hematuria</text>
                  <statusCode code="completed"/>
                  <effectiveTime nullFlavor="UNK">
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="34436003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Hematuria"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="RSON">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.696871" extension="284174"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>History of kidney stones</text>
                  <statusCode code="completed"/>
                  <effectiveTime nullFlavor="UNK">
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="429025008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="History of kidney stones"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="RSON" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <code code="COMMENT" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
                  <text>
										<reference value="#encounter25desc"/>
									</text>
                  <statusCode code="completed"/>
                  <author>
                    <time value="20140101102802-1000"/>
                    <assignedAuthor>
                      <id root="2.16.840.1.113883.4.6" extension="1811952971"/>
                      <addr>
												<streetAddressLine>STREET_ADDRESS</streetAddressLine>
												<streetAddressLine>SUITE B</streetAddressLine>
												<city>CITY</city>
												<state>HI</state>
											</addr>
                      <telecom value="tel:+1-000-123-4567" use="WP"/>
                      <telecom value="fax:+1-000-123-4567"/>
                      <assignedPerson>
                        <name>
													<given>FIRST_NAME</given>
													<family>LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
              <reference typeCode="REFR">
                <externalObservation>
                  <code code="7" codeSystem="1.2.840.114350.1.13.105.2.7.3.688882.8100" codeSystemName="Epic.Encounter.Contents"/>
                </externalObservation>
              </reference>
            </encounter>
          </entry>
          <entry>
            <encounter classCode="ENC" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.21"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.16"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.14"/>
              <id root="1.2.840.114350.1.13.105.2.7.3.698084.8" extension="00000000" assigningAuthorityName="EPIC"/>
              <code code="3" codeSystem="1.2.840.114350.1.13.105.2.7.4.698084.30" codeSystemName="Epic.EncounterType" codeSystemVersion="Epic,2010" displayName="Hospital Encounter">
                <originalText>
									<reference value="#type30"/>
								</originalText>
              </code>
              <text>
								<reference value="#encounter26desc"/>
							</text>
              <statusCode code="normal"/>
              <effectiveTime>
                <low value="20131216104048-1000"/>
                <high value="20131216104048-1000"/>
              </effectiveTime>
              <performer typeCode="PRF">
                <assignedEntity classCode="ASSIGNED">
                  <id root="2.16.840.1.113883.4.6" extension="0123456789"/>
                  <addr>
										<streetAddressLine>STREET_ADDRESS</streetAddressLine>
										<streetAddressLine>SUITE B</streetAddressLine>
										<city>CITY</city>
										<state>HI</state>
										<postalCode>012345</postalCode>
									</addr>
                  <telecom value="tel:+1-000-123-4567" use="WP"/>
                  <telecom value="fax:+1-000-123-4567"/>
                  <assignedPerson>
                    <name>
											<given>FIRST_NAME</given>
											<given>MI</given>
											<family>LAST_NAME</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <name nullFlavor="UNK"/>
                    <telecom nullFlavor="UNK"/>
                    <addr nullFlavor="UNK"/>
                  </representedOrganization>
                </assignedEntity>
              </performer>
              <participant typeCode="ATND">
                <participantRole>
                  <id root="2.16.840.1.113883.4.6" extension="1255405999"/>
                  <addr use="WP">
										<streetAddressLine>STREET_ADDRESS</streetAddressLine>
										<streetAddressLine>SUITE B</streetAddressLine>
										<city>CITY</city>
										<state>HI</state>
										<postalCode>012345</postalCode>
									</addr>
                  <telecom value="tel:+1-000-123-4567" use="WP"/>
                  <telecom value="fax:+1-000-123-4567"/>
                  <playingEntity>
                    <name>
											<given>FIRST_NAME</given>
											<family>LAST_NAME</family>
										</name>
                  </playingEntity>
                </participantRole>
              </participant>
              <participant typeCode="LOC">
                <templateId root="2.16.840.1.113883.10.20.1.45"/>
                <participantRole classCode="SDLOC">
                  <id root="1.2.840.114350.1.13.105.2.7.2.686980" extension="10001501"/>
                  <playingEntity classCode="PLC">
                    <name>Radiology - WMH</name>
                    <desc>Radiology</desc>
                  </playingEntity>
                </participantRole>
              </participant>
              <participant typeCode="ORG">
                <participantRole>
                  <id root="1.2.840.114350.1.13.105.2.7.2.688879" extension="7801"/>
                  <playingEntity>
                    <name>Wilcox Memorial Hospital</name>
                  </playingEntity>
                </participantRole>
              </participant>
              <entryRelationship typeCode="RSON" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <code code="COMMENT" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
                  <text>
										<reference value="#encounter26desc"/>
									</text>
                  <statusCode code="completed"/>
                  <author>
                    <time value="20131216104048-1000"/>
                    <assignedAuthor>
                      <id root="2.16.840.1.113883.4.6" extension="1255405999"/>
                      <addr>
												<streetAddressLine>STREET_ADDRESS</streetAddressLine>
												<streetAddressLine>SUITE B</streetAddressLine>
												<city>CITY</city>
												<state>HI</state>
											</addr>
                      <telecom value="tel:+1-000-123-4567" use="WP"/>
                      <telecom value="fax:+1-000-123-4567"/>
                      <assignedPerson>
                        <name>
													<given>FIRST_NAME</given>
													<given>MI</given>
													<family>LAST_NAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.105.2.7.2.696570" extension="10"/>
                        <name>HAWAII PACIFIC HEALTH SA</name>
                        <telecom value="tel:+1-123-4567" use="WP"/>
                        <addr>
													<streetAddressLine>STREET ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
            </encounter>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.1.6"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.23"/>
          <templateId root="2.16.840.1.113883.3.88.11.83.117"/>
          <code code="11369-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="HISTORY OF IMMUNIZATIONS"/>
          <title>Immunizations</title>
          <text><table ID="_nbImmunization" border="1" width="100%"><thead><tr><th>Immunizations</th><th>Series</th><th>Date Issued</th><th>Reaction</th><th>Comments</th><th>Immunization Refused</th><th>Refusal Reason</th><th>Provider</th><th>Source</th><th>Drug Manufacturer</th><th>Lot Number</th></tr></thead><tbody><tr><td>TETANUS/DIPHTHERIA</td><td>--</td><td>19751017</td><td>--</td><td><td ID="immunization31Name">Tetanus/Diphtheria</td><td><content>10/17/1975</content></td><td/></td><td>No</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA</td><td>--</td><td>--</td></tr><tr><td>INFLUENZA VIRUS VACCINE - WHOLE</td><td>--</td><td>20020916</td><td>--</td><td><td ID="immunization32Name">Influenza Virus Vaccine - Whole</td><td><content>10/10/2006</content>,<content>10/19/2005</content>,<content>10/21/2003</content>,<content>09/16/2002</content></td><td/></td><td>No</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA</td><td>--</td><td>--</td></tr><tr><td>INFLUENZA VIRUS VACCINE - WHOLE</td><td>--</td><td>20031021</td><td>--</td><td><td ID="immunization32Name">Influenza Virus Vaccine - Whole</td><td><content>10/10/2006</content>,<content>10/19/2005</content>,<content>10/21/2003</content>,<content>09/16/2002</content></td><td/></td><td>No</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA</td><td>--</td><td>--</td></tr><tr><td>INFLUENZA VIRUS VACCINE - WHOLE</td><td>--</td><td>20051019</td><td>--</td><td><td ID="immunization32Name">Influenza Virus Vaccine - Whole</td><td><content>10/10/2006</content>,<content>10/19/2005</content>,<content>10/21/2003</content>,<content>09/16/2002</content></td><td/></td><td>No</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA</td><td>--</td><td>--</td></tr><tr><td>INFLUENZA VIRUS VACCINE - WHOLE</td><td>--</td><td>20061010</td><td>--</td><td><td ID="immunization32Name">Influenza Virus Vaccine - Whole</td><td><content>10/10/2006</content>,<content>10/19/2005</content>,<content>10/21/2003</content>,<content>09/16/2002</content></td><td/></td><td>No</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA</td><td>--</td><td>--</td></tr><tr><td>PNEUMOVAX</td><td>--</td><td>20130713</td><td>--</td><td><td ID="immunization36Name">Pneumovax</td><td><content>07/13/2013</content></td><td/></td><td>No</td><td>--</td><td>--</td><td>HAWAII PACIFIC HEALTH SA</td><td>--</td><td>--</td></tr></tbody></table><td ID="immunization31Name">Tetanus/Diphtheria</td>
<td ID="immunization32Name">Influenza Virus Vaccine - Whole</td>
<td ID="immunization32Name">Influenza Virus Vaccine - Whole</td>
<td ID="immunization32Name">Influenza Virus Vaccine - Whole</td>
<td ID="immunization32Name">Influenza Virus Vaccine - Whole</td>
<td ID="immunization36Name">Pneumovax</td>
<tr ID="immunization32"><td ID="immunization32Name">Influenza Virus Vaccine - Whole</td><td><content>10/10/2006</content>,<content>10/19/2005</content>,<content>10/21/2003</content>,<content>09/16/2002</content></td><td/></tr>
<tr ID="immunization36"><td ID="immunization36Name">Pneumovax</td><td><content>07/13/2013</content></td><td/></tr>
<tr ID="immunization31"><td ID="immunization31Name">Tetanus/Diphtheria</td><td><content>10/17/1975</content></td><td/></tr>
</text>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="EVN" negationInd="false">
              <templateId root="2.16.840.1.113883.10.20.1.24"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.12"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.13"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="285431"/>
              <code code="IMMUNIZ" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode"/>
              <text mediaType="text/xml">
								<reference value="#immunization31"/>
							</text>
              <statusCode code="completed"/>
              <effectiveTime value="19751017"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.53"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                  <manufacturedMaterial>
                    <code code="09" codeSystem="2.16.840.1.113883.6.59" codeSystemName="CVX" displayName="TETANUS/DIPHTHERIA">
                      <originalText>
												<reference value="immunization31Name"/>
											</originalText>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="EVN" negationInd="false">
              <templateId root="2.16.840.1.113883.10.20.1.24"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.12"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.13"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="285432"/>
              <code code="IMMUNIZ" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode"/>
              <text mediaType="text/xml">
								<reference value="#immunization32"/>
							</text>
              <statusCode code="completed"/>
              <effectiveTime value="20020916"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.53"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                  <manufacturedMaterial>
                    <code code="16" codeSystem="2.16.840.1.113883.6.59" codeSystemName="CVX" displayName="INFLUENZA VIRUS VACCINE - WHOLE">
                      <originalText>
												<reference value="immunization32Name"/>
											</originalText>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="EVN" negationInd="false">
              <templateId root="2.16.840.1.113883.10.20.1.24"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.12"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.13"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="285433"/>
              <code code="IMMUNIZ" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode"/>
              <text mediaType="text/xml">
								<reference value="#immunization32"/>
							</text>
              <statusCode code="completed"/>
              <effectiveTime value="20031021"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.53"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                  <manufacturedMaterial>
                    <code code="16" codeSystem="2.16.840.1.113883.6.59" codeSystemName="CVX" displayName="INFLUENZA VIRUS VACCINE - WHOLE">
                      <originalText>
												<reference value="immunization32Name"/>
											</originalText>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="EVN" negationInd="false">
              <templateId root="2.16.840.1.113883.10.20.1.24"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.12"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.13"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="285434"/>
              <code code="IMMUNIZ" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode"/>
              <text mediaType="text/xml">
								<reference value="#immunization32"/>
							</text>
              <statusCode code="completed"/>
              <effectiveTime value="20051019"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.53"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                  <manufacturedMaterial>
                    <code code="16" codeSystem="2.16.840.1.113883.6.59" codeSystemName="CVX" displayName="INFLUENZA VIRUS VACCINE - WHOLE">
                      <originalText>
												<reference value="immunization32Name"/>
											</originalText>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="EVN" negationInd="false">
              <templateId root="2.16.840.1.113883.10.20.1.24"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.12"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.13"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="300356"/>
              <code code="IMMUNIZ" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode"/>
              <text mediaType="text/xml">
								<reference value="#immunization32"/>
							</text>
              <statusCode code="completed"/>
              <effectiveTime value="20061010"/>
              <routeCode codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="NCI Thesaurus" displayName="Intramuscular"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.53"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                  <manufacturedMaterial>
                    <code code="16" codeSystem="2.16.840.1.113883.6.59" codeSystemName="CVX" displayName="INFLUENZA VIRUS VACCINE - WHOLE">
                      <originalText>
												<reference value="immunization32Name"/>
											</originalText>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="EVN" negationInd="false">
              <templateId root="2.16.840.1.113883.10.20.1.24"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.12"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.13"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.768076" extension="5088093"/>
              <code code="IMMUNIZ" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode"/>
              <text mediaType="text/xml">
								<reference value="#immunization36"/>
							</text>
              <statusCode code="completed"/>
              <effectiveTime value="20130713"/>
              <routeCode codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="NCI Thesaurus" displayName="Intramuscular"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.53"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                  <manufacturedMaterial>
                    <code code="33" codeSystem="2.16.840.1.113883.6.59" codeSystemName="CVX" displayName="PNEUMOVAX">
                      <originalText>
												<reference value="immunization36Name"/>
											</originalText>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
            </substanceAdministration>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.1.14"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.27"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.28"/>
          <templateId root="2.16.840.1.113883.3.88.11.83.122"/>
          <id root="b69b401c-aa21-11e3-8bff-b0016e60b51d"/>
          <code code="30954-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="STUDIES SUMMARY"/>
          <title>Results from 12/12/2013 to 03/12/2014</title>
          <text>
<div ID="_nbResultsSection">
	
	<table ID="_nbResults">
		<thead>
			<th>Date/Time</th>
			<th>Result Type</th>
			<th>Source</th>
			<th>Result</th>
			<th>Unit</th>
			<th>Interpretation</th>
			<th>Reference Range</th>
			<th>Comments</th>
			<th>Status</th>
			<th>Analyte Source</th>
		</thead>
		<tbody>

<tr>
	<td>
	20140116095200
	</td>
	<td>
	URINALYSIS, DIP STICK/TABLET REAGENT; NON-AUTO W/O MICRO	
	</td>
	<td>--</td>
	<td/>
	<td/>
	<td/>
	<td/>
	<td/>
	<td>
			--
	</td>
	<td/>
</tr>
<tr>
	<td/>
	<td>
	UA Leukocytes Esterase	
	</td>
	<td/>
	<td>
				neg			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	NEG
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	UA Nitrite	
	</td>
	<td/>
	<td>
				neg			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	NEG
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	UA Urobilinogen	
	</td>
	<td/>
	<td>
				0.2			
	</td>
	<td>
				EU/dL			
	</td>
	<td> 
			--
	</td>
	<td>
	0.2-1.0 EU/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	UA Protein	
	</td>
	<td/>
	<td>
				neg			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	NEG mg/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	UA pH	
	</td>
	<td/>
	<td>
				5.0			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	5.0-8.5
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	UA Blood	
	</td>
	<td/>
	<td>
				neg			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	NEG
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	UA Specific Gravity	
	</td>
	<td/>
	<td>
				1.025			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	1.005-1.030
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	UA Ketone	
	</td>
	<td/>
	<td>
				neg			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	NEG mg/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	UA Bilirubin	
	</td>
	<td/>
	<td>
				neg			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	NEG
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	UA Glucose	
	</td>
	<td/>
	<td>
				neg			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	NEG mg/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td>
	20140101111021
	</td>
	<td>
	XR CHEST, 2 VIEWS	
	</td>
	<td>--</td>
	<td/>
	<td/>
	<td/>
	<td/>
	<td/>
	<td>
			--
	</td>
	<td/>
</tr>
<tr>
	<td/>
	<td>
	Unknown	
	</td>
	<td/>
	<td>
	<item ID="Result45"><caption>XR CHEST, 2 VIEWS (01/01/2014 11:10 AM HST)</caption><table><thead><tr><th>Impressions</th></tr></thead><tbody><tr><td ID="Result45Impression" styleCode="pre"><paragraph>����</paragraph><paragraph>No active process</paragraph></td></tr></tbody></table><table><thead><tr><th>Narrative</th></tr></thead><tbody><tr><td ID="Result45Narrative" styleCode="pre"><paragraph>INDICATION:����Cough</paragraph><paragraph/><paragraph>TECHNIQUE: Upright PA and lateral views of the chest.</paragraph><paragraph/><paragraph>COMPARISON:����7/13/2013 from Straub</paragraph><paragraph/><paragraph>The bony thorax is intact with prominent degenerative change in the</paragraph><paragraph>spine.����A pacemaker projects on the left with leads unchanged in</paragraph><paragraph>position.����The cardiac silhouette is borderline in size and the aorta</paragraph><paragraph>is calcified and ectatic.����Right hemidiaphragm remains elevated.����The</paragraph><paragraph>pleural surfaces are normal and the lungs are clear. There is no</paragraph><paragraph>interval change.</paragraph><paragraph/></td></tr></tbody></table><table><thead><tr><th>Procedure Note</th></tr></thead><tbody><tr><td styleCode="noIndent"><paragraph styleCode="header"/><paragraph><content>INDICATION: Cough</content><br/><br/><content>TECHNIQUE: Upright PA and lateral views of the chest.</content><br/><br/><content>COMPARISON: 7/13/2013 from Straub</content><br/><br/><content>The bony thorax is intact with prominent degenerative change in the</content><br/><content>spine. A pacemaker projects on the left with leads unchanged in</content><br/><content>position. The cardiac silhouette is borderline in size and the aorta</content><br/><content>is calcified and ectatic. Right hemidiaphragm remains elevated. The</content><br/><content>pleural surfaces are normal and the lungs are clear. There is no</content><br/><content>interval change.</content><br/><br/><content>IMPRESSION:</content><br/><content/><br/><content>No active process</content></paragraph></td></tr></tbody></table>
	</item>
	</td>
	<td>
			
	</td>
	<td> 
			--
	</td>
	<td>
			--
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td>
	20140101103400
	</td>
	<td>
	URINALYSIS, COMPLETE	
	</td>
	<td>--</td>
	<td/>
	<td/>
	<td/>
	<td/>
	<td/>
	<td>
			--
	</td>
	<td/>
</tr>
<tr>
	<td/>
	<td>
	Color	
	</td>
	<td/>
	<td>
				Straw			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
			--
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Appearance:	
	</td>
	<td/>
	<td>
				Sl hazy			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
			--
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Specific Gravity	
	</td>
	<td/>
	<td>
				1.025			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	1.005-1.030
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Leukocyte Esterase	
	</td>
	<td/>
	<td>
				Negative			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	NEG
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Nitrite	
	</td>
	<td/>
	<td>
				Negative			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	NEG
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	pH	
	</td>
	<td/>
	<td>
				6.0			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	5.0-7.5
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Protein	
	</td>
	<td/>
	<td>
				Negative			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	NEG mg/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	GLUCOSE	
	</td>
	<td/>
	<td>
				Negative			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	NEG mg/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Ketones	
	</td>
	<td/>
	<td>
				Negative			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	NEG mg/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Urobilinogen	
	</td>
	<td/>
	<td>
				0.2			
	</td>
	<td>
				EU/dL			
	</td>
	<td> 
			--
	</td>
	<td>
	0.2-1.0 EU/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Bilirubin	
	</td>
	<td/>
	<td>
				Negative			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	NEG
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Blood	
	</td>
	<td/>
	<td>
				Large			
	</td>
	<td>
							
	</td>
	<td> 
	A
	</td>
	<td>
	NEG
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	WBC	
	</td>
	<td/>
	<td>
				0			
	</td>
	<td>
				/hpf			
	</td>
	<td> 
			--
	</td>
	<td>
	0-5 /hpf
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	RBC	
	</td>
	<td/>
	<td>
				10-20			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	0-2 /hpf
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Bacteria	
	</td>
	<td/>
	<td>
				None			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	NONE /hpf
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Squamous Ep	
	</td>
	<td/>
	<td>
				Few			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	 /lpf
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Amorphous	
	</td>
	<td/>
	<td>
				Occ			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	 /lpf
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td>
	20140101104500
	</td>
	<td>
	COMP METABOLIC PANEL	
	</td>
	<td>--</td>
	<td/>
	<td/>
	<td/>
	<td/>
	<td/>
	<td>
			--
	</td>
	<td/>
</tr>
<tr>
	<td/>
	<td>
	Sodium	
	</td>
	<td/>
	<td>
				133			
	</td>
	<td>
				mmol/L			
	</td>
	<td> 
			--
	</td>
	<td>
	133-145 mmol/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Potassium	
	</td>
	<td/>
	<td>
				3.8			
	</td>
	<td>
				mmol/L			
	</td>
	<td> 
			--
	</td>
	<td>
	3.3-5.1 mmol/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Chloride	
	</td>
	<td/>
	<td>
				99			
	</td>
	<td>
				mmol/L			
	</td>
	<td> 
			--
	</td>
	<td>
	96-108 mmol/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	CO2	
	</td>
	<td/>
	<td>
				26			
	</td>
	<td>
				mmol/L			
	</td>
	<td> 
			--
	</td>
	<td>
	21-31 mmol/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Anion Gap	
	</td>
	<td/>
	<td>
				8			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	4-16 
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	BUN	
	</td>
	<td/>
	<td>
				17			
	</td>
	<td>
				mg/dL			
	</td>
	<td> 
			--
	</td>
	<td>
	8-24 mg/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Creatinine	
	</td>
	<td/>
	<td>
				0.89			
	</td>
	<td>
				mg/dL			
	</td>
	<td> 
			--
	</td>
	<td>
	0.50-1.20 mg/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Glucose	
	</td>
	<td/>
	<td>
				175			
	</td>
	<td>
				mg/dL			
	</td>
	<td> 
	H
	</td>
	<td>
	70-99 mg/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Calcium	
	</td>
	<td/>
	<td>
				8.8			
	</td>
	<td>
				mg/dL			
	</td>
	<td> 
			--
	</td>
	<td>
	8.6-10.3 mg/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Total Protein	
	</td>
	<td/>
	<td>
				6.9			
	</td>
	<td>
				g/dL			
	</td>
	<td> 
			--
	</td>
	<td>
	5.9-8.4 g/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Albumin	
	</td>
	<td/>
	<td>
				3.8			
	</td>
	<td>
				g/dL			
	</td>
	<td> 
	L
	</td>
	<td>
	4.0-5.1 g/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Globulin	
	</td>
	<td/>
	<td>
				3.1			
	</td>
	<td>
				g/dL			
	</td>
	<td> 
			--
	</td>
	<td>
	2.0-3.6 g/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	A/G Ratio	
	</td>
	<td/>
	<td>
				1.2			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	1.2-2.3 
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	AST (SGOT)	
	</td>
	<td/>
	<td>
				36			
	</td>
	<td>
				U/L			
	</td>
	<td> 
			--
	</td>
	<td>
	0-37 U/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	ALT (SGPT)	
	</td>
	<td/>
	<td>
				33			
	</td>
	<td>
				U/L			
	</td>
	<td> 
			--
	</td>
	<td>
	7-51 U/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Alk Phos	
	</td>
	<td/>
	<td>
				77			
	</td>
	<td>
				U/L			
	</td>
	<td> 
			--
	</td>
	<td>
	34-104 U/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Bilirubin, Total	
	</td>
	<td/>
	<td>
				0.7			
	</td>
	<td>
				mg/dL			
	</td>
	<td> 
			--
	</td>
	<td>
	0-1.2 mg/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	GFR (Non-African Amer)	
	</td>
	<td/>
	<td>
				>60			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	>59 mL/min/1.73m2
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	GFR (African American)	
	</td>
	<td/>
	<td>
				>60			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	>59 mL/min/1.73m2
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td>
	20140101104500
	</td>
	<td>
	CBC PLT W/AUTO DIFF	
	</td>
	<td>--</td>
	<td/>
	<td/>
	<td/>
	<td/>
	<td/>
	<td>
			--
	</td>
	<td/>
</tr>
<tr>
	<td/>
	<td>
	WBC	
	</td>
	<td/>
	<td>
				9.1			
	</td>
	<td>
				10(9)/L			
	</td>
	<td> 
			--
	</td>
	<td>
	3.8-11.2 10(9)/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	RBC	
	</td>
	<td/>
	<td>
				4.48			
	</td>
	<td>
				10(12)/L			
	</td>
	<td> 
			--
	</td>
	<td>
	4.4-6.0 10(12)/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Hemoglobin	
	</td>
	<td/>
	<td>
				13.8			
	</td>
	<td>
				g/dL			
	</td>
	<td> 
			--
	</td>
	<td>
	13.4-17.2 g/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Hematocrit	
	</td>
	<td/>
	<td>
				42.2			
	</td>
	<td>
				%			
	</td>
	<td> 
			--
	</td>
	<td>
	39.5-49.7 %
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	MCV	
	</td>
	<td/>
	<td>
				94.3			
	</td>
	<td>
				fL			
	</td>
	<td> 
			--
	</td>
	<td>
	80-100 fL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	MCH	
	</td>
	<td/>
	<td>
				30.9			
	</td>
	<td>
				pg			
	</td>
	<td> 
			--
	</td>
	<td>
	27-33 pg
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	MCHC	
	</td>
	<td/>
	<td>
				32.8			
	</td>
	<td>
				g/dL			
	</td>
	<td> 
			--
	</td>
	<td>
	32-36 g/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	RDW	
	</td>
	<td/>
	<td>
				12.4			
	</td>
	<td>
				%			
	</td>
	<td> 
			--
	</td>
	<td>
	11-15 %
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Platelet Count	
	</td>
	<td/>
	<td>
				178			
	</td>
	<td>
				10(9)/L			
	</td>
	<td> 
			--
	</td>
	<td>
	150-450 10(9)/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Diff Method	
	</td>
	<td/>
	<td>
				Auto			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
			--
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Neutrophils	
	</td>
	<td/>
	<td>
				80			
	</td>
	<td>
				%			
	</td>
	<td> 
	H
	</td>
	<td>
	40-70 %
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Lymphs	
	</td>
	<td/>
	<td>
				15			
	</td>
	<td>
				%			
	</td>
	<td> 
	L
	</td>
	<td>
	20-45 %
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Monocytes	
	</td>
	<td/>
	<td>
				2			
	</td>
	<td>
				%			
	</td>
	<td> 
	L
	</td>
	<td>
	4-10 %
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Eosinophils	
	</td>
	<td/>
	<td>
				2			
	</td>
	<td>
				%			
	</td>
	<td> 
			--
	</td>
	<td>
	0-6 %
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Basophils	
	</td>
	<td/>
	<td>
				1			
	</td>
	<td>
				%			
	</td>
	<td> 
			--
	</td>
	<td>
	0-2 %
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Neutrophils, Absolute	
	</td>
	<td/>
	<td>
				7.30			
	</td>
	<td>
				10(9)/L			
	</td>
	<td> 
	H
	</td>
	<td>
	1.4-7.0 10(9)/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Lymphs, Absolute	
	</td>
	<td/>
	<td>
				1.40			
	</td>
	<td>
				10(9)/L			
	</td>
	<td> 
			--
	</td>
	<td>
	0.7-4.5 10(9)/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Monocytes, Absolute	
	</td>
	<td/>
	<td>
				0.20			
	</td>
	<td>
				10(9)/L			
	</td>
	<td> 
			--
	</td>
	<td>
	0.1-1.0 10(9)/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Eosinophils, Absolute	
	</td>
	<td/>
	<td>
				0.20			
	</td>
	<td>
				10(9)/L			
	</td>
	<td> 
			--
	</td>
	<td>
	0-0.6 10(9)/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Basophils, Absolute	
	</td>
	<td/>
	<td>
				0.00			
	</td>
	<td>
				10(9)/L			
	</td>
	<td> 
			--
	</td>
	<td>
	0-0.2 10(9)/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td>
	20140101104500
	</td>
	<td>
	LIPASE	
	</td>
	<td>--</td>
	<td/>
	<td/>
	<td/>
	<td/>
	<td/>
	<td>
			--
	</td>
	<td/>
</tr>
<tr>
	<td/>
	<td>
	Lipase	
	</td>
	<td/>
	<td>
				35			
	</td>
	<td>
				U/L			
	</td>
	<td> 
			--
	</td>
	<td>
	4-58 U/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td>
	20131216113947
	</td>
	<td>
	US RETROPERITONEAL, COMPLETE	
	</td>
	<td>--</td>
	<td/>
	<td/>
	<td/>
	<td/>
	<td/>
	<td>
			--
	</td>
	<td/>
</tr>
<tr>
	<td/>
	<td>
	Unknown	
	</td>
	<td/>
	<td>
	<item ID="Result44"><caption>US RETROPERITONEAL, COMPLETE (12/16/2013 11:39 AM HST)</caption><table><thead><tr><th>Impressions</th></tr></thead><tbody><tr><td ID="Result44Impression" styleCode="pre"><paragraph/><paragraph>No kidney stones or evidence for obstruction.</paragraph></td></tr></tbody></table><table><thead><tr><th>Narrative</th></tr></thead><tbody><tr><td ID="Result44Narrative" styleCode="pre"><paragraph>PROCEDURE:����US RETROPERITONEAL, COMPLETE</paragraph><paragraph/><paragraph>COMPARISON: CT 1/01/13, ultrasound 1/12/13</paragraph><paragraph/><paragraph>FINDINGS: Sonography of the kidneys shows the right to measure 11.2 x</paragraph><paragraph>6.4 cm and the left kidney 11.5 x 5.7 cm.����There is focal contour</paragraph><paragraph>deformity in the left kidney probably representing both cortical</paragraph><paragraph>thinning and normal parenchymal tissue.����The appearance is unchanged</paragraph><paragraph>from the previous CT scan.����On the current examination no stones are</paragraph><paragraph>seen.����The bladder is smooth-walled both ureteral jets are not visible</paragraph><paragraph>there is no postvoid residual</paragraph><paragraph/></td></tr></tbody></table><table><thead><tr><th>Procedure Note</th></tr></thead><tbody><tr><td styleCode="noIndent"><paragraph styleCode="header"/><paragraph><content>PROCEDURE: US RETROPERITONEAL, COMPLETE</content><br/><br/><content>COMPARISON: CT 1/01/13, ultrasound 1/01/13</content><br/><br/><content>FINDINGS: Sonography of the kidneys shows the right to measure 11.2 x</content><br/><content>6.4 cm and the left kidney 11.5 x 5.7 cm. There is focal contour</content><br/><content>deformity in the left kidney probably representing both cortical</content><br/><content>thinning and normal parenchymal tissue. The appearance is unchanged</content><br/><content>from the previous CT scan. On the current examination no stones are</content><br/><content>seen. The bladder is smooth-walled both ureteral jets are not visible</content><br/><content>there is no postvoid residual</content><br/><br/><content>IMPRESSION:</content><br/><content/><br/><content>No kidney stones or evidence for obstruction.</content></paragraph></td></tr></tbody></table>
	</item>
	</td>
	<td>
			
	</td>
	<td> 
			--
	</td>
	<td>
			--
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
		</tbody>
	</table>
</div>
<div ID="_nbResultsSection"><table ID="_nbResults"><thead><th>Date/Time</th><th>Result Type</th><th>Source</th><th>Result - Unit</th><th>Interpretation</th><th>Reference Range</th><th>Comments</th><th>Status</th></thead><tbody><tr><td>20131216113947</td><td>US RETROPERITONEAL, COMPLETE</td><td>--</td><td/><td/><td/><td/><td>completed</td></tr><tr><td/><td>Unknown</td><td/><td>--</td><td>--</td><td>--</td><td>--</td><td/></tr><tr><td>20140101111021</td><td>XR CHEST, 2 VIEWS</td><td>--</td><td/><td/><td/><td/><td>completed</td></tr><tr><td/><td>Unknown</td><td/><td>--</td><td>--</td><td>--</td><td>--</td><td/></tr><tr><td>20140101103400</td><td>URINALYSIS, COMPLETE</td><td>--</td><td/><td/><td/><td/><td>completed</td></tr><tr><td/><td>Color</td><td/><td>Straw --</td><td>--</td><td>--</td><td>--</td><td/></tr><tr><td/><td>Appearance:</td><td/><td>Sl hazy</td><td>--</td><td>--</td><td>--</td><td/></tr><tr><td/><td>Specific Gravity</td><td/><td>1.025 1</td><td>--</td><td>1.005-1.030</td><td>--</td><td/></tr><tr><td/><td>Leukocyte Esterase</td><td/><td>Negative --</td><td>--</td><td>NEG</td><td>--</td><td/></tr><tr><td/><td>Nitrite</td><td/><td>Negative --</td><td>--</td><td>NEG</td><td>--</td><td/></tr><tr><td/><td>pH</td><td/><td>6.0 1</td><td>--</td><td>5.0-7.5</td><td>--</td><td/></tr><tr><td/><td>Protein</td><td/><td>Negative --</td><td>--</td><td>NEG mg/dL</td><td>--</td><td/></tr><tr><td/><td>GLUCOSE</td><td/><td>Negative --</td><td>--</td><td>NEG mg/dL</td><td>--</td><td/></tr><tr><td/><td>Ketones</td><td/><td>Negative --</td><td>--</td><td>NEG mg/dL</td><td>--</td><td/></tr><tr><td/><td>Urobilinogen</td><td/><td>0.2 EU/dL</td><td>--</td><td>0.2-1.0 EU/dL</td><td>--</td><td/></tr><tr><td/><td>Bilirubin</td><td/><td>Negative --</td><td>--</td><td>NEG</td><td>--</td><td/></tr><tr><td/><td>Blood</td><td/><td>Large --</td><td>A</td><td>NEG</td><td>--</td><td/></tr><tr><td/><td>WBC</td><td/><td>0 /hpf</td><td>--</td><td>0-5 /hpf</td><td>--</td><td/></tr><tr><td/><td>RBC</td><td/><td>10-20 --</td><td>--</td><td>0-2 /hpf</td><td>--</td><td/></tr><tr><td/><td>Bacteria</td><td/><td>None --</td><td>--</td><td>NONE /hpf</td><td>--</td><td/></tr><tr><td/><td>Squamous Ep</td><td/><td>Few --</td><td>--</td><td>/lpf</td><td>--</td><td/></tr><tr><td/><td>Amorphous</td><td/><td>Occ --</td><td>--</td><td>/lpf</td><td>--</td><td/></tr><tr><td>20140101104500</td><td>COMP METABOLIC PANEL</td><td>--</td><td/><td/><td/><td/><td>completed</td></tr><tr><td/><td>Sodium</td><td/><td>133 mmol/L</td><td>--</td><td>133-145 mmol/L</td><td>--</td><td/></tr><tr><td/><td>Potassium</td><td/><td>3.8 mmol/L</td><td>--</td><td>3.3-5.1 mmol/L</td><td>--</td><td/></tr><tr><td/><td>Chloride</td><td/><td>99 mmol/L</td><td>--</td><td>96-108 mmol/L</td><td>--</td><td/></tr><tr><td/><td>CO2</td><td/><td>26 mmol/L</td><td>--</td><td>21-31 mmol/L</td><td>--</td><td/></tr><tr><td/><td>Anion Gap</td><td/><td>8 --</td><td>--</td><td>4-16</td><td>--</td><td/></tr><tr><td/><td>BUN</td><td/><td>17 mg/dL</td><td>--</td><td>8-24 mg/dL</td><td>--</td><td/></tr><tr><td/><td>Creatinine</td><td/><td>0.89 mg/dL</td><td>--</td><td>0.50-1.20 mg/dL</td><td>--</td><td/></tr><tr><td/><td>Glucose</td><td/><td>175 mg/dL</td><td>H</td><td>70-99 mg/dL</td><td>--</td><td/></tr><tr><td/><td>Calcium</td><td/><td>8.8 mg/dL</td><td>--</td><td>8.6-10.3 mg/dL</td><td>--</td><td/></tr><tr><td/><td>Total Protein</td><td/><td>6.9 g/dL</td><td>--</td><td>5.9-8.4 g/dL</td><td>--</td><td/></tr><tr><td/><td>Albumin</td><td/><td>3.8 g/dL</td><td>L</td><td>4.0-5.1 g/dL</td><td>--</td><td/></tr><tr><td/><td>Globulin</td><td/><td>3.1 g/dL</td><td>--</td><td>2.0-3.6 g/dL</td><td>--</td><td/></tr><tr><td/><td>A/G Ratio</td><td/><td>1.2 --</td><td>--</td><td>1.2-2.3</td><td>--</td><td/></tr><tr><td/><td>AST (SGOT)</td><td/><td>36 U/L</td><td>--</td><td>0-37 U/L</td><td>--</td><td/></tr><tr><td/><td>ALT (SGPT)</td><td/><td>33 U/L</td><td>--</td><td>7-51 U/L</td><td>--</td><td/></tr><tr><td/><td>Alk Phos</td><td/><td>77 U/L</td><td>--</td><td>34-104 U/L</td><td>--</td><td/></tr><tr><td/><td>Bilirubin, Total</td><td/><td>0.7 mg/dL</td><td>--</td><td>0-1.2 mg/dL</td><td>--</td><td/></tr><tr><td/><td>GFR (Non-African Amer)</td><td/><td>>60 --</td><td>--</td><td>>59 mL/min/1.73m2</td><td>--</td><td/></tr><tr><td/><td>GFR (African American)</td><td/><td>>60 --</td><td>--</td><td>>59 mL/min/1.73m2</td><td>--</td><td/></tr><tr><td>20140101104500</td><td>CBC PLT W/AUTO DIFF</td><td>--</td><td/><td/><td/><td/><td>completed</td></tr><tr><td/><td>WBC</td><td/><td>9.1 10(9)/L</td><td>--</td><td>3.8-11.2 10(9)/L</td><td>--</td><td/></tr><tr><td/><td>RBC</td><td/><td>4.48 10(12)/L</td><td>--</td><td>4.4-6.0 10(12)/L</td><td>--</td><td/></tr><tr><td/><td>Hemoglobin</td><td/><td>13.8 g/dL</td><td>--</td><td>13.4-17.2 g/dL</td><td>--</td><td/></tr><tr><td/><td>Hematocrit</td><td/><td>42.2 %</td><td>--</td><td>39.5-49.7 %</td><td>--</td><td/></tr><tr><td/><td>MCV</td><td/><td>94.3 fL</td><td>--</td><td>80-100 fL</td><td>--</td><td/></tr><tr><td/><td>MCH</td><td/><td>30.9 pg</td><td>--</td><td>27-33 pg</td><td>--</td><td/></tr><tr><td/><td>MCHC</td><td/><td>32.8 g/dL</td><td>--</td><td>32-36 g/dL</td><td>--</td><td/></tr><tr><td/><td>RDW</td><td/><td>12.4 %</td><td>--</td><td>11-15 %</td><td>--</td><td/></tr><tr><td/><td>Platelet Count</td><td/><td>178 10(9)/L</td><td>--</td><td>150-450 10(9)/L</td><td>--</td><td/></tr><tr><td/><td>Diff Method</td><td/><td>Auto --</td><td>--</td><td>--</td><td>--</td><td/></tr><tr><td/><td>Neutrophils</td><td/><td>80 %</td><td>H</td><td>40-70 %</td><td>--</td><td/></tr><tr><td/><td>Lymphs</td><td/><td>15 %</td><td>L</td><td>20-45 %</td><td>--</td><td/></tr><tr><td/><td>Monocytes</td><td/><td>2 %</td><td>L</td><td>4-10 %</td><td>--</td><td/></tr><tr><td/><td>Eosinophils</td><td/><td>2 %</td><td>--</td><td>0-6 %</td><td>--</td><td/></tr><tr><td/><td>Basophils</td><td/><td>1 %</td><td>--</td><td>0-2 %</td><td>--</td><td/></tr><tr><td/><td>Neutrophils, Absolute</td><td/><td>7.30 10(9)/L</td><td>H</td><td>1.4-7.0 10(9)/L</td><td>--</td><td/></tr><tr><td/><td>Lymphs, Absolute</td><td/><td>1.40 10(9)/L</td><td>--</td><td>0.7-4.5 10(9)/L</td><td>--</td><td/></tr><tr><td/><td>Monocytes, Absolute</td><td/><td>0.20 10(9)/L</td><td>--</td><td>0.1-1.0 10(9)/L</td><td>--</td><td/></tr><tr><td/><td>Eosinophils, Absolute</td><td/><td>0.20 10(9)/L</td><td>--</td><td>0-0.6 10(9)/L</td><td>--</td><td/></tr><tr><td/><td>Basophils, Absolute</td><td/><td>0.00 10(9)/L</td><td>--</td><td>0-0.2 10(9)/L</td><td>--</td><td/></tr><tr><td>20140101104500</td><td>LIPASE</td><td>--</td><td/><td/><td/><td/><td>completed</td></tr><tr><td/><td>Lipase</td><td/><td>35 U/L</td><td>--</td><td>4-58 U/L</td><td>--</td><td/></tr><tr><td>20140116095200</td><td>URINALYSIS, DIP STICK/TABLET REAGENT; NON-AUTO W/O MICRO</td><td>--</td><td/><td/><td/><td/><td>completed</td></tr><tr><td/><td>UA Leukocytes Esterase</td><td/><td>neg --</td><td>--</td><td>NEG</td><td>--</td><td/></tr><tr><td/><td>UA Nitrite</td><td/><td>neg --</td><td>--</td><td>NEG</td><td>--</td><td/></tr><tr><td/><td>UA Urobilinogen</td><td/><td>0.2 EU/dL</td><td>--</td><td>0.2-1.0 EU/dL</td><td>--</td><td/></tr><tr><td/><td>UA Protein</td><td/><td>neg --</td><td>--</td><td>NEG mg/dL</td><td>--</td><td/></tr><tr><td/><td>UA pH</td><td/><td>5.0 1</td><td>--</td><td>5.0-8.5</td><td>--</td><td/></tr><tr><td/><td>UA Blood</td><td/><td>neg --</td><td>--</td><td>NEG</td><td>--</td><td/></tr><tr><td/><td>UA Specific Gravity</td><td/><td>1.025 1</td><td>--</td><td>1.005-1.030</td><td>--</td><td/></tr><tr><td/><td>UA Ketone</td><td/><td>neg --</td><td>--</td><td>NEG mg/dL</td><td>--</td><td/></tr><tr><td/><td>UA Bilirubin</td><td/><td>neg --</td><td>--</td><td>NEG</td><td>--</td><td/></tr><tr><td/><td>UA Glucose</td><td/><td>neg --</td><td>--</td><td>NEG mg/dL</td><td>--</td><td/></tr></tbody></table></div>
<item ID="Result50"><caption>URINALYSIS, DIP STICK/TABLET REAGENT; NON-AUTO W/O MICRO (01/16/2014 9:52 AM HST)</caption><table><colgroup><col width="25%"/><col width="50%"/><col width="25%"/></colgroup><thead><tr><th>Component</th><th>Value</th><th>Range</th></tr></thead><tbody><tr ID="Result50Comp1"><td ID="Result50Comp1Name">UA Leukocytes Esterase</td><td>neg</td><td>NEG</td></tr><tr ID="Result50Comp2"><td ID="Result50Comp2Name">UA Nitrite</td><td>neg</td><td>NEG</td></tr><tr ID="Result50Comp3"><td ID="Result50Comp3Name">UA Urobilinogen</td><td>0.2</td><td>0.2-1.0 EU/dL</td></tr><tr ID="Result50Comp4"><td ID="Result50Comp4Name">UA Protein</td><td>neg</td><td>NEG mg/dL</td></tr><tr ID="Result50Comp5"><td ID="Result50Comp5Name">UA pH</td><td>5.0</td><td>5.0-8.5</td></tr><tr ID="Result50Comp6"><td ID="Result50Comp6Name">UA Blood</td><td>neg</td><td>NEG</td></tr><tr ID="Result50Comp7"><td ID="Result50Comp7Name">UA Specific Gravity</td><td>1.025</td><td>1.005-1.030</td></tr><tr ID="Result50Comp8"><td ID="Result50Comp8Name">UA Ketone</td><td>neg</td><td>NEG mg/dL</td></tr><tr ID="Result50Comp9"><td ID="Result50Comp9Name">UA Bilirubin</td><td>neg</td><td>NEG</td></tr><tr ID="Result50Comp10"><td ID="Result50Comp10Name">UA Glucose</td><td>neg</td><td>NEG mg/dL</td></tr></tbody></table><table><thead><tr><th>Specimen</th></tr></thead><tbody><tr><td ID="Result50Specimen">Urine</td></tr></tbody></table></item>
<item ID="Result45"><caption>XR CHEST, 2 VIEWS (01/01/2014 11:10 AM HST)</caption><table><thead><tr><th>Impressions</th></tr></thead><tbody><tr><td ID="Result45Impression" styleCode="pre"><paragraph>����</paragraph><paragraph>No active process</paragraph></td></tr></tbody></table><table><thead><tr><th>Narrative</th></tr></thead><tbody><tr><td ID="Result45Narrative" styleCode="pre"><paragraph>INDICATION:����Cough</paragraph><paragraph/><paragraph>TECHNIQUE: Upright PA and lateral views of the chest.</paragraph><paragraph/><paragraph>COMPARISON:����7/13/2013 from Straub</paragraph><paragraph/><paragraph>The bony thorax is intact with prominent degenerative change in the</paragraph><paragraph>spine.����A pacemaker projects on the left with leads unchanged in</paragraph><paragraph>position.����The cardiac silhouette is borderline in size and the aorta</paragraph><paragraph>is calcified and ectatic.����Right hemidiaphragm remains elevated.����The</paragraph><paragraph>pleural surfaces are normal and the lungs are clear. There is no</paragraph><paragraph>interval change.</paragraph><paragraph/></td></tr></tbody></table><table><thead><tr><th>Procedure Note</th></tr></thead><tbody><tr><td styleCode="noIndent"><paragraph styleCode="header"/><paragraph><content>INDICATION: Cough</content><br/><br/><content>TECHNIQUE: Upright PA and lateral views of the chest.</content><br/><br/><content>COMPARISON: 7/13/2013 from Straub</content><br/><br/><content>The bony thorax is intact with prominent degenerative change in the</content><br/><content>spine. A pacemaker projects on the left with leads unchanged in</content><br/><content>position. The cardiac silhouette is borderline in size and the aorta</content><br/><content>is calcified and ectatic. Right hemidiaphragm remains elevated. The</content><br/><content>pleural surfaces are normal and the lungs are clear. There is no</content><br/><content>interval change.</content><br/><br/><content>IMPRESSION:</content><br/><content/><br/><content>No active process</content></paragraph></td></tr></tbody></table></item>
<item ID="Result49"><caption>LIPASE (01/01/2014 10:45 AM HST)</caption><table><colgroup><col width="25%"/><col width="50%"/><col width="25%"/></colgroup><thead><tr><th>Component</th><th>Value</th><th>Range</th></tr></thead><tbody><tr ID="Result49Comp1"><td ID="Result49Comp1Name">Lipase</td><td>35</td><td>4-58 U/L</td></tr></tbody></table></item>
<item ID="Result48"><caption>CBC PLT W/AUTO DIFF (01/01/2014 10:45 AM HST)</caption><table><colgroup><col width="25%"/><col width="50%"/><col width="25%"/></colgroup><thead><tr><th>Component</th><th>Value</th><th>Range</th></tr></thead><tbody><tr ID="Result48Comp1"><td ID="Result48Comp1Name">WBC</td><td>9.1</td><td>3.8-11.2 10(9)/L</td></tr><tr ID="Result48Comp2"><td ID="Result48Comp2Name">RBC</td><td>4.48</td><td>4.4-6.0 10(12)/L</td></tr><tr ID="Result48Comp3"><td ID="Result48Comp3Name">Hemoglobin</td><td>13.8</td><td>13.4-17.2 g/dL</td></tr><tr ID="Result48Comp4"><td ID="Result48Comp4Name">Hematocrit</td><td>42.2</td><td>39.5-49.7 %</td></tr><tr ID="Result48Comp5"><td ID="Result48Comp5Name">MCV</td><td>94.3</td><td>80-100 fL</td></tr><tr ID="Result48Comp6"><td ID="Result48Comp6Name">MCH</td><td>30.9</td><td>27-33 pg</td></tr><tr ID="Result48Comp7"><td ID="Result48Comp7Name">MCHC</td><td>32.8</td><td>32-36 g/dL</td></tr><tr ID="Result48Comp8"><td ID="Result48Comp8Name">RDW</td><td>12.4</td><td>11-15 %</td></tr><tr ID="Result48Comp9"><td ID="Result48Comp9Name">Platelet Count</td><td>178</td><td>150-450 10(9)/L</td></tr><tr ID="Result48Comp10"><td ID="Result48Comp10Name">Diff Method</td><td>Auto</td><td/></tr><tr ID="Result48Comp11"><td ID="Result48Comp11Name">Neutrophils</td><td><content styleCode="flagData"><content><content>80</content></content><content>(H)</content></content></td><td>40-70 %</td></tr><tr ID="Result48Comp12"><td ID="Result48Comp12Name">Lymphs</td><td><content styleCode="flagData"><content><content>15</content></content><content>(L)</content></content></td><td>20-45 %</td></tr><tr ID="Result48Comp13"><td ID="Result48Comp13Name">Monocytes</td><td><content styleCode="flagData"><content><content>2</content></content><content>(L)</content></content></td><td>4-10 %</td></tr><tr ID="Result48Comp14"><td ID="Result48Comp14Name">Eosinophils</td><td>2</td><td>0-6 %</td></tr><tr ID="Result48Comp15"><td ID="Result48Comp15Name">Basophils</td><td>1</td><td>0-2 %</td></tr><tr ID="Result48Comp16"><td ID="Result48Comp16Name">Neutrophils, Absolute</td><td><content styleCode="flagData"><content><content>7.30</content></content><content>(H)</content></content></td><td>1.4-7.0 10(9)/L</td></tr><tr ID="Result48Comp17"><td ID="Result48Comp17Name">Lymphs, Absolute</td><td>1.40</td><td>0.7-4.5 10(9)/L</td></tr><tr ID="Result48Comp18"><td ID="Result48Comp18Name">Monocytes, Absolute</td><td>0.20</td><td>0.1-1.0 10(9)/L</td></tr><tr ID="Result48Comp19"><td ID="Result48Comp19Name">Eosinophils, Absolute</td><td>0.20</td><td>0-0.6 10(9)/L</td></tr><tr ID="Result48Comp20"><td ID="Result48Comp20Name">Basophils, Absolute</td><td>0.00</td><td>0-0.2 10(9)/L</td></tr></tbody></table></item>
<item ID="Result47"><caption>COMP METABOLIC PANEL (01/01/2014 10:45 AM HST)</caption><table><colgroup><col width="25%"/><col width="50%"/><col width="25%"/></colgroup><thead><tr><th>Component</th><th>Value</th><th>Range</th></tr></thead><tbody><tr ID="Result47Comp1"><td ID="Result47Comp1Name">Sodium</td><td>133</td><td>133-145 mmol/L</td></tr><tr ID="Result47Comp2"><td ID="Result47Comp2Name">Potassium</td><td>3.8</td><td>3.3-5.1 mmol/L</td></tr><tr ID="Result47Comp3"><td ID="Result47Comp3Name">Chloride</td><td>99</td><td>96-108 mmol/L</td></tr><tr ID="Result47Comp4"><td ID="Result47Comp4Name">CO2</td><td>26</td><td>21-31 mmol/L</td></tr><tr ID="Result47Comp5"><td ID="Result47Comp5Name">Anion Gap</td><td>8</td><td>4-16</td></tr><tr ID="Result47Comp6"><td ID="Result47Comp6Name">BUN</td><td>17</td><td>8-24 mg/dL</td></tr><tr ID="Result47Comp7"><td ID="Result47Comp7Name">Creatinine</td><td>0.89</td><td>0.50-1.20 mg/dL</td></tr><tr ID="Result47Comp8"><td ID="Result47Comp8Name">Glucose</td><td><content styleCode="flagData"><content><content>175</content></content><content>(H)</content></content></td><td>70-99 mg/dL</td></tr><tr ID="Result47Comp9"><td ID="Result47Comp9Name">Calcium</td><td>8.8</td><td>8.6-10.3 mg/dL</td></tr><tr ID="Result47Comp10"><td ID="Result47Comp10Name">Total Protein</td><td>6.9</td><td>5.9-8.4 g/dL</td></tr><tr ID="Result47Comp11"><td ID="Result47Comp11Name">Albumin</td><td><content styleCode="flagData"><content><content>3.8</content></content><content>(L)</content></content></td><td>4.0-5.1 g/dL</td></tr><tr ID="Result47Comp12"><td ID="Result47Comp12Name">Globulin</td><td>3.1</td><td>2.0-3.6 g/dL</td></tr><tr ID="Result47Comp13"><td ID="Result47Comp13Name">A/G Ratio</td><td>1.2</td><td>1.2-2.3</td></tr><tr ID="Result47Comp14"><td ID="Result47Comp14Name">AST (SGOT)</td><td>36</td><td>0-37 U/L</td></tr><tr ID="Result47Comp15"><td ID="Result47Comp15Name">ALT (SGPT)</td><td>33</td><td>7-51 U/L</td></tr><tr ID="Result47Comp16"><td ID="Result47Comp16Name">Alk Phos</td><td>77</td><td>34-104 U/L</td></tr><tr ID="Result47Comp17"><td ID="Result47Comp17Name">Bilirubin, Total</td><td>0.7</td><td>0-1.2 mg/dL</td></tr><tr ID="Result47Comp18"><td ID="Result47Comp18Name">GFR (Non-African Amer)</td><td>>60</td><td>>59 mL/min/1.73m2</td></tr><tr ID="Result47Comp19"><td ID="Result47Comp19Name">GFR (African American)</td><td><content><content>>60</content></content><content styleCode="allIndent"><content styleCode="cellHeader">Comment:</content><br/><content ID="Result47Comp19Comment" styleCode="pre"><content>����</content><br/><content>Average GFR for 60-69 yr: 85</content><br/><content>Chronic kidney disease:����&lt;60</content><br/><content>Kidney failure:��������������������&lt;15</content><br/><content>Accuracy of the GFR depends on a stable creatinine and may be overestimated</content><br/><content>in malnutrition, cachexia, and cirrhosis due to reduced muscle mass.</content><br/></content></content></td><td>>59 mL/min/1.73m2</td></tr></tbody></table></item>
<item ID="Result46"><caption>URINALYSIS, COMPLETE (01/01/2014 10:34 AM HST)</caption><table><colgroup><col width="25%"/><col width="50%"/><col width="25%"/></colgroup><thead><tr><th>Component</th><th>Value</th><th>Range</th></tr></thead><tbody><tr ID="Result46Comp1"><td ID="Result46Comp1Name">Color</td><td>Straw</td><td/></tr><tr ID="Result46Comp2"><td ID="Result46Comp2Name">Appearance:</td><td>Sl hazy</td><td/></tr><tr ID="Result46Comp3"><td ID="Result46Comp3Name">Specific Gravity</td><td>1.025</td><td>1.005-1.030</td></tr><tr ID="Result46Comp4"><td ID="Result46Comp4Name">Leukocyte Esterase</td><td>Negative</td><td>NEG</td></tr><tr ID="Result46Comp5"><td ID="Result46Comp5Name">Nitrite</td><td>Negative</td><td>NEG</td></tr><tr ID="Result46Comp6"><td ID="Result46Comp6Name">pH</td><td>6.0</td><td>5.0-7.5</td></tr><tr ID="Result46Comp7"><td ID="Result46Comp7Name">Protein</td><td>Negative</td><td>NEG mg/dL</td></tr><tr ID="Result46Comp8"><td ID="Result46Comp8Name">GLUCOSE</td><td>Negative</td><td>NEG mg/dL</td></tr><tr ID="Result46Comp9"><td ID="Result46Comp9Name">Ketones</td><td>Negative</td><td>NEG mg/dL</td></tr><tr ID="Result46Comp10"><td ID="Result46Comp10Name">Urobilinogen</td><td>0.2</td><td>0.2-1.0 EU/dL</td></tr><tr ID="Result46Comp11"><td ID="Result46Comp11Name">Bilirubin</td><td>Negative</td><td>NEG</td></tr><tr ID="Result46Comp12"><td ID="Result46Comp12Name">Blood</td><td><content styleCode="flagData"><content><content>Large</content></content><content>(A)</content></content></td><td>NEG</td></tr><tr ID="Result46Comp13"><td ID="Result46Comp13Name">WBC</td><td>0</td><td>0-5 /hpf</td></tr><tr ID="Result46Comp14"><td ID="Result46Comp14Name">RBC</td><td>10-20</td><td>0-2 /hpf</td></tr><tr ID="Result46Comp15"><td ID="Result46Comp15Name">Bacteria</td><td>None</td><td>NONE /hpf</td></tr><tr ID="Result46Comp16"><td ID="Result46Comp16Name">Squamous Ep</td><td>Few</td><td>/lpf</td></tr><tr ID="Result46Comp17"><td ID="Result46Comp17Name">Amorphous</td><td>Occ</td><td>/lpf</td></tr></tbody></table><table><thead><tr><th>Specimen</th></tr></thead><tbody><tr><td ID="Result46Specimen">Urine - Voided, Urine</td></tr></tbody></table></item>
<item ID="Result44"><caption>US RETROPERITONEAL, COMPLETE (12/16/2013 11:39 AM HST)</caption><table><thead><tr><th>Impressions</th></tr></thead><tbody><tr><td ID="Result44Impression" styleCode="pre"><paragraph/><paragraph>No kidney stones or evidence for obstruction.</paragraph></td></tr></tbody></table><table><thead><tr><th>Narrative</th></tr></thead><tbody><tr><td ID="Result44Narrative" styleCode="pre"><paragraph>PROCEDURE:����US RETROPERITONEAL, COMPLETE</paragraph><paragraph/><paragraph>COMPARISON: CT 1/01/13, ultrasound 1/12/13</paragraph><paragraph/><paragraph>FINDINGS: Sonography of the kidneys shows the right to measure 11.2 x</paragraph><paragraph>6.4 cm and the left kidney 11.5 x 5.7 cm.����There is focal contour</paragraph><paragraph>deformity in the left kidney probably representing both cortical</paragraph><paragraph>thinning and normal parenchymal tissue.����The appearance is unchanged</paragraph><paragraph>from the previous CT scan.����On the current examination no stones are</paragraph><paragraph>seen.����The bladder is smooth-walled both ureteral jets are not visible</paragraph><paragraph>there is no postvoid residual</paragraph><paragraph/></td></tr></tbody></table><table><thead><tr><th>Procedure Note</th></tr></thead><tbody><tr><td styleCode="noIndent"><paragraph styleCode="header"/><paragraph><content>PROCEDURE: US RETROPERITONEAL, COMPLETE</content><br/><br/><content>COMPARISON: CT 1/01/13, ultrasound 1/01/13</content><br/><br/><content>FINDINGS: Sonography of the kidneys shows the right to measure 11.2 x</content><br/><content>6.4 cm and the left kidney 11.5 x 5.7 cm. There is focal contour</content><br/><content>deformity in the left kidney probably representing both cortical</content><br/><content>thinning and normal parenchymal tissue. The appearance is unchanged</content><br/><content>from the previous CT scan. On the current examination no stones are</content><br/><content>seen. The bladder is smooth-walled both ureteral jets are not visible</content><br/><content>there is no postvoid residual</content><br/><br/><content>IMPRESSION:</content><br/><content/><br/><content>No kidney stones or evidence for obstruction.</content></paragraph></td></tr></tbody></table></item>
</text>
          <entry typeCode="DRIV">
            <organizer classCode="BATTERY" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.32"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="94449089"/>
              <code code="76770" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="US RETROPERITONEAL, COMPLETE"/>
              <statusCode code="completed"/>
              <effectiveTime value="20131216113947"/>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="94449089"/>
                  <code code="261665006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Unknown"/>
                  <text>
										<reference nullFlavor="UNK" value="#Result44"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20131216113947">
                    <low value="20131216113947"/>
                  </effectiveTime>
                  <value xsi:type="ED" nullFlavor="NA"/>
                </observation>
              </component>
              <component>
                <procedure classCode="PROC" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.29"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.19"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.17"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="94449089"/>
                  <code code="76770" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="US RETROPERITONEAL, COMPLETE">
                    <originalText>
											<reference value="#"/>
										</originalText>
                  </code>
                  <text>
										<reference value="#Result44"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20131216113947">
                    <low value="20131216113947"/>
                  </effectiveTime>
                </procedure>
              </component>
            </organizer>
          </entry>
          <entry typeCode="DRIV">
            <organizer classCode="BATTERY" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.32"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="100240523"/>
              <code code="71020" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="XR CHEST, 2 VIEWS"/>
              <statusCode code="completed"/>
              <effectiveTime value="20140101111021"/>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="100240523"/>
                  <code code="261665006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Unknown"/>
                  <text>
										<reference nullFlavor="UNK" value="#Result45"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101111021">
                    <low value="20140101111021"/>
                  </effectiveTime>
                  <value xsi:type="ED" nullFlavor="NA"/>
                </observation>
              </component>
              <component>
                <procedure classCode="PROC" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.29"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.19"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.17"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="100240523"/>
                  <code code="71020" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="XR CHEST, 2 VIEWS">
                    <originalText>
											<reference value="#"/>
										</originalText>
                  </code>
                  <text>
										<reference value="#Result45"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101111021">
                    <low value="20140101111021"/>
                  </effectiveTime>
                </procedure>
              </component>
            </organizer>
          </entry>
          <entry typeCode="DRIV">
            <organizer classCode="BATTERY" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.32"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="94449091"/>
              <code code="81001" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="URINALYSIS, COMPLETE"/>
              <statusCode code="completed"/>
              <effectiveTime value="20140101103400"/>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="94449091.1"/>
                  <code code="5778-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Color"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101103400">
                    <low value="20140101103400"/>
                  </effectiveTime>
                  <value xsi:type="ST">Straw</value>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="94449091.2"/>
                  <code code="5767-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Appearance:"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101103400">
                    <low value="20140101103400"/>
                  </effectiveTime>
                  <value xsi:type="ST">Sl hazy</value>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="94449091.3"/>
                  <code code="5811-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Specific Gravity"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101103400">
                    <low value="20140101103400"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="1.025"/>
                  <referenceRange>
                    <observationRange>
                      <text>1.005-1.030</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="94449091.4"/>
                  <code code="5799-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Leukocyte Esterase"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101103400">
                    <low value="20140101103400"/>
                  </effectiveTime>
                  <value xsi:type="ST">Negative</value>
                  <referenceRange>
                    <observationRange>
                      <text>NEG</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="94449091.5"/>
                  <code code="5802-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Nitrite"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101103400">
                    <low value="20140101103400"/>
                  </effectiveTime>
                  <value xsi:type="ST">Negative</value>
                  <referenceRange>
                    <observationRange>
                      <text>NEG</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="94449091.6"/>
                  <code code="5803-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="pH"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101103400">
                    <low value="20140101103400"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="6.0"/>
                  <referenceRange>
                    <observationRange>
                      <text>5.0-7.5</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="94449091.7"/>
                  <code code="5804-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Protein"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101103400">
                    <low value="20140101103400"/>
                  </effectiveTime>
                  <value xsi:type="ST">Negative</value>
                  <referenceRange>
                    <observationRange>
                      <text>NEG mg/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="94449091.8"/>
                  <code code="5792-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="GLUCOSE"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101103400">
                    <low value="20140101103400"/>
                  </effectiveTime>
                  <value xsi:type="ST">Negative</value>
                  <referenceRange>
                    <observationRange>
                      <text>NEG mg/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="94449091.9"/>
                  <code code="5797-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Ketones"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101103400">
                    <low value="20140101103400"/>
                  </effectiveTime>
                  <value xsi:type="ST">Negative</value>
                  <referenceRange>
                    <observationRange>
                      <text>NEG mg/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="94449091.10"/>
                  <code code="19161-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Urobilinogen"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101103400">
                    <low value="20140101103400"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="0.2" unit="EU/dL"/>
                  <referenceRange>
                    <observationRange>
                      <text>0.2-1.0 EU/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="94449091.11"/>
                  <code code="5770-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Bilirubin"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101103400">
                    <low value="20140101103400"/>
                  </effectiveTime>
                  <value xsi:type="ST">Negative</value>
                  <referenceRange>
                    <observationRange>
                      <text>NEG</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="94449091.12"/>
                  <code code="5794-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Blood"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101103400">
                    <low value="20140101103400"/>
                  </effectiveTime>
                  <value xsi:type="ST">Large</value>
                  <interpretationCode code="A"/>
                  <referenceRange>
                    <observationRange>
                      <text>NEG</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="94449091.13"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="WBC"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101103400">
                    <low value="20140101103400"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="0" unit="/hpf"/>
                  <referenceRange>
                    <observationRange>
                      <text>0-5 /hpf</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="94449091.14"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="RBC"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101103400">
                    <low value="20140101103400"/>
                  </effectiveTime>
                  <value xsi:type="ST">10-20</value>
                  <referenceRange>
                    <observationRange>
                      <text>0-2 /hpf</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="94449091.15"/>
                  <code code="5769-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Bacteria"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101103400">
                    <low value="20140101103400"/>
                  </effectiveTime>
                  <value xsi:type="ST">None</value>
                  <referenceRange>
                    <observationRange>
                      <text>NONE /hpf</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="94449091.16"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Squamous Ep"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101103400">
                    <low value="20140101103400"/>
                  </effectiveTime>
                  <value xsi:type="ST">Few</value>
                  <referenceRange>
                    <observationRange>
                      <text> /lpf</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="94449091.17"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Amorphous"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101103400">
                    <low value="20140101103400"/>
                  </effectiveTime>
                  <value xsi:type="ST">Occ</value>
                  <referenceRange>
                    <observationRange>
                      <text> /lpf</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <procedure classCode="PROC" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.29"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.19"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.17"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="94449091"/>
                  <code code="81001" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="URINALYSIS, COMPLETE">
                    <originalText>
											<reference value="#"/>
										</originalText>
                  </code>
                  <text>
										<reference value="#Result46"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101103400">
                    <low value="20140101103400"/>
                  </effectiveTime>
                </procedure>
              </component>
            </organizer>
          </entry>
          <entry typeCode="DRIV">
            <organizer classCode="BATTERY" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.32"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="100240524"/>
              <code code="80053" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="COMP METABOLIC PANEL"/>
              <statusCode code="completed"/>
              <effectiveTime value="20140101104500"/>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240524.1"/>
                  <code code="2951-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Sodium"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="133" unit="mmol/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>133-145 mmol/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240524.2"/>
                  <code code="2823-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Potassium"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="3.8" unit="mmol/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>3.3-5.1 mmol/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240524.3"/>
                  <code code="2075-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Chloride"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="99" unit="mmol/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>96-108 mmol/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240524.4"/>
                  <code code="2028-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="CO2"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="26" unit="mmol/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>21-31 mmol/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240524.5"/>
                  <code code="1863-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Anion Gap"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="8" unit=""/>
                  <referenceRange>
                    <observationRange>
                      <text>4-16 </text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240524.6"/>
                  <code code="3094-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="BUN"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="17" unit="mg/dL"/>
                  <referenceRange>
                    <observationRange>
                      <text>8-24 mg/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240524.7"/>
                  <code code="2160-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Creatinine"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="0.89" unit="mg/dL"/>
                  <referenceRange>
                    <observationRange>
                      <text>0.50-1.20 mg/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240524.8"/>
                  <code code="2345-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Glucose"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="175" unit="mg/dL"/>
                  <interpretationCode code="H"/>
                  <referenceRange>
                    <observationRange>
                      <text>70-99 mg/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240524.9"/>
                  <code code="17861-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Calcium"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="8.8" unit="mg/dL"/>
                  <referenceRange>
                    <observationRange>
                      <text>8.6-10.3 mg/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240524.10"/>
                  <code code="2885-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Total Protein"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="6.9" unit="g/dL"/>
                  <referenceRange>
                    <observationRange>
                      <text>5.9-8.4 g/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240524.11"/>
                  <code code="1751-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Albumin"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="3.8" unit="g/dL"/>
                  <interpretationCode code="L"/>
                  <referenceRange>
                    <observationRange>
                      <text>4.0-5.1 g/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240524.12"/>
                  <code code="10834-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Globulin"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="3.1" unit="g/dL"/>
                  <referenceRange>
                    <observationRange>
                      <text>2.0-3.6 g/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240524.13"/>
                  <code code="1759-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="A/G Ratio"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="1.2" unit=""/>
                  <referenceRange>
                    <observationRange>
                      <text>1.2-2.3 </text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240524.14"/>
                  <code code="1920-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="AST (SGOT)"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="36" unit="U/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>0-37 U/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240524.15"/>
                  <code code="1742-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="ALT (SGPT)"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="33" unit="U/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>7-51 U/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240524.16"/>
                  <code code="6768-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Alk Phos"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="77" unit="U/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>34-104 U/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240524.17"/>
                  <code code="1975-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Bilirubin, Total"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="0.7" unit="mg/dL"/>
                  <referenceRange>
                    <observationRange>
                      <text>0-1.2 mg/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240524.18"/>
                  <code code="48642-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="GFR (Non-African Amer)"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="ST">>60</value>
                  <referenceRange>
                    <observationRange>
                      <text>>59 mL/min/1.73m2</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240524.19"/>
                  <code code="48643-1" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="GFR (African American)"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="ST">>60</value>
                  <referenceRange>
                    <observationRange>
                      <text>>59 mL/min/1.73m2</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <procedure classCode="PROC" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.29"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.19"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.17"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="100240524"/>
                  <code code="80053" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="COMP METABOLIC PANEL">
                    <originalText>
											<reference value="#"/>
										</originalText>
                  </code>
                  <text>
										<reference value="#Result47"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                </procedure>
              </component>
            </organizer>
          </entry>
          <entry typeCode="DRIV">
            <organizer classCode="BATTERY" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.32"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="100240525"/>
              <code code="85025" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="CBC PLT W/AUTO DIFF"/>
              <statusCode code="completed"/>
              <effectiveTime value="20140101104500"/>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240525.1"/>
                  <code code="6690-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="WBC"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="9.1" unit="10(9)/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>3.8-11.2 10(9)/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240525.2"/>
                  <code code="789-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="RBC"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="4.48" unit="10(12)/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>4.4-6.0 10(12)/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240525.3"/>
                  <code code="718-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Hemoglobin"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="13.8" unit="g/dL"/>
                  <referenceRange>
                    <observationRange>
                      <text>13.4-17.2 g/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240525.4"/>
                  <code code="4544-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Hematocrit"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="42.2" unit="%"/>
                  <referenceRange>
                    <observationRange>
                      <text>39.5-49.7 %</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240525.5"/>
                  <code code="787-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="MCV"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="94.3" unit="fL"/>
                  <referenceRange>
                    <observationRange>
                      <text>80-100 fL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240525.6"/>
                  <code code="785-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="MCH"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="30.9" unit="pg"/>
                  <referenceRange>
                    <observationRange>
                      <text>27-33 pg</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240525.7"/>
                  <code code="786-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="MCHC"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="32.8" unit="g/dL"/>
                  <referenceRange>
                    <observationRange>
                      <text>32-36 g/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240525.8"/>
                  <code code="788-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="RDW"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="12.4" unit="%"/>
                  <referenceRange>
                    <observationRange>
                      <text>11-15 %</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240525.9"/>
                  <code code="777-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Platelet Count"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="178" unit="10(9)/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>150-450 10(9)/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240525.10"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Diff Method"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="ST">Auto</value>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240525.11"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Neutrophils"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="80" unit="%"/>
                  <interpretationCode code="H"/>
                  <referenceRange>
                    <observationRange>
                      <text>40-70 %</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240525.12"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Lymphs"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="15" unit="%"/>
                  <interpretationCode code="L"/>
                  <referenceRange>
                    <observationRange>
                      <text>20-45 %</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240525.13"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Monocytes"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="2" unit="%"/>
                  <interpretationCode code="L"/>
                  <referenceRange>
                    <observationRange>
                      <text>4-10 %</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240525.14"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Eosinophils"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="2" unit="%"/>
                  <referenceRange>
                    <observationRange>
                      <text>0-6 %</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240525.15"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Basophils"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="1" unit="%"/>
                  <referenceRange>
                    <observationRange>
                      <text>0-2 %</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240525.16"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Neutrophils, Absolute"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="7.30" unit="10(9)/L"/>
                  <interpretationCode code="H"/>
                  <referenceRange>
                    <observationRange>
                      <text>1.4-7.0 10(9)/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240525.17"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Lymphs, Absolute"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="1.40" unit="10(9)/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>0.7-4.5 10(9)/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240525.18"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Monocytes, Absolute"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="0.20" unit="10(9)/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>0.1-1.0 10(9)/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240525.19"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Eosinophils, Absolute"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="0.20" unit="10(9)/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>0-0.6 10(9)/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240525.20"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Basophils, Absolute"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="0.00" unit="10(9)/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>0-0.2 10(9)/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <procedure classCode="PROC" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.29"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.19"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.17"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="100240525"/>
                  <code code="85025" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="CBC PLT W/AUTO DIFF">
                    <originalText>
											<reference value="#"/>
										</originalText>
                  </code>
                  <text>
										<reference value="#Result48"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                </procedure>
              </component>
            </organizer>
          </entry>
          <entry typeCode="DRIV">
            <organizer classCode="BATTERY" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.32"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="100240526"/>
              <code code="83690" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="LIPASE"/>
              <statusCode code="completed"/>
              <effectiveTime value="20140101104500"/>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240526.1"/>
                  <code code="3040-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Lipase"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="35" unit="U/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>4-58 U/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <procedure classCode="PROC" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.29"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.19"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.17"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="100240526"/>
                  <code code="83690" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="LIPASE">
                    <originalText>
											<reference value="#"/>
										</originalText>
                  </code>
                  <text>
										<reference value="#Result49"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140101104500">
                    <low value="20140101104500"/>
                  </effectiveTime>
                </procedure>
              </component>
            </organizer>
          </entry>
          <entry typeCode="DRIV">
            <organizer classCode="BATTERY" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.32"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="100240531"/>
              <code code="81002" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="URINALYSIS, DIP STICK/TABLET REAGENT; NON-AUTO W/O MICRO"/>
              <statusCode code="completed"/>
              <effectiveTime value="20140116095200"/>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240531.1"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="UA Leukocytes Esterase"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116095200">
                    <low value="20140116095200"/>
                  </effectiveTime>
                  <value xsi:type="ST">neg</value>
                  <referenceRange>
                    <observationRange>
                      <text>NEG</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240531.2"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="UA Nitrite"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116095200">
                    <low value="20140116095200"/>
                  </effectiveTime>
                  <value xsi:type="ST">neg</value>
                  <referenceRange>
                    <observationRange>
                      <text>NEG</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240531.3"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="UA Urobilinogen"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116095200">
                    <low value="20140116095200"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="0.2" unit="EU/dL"/>
                  <referenceRange>
                    <observationRange>
                      <text>0.2-1.0 EU/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240531.4"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="UA Protein"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116095200">
                    <low value="20140116095200"/>
                  </effectiveTime>
                  <value xsi:type="ST">neg</value>
                  <referenceRange>
                    <observationRange>
                      <text>NEG mg/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240531.5"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="UA pH"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116095200">
                    <low value="20140116095200"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="5.0"/>
                  <referenceRange>
                    <observationRange>
                      <text>5.0-8.5</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240531.6"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="UA Blood"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116095200">
                    <low value="20140116095200"/>
                  </effectiveTime>
                  <value xsi:type="ST">neg</value>
                  <referenceRange>
                    <observationRange>
                      <text>NEG</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240531.7"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="UA Specific Gravity"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116095200">
                    <low value="20140116095200"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="1.025"/>
                  <referenceRange>
                    <observationRange>
                      <text>1.005-1.030</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240531.8"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="UA Ketone"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116095200">
                    <low value="20140116095200"/>
                  </effectiveTime>
                  <value xsi:type="ST">neg</value>
                  <referenceRange>
                    <observationRange>
                      <text>NEG mg/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240531.9"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="UA Bilirubin"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116095200">
                    <low value="20140116095200"/>
                  </effectiveTime>
                  <value xsi:type="ST">neg</value>
                  <referenceRange>
                    <observationRange>
                      <text>NEG</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.6.798268.2000" extension="100240531.10"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="UA Glucose"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116095200">
                    <low value="20140116095200"/>
                  </effectiveTime>
                  <value xsi:type="ST">neg</value>
                  <referenceRange>
                    <observationRange>
                      <text>NEG mg/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <procedure classCode="PROC" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.29"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.19"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.17"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.798268" extension="100240531"/>
                  <code code="81002" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="URINALYSIS, DIP STICK/TABLET REAGENT; NON-AUTO W/O MICRO">
                    <originalText>
											<reference value="#"/>
										</originalText>
                  </code>
                  <text>
										<reference value="#Result50"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116095200">
                    <low value="20140116095200"/>
                  </effectiveTime>
                </procedure>
              </component>
            </organizer>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.1.16"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.25"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.1.5.3.2"/>
          <templateId root="2.16.840.1.113883.3.88.11.83.119"/>
          <code code="8716-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Vital Signs"/>
          <title>Last Filed Vitals</title>
          <text><table ID="_nbVitalSignsComments" border="1" width="100%"><thead><tr><th>Comments</th></tr></thead><tbody/></table><table ID="_nbVitalSigns" border="1" width="100%"><thead><tr><th>Date</th><th>TEMP</th><th>Heart Rate</th><th>Resp Rate</th><th>BP</th><th>Height</th><th>Height-Lying</th><th>Body Mass Index</th><th>Weight</th><th>O2 Sat</th><th>Head Circumf</th><th>Body Surface Area</th><th>Source</th></tr>
</thead><tbody><tr><td>20140205014536+0000</td><td>--</td><td>88 </td><td>--</td><td>120/70 mm[Hg]</td><td>--</td><td>--</td><td>43.95 kg/m2</td><td>131.09 kg</td><td>--</td><td>--</td><td>--</td><td>--</td></tr></tbody></table><content ID="sysBP_5462473536">120</content>
<content ID="diaBP_5462473536">70</content>
<td ID="pulse_5462473536">88</td>
<td ID="temp_5462473536"/>
<td ID="resp_5462473536"/>
<td ID="height_5462473536"/>
<td ID="weight_5462473536">289 lb (131.09 kg)</td>
<td ID="bmi_5462473536">43.95</td>
<td ID="SpO2_5462473536"/>
</text>
          <entry typeCode="DRIV">
            <organizer classCode="CLUSTER" moodCode="EVN">
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.1"/>
              <templateId root="2.16.840.1.113883.10.20.1.32"/>
              <templateId root="2.16.840.1.113883.10.20.1.35"/>
              <id root="1.2.840.114350.1.13.105.2.7.1.2109" extension="5462473536-Z1171356"/>
              <code code="46680005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Vital signs"/>
              <statusCode code="completed"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.14"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.1.2109.1" extension="5462473536-sysBP-Z1171356"/>
                  <code code="8480-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="SYSTOLIC BLOOD PRESSURE"/>
                  <text>
										<reference value="#sysBP_5462473536"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140205014536+0000">
                    <low value="20140205014536+0000"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="120" unit="mm[Hg]"/>
                  <referenceRange>
                    <observationRange>
                      <text> mm[Hg]</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.14"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.1.2109.1" extension="5462473536-diaBP-Z1171356"/>
                  <code code="8462-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="DIASTOLIC BLOOD PRESSURE"/>
                  <text>
										<reference value="#diaBP_5462473536"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140205014536+0000">
                    <low value="20140205014536+0000"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="70" unit="mm[Hg]"/>
                  <referenceRange>
                    <observationRange>
                      <text> mm[Hg]</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.14"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.1.2109.1" extension="5462473536-pulse-Z1171356"/>
                  <code code="8867-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="HEART RATE"/>
                  <text>
										<reference value="#pulse_5462473536"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140205014536+0000">
                    <low value="20140205014536+0000"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="88"/>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.14"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.1.2109.1" extension="5462473536-weightC83-Z1171356"/>
                  <code code="3141-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="WEIGHT"/>
                  <text>
										<reference value="#weight_5462473536"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140205014536+0000">
                    <low value="20140205014536+0000"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="131.09" unit="kg"/>
                  <referenceRange>
                    <observationRange>
                      <text> kg</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.14"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.105.2.7.1.2109.1" extension="5462473536-bmi-Z1171356"/>
                  <code code="39156-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="BODY MASS INDEX"/>
                  <text>
										<reference value="#bmi_5462473536"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140205014536+0000">
                    <low value="20140205014536+0000"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="43.95" unit="kg/m2"/>
                  <referenceRange>
                    <observationRange>
                      <text> kg/m2</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
            </organizer>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.1.9"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.1.5.3.7"/>
          <templateId root="2.16.840.1.113883.3.88.11.83.101.1"/>
          <code code="48768-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Payment Sources"/>
          <title>Insurance</title>
          <text>		<table ID="_nbPayer" border="1" width="100%">
		<thead>
			<tr>
				<th>Result Id</th>
				<th>Group Number</th>
				<th>Insurance Type</th>
				<th>Information Source ID</th>
				<th>Information Source Address</th>
				<th>Information Source Phone/email/URL</th>
				<th>Information Source Name</th>
				<th>Coverage Begin Date</th>
				<th>Coverage end date</th>
				<th>Member ID</th>
				<th>Relationship type</th>
				<th>Patient Address</th>
				<th>Patient Phone</th>
				<th>Patient Name</th>
				<th>Patient Date of Birth</th>
				<th>Financially Responsible Party</th>
				<th>Subscriber ID</th>
				<th>Subscriber Address</th>
				<th>Subscriber Phone</th>
				<th>Subscriber Name</th>
				<th>Subscriber Date of Birth</th>
				<th>Guarantor Date of Financial Responsibility</th>
				<th>Guarantor Address</th>
				<th>Guarantor Phone</th>
				<th>Guarantor Name</th>
				<th>Health Plan Name</th>
			</tr>
		</thead>
		<tbody>
				<tr>
				<td>--</td>
				<td>00000</td>
				<td>extended healthcare</td>
				<td>--</td>
				<td>VA MED. &amp; REG. OFFICE STREET_ADDRESS HONOLULU, HI 012345</td>
				<td>+1-000-123-4567</td>
				<td>VETERANS ADMINISTRATION</td>
				<td>--</td>
				<td>--</td>
				<td>000000000000</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
			</tr>
	<tr>
				<td>--</td>
				<td>00000</td>
				<td>public healthcare</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>MEDICARE</td>
				<td>--</td>
				<td>--</td>
				<td>000000000AA</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
			</tr>
	<tr>
				<td>--</td>
				<td>00000</td>
				<td>extended healthcare</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>WORKERS COMP</td>
				<td>--</td>
				<td>--</td>
				<td>WCB 00/00/00</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
				<td>--</td>
			</tr>
		</tbody>
	</table>
<tr ID="coverage55"><td>VETERANS ADMINISTRATION</td><td>VETERANS ADMINISTRATION</td><td>000000000</td><td>PPO</td><td>+1-000-123-4567</td><td><paragraph>VA MED. &amp; REG. OFFICE</paragraph><paragraph>STREET_ADDRESS</paragraph><paragraph>HONOLULU, HI 012345</paragraph></td></tr>
<tr ID="coverage56"><td>MEDICARE</td><td>MEDICARE A&amp;B</td><td>000000000A</td><td>Medicare</td><td/><td/></tr>
<tr ID="coverage57"><td>WORKERS COMP</td><td>WC</td><td>WCB 06/04/03</td><td>PPO</td><td/><td/></tr>
</text>
          <entry>
            <act classCode="ACT" moodCode="DEF">
              <templateId root="2.16.840.1.113883.10.20.1.20"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.17"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.678671" extension="1442690"/>
              <code code="48768-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Payment sources"/>
              <statusCode code="completed"/>
              <entryRelationship typeCode="COMP">
                <act classCode="ACT" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.26"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.18"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.7"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.698080" extension="00000"/>
                  <code code="EHCPOL" codeSystem="2.16.840.1.113883.5.4" displayName="extended healthcare"/>
                  <statusCode code="completed"/>
                  <performer typeCode="PRF">
                    <assignedEntity classCode="ASSIGNED">
                      <id root="1.2.840.114350.1.13.105.2.7.2.698077" extension="0000"/>
                      <id root="2.16.840.1.113883.12.86" extension="PI"/>
                      <addr>
												<streetAddressLine>VA MED. &amp; REG. OFFICE</streetAddressLine>
												<streetAddressLine>STREET_ADDRESS</streetAddressLine>
												<city>HONOLULU</city>
												<state>HI</state>
												<postalCode>012345</postalCode>
											</addr>
                      <telecom value="+1-000-123-4567"/>
                      <representedOrganization>
                        <name>VETERANS ADMINISTRATION</name>
                        <telecom value="+1-000-123-4567"/>
                        <addr>
													<streetAddressLine>VA MED. &amp; REG. OFFICE</streetAddressLine>
													<streetAddressLine>STREET_ADDRESS</streetAddressLine>
													<city>HONOLULU</city>
													<state>HI</state>
													<postalCode>012345</postalCode>
												</addr>
                      </representedOrganization>
                    </assignedEntity>
                  </performer>
                  <participant typeCode="COV">
                    <participantRole>
                      <id root="2.16.840.1.113883.3.249.13" extension="000000000000"/>
                    </participantRole>
                  </participant>
                </act>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="DEF">
              <templateId root="2.16.840.1.113883.10.20.1.20"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.17"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.678671" extension="2130805"/>
              <code code="48768-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Payment sources"/>
              <statusCode code="completed"/>
              <entryRelationship typeCode="COMP">
                <act classCode="ACT" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.26"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.18"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.7"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.698080" extension="00000"/>
                  <code code="PUBLICPOL" codeSystem="2.16.840.1.113883.5.4" displayName="public healthcare"/>
                  <statusCode code="completed"/>
                  <performer typeCode="PRF">
                    <assignedEntity classCode="ASSIGNED">
                      <id root="1.2.840.114350.1.13.105.2.7.2.698077" extension="0000"/>
                      <id root="2.16.840.1.113883.12.86" extension="MC"/>
                      <telecom nullFlavor="UNK"/>
                      <representedOrganization>
                        <name>MEDICARE</name>
                        <telecom nullFlavor="UNK"/>
                      </representedOrganization>
                    </assignedEntity>
                  </performer>
                  <participant typeCode="COV">
                    <participantRole>
                      <id root="2.16.840.1.113883.3.249.13" extension="000000000AA"/>
                    </participantRole>
                  </participant>
                </act>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="DEF">
              <templateId root="2.16.840.1.113883.10.20.1.20"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.17"/>
              <id root="1.2.840.114350.1.13.105.2.7.2.678671" extension="70407"/>
              <code code="48768-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Payment sources"/>
              <statusCode code="completed"/>
              <entryRelationship typeCode="COMP">
                <act classCode="ACT" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.26"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.18"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.7"/>
                  <id root="1.2.840.114350.1.13.105.2.7.2.698080" extension="00000"/>
                  <code code="EHOL" codeSystem="2.16.840.1.113883.5.4" displayName="extended healthcare"/>
                  <statusCode code="completed"/>
                  <performer typeCode="PRF">
                    <assignedEntity classCode="ASSIGNED">
                      <id root="1.2.840.114350.1.13.105.2.7.2.698077" extension="0000"/>
                      <id root="2.16.840.1.113883.12.86" extension="PI"/>
                      <telecom nullFlavor="UNK"/>
                      <representedOrganization>
                        <name>WORKERS COMP</name>
                        <telecom nullFlavor="UNK"/>
                      </representedOrganization>
                    </assignedEntity>
                  </performer>
                  <participant typeCode="COV">
                    <participantRole>
                      <id root="2.16.840.1.113883.3.249.13" extension="WCB 00/00/00"/>
                    </participantRole>
                  </participant>
                </act>
              </entryRelationship>
            </act>
          </entry>
        </section>
      </component>
    </structuredBody>
  </component>
</ClinicalDocument>