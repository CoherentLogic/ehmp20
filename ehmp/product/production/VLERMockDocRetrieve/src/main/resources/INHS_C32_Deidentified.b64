<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="cda2detail.xsl"?>

<ClinicalDocument xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:hl7-org:v3" xmlns:_ns0="http://www.w3.org/2001/XMLSchema-instance">
  <realmCode code="US"/>
  <typeId root="2.16.840.1.113883.1.3" extension="POCD_HD000040"/>
  <templateId root="1.2.840.114350.1.72.1.51693"/>
  <templateId root="2.16.840.1.113883.10" extension="IMPL_CDAR2_LEVEL1"/>
  <templateId root="2.16.840.1.113883.10.20.3"/>
  <templateId root="2.16.840.1.113883.10.20.1"/>
  <templateId root="2.16.840.1.113883.3.88.11.32.1"/>
  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.1.5"/>
  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.1.2"/>
  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.1.1"/>
  <id root="1.2.840.114350.1.13.60.2.7.8.688883.908387" assigningAuthorityName="EPC"/>
  <code code="34133-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Summarization of Episode Note"/>
  <title>Continuity of Care Document</title>
  <effectiveTime value="20140212112214"/>
  <confidentialityCode code="N" codeSystem="2.16.840.1.113883.5.25"/>
  <languageCode code="en-US"/>
  <setId root="1.2.840.114350.1.13.60.2.7.1.1" extension="9edb9032-7aa1-11e1-a390-24047f890749" assigningAuthorityName="EPC"/>
  <versionNumber value="5"/>
  <recordTarget>
    <patientRole>
      <id root="1.2.840.114350.1.13.60.2.7.5.737384.0" extension="0123456789"/>
      <addr use="HP">
				<streetAddressLine>000 ANY STREET</streetAddressLine>
				<streetAddressLine>APT 000 </streetAddressLine>
				<streetAddressLine nullFlavor="UNK"/>
				<city>ANY CITY</city>
				<state>WA</state>
				<postalCode>98466</postalCode>
				<country>USA</country>
			</addr>
      <telecom value="tel:+1-888-123-4567" use="HP"/>
      <telecom value="mailto://anyname@anymail.com"/>
      <patient>
        <name use="L">
					<given>FIRSTNAME_PATIENT</given>
					<given>MI</given>
					<family>LASTNAME_PATIENT</family>
				</name>
        <name use="P">
					<given>FIRSTNAME_PATIENT</given>
					<given>MI</given>
					<family>LASTNAME_PATIENT</family>
				</name>
        <administrativeGenderCode code="M" codeSystem="2.16.840.1.113883.5.1" codeSystemName="AdministrativeGenderCode" displayName="Male"/>
        <birthTime value="19000101"/>
        <maritalStatusCode code="D" codeSystem="2.16.840.1.113883.5.2" codeSystemName="MaritalStatusCode" displayName="Divorced"/>
        <religiousAffiliationCode code="None" codeSystem="2.16.840.1.113883.5.1076" codeSystemName="ReligiousAffiliation"/>
        <raceCode code="2106-3" codeSystem="2.16.840.1.113883.6.238" codeSystemName="CDC Race and Ethnicity" displayName="Caucasian"/>
        <ethnicGroupCode code="1" codeSystem="2.16.840.1.113883.6.238" codeSystemName="CDC Race and Ethnicity" displayName="Caucasian"/>
        <languageCommunication>
          <languageCode code="English"/>
          <preferenceInd value="true"/>
        </languageCommunication>
        <languageCommunication>
          <languageCode code="English"/>
          <modeCode code="RWR" codeSystem="2.16.840.1.113883.5.60" displayName="Received Written"/>
        </languageCommunication>
      </patient>
      <providerOrganization>
        <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
        <name>EXTERNAL MMG PCP</name>
        <telecom nullFlavor="NA"/>
        <addr nullFlavor="NA"/>
      </providerOrganization>
    </patientRole>
  </recordTarget>
  <author>
    <time value="20140212112214"/>
    <assignedAuthor>
      <id nullFlavor="NA"/>
      <addr nullFlavor="NA">
				<streetAddressLine nullFlavor="UNK"/>
				<city nullFlavor="UNK"/>
			</addr>
      <telecom nullFlavor="NA"/>
      <assignedPerson>
        <name nullFlavor="NA"/>
      </assignedPerson>
      <representedOrganization>
        <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
        <name>EXTERNAL MMG PCP</name>
        <telecom nullFlavor="NA"/>
        <addr nullFlavor="NA"/>
      </representedOrganization>
    </assignedAuthor>
  </author>
  <author>
    <time value="20140212112214"/>
    <assignedAuthor>
      <id root="1.2.840.114350.1.1" extension="7.9"/>
      <addr nullFlavor="NA">
				<streetAddressLine nullFlavor="UNK"/>
				<city nullFlavor="UNK"/>
			</addr>
      <telecom nullFlavor="NA"/>
      <assignedAuthoringDevice>
        <manufacturerModelName>Epic - Version 7.9</manufacturerModelName>
        <softwareName>Epic - Version 7.9</softwareName>
      </assignedAuthoringDevice>
      <representedOrganization>
        <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
        <name>EXTERNAL MMG PCP</name>
        <telecom nullFlavor="NA"/>
        <addr nullFlavor="NA"/>
      </representedOrganization>
    </assignedAuthor>
  </author>
  <custodian>
    <assignedCustodian>
      <representedCustodianOrganization>
        <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
        <name>EXTERNAL MMG PCP</name>
        <telecom nullFlavor="NA"/>
        <addr nullFlavor="NA"/>
      </representedCustodianOrganization>
    </assignedCustodian>
  </custodian>
  <participant typeCode="IND">
    <templateId root="2.16.840.1.113883.3.88.11.32.3"/>
    <templateId root="2.16.840.1.113883.3.88.11.83.3"/>
    <templateId root="1.3.6.1.4.1.19376.1.5.3.1.2.4"/>
    <time value="20021124"/>
    <associatedEntity classCode="ECON">
      <id nullFlavor="UNK"/>
      <code code="Spouse" codeSystem="2.16.840.1.113883.5.111" codeSystemName="RoleCode" displayName="Spouse"/>
      <addr>
				<streetAddressLine>000 ANY STREET</streetAddressLine>
				<city>ANY CITY</city>
				<state>WA</state>
				<postalCode>98335</postalCode>
				<country>USA</country>
			</addr>
      <telecom value="tel:+1-888-123-4567" use="HP"/>
      <telecom value="tel:+1-1888-123-4567" use="WP"/>
      <associatedPerson>
        <name use="P">
					<given>FIRSTNAME_ECON1 LASTNAME</given>
				</name>
      </associatedPerson>
    </associatedEntity>
  </participant>
  <participant typeCode="IND">
    <templateId root="2.16.840.1.113883.3.88.11.32.3"/>
    <templateId root="2.16.840.1.113883.3.88.11.83.3"/>
    <templateId root="1.3.6.1.4.1.19376.1.5.3.1.2.4"/>
    <time value="20021124"/>
    <associatedEntity classCode="ECON">
      <id nullFlavor="UNK"/>
      <code code="Mother" codeSystem="2.16.840.1.113883.5.111" codeSystemName="RoleCode" displayName="Mother"/>
      <addr>
				<country>USA</country>
			</addr>
      <telecom value="tel:+1-888-123-4567" use="HP"/>
      <associatedPerson>
        <name use="P">
					<given>LASTNAME, FIRSTNAME_ECON2</given>
				</name>
      </associatedPerson>
    </associatedEntity>
  </participant>
  <participant typeCode="IND">
    <templateId root="2.16.840.1.113883.3.88.11.32.3"/>
    <templateId root="2.16.840.1.113883.3.88.11.83.3"/>
    <templateId root="1.3.6.1.4.1.19376.1.5.3.1.2.4"/>
    <time value="20021124"/>
    <associatedEntity classCode="ECON">
      <id nullFlavor="UNK"/>
      <code code="Father" codeSystem="2.16.840.1.113883.5.111" codeSystemName="RoleCode" displayName="Father"/>
      <addr>
				<country>USA</country>
			</addr>
      <telecom value="tel:+1-888-123-4567" use="HP"/>
      <associatedPerson>
        <name use="P">
					<given>LASTNAME, FIRSTNAME_ECON3</given>
				</name>
      </associatedPerson>
    </associatedEntity>
  </participant>
  <documentationOf typeCode="DOC">
    <serviceEvent classCode="PCPR">
      <effectiveTime>
        <low value="19751122"/>
        <high value="20140212"/>
      </effectiveTime>
      <performer typeCode="PRF">
        <templateId root="2.16.840.1.113883.3.88.11.32.4"/>
        <templateId root="2.16.840.1.113883.3.88.11.83.4"/>
        <templateId root="1.3.6.1.4.1.19376.1.5.3.1.2.3"/>
        <functionCode code="PP" codeSystem="2.16.840.1.113883.12.443" codeSystemName="Provider Role" displayName="Primary Care Provider">
          <originalText>Primary Care Provider</originalText>
        </functionCode>
        <time>
          <low value="20140116"/>
          <high nullFlavor="PINF"/>
        </time>
        <assignedEntity>
          <id root="2.16.840.1.113883.4.6" extension="123456789"/>
          <addr use="WP">
						<streetAddressLine>000 ANY STREET</streetAddressLine>
						<city>ANY CITY</city>
						<state>WA</state>
						<postalCode>98498</postalCode>
					</addr>
          <telecom value="tel:+1-888-123-4567" use="WP"/>
          <telecom value="fax:+1-888-123-4567"/>
          <assignedPerson>
            <name>
							<given>FIRST_NAME</given>
							<given>A</given>
							<family>LAST_NAME</family>
						</name>
          </assignedPerson>
          <representedOrganization>
            <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
            <name>EXTERNAL MMG PCP</name>
            <telecom nullFlavor="NA"/>
            <addr nullFlavor="NA"/>
          </representedOrganization>
        </assignedEntity>
      </performer>
    </serviceEvent>
  </documentationOf>
  <component>
    <structuredBody>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.1.2"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.13"/>
          <templateId root="2.16.840.1.113883.3.88.11.83.102"/>
          <id root="fa81fa68-941a-11e3-92ec-24047f890749"/>
          <code code="48765-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Allergies, Adverse Reactions, Alerts"/>
          <title>Active Allergies and Adverse Reactions</title>
          <text><table ID="_nbAllergy" border="1" width="100%"><thead><tr><th>Allergen</th><th>Reaction</th><th>Severity</th><th>Event Type</th><th>Event Date</th><th>Source</th></tr>
</thead><tbody><tr><td>NO KNOWN DRUG ALLERGY</td><td>--</td><td>--</td><td>propensity to adverse reactions to drug</td><td>20001129</td><td>EXTERNAL MMG PCP</td></tr></tbody></table><tr ID="allergy1"><td ID="allergy1allergen">No Known Drug Allergy</td><td ID="allergy1noted">11/29/2000</td><td ID="allergy1severity"/><td/><td ID="allergy1comments"/></tr>
</text>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.3"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.6"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.6"/>
              <id root="1.2.840.114350.1.13.60.2.7.2.768076" extension="865067"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low value="20001129"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN" negationInd="false">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
                  <templateId root="2.16.840.1.113883.10.20.1.18"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1" extension="allergy"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.60.2.7.2.768076" extension="865067"/>
                  <code code="419511003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="propensity to adverse reactions to drug"/>
                  <text>
										<reference value="#allergy1"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low value="20001129"/>
                    <high nullFlavor="PINF"/>
                  </effectiveTime>
                  <value xsi:type="CD" nullFlavor="UNK"/>
                  <author>
                    <time value="20020509"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.60.2.7.2.697780" extension="20709"/>
                      <addr nullFlavor="UNK"/>
                      <telecom value="tel:+1-888-123-4567" use="WP"/>
                      <assignedPerson>
                        <name>
													<given>Regina</given>
													<family>Puratich</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
                        <name>EXTERNAL MMG PCP</name>
                        <telecom nullFlavor="NA"/>
                        <addr nullFlavor="NA"/>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <participant typeCode="CSM">
                    <participantRole classCode="MANU">
                      <playingEntity classCode="MMAT">
                        <code nullFlavor="UNK">
                          <originalText>
														<reference value="#allergy1allergen"/>
													</originalText>
                        </code>
                        <name>NO KNOWN DRUG ALLERGY</name>
                      </playingEntity>
                    </participantRole>
                  </participant>
                  <entryRelationship typeCode="REFR" inversionInd="true">
                    <observation classCode="OBS" moodCode="EVN">
                      <templateId root="2.16.840.1.113883.10.20.1.39"/>
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.1.8"/>
          <templateId root="2.16.840.1.113883.3.88.11.83.112"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.19"/>
          <id root="fad0924a-941a-11e3-92ec-24047f890749"/>
          <code code="10160-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="HISTORY OF MEDICATION USE"/>
          <title>Medications</title>
          <text><table ID="_nbMedications" border="1" width="100%">
	<thead>
<tr><th>Medications</th><th>Medication Brand Name</th><th>Medication Status</th><th>Order Date</th><th>Order Expiration</th><th>Provider (Ordering)</th><th>Prescription #</th><th>Fill Status</th><th>Quantity Dispensed</th><th>Dispense Date</th><th>Sig</th><th>Source</th><th>Reaction</th><th>Indicate Medication Stopped</th><th>Administrative Timing</th><th>Route Code</th><th>Body Site</th><th>Dose Quanity</th><th>Dose Restriction</th><th>Product Form</th><th>Delivery Method</th><th>Drug Manufacture</th><th>Type of Medication</th><th>Indication</th><th>Vehicle</th><th>Dose Indicator</th><th>Order Number</th><th>Total Fills</th><th>FulFillment Instructions</th><th>Dispensing Provider</th><th>Pharmacy Location</th><th>Fill Number</th></tr>
</thead>
<tbody>
<tr><td><content ID="#med2">iopamidol (ISOVUE 370) inj 100 mL</content></td><td>--</td><td>No Longer Active</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>EXTERNAL MMG PCP</td><td>--</td><td>--</td><td>Once on 20140117054500+0000</td><td>Intravenous</td><td>--</td><td>100 mL</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Prescription Drug</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td><content ID="#med3">saline flush (NS) 0.9% NaCl inj 20 mL</content></td><td>--</td><td>No Longer Active</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>EXTERNAL MMG PCP</td><td>--</td><td>--</td><td>Once on 20140117053000+0000</td><td>Intravenous</td><td>--</td><td>20 mL</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Prescription Drug</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td><content ID="#med4">iopamidol (ISOVUE 370) inj 75 mL</content></td><td>--</td><td>No Longer Active</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>EXTERNAL MMG PCP</td><td>--</td><td>--</td><td>Once on 20140117053000+0000</td><td>Intravenous</td><td>--</td><td>75 mL</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Prescription Drug</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td><content ID="#med5">lidocaine nasal kit for adult and peds kit</content></td><td>--</td><td>No Longer Active</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>EXTERNAL MMG PCP</td><td>--</td><td>--</td><td>From: 20140117053917+0000 To: 20140117104912+0000 </td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td><content ID="#med6">atenolol (TENORMIN) 100 MG Tab</content></td><td>--</td><td>Active</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td><content ID="#sig6">Take 100 mg by mouth once daily.</content></td><td>EXTERNAL MMG PCP</td><td>--</td><td>--</td><td>--</td><td>Oral</td><td>--</td><td>100 MG</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Prescription Drug</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td><content ID="#med7">diclofenac (VOLTAREN) 75 MG Tab EC</content></td><td>--</td><td>Active</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td><content ID="#sig7">Take 1 Tab by mouth twice daily.</content></td><td>EXTERNAL MMG PCP</td><td>--</td><td>--</td><td>From: 20120809 </td><td>Oral</td><td>--</td><td>75 MG</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Prescription Drug</td><td>--</td><td>--</td><td>--</td><td>128833397</td><td>1</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td><content ID="#med8">Fluoxetine HCl 40 MG Caps</content></td><td>--</td><td>Active</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td><content ID="#sig8">Take 40 mg by mouth once daily.</content></td><td>EXTERNAL MMG PCP</td><td>--</td><td>--</td><td>--</td><td>Oral</td><td>--</td><td>40 MG</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Prescription Drug</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td><content ID="#med9">tramadol (ULTRAM) 50 MG Tab</content></td><td>--</td><td>Active</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td><content ID="#sig9">Take 1-2 Tabs by mouth four times daily as needed for pain.</content></td><td>EXTERNAL MMG PCP</td><td>--</td><td>--</td><td>From: 20120809 </td><td>Oral</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Prescription Drug</td><td>--</td><td>--</td><td>--</td><td>128833396</td><td>1</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td><content ID="#med10">omeprazole (PRILOSEC) 20 MG CPDR</content></td><td>--</td><td>Active</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td><content ID="#sig10">Take 20 mg by mouth every morning before breakfast.</content></td><td>EXTERNAL MMG PCP</td><td>--</td><td>--</td><td>--</td><td>Oral</td><td>--</td><td>20 MG</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Prescription Drug</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
</tbody></table><tr ID="currx6"><td ID="med6">atenolol (TENORMIN) 100 MG Tab</td><td ID="sig6">Take 100 mg by mouth once daily.</td><td/><td/><td/><td/></tr>
<tr ID="currx7"><td ID="med7">diclofenac (VOLTAREN) 75 MG Tab EC</td><td ID="sig7">Take 1 Tab by mouth twice daily.</td><td><paragraph>60 Tab</paragraph></td><td>0</td><td>08/09/2012</td><td/></tr>
<tr ID="currx8"><td ID="med8">Fluoxetine HCl 40 MG Caps</td><td ID="sig8">Take 40 mg by mouth once daily.</td><td/><td/><td/><td/></tr>
<tr ID="currx9"><td ID="med9">tramadol (ULTRAM) 50 MG Tab</td><td ID="sig9">Take 1-2 Tabs by mouth four times daily as needed for pain.</td><td><paragraph>20 Tab</paragraph></td><td>0</td><td>08/09/2012</td><td/></tr>
<tr ID="currx10"><td ID="med10">omeprazole (PRILOSEC) 20 MG CPDR</td><td ID="sig10">Take 20 mg by mouth every morning before breakfast.</td><td/><td/><td/><td/></tr>
<tr ID="currx2" styleCode="historical"><td ID="med2">iopamidol (ISOVUE 370) inj 100 mL</td><td>100mL</td><td>IV</td><td>once</td><td>01/16/2014</td><td>01/16/2014</td></tr>
<tr ID="currx3" styleCode="historical"><td ID="med3">saline flush (NS) 0.9% NaCl inj 20 mL</td><td>20mL</td><td>IV</td><td>once</td><td>01/16/2014</td><td>01/16/2014</td></tr>
<tr ID="currx4" styleCode="historical"><td ID="med4">iopamidol (ISOVUE 370) inj 75 mL</td><td>75mL</td><td>IV</td><td>once</td><td>01/16/2014</td><td>01/16/2014</td></tr>
<tr ID="currx5" styleCode="historical"><td ID="med5">lidocaine nasal kit for adult and peds kit</td><td/><td/><td/><td>01/16/2014</td><td>01/17/2014</td></tr>
</text>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="INT">
              <templateId root="2.16.840.1.113883.10.20.1.24"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.8"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.8"/>
              <id root="1.2.840.114350.1.13.60.2.7.2.798268" extension="176231180"/>
              <text mediaType="text/xml"/>
              <statusCode code="completed"/>
              <effectiveTime value="20140117054500+0000"/>
              <routeCode code="IV" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="NCI Thesaurus" displayName="Intravenous"/>
              <doseQuantity value="100" unit="mL"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.53"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                  <manufacturedMaterial>
                    <code code="727981" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Iopamidol 76 % IV Soln">
                      <originalText>
												<reference value="#med2"/>
											</originalText>
                      <translation code="28063" codeSystem="2.16.840.1.113883.6.162" codeSystemName="Med-File (Medi-Span)" displayName="Iopamidol 76 % IV Soln"/>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <author>
                <time value="20140117054451+0000"/>
                <assignedAuthor>
                  <id nullFlavor="UNK"/>
                  <addr nullFlavor="UNK"/>
                  <telecom nullFlavor="UNK"/>
                  <assignedPerson>
                    <name>
											<given>Frederick</given>
											<family>de Leon</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
                    <name>EXTERNAL MMG PCP</name>
                    <telecom nullFlavor="NA"/>
                    <addr nullFlavor="NA"/>
                  </representedOrganization>
                </assignedAuthor>
              </author>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.3.88.11.32.10"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.1"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.47"/>
                  <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>
                  <statusCode code="completed"/>
                  <value xsi:type="CE" code="73425007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="No Longer Active"/>
                </observation>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="INT">
              <templateId root="2.16.840.1.113883.10.20.1.24"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.8"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.8"/>
              <id root="1.2.840.114350.1.13.60.2.7.2.798268" extension="176231178"/>
              <text mediaType="text/xml"/>
              <statusCode code="completed"/>
              <effectiveTime value="20140117053000+0000"/>
              <routeCode code="IV" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="NCI Thesaurus" displayName="Intravenous"/>
              <doseQuantity value="20" unit="mL"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.53"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                  <manufacturedMaterial>
                    <code code="1242215" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Sodium Chloride 0.9 % Ij Soln">
                      <originalText>
												<reference value="#med3"/>
											</originalText>
                      <translation code="0517-2802-25" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NDC" displayName="Sodium Chloride 0.9 % Ij Soln"/>
                      <translation code="19722" codeSystem="2.16.840.1.113883.6.162" codeSystemName="Med-File (Medi-Span)" displayName="Sodium Chloride 0.9 % Ij Soln"/>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <author>
                <time value="20140117052049+0000"/>
                <assignedAuthor>
                  <id nullFlavor="UNK"/>
                  <addr nullFlavor="UNK"/>
                  <telecom nullFlavor="UNK"/>
                  <assignedPerson>
                    <name>
											<given>Krista</given>
											<given>B</given>
											<family>Aspaas</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
                    <name>EXTERNAL MMG PCP</name>
                    <telecom nullFlavor="NA"/>
                    <addr nullFlavor="NA"/>
                  </representedOrganization>
                </assignedAuthor>
              </author>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.3.88.11.32.10"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.1"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.47"/>
                  <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>
                  <statusCode code="completed"/>
                  <value xsi:type="CE" code="73425007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="No Longer Active"/>
                </observation>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="INT">
              <templateId root="2.16.840.1.113883.10.20.1.24"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.8"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.8"/>
              <id root="1.2.840.114350.1.13.60.2.7.2.798268" extension="176231177"/>
              <text mediaType="text/xml"/>
              <statusCode code="completed"/>
              <effectiveTime value="20140117053000+0000"/>
              <routeCode code="IV" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="NCI Thesaurus" displayName="Intravenous"/>
              <doseQuantity value="75" unit="mL"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.53"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                  <manufacturedMaterial>
                    <code code="727981" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Iopamidol 76 % IV Soln">
                      <originalText>
												<reference value="#med4"/>
											</originalText>
                      <translation code="28063" codeSystem="2.16.840.1.113883.6.162" codeSystemName="Med-File (Medi-Span)" displayName="Iopamidol 76 % IV Soln"/>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <author>
                <time value="20140117054944+0000"/>
                <assignedAuthor>
                  <id nullFlavor="UNK"/>
                  <addr nullFlavor="UNK"/>
                  <telecom nullFlavor="UNK"/>
                  <assignedPerson>
                    <name>
											<given>Frederick</given>
											<family>de Leon</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
                    <name>EXTERNAL MMG PCP</name>
                    <telecom nullFlavor="NA"/>
                    <addr nullFlavor="NA"/>
                  </representedOrganization>
                </assignedAuthor>
              </author>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.3.88.11.32.10"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.1"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.47"/>
                  <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>
                  <statusCode code="completed"/>
                  <value xsi:type="CE" code="73425007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="No Longer Active"/>
                </observation>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="INT">
              <templateId root="2.16.840.1.113883.10.20.1.24"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.8"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.8"/>
              <id root="1.2.840.114350.1.13.60.2.7.2.798268" extension="176231179"/>
              <text mediaType="text/xml"/>
              <statusCode code="completed"/>
              <effectiveTime xsi:type="IVL_TS">
                <low value="20140117053917+0000"/>
                <high value="20140117104912+0000"/>
              </effectiveTime>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.53"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                  <manufacturedMaterial>
                    <code nullFlavor="UNK" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm">
                      <originalText>
												<reference value="#med5"/>
											</originalText>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <author>
                <time value="20140117104912+0000"/>
                <assignedAuthor>
                  <id root="2.16.840.1.113883.4.6" extension="1790756815"/>
                  <addr>
										<streetAddressLine>000 ANY STREET</streetAddressLine>
										<city>ANY CITY</city>
										<state>WA</state>
										<postalCode>98431-1100</postalCode>
									</addr>
                  <telecom value="tel:+1-888-123-4567" use="WP"/>
                  <telecom value="fax:++1-888-123-4567" use="WP"/>
                  <telecom value="mailto://anyname@anymail.com" use="WP"/>
                  <assignedPerson>
                    <name>
											<given>FIRSTNAME_PROVIDER</given>
											<given>MI</given>
											<family>LASTNAME</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
                    <name>EXTERNAL MMG PCP</name>
                    <telecom nullFlavor="NA"/>
                    <addr nullFlavor="NA"/>
                  </representedOrganization>
                </assignedAuthor>
              </author>
              <entryRelationship typeCode="REFR">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.47"/>
                  <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>
                  <statusCode code="completed"/>
                  <value xsi:type="CE" code="73425007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="No Longer Active"/>
                </observation>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="INT">
              <templateId root="2.16.840.1.113883.10.20.1.24"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.8"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.8"/>
              <id root="1.2.840.114350.1.13.60.2.7.2.798268" extension="128833393"/>
              <text mediaType="text/xml">
								<reference value="#sig6"/>
							</text>
              <statusCode code="completed"/>
              <effectiveTime xsi:type="IVL_TS">
                <low nullFlavor="UNK"/>
                <high nullFlavor="UNK"/>
              </effectiveTime>
              <routeCode code="OR" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="NCI Thesaurus" displayName="Oral"/>
              <doseQuantity value="100" unit="MG"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.53"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                  <manufacturedMaterial>
                    <code code="197379" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Atenolol 100 Mg Or Tabs">
                      <originalText>
												<reference value="#med6"/>
											</originalText>
                      <translation code="0093-0753-01" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NDC" displayName="Atenolol 100 Mg Or Tabs"/>
                      <translation code="2010" codeSystem="2.16.840.1.113883.6.162" codeSystemName="Med-File (Medi-Span)" displayName="Atenolol 100 Mg Or Tabs"/>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <author>
                <time value="20120810011813+0000"/>
                <assignedAuthor>
                  <id nullFlavor="UNK"/>
                  <addr nullFlavor="UNK"/>
                  <telecom nullFlavor="UNK"/>
                  <assignedPerson>
                    <name>
											<given>Lisa</given>
											<family>Rouse</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
                    <name>EXTERNAL MMG PCP</name>
                    <telecom nullFlavor="NA"/>
                    <addr nullFlavor="NA"/>
                  </representedOrganization>
                </assignedAuthor>
              </author>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.3.88.11.32.10"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.1"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="SUBJ" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.40"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.12"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.11"/>
                  <code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
                  <text>
										<reference value="#sig6"/>
									</text>
                  <statusCode code="completed"/>
                  <author>
                    <time value="20120810011813+0000"/>
                    <assignedAuthor>
                      <id nullFlavor="UNK"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>
													<given>Lisa</given>
													<family>Rouse</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
                        <name>EXTERNAL MMG PCP</name>
                        <telecom nullFlavor="NA"/>
                        <addr nullFlavor="NA"/>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.47"/>
                  <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>
                  <statusCode code="completed"/>
                  <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Active"/>
                </observation>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="INT">
              <templateId root="2.16.840.1.113883.10.20.1.24"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.8"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.8"/>
              <id root="1.2.840.114350.1.13.60.2.7.2.798268" extension="128833397"/>
              <text mediaType="text/xml">
								<reference value="#sig7"/>
							</text>
              <statusCode code="completed"/>
              <effectiveTime xsi:type="IVL_TS">
                <low value="20120809"/>
                <high nullFlavor="UNK"/>
              </effectiveTime>
              <routeCode code="OR" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="NCI Thesaurus" displayName="Oral"/>
              <doseQuantity value="75" unit="MG"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.53"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                  <manufacturedMaterial>
                    <code code="855926" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Diclofenac Sodium 75 Mg Or Tbec">
                      <originalText>
												<reference value="#med7"/>
											</originalText>
                      <translation code="0228-2551-06" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NDC" displayName="Diclofenac Sodium 75 Mg Or Tbec"/>
                      <translation code="40986" codeSystem="2.16.840.1.113883.6.162" codeSystemName="Med-File (Medi-Span)" displayName="Diclofenac Sodium 75 Mg Or Tbec"/>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <author>
                <time value="20120810015145+0000"/>
                <assignedAuthor>
                  <id root="2.16.840.1.113883.4.6" extension="1407044985"/>
                  <addr>
										<streetAddressLine>4310 BRIDGEPORT WAY W</streetAddressLine>
										<city>UNIVERSITY PLACE</city>
										<state>WA</state>
										<postalCode>98466</postalCode>
									</addr>
                  <telecom value="tel:+1-888-123-4567" use="WP"/>
                  <telecom value="fax:+1-888-123-4567" use="WP"/>
                  <telecom value="mailto://anyname@anymail.com" use="WP"/>
                  <assignedPerson>
                    <name>
											<given>Scott</given>
											<given>A</given>
											<family>Voelpel</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
                    <name>EXTERNAL MMG PCP</name>
                    <telecom nullFlavor="NA"/>
                    <addr nullFlavor="NA"/>
                  </representedOrganization>
                </assignedAuthor>
              </author>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.3.88.11.32.10"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.1"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="SUBJ" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.40"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.12"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.11"/>
                  <code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
                  <text>
										<reference value="#sig7"/>
									</text>
                  <statusCode code="completed"/>
                  <author>
                    <time value="20120810015145+0000"/>
                    <assignedAuthor>
                      <id root="2.16.840.1.113883.4.6" extension="1407044985"/>
                      <addr>
												<streetAddressLine>4310 BRIDGEPORT WAY W</streetAddressLine>
												<city>UNIVERSITY PLACE</city>
												<state>WA</state>
												<postalCode>98466</postalCode>
											</addr>
                      <telecom value="tel:+1-888-123-4567" use="WP"/>
                      <telecom value="fax:+1-888-123-4567" use="WP"/>
                      <telecom value="mailto://anyname@anymail.com" use="WP"/>
                      <assignedPerson>
                        <name>
													<given>Scott</given>
													<given>A</given>
													<family>Voelpel</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
                        <name>EXTERNAL MMG PCP</name>
                        <telecom nullFlavor="NA"/>
                        <addr nullFlavor="NA"/>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <supply classCode="SPLY" moodCode="INT">
                  <templateId root="2.16.840.1.113883.3.88.1.11.32.11"/>
                  <id root="1.2.840.114350.1.13.60.2.7.2.798268" extension="128833397"/>
                  <statusCode code="completed"/>
                  <repeatNumber value="1"/>
                  <quantity value="60"/>
                  <product>
                    <manufacturedProduct classCode="MANU">
                      <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                      <templateId root="2.16.840.1.113883.10.20.1.53"/>
                      <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                      <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                      <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                      <manufacturedMaterial>
                        <code code="855926" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Diclofenac Sodium 75 Mg Or Tbec">
                          <originalText>
														<reference value="#med7"/>
													</originalText>
                          <translation code="0228-2551-06" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NDC" displayName="Diclofenac Sodium 75 Mg Or Tbec"/>
                          <translation code="40986" codeSystem="2.16.840.1.113883.6.162" codeSystemName="Med-File (Medi-Span)" displayName="Diclofenac Sodium 75 Mg Or Tbec"/>
                        </code>
                      </manufacturedMaterial>
                    </manufacturedProduct>
                  </product>
                </supply>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.47"/>
                  <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>
                  <statusCode code="completed"/>
                  <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Active"/>
                </observation>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="INT">
              <templateId root="2.16.840.1.113883.10.20.1.24"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.8"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.8"/>
              <id root="1.2.840.114350.1.13.60.2.7.2.798268" extension="128833392"/>
              <text mediaType="text/xml">
								<reference value="#sig8"/>
							</text>
              <statusCode code="completed"/>
              <effectiveTime xsi:type="IVL_TS">
                <low nullFlavor="UNK"/>
                <high nullFlavor="UNK"/>
              </effectiveTime>
              <routeCode code="OR" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="NCI Thesaurus" displayName="Oral"/>
              <doseQuantity value="40" unit="MG"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.53"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                  <manufacturedMaterial>
                    <code code="313989" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Fluoxetine Hcl 40 Mg Or Caps">
                      <originalText>
												<reference value="#med8"/>
											</originalText>
                      <translation code="0093-7198-56" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NDC" displayName="Fluoxetine Hcl 40 Mg Or Caps"/>
                      <translation code="50933" codeSystem="2.16.840.1.113883.6.162" codeSystemName="Med-File (Medi-Span)" displayName="Fluoxetine Hcl 40 Mg Or Caps"/>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <author>
                <time value="20120810011813+0000"/>
                <assignedAuthor>
                  <id nullFlavor="UNK"/>
                  <addr nullFlavor="UNK"/>
                  <telecom nullFlavor="UNK"/>
                  <assignedPerson>
                    <name>
											<given>Lisa</given>
											<family>Rouse</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
                    <name>EXTERNAL MMG PCP</name>
                    <telecom nullFlavor="NA"/>
                    <addr nullFlavor="NA"/>
                  </representedOrganization>
                </assignedAuthor>
              </author>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.3.88.11.32.10"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.1"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="SUBJ" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.40"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.12"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.11"/>
                  <code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
                  <text>
										<reference value="#sig8"/>
									</text>
                  <statusCode code="completed"/>
                  <author>
                    <time value="20120810011813+0000"/>
                    <assignedAuthor>
                      <id nullFlavor="UNK"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>
													<given>Lisa</given>
													<family>Rouse</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
                        <name>EXTERNAL MMG PCP</name>
                        <telecom nullFlavor="NA"/>
                        <addr nullFlavor="NA"/>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.47"/>
                  <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>
                  <statusCode code="completed"/>
                  <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Active"/>
                </observation>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="INT">
              <templateId root="2.16.840.1.113883.10.20.1.24"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.8"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.8"/>
              <id root="1.2.840.114350.1.13.60.2.7.2.798268" extension="128833396"/>
              <text mediaType="text/xml">
								<reference value="#sig9"/>
							</text>
              <statusCode code="completed"/>
              <effectiveTime xsi:type="IVL_TS">
                <low value="20120809"/>
                <high nullFlavor="UNK"/>
              </effectiveTime>
              <routeCode code="OR" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="NCI Thesaurus" displayName="Oral"/>
              <doseQuantity>
                <low value="50" unit="MG"/>
                <high value="100" unit="MG"/>
              </doseQuantity>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.53"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                  <manufacturedMaterial>
                    <code code="835603" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Tramadol Hcl 50 Mg Or Tabs">
                      <originalText>
												<reference value="#med9"/>
											</originalText>
                      <translation code="0093-0058-01" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NDC" displayName="Tramadol Hcl 50 Mg Or Tabs"/>
                      <translation code="39326" codeSystem="2.16.840.1.113883.6.162" codeSystemName="Med-File (Medi-Span)" displayName="Tramadol Hcl 50 Mg Or Tabs"/>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <author>
                <time value="20120810015145+0000"/>
                <assignedAuthor>
                  <id root="2.16.840.1.113883.4.6" extension="1407044985"/>
                  <addr>
										<streetAddressLine>4310 BRIDGEPORT WAY W</streetAddressLine>
										<city>UNIVERSITY PLACE</city>
										<state>WA</state>
										<postalCode>98466</postalCode>
									</addr>
                  <telecom value="tel:+1-888-123-4567" use="WP"/>
                  <telecom value="fax:+1-888-123-4567" use="WP"/>
                  <telecom value="mailto://anyname@anymail.com" use="WP"/>
                  <assignedPerson>
                    <name>
											<given>Scott</given>
											<given>A</given>
											<family>Voelpel</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
                    <name>EXTERNAL MMG PCP</name>
                    <telecom nullFlavor="NA"/>
                    <addr nullFlavor="NA"/>
                  </representedOrganization>
                </assignedAuthor>
              </author>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.3.88.11.32.10"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.1"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="SUBJ" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.40"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.12"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.11"/>
                  <code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
                  <text>
										<reference value="#sig9"/>
									</text>
                  <statusCode code="completed"/>
                  <author>
                    <time value="20120810015145+0000"/>
                    <assignedAuthor>
                      <id root="2.16.840.1.113883.4.6" extension="1407044985"/>
                      <addr>
												<streetAddressLine>4310 BRIDGEPORT WAY W</streetAddressLine>
												<city>UNIVERSITY PLACE</city>
												<state>WA</state>
												<postalCode>98466</postalCode>
											</addr>
                      <telecom value="tel:+1-888-123-4567" use="WP"/>
                      <telecom value="fax:+1--888-123-4567" use="WP"/>
                      <telecom value="mailto://anyname@anymail.com" use="WP"/>
                      <assignedPerson>
                        <name>
													<given>Scott</given>
													<given>A</given>
													<family>Voelpel</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
                        <name>EXTERNAL MMG PCP</name>
                        <telecom nullFlavor="NA"/>
                        <addr nullFlavor="NA"/>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <supply classCode="SPLY" moodCode="INT">
                  <templateId root="2.16.840.1.113883.3.88.1.11.32.11"/>
                  <id root="1.2.840.114350.1.13.60.2.7.2.798268" extension="128833396"/>
                  <statusCode code="completed"/>
                  <repeatNumber value="1"/>
                  <quantity value="20"/>
                  <product>
                    <manufacturedProduct classCode="MANU">
                      <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                      <templateId root="2.16.840.1.113883.10.20.1.53"/>
                      <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                      <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                      <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                      <manufacturedMaterial>
                        <code code="835603" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Tramadol Hcl 50 Mg Or Tabs">
                          <originalText>
														<reference value="#med9"/>
													</originalText>
                          <translation code="0093-0058-01" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NDC" displayName="Tramadol Hcl 50 Mg Or Tabs"/>
                          <translation code="39326" codeSystem="2.16.840.1.113883.6.162" codeSystemName="Med-File (Medi-Span)" displayName="Tramadol Hcl 50 Mg Or Tabs"/>
                        </code>
                      </manufacturedMaterial>
                    </manufacturedProduct>
                  </product>
                </supply>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.47"/>
                  <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>
                  <statusCode code="completed"/>
                  <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Active"/>
                </observation>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry>
            <substanceAdministration classCode="SBADM" moodCode="INT">
              <templateId root="2.16.840.1.113883.10.20.1.24"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.8"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.8"/>
              <id root="1.2.840.114350.1.13.60.2.7.2.798268" extension="128833370"/>
              <text mediaType="text/xml">
								<reference value="#sig10"/>
							</text>
              <statusCode code="completed"/>
              <effectiveTime xsi:type="IVL_TS">
                <low nullFlavor="UNK"/>
                <high nullFlavor="UNK"/>
              </effectiveTime>
              <routeCode code="OR" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="NCI Thesaurus" displayName="Oral"/>
              <doseQuantity value="20" unit="MG"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.53"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.9"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
                  <templateId root="2.16.840.1.113883.3.249.11.100.13"/>
                  <manufacturedMaterial>
                    <code code="198051" codeSystem="2.16.840.1.113883.6.88" codeSystemName="RxNorm" displayName="Omeprazole 20 Mg Or Cpdr">
                      <originalText>
												<reference value="#med10"/>
											</originalText>
                      <translation code="54569-5482-0" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NDC" displayName="Omeprazole 20 Mg Or Cpdr"/>
                      <translation code="64692" codeSystem="2.16.840.1.113883.6.162" codeSystemName="Med-File (Medi-Span)" displayName="Omeprazole 20 Mg Or Cpdr"/>
                    </code>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <author>
                <time value="20140117064910+0000"/>
                <assignedAuthor>
                  <id nullFlavor="UNK"/>
                  <addr nullFlavor="UNK"/>
                  <telecom nullFlavor="UNK"/>
                  <assignedPerson>
                    <name>
											<given>Provider</given>
											<family>Historical</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
                    <name>EXTERNAL MMG PCP</name>
                    <telecom nullFlavor="NA"/>
                    <addr nullFlavor="NA"/>
                  </representedOrganization>
                </assignedAuthor>
              </author>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.3.88.11.32.10"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.1"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="SUBJ" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.40"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.12"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.11"/>
                  <code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
                  <text>
										<reference value="#sig10"/>
									</text>
                  <statusCode code="completed"/>
                  <author>
                    <time value="20140117064910+0000"/>
                    <assignedAuthor>
                      <id nullFlavor="UNK"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>
													<given>Provider</given>
													<family>Historical</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
                        <name>EXTERNAL MMG PCP</name>
                        <telecom nullFlavor="NA"/>
                        <addr nullFlavor="NA"/>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.47"/>
                  <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Status"/>
                  <statusCode code="completed"/>
                  <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Active"/>
                </observation>
              </entryRelationship>
            </substanceAdministration>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.1.11"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.6"/>
          <templateId root="2.16.840.1.113883.3.88.11.83.103"/>
          <id root="fadf9e98-941a-11e3-92ec-24047f890749"/>
          <code code="11450-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="PROBLEM LIST"/>
          <title>Active Problems</title>
          <text><table ID="_nbConditionProblems" border="1" width="100%"><thead><tr><th>Problem</th><th>Status</th><th>Problem Code</th><th>Problem Type</th><th>Date of Onset</th><th>Date Resolved</th><th>Cause of Death</th><th>Age at Onset</th><th>Age at Death</th><th>Time of Death</th><th>Provider</th><th>Source</th></tr>
</thead><tbody><tr><td ID="#problem11name">Essential hypertension</td><td>Active</td><td>59621000</td><td>Problem</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>EXTERNAL MMG PCP </td></tr><tr><td ID="#problem12name">Depressive disorder, not elsewhere classified</td><td>Active</td><td>35489007</td><td>Problem</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>EXTERNAL MMG PCP </td></tr><tr><td ID="#problem13name">Headache</td><td>Active</td><td>25064002</td><td>Problem</td><td>20010910</td><td>--</td><td>--</td><td>101</td><td>--</td><td>--</td><td>--</td><td>EXTERNAL MMG PCP </td></tr></tbody></table><tr ID="problem13" styleCode="normRow"><td ID="problem13name" styleCode="header">Headache</td><td>09/10/2001</td></tr>
<td ID="problem13comment" colspan="2" styleCode="allIndent"><paragraph styleCode="cellHeader">Overview:</paragraph><paragraph>cluster</paragraph></td>
<tr ID="problem11" styleCode="altRow"><td ID="problem11name" styleCode="header">Essential hypertension</td><td/></tr>
<tr ID="problem12" styleCode="normRow"><td ID="problem12name" styleCode="header">Depressive disorder, not elsewhere classified</td><td/></tr>
</text>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.7"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.7"/>
              <id root="1.2.840.114350.1.13.60.2.7.2.768076" extension="1471175"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.60.2.7.2.768076" extension="1471175"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>
										<reference value="#problem11name"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="59621000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Essential hypertension">
                    <originalText>
											<reference value="#problem11name"/>
										</originalText>
                    <translation code="401" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9CM" displayName="Essential hypertension"/>
                  </value>
                  <author>
                    <time value="20021129005016+0000"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.60.2.7.2.697780" extension="1176"/>
                      <addr nullFlavor="UNK"/>
                      <telecom value="tel:+1--888-123-4567" use="WP"/>
                      <assignedPerson>
                        <name>
													<given>FIRSTNAME_PROVIDER</given>
													<family>LASTNAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
                        <name>EXTERNAL MMG PCP</name>
                        <telecom nullFlavor="NA"/>
                        <addr nullFlavor="NA"/>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <effectiveTime>
                        <low nullFlavor="UNK"/>
                      </effectiveTime>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.7"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.7"/>
              <id root="1.2.840.114350.1.13.60.2.7.2.768076" extension="1471176"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.60.2.7.2.768076" extension="1471176"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>
										<reference value="#problem12name"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="35489007" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Depressive disorder, not elsewhere classified">
                    <originalText>
											<reference value="#problem12name"/>
										</originalText>
                    <translation code="311" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9CM" displayName="Depressive disorder, not elsewhere classified"/>
                    <translation code="F32.9" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD-10-CM" displayName="Depressive disorder, not elsewhere classified"/>
                  </value>
                  <author>
                    <time value="20021129005016+0000"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.60.2.7.2.697780" extension="1176"/>
                      <addr nullFlavor="UNK"/>
                      <telecom value="tel:+1--888-123-4567" use="WP"/>
                      <assignedPerson>
                        <name>
													<given>FIRSTNAME_PROVIDER</given>
													<family>LASTNAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
                        <name>EXTERNAL MMG PCP</name>
                        <telecom nullFlavor="NA"/>
                        <addr nullFlavor="NA"/>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <effectiveTime>
                        <low nullFlavor="UNK"/>
                      </effectiveTime>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry>
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.27"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
              <templateId root="2.16.840.1.113883.3.88.11.32.7"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.7"/>
              <id root="1.2.840.114350.1.13.60.2.7.2.768076" extension="1536664"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low value="20010910"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <id root="1.2.840.114350.1.13.60.2.7.2.768076" extension="1536664"/>
                  <code code="55607006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Problem"/>
                  <text>
										<reference value="#problem13name"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low value="20010910"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="25064002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Headache">
                    <originalText>
											<reference value="#problem13name"/>
										</originalText>
                    <translation code="784.0" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9CM" displayName="Headache"/>
                    <translation code="R51" codeSystem="2.16.840.1.113883.6.90" codeSystemName="ICD-10-CM" displayName="Headache"/>
                  </value>
                  <author>
                    <time value="20021129005016+0000"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.60.2.7.2.697780" extension="1176"/>
                      <addr nullFlavor="UNK"/>
                      <telecom value="tel:+1--888-123-4567" use="WP"/>
                      <assignedPerson>
                        <name>
													<given>FIRSTNAME_PROVIDER</given>
													<family>LASTNAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
                        <name>EXTERNAL MMG PCP</name>
                        <telecom nullFlavor="NA"/>
                        <addr nullFlavor="NA"/>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                  <entryRelationship typeCode="REFR">
                    <observation classCode="OBS" moodCode="EVN">
                      <code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
                      <statusCode code="completed"/>
                      <effectiveTime>
                        <low value="20010910"/>
                      </effectiveTime>
                      <value xsi:type="CE" code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active"/>
                    </observation>
                  </entryRelationship>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="SUBJ" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
                  <templateId root="2.16.840.1.113883.10.20.1.40"/>
                  <templateId root="2.16.840.1.113883.3.88.11.32.12"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.11"/>
                  <code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
                  <text>
										<reference value="#problem13comment"/>
									</text>
                  <statusCode code="completed"/>
                  <author>
                    <time value="20021129005016+0000"/>
                    <assignedAuthor>
                      <id root="1.2.840.114350.1.13.60.2.7.2.697780" extension="1176"/>
                      <addr nullFlavor="UNK"/>
                      <telecom value="tel:+1--888-123-4567" use="WP"/>
                      <assignedPerson>
                        <name>
													<given>FIRSTNAME_PROVIDER</given>
													<family>LASTNAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
                        <name>EXTERNAL MMG PCP</name>
                        <telecom nullFlavor="NA"/>
                        <addr nullFlavor="NA"/>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
            </act>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.1.3"/>
          <templateId root="2.16.840.1.113883.3.88.11.83.127"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.1.5.3.3"/>
          <code code="46240-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="HISTORY OF ENCOUNTERS"/>
          <title>Encounters from 11/12/2013 to 02/12/2014</title>
          <text>

	<table ID="_nbEncounter" border="1" width="100%">
		<thead>
			<tr>
			<th>Date/Time</th>
			<th>Encounter Type</th>
			<th>Encounter Description</th>
			<th>Encounter Note</th>
			<th>Admission Type</th>
			<th>Provider</th>
			<th>Admission Source</th>
			<th>Facility Location</th>
			<th>In Facility Duration</th>
			<th>Reason for visit</th>
			<th>Source</th>
			<th>Patient Class</th>
			<th>Discharge Disposition</th>
			<th>Health Care Facility Name</th>
			<th>Health Care Facility Location Type</th>
			<th>Health Care Facility ID</th>
			<th>Health Care Facility Address</th>
			</tr>
		</thead>
		<tbody>
			<tr>
			<td>
		20140116192456-0800
			</td>
			<td>
	Hospital Encounter
			</td>
			<td>
	<td ID="type15">Hospital Encounter
	</td>
			</td>
			<td>
	<td ID="encounter14desc">THROAT PROBLEM-pt. was intubated for endo...
	</td>
			</td>
			<td>
					--
			</td>
			<td>
							FIRSTNAME_PROVIDER LASTNAME,
							Daniel LASTNAME
			</td>
			<td>
					--
			</td>
			<td>
							AH Emergency Department
			</td>
			<td>
	--
			</td>

			<td>
					--
			</td>
			<td>
				Emergency Room
			</td>
			<td>
	--
			</td>
			<td>
	--
			</td>
			<td>
				--
			</td>
			<td>
	--
			</td>
			<td>
					--
			</td>
			<td>
				--
			</td>
			</tr>
		</tbody>
	</table>
<tr ID="encounter14" styleCode="normRow"><td>01/16/2014</td><td ID="type15">Hospital Encounter</td><td ID="type15specialty">Emergency Room</td><td><paragraph>LASTNAME, FIRSTNAME_PROVIDER MD</paragraph><paragraph>LASTNAME,FIRSTNAME_PROVIDER, ED Scribe</paragraph></td><td ID="encounter14desc">THROAT PROBLEM-pt. was intubated for endo...</td></tr>
</text>
          <entry>
            <encounter classCode="ENC" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.21"/>
              <templateId root="2.16.840.1.113883.3.88.11.83.16"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.14"/>
              <id root="1.2.840.114350.1.13.60.2.7.3.698084.8" extension="89401210" assigningAuthorityName="EPIC"/>
              <code code="3" codeSystem="1.2.840.114350.1.13.60.2.7.4.698084.30" codeSystemName="Epic.EncounterType" codeSystemVersion="Epic,2012" displayName="Hospital Encounter">
                <originalText>
									<reference value="#type15"/>
								</originalText>
              </code>
              <text>
								<reference value="#encounter14desc"/>
							</text>
              <statusCode code="normal"/>
              <effectiveTime>
                <low value="20140116192456-0800"/>
                <high value="20140116192456-0800"/>
              </effectiveTime>
              <performer typeCode="PRF">
                <assignedEntity classCode="ASSIGNED">
                  <id root="2.16.840.1.113883.4.6" extension="1790756815"/>
                  <addr>
										<streetAddressLine>000 ANY STREET</streetAddressLine>
										<city>ANY CITY</city>
										<state>WA</state>
										<postalCode>98431-1100</postalCode>
									</addr>
                  <telecom value="tel:+1-888-123-4567" use="WP"/>
                  <telecom value="fax:+1-888-123-4567"/>
                  <telecom value="mailto://anyname@anymail.com"/>
                  <assignedPerson>
                    <name>
											<given>FIRSTNAME_PROVIDER</given>
											<given>MI</given>
											<family>LASTNAME</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <name nullFlavor="UNK"/>
                    <telecom nullFlavor="UNK"/>
                    <addr nullFlavor="UNK"/>
                  </representedOrganization>
                </assignedEntity>
              </performer>
              <performer typeCode="PRF">
                <assignedEntity classCode="ASSIGNED">
                  <id nullFlavor="UNK"/>
                  <addr nullFlavor="UNK"/>
                  <telecom nullFlavor="UNK"/>
                  <assignedPerson>
                    <name>
											<given>Daniel</given>
											<family>LASTNAME</family>
										</name>
                  </assignedPerson>
                  <representedOrganization>
                    <name nullFlavor="UNK"/>
                    <telecom nullFlavor="UNK"/>
                    <addr nullFlavor="UNK"/>
                  </representedOrganization>
                </assignedEntity>
              </performer>
              <participant typeCode="ATND">
                <participantRole>
                  <id root="2.16.840.1.113883.4.6" extension="1790756815"/>
                  <addr use="WP">
										<streetAddressLine>000 ANY STREET</streetAddressLine>
										<city>ANY CITY</city>
										<state>WA</state>
										<postalCode>98431-1100</postalCode>
									</addr>
                  <telecom value="tel:+1-888-123-4567" use="WP"/>
                  <telecom value="fax:+1-888-123-4567"/>
                  <telecom value="mailto://anyname@anymail.com"/>
                  <playingEntity>
                    <name>
											<given>FIRSTNAME_PROVIDER</given>
											<family>LASTNAME</family>
										</name>
                  </playingEntity>
                </participantRole>
              </participant>
              <participant typeCode="ATND">
                <participantRole>
                  <id nullFlavor="UNK"/>
                  <playingEntity>
                    <name>
											<given>Daniel</given>
											<family>LASTNAME</family>
										</name>
                  </playingEntity>
                </participantRole>
              </participant>
              <participant typeCode="DIS">
                <participantRole>
                  <id root="2.16.840.1.113883.4.6" extension="1790756815"/>
                </participantRole>
              </participant>
              <participant typeCode="LOC">
                <templateId root="2.16.840.1.113883.10.20.1.45"/>
                <participantRole classCode="SDLOC">
                  <id root="1.2.840.114350.1.13.60.2.7.2.686980" extension="1400094"/>
                  <playingEntity classCode="PLC">
                    <name>AH Emergency Department</name>
                    <desc>Emergency Room</desc>
                  </playingEntity>
                </participantRole>
              </participant>
              <entryRelationship typeCode="RSON" inversionInd="true">
                <act classCode="ACT" moodCode="EVN">
                  <code code="COMMENT" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
                  <text>
										<reference value="#encounter14desc"/>
									</text>
                  <statusCode code="completed"/>
                  <author>
                    <time value="20140116192456-0800"/>
                    <assignedAuthor>
                      <id root="2.16.840.1.113883.4.6" extension="1790756815"/>
                      <addr>
												<streetAddressLine>000 ANY STREET</streetAddressLine>
												<city>ANY CITY</city>
												<state>WA</state>
											</addr>
                      <telecom value="tel:+1-888-123-4567" use="WP"/>
                      <telecom value="fax:+1-888-123-4567"/>
                      <telecom value="mailto://anyname@anymail.com"/>
                      <assignedPerson>
                        <name>
													<given>FIRSTNAME_PROVIDER</given>
													<given>MI</given>
													<family>LASTNAME</family>
												</name>
                      </assignedPerson>
                      <representedOrganization>
                        <id root="1.2.840.114350.1.13.60.2.7.2.696570" extension="901"/>
                        <name>EXTERNAL MMG PCP</name>
                        <telecom nullFlavor="NA"/>
                        <addr nullFlavor="NA"/>
                      </representedOrganization>
                    </assignedAuthor>
                  </author>
                </act>
              </entryRelationship>
              <reference typeCode="REFR">
                <externalObservation>
                  <code code="7" codeSystem="1.2.840.114350.1.13.60.2.7.3.688882.8100" codeSystemName="Epic.Encounter.Contents"/>
                </externalObservation>
              </reference>
            </encounter>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.1.14"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.27"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.28"/>
          <templateId root="2.16.840.1.113883.3.88.11.83.122"/>
          <id root="fb125fc2-941a-11e3-92ec-24047f890749"/>
          <code code="30954-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="STUDIES SUMMARY"/>
          <title>Results from 11/12/2013 to 02/12/2014</title>
          <text>
<div ID="_nbResultsSection">
	
	<table ID="_nbResults">
		<thead>
			<th>Date/Time</th>
			<th>Result Type</th>
			<th>Source</th>
			<th>Result</th>
			<th>Unit</th>
			<th>Interpretation</th>
			<th>Reference Range</th>
			<th>Comments</th>
			<th>Status</th>
			<th>Analyte Source</th>
		</thead>
		<tbody>

<tr>
	<td>
	20140116214721
	</td>
	<td>
	O CT SOFT TISSUE NECK W/ CONTRAST	
	</td>
	<td>--</td>
	<td/>
	<td/>
	<td/>
	<td/>
	<td/>
	<td>
			--
	</td>
	<td/>
</tr>
<tr>
	<td/>
	<td>
	Unknown	
	</td>
	<td/>
	<td>
	<item ID="Result19"><caption>O CT SOFT TISSUE NECK W/ CONTRAST (01/16/2014 9:47 PM PST)</caption><table><thead><tr><th>Impressions</th></tr></thead><tbody><tr><td ID="Result19Impression" styleCode="pre"><paragraph>IMPRESSION: Focus of gas and soft tissue swelling lateral to the left</paragraph><paragraph>base of tongue, likely a soft tissue laceration. There is also partial</paragraph><paragraph>effacement of the left performed sinus of one clear etiology. No definite</paragraph><paragraph>soft tissue mass is noted in this location.</paragraph><paragraph/><paragraph>Note: During initial intravenous contrast injection, approximately 87 mL</paragraph><paragraph>of Isovue-370 infiltrated into the left antecubital fossa. The</paragraph><paragraph>intravenous line was removed and the line was placed in the right arm.</paragraph><paragraph>Warm compresses were placed on the infiltrate site and the patient stated</paragraph><paragraph>that his initial pain had subsided at the time of my examination. The</paragraph><paragraph>patient was instructed that this volume of contrast typically will</paragraph><paragraph>resorb, and he should followup with his primary physician if there is no</paragraph><paragraph>symptomatic improvement over the next 2-3 days.</paragraph><paragraph/></td></tr></tbody></table><table><thead><tr><th>Narrative</th></tr></thead><tbody><tr><td ID="Result19Narrative" styleCode="pre"><paragraph>CT NECK WITH CONTRAST, 1/16/2014 9:57 PM:</paragraph><paragraph/><paragraph>HISTORY: Painful to swallow, left-sided neck pain. Injury below tongue.</paragraph><paragraph/><paragraph>PROCEDURE: Following the intravenous infusion of 100 cc Isovue 370</paragraph><paragraph>contrast, multidetector CT imaging of the neck was performed from the</paragraph><paragraph>posterior fossa through the thoracic inlet. Coronal and sagittal</paragraph><paragraph>reformatted images were obtained.</paragraph><paragraph/><paragraph>COMPARISON: None.</paragraph><paragraph/><paragraph>FINDINGS: The parotid, submandibular, and thyroid glands are symmetric.</paragraph><paragraph>No pathologic adenopathy is identified in the neck. There is no evidence</paragraph><paragraph>of retropharyngeal abscess or peritonsillar abscess.</paragraph><paragraph/><paragraph>There is a focus of gas just lateral to the left base of tongue, likely a</paragraph><paragraph>soft tissue laceration. Partial effacement of the left perform sinus is</paragraph><paragraph>noted.</paragraph><paragraph/><paragraph>The paranasal sinuses and mastoid air cells are not opacified. Imaged</paragraph><paragraph>portions of the brain parenchyma in the skull base are within normal</paragraph><paragraph>limits. The lung apices are clear.</paragraph><paragraph/><paragraph>Visualized vasculature in the neck is unremarkable. There is no acute</paragraph><paragraph>bony abnormality.</paragraph><paragraph/></td></tr></tbody></table><table><thead><tr><th>Procedure Note</th></tr></thead><tbody><tr><td styleCode="noIndent"><paragraph styleCode="header"/><paragraph><content>CT NECK WITH CONTRAST, 1/16/2014 9:57 PM:</content><br/><br/><content>HISTORY: Painful to swallow, left-sided neck pain. Injury below tongue.</content><br/><br/><content>PROCEDURE: Following the intravenous infusion of 100 cc Isovue 370</content><br/><content>contrast, multidetector CT imaging of the neck was performed from the</content><br/><content>posterior fossa through the thoracic inlet. Coronal and sagittal</content><br/><content>reformatted images were obtained.</content><br/><br/><content>COMPARISON: None.</content><br/><br/><content>FINDINGS: The parotid, submandibular, and thyroid glands are symmetric.</content><br/><content>No pathologic adenopathy is identified in the neck. There is no evidence</content><br/><content>of retropharyngeal abscess or peritonsillar abscess.</content><br/><br/><content>There is a focus of gas just lateral to the left base of tongue, likely</content><content>a</content><br/><content>soft tissue laceration. Partial effacement of the left perform sinus is</content><br/><content>noted.</content><br/><br/><content>The paranasal sinuses and mastoid air cells are not opacified. Imaged</content><br/><content>portions of the brain parenchyma in the skull base are within normal</content><br/><content>limits. The lung apices are clear.</content><br/><br/><content>Visualized vasculature in the neck is unremarkable. There is no acute</content><br/><content>bony abnormality.</content><br/><br/><content>IMPRESSION: Focus of gas and soft tissue swelling lateral to the left</content><br/><content>base of tongue, likely a soft tissue laceration. There is also partial</content><br/><content>effacement of the left performed sinus of one clear etiology. No</content><content>definite</content><br/><content>soft tissue mass is noted in this location.</content><br/><br/><content>Note: During initial intravenous contrast injection, approximately 87 mL</content><br/><content>of Isovue-370 infiltrated into the left antecubital fossa. The</content><br/><content>intravenous line was removed and the line was placed in the right arm.</content><br/><content>Warm compresses were placed on the infiltrate site and the patient</content><content>stated</content><br/><content>that his initial pain had subsided at the time of my examination. The</content><br/><content>patient was instructed that this volume of contrast typically will</content><br/><content>resorb, and he should followup with his primary physician if there is no</content><br/><content>symptomatic improvement over the next 2-3 days.</content><br/></paragraph></td></tr></tbody></table>
	</item>
	</td>
	<td>
			
	</td>
	<td> 
			--
	</td>
	<td>
			--
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td>
	20140116203700
	</td>
	<td>
	O CBC WITH DIFF	
	</td>
	<td>--</td>
	<td/>
	<td/>
	<td/>
	<td/>
	<td/>
	<td>
			--
	</td>
	<td/>
</tr>
<tr>
	<td/>
	<td>
	WBC	
	</td>
	<td/>
	<td>
				7.90			
	</td>
	<td>
				K/uL			
	</td>
	<td> 
			--
	</td>
	<td>
	4.00-12.00 K/uL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	RBC	
	</td>
	<td/>
	<td>
				4.16			
	</td>
	<td>
				mil/uL			
	</td>
	<td> 
	L
	</td>
	<td>
	4.50-6.00 mil/uL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Hgb	
	</td>
	<td/>
	<td>
				12.9			
	</td>
	<td>
				g/dL			
	</td>
	<td> 
	L
	</td>
	<td>
	14.0-18.0 g/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Hct	
	</td>
	<td/>
	<td>
				38.3			
	</td>
	<td>
				%			
	</td>
	<td> 
	L
	</td>
	<td>
	40-54 %
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	MCV	
	</td>
	<td/>
	<td>
				92.1			
	</td>
	<td>
				fL			
	</td>
	<td> 
			--
	</td>
	<td>
	80-98 fL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	MCH	
	</td>
	<td/>
	<td>
				31.0			
	</td>
	<td>
				pg			
	</td>
	<td> 
			--
	</td>
	<td>
	27-33 pg
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	MCHC	
	</td>
	<td/>
	<td>
				33.7			
	</td>
	<td>
				g/dL			
	</td>
	<td> 
			--
	</td>
	<td>
	32-37 g/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	RDW	
	</td>
	<td/>
	<td>
				13.2			
	</td>
	<td>
				%			
	</td>
	<td> 
			--
	</td>
	<td>
	11.5-15.0 %
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Plt	
	</td>
	<td/>
	<td>
				195			
	</td>
	<td>
				K/uL			
	</td>
	<td> 
			--
	</td>
	<td>
	150-450 K/uL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Differential type	
	</td>
	<td/>
	<td>
				Automated			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
			--
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Abs neuts	
	</td>
	<td/>
	<td>
				4.69			
	</td>
	<td>
				K/uL			
	</td>
	<td> 
			--
	</td>
	<td>
	1.80-7.80 K/uL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Abs immature grans	
	</td>
	<td/>
	<td>
				0.04			
	</td>
	<td>
				K/uL			
	</td>
	<td> 
			--
	</td>
	<td>
	0.00-0.08 K/uL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Abs lymphs	
	</td>
	<td/>
	<td>
				2.40			
	</td>
	<td>
				K/uL			
	</td>
	<td> 
			--
	</td>
	<td>
	0.80-3.30 K/uL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Abs monos	
	</td>
	<td/>
	<td>
				0.55			
	</td>
	<td>
				K/uL			
	</td>
	<td> 
			--
	</td>
	<td>
	0.10-1.00 K/uL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Abs eos	
	</td>
	<td/>
	<td>
				0.20			
	</td>
	<td>
				K/uL			
	</td>
	<td> 
			--
	</td>
	<td>
	0.00-0.40 K/uL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Abs basos	
	</td>
	<td/>
	<td>
				0.02			
	</td>
	<td>
				K/uL			
	</td>
	<td> 
			--
	</td>
	<td>
	0.00-0.20 K/uL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Neuts	
	</td>
	<td/>
	<td>
				59.3			
	</td>
	<td>
				%			
	</td>
	<td> 
			--
	</td>
	<td>
			--
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Immature grans	
	</td>
	<td/>
	<td>
				0.5			
	</td>
	<td>
				%			
	</td>
	<td> 
			--
	</td>
	<td>
			--
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Lymphs	
	</td>
	<td/>
	<td>
				30.4			
	</td>
	<td>
				%			
	</td>
	<td> 
			--
	</td>
	<td>
			--
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Monos	
	</td>
	<td/>
	<td>
				7.0			
	</td>
	<td>
				%			
	</td>
	<td> 
			--
	</td>
	<td>
			--
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Eos	
	</td>
	<td/>
	<td>
				2.5			
	</td>
	<td>
				%			
	</td>
	<td> 
			--
	</td>
	<td>
			--
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Basos	
	</td>
	<td/>
	<td>
				0.3			
	</td>
	<td>
				%			
	</td>
	<td> 
			--
	</td>
	<td>
			--
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td>
	20140116203700
	</td>
	<td>
	O COMPREHEN METABOLIC PANEL	
	</td>
	<td>--</td>
	<td/>
	<td/>
	<td/>
	<td/>
	<td/>
	<td>
			--
	</td>
	<td/>
</tr>
<tr>
	<td/>
	<td>
	Na	
	</td>
	<td/>
	<td>
				141			
	</td>
	<td>
				mmol/L			
	</td>
	<td> 
			--
	</td>
	<td>
	135-145 mmol/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	K	
	</td>
	<td/>
	<td>
				3.4			
	</td>
	<td>
				mmol/L			
	</td>
	<td> 
	L
	</td>
	<td>
	3.6-5.3 mmol/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Cl	
	</td>
	<td/>
	<td>
				105			
	</td>
	<td>
				mmol/L			
	</td>
	<td> 
			--
	</td>
	<td>
	98-109 mmol/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	CO2	
	</td>
	<td/>
	<td>
				23			
	</td>
	<td>
				mmol/L			
	</td>
	<td> 
			--
	</td>
	<td>
	21-28 mmol/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Anion gap w/o K	
	</td>
	<td/>
	<td>
				13			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	7-15
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	BUN	
	</td>
	<td/>
	<td>
				12			
	</td>
	<td>
				mg/dL			
	</td>
	<td> 
			--
	</td>
	<td>
	8-24 mg/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Creatinine	
	</td>
	<td/>
	<td>
				0.85			
	</td>
	<td>
				mg/dL			
	</td>
	<td> 
			--
	</td>
	<td>
	0.7-1.5 mg/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	GFR non African Amer	
	</td>
	<td/>
	<td>
				101			
	</td>
	<td>
				mL/min			
	</td>
	<td> 
			--
	</td>
	<td>
	>59 mL/min
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	GFR African American	
	</td>
	<td/>
	<td>
				122			
	</td>
	<td>
				mL/min			
	</td>
	<td> 
			--
	</td>
	<td>
	>59 mL/min
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Glucose	
	</td>
	<td/>
	<td>
				117			
	</td>
	<td>
				mg/dL			
	</td>
	<td> 
			--
	</td>
	<td>
	65-120 mg/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	SGOT/AST	
	</td>
	<td/>
	<td>
				21			
	</td>
	<td>
				IU/L			
	</td>
	<td> 
			--
	</td>
	<td>
	5-40 IU/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Alk Phos	
	</td>
	<td/>
	<td>
				78			
	</td>
	<td>
				IU/L			
	</td>
	<td> 
			--
	</td>
	<td>
	38-126 IU/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	SGPT/ALT	
	</td>
	<td/>
	<td>
				21			
	</td>
	<td>
				IU/L			
	</td>
	<td> 
			--
	</td>
	<td>
	6-60 IU/L
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Bilirubin total	
	</td>
	<td/>
	<td>
				0.3			
	</td>
	<td>
				mg/dL			
	</td>
	<td> 
			--
	</td>
	<td>
	0.2-1.4 mg/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Protein	
	</td>
	<td/>
	<td>
				6.5			
	</td>
	<td>
				g/dL			
	</td>
	<td> 
			--
	</td>
	<td>
	6.2-8.0 g/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Albumin	
	</td>
	<td/>
	<td>
				3.4			
	</td>
	<td>
				g/dL			
	</td>
	<td> 
			--
	</td>
	<td>
	3.2-5.0 g/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Globulin (calc)	
	</td>
	<td/>
	<td>
				3.1			
	</td>
	<td>
				g/dL			
	</td>
	<td> 
			--
	</td>
	<td>
	2.0-4.5 g/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	A:G Ratio	
	</td>
	<td/>
	<td>
				1.1			
	</td>
	<td>
							
	</td>
	<td> 
			--
	</td>
	<td>
	>1.0
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
<tr>
	<td/>
	<td>
	Calcium	
	</td>
	<td/>
	<td>
				9.2			
	</td>
	<td>
				mg/dL			
	</td>
	<td> 
			--
	</td>
	<td>
	8.5-10.5 mg/dL
	</td>
	<td>
			--
	</td>
	<td>
	completed
	</td>
	<td>
		--
	</td>
</tr>
		</tbody>
	</table>
</div>
<item ID="Result19"><caption>O CT SOFT TISSUE NECK W/ CONTRAST (01/16/2014 9:47 PM PST)</caption><table><thead><tr><th>Impressions</th></tr></thead><tbody><tr><td ID="Result19Impression" styleCode="pre"><paragraph>IMPRESSION: Focus of gas and soft tissue swelling lateral to the left</paragraph><paragraph>base of tongue, likely a soft tissue laceration. There is also partial</paragraph><paragraph>effacement of the left performed sinus of one clear etiology. No definite</paragraph><paragraph>soft tissue mass is noted in this location.</paragraph><paragraph/><paragraph>Note: During initial intravenous contrast injection, approximately 87 mL</paragraph><paragraph>of Isovue-370 infiltrated into the left antecubital fossa. The</paragraph><paragraph>intravenous line was removed and the line was placed in the right arm.</paragraph><paragraph>Warm compresses were placed on the infiltrate site and the patient stated</paragraph><paragraph>that his initial pain had subsided at the time of my examination. The</paragraph><paragraph>patient was instructed that this volume of contrast typically will</paragraph><paragraph>resorb, and he should followup with his primary physician if there is no</paragraph><paragraph>symptomatic improvement over the next 2-3 days.</paragraph><paragraph/></td></tr></tbody></table><table><thead><tr><th>Narrative</th></tr></thead><tbody><tr><td ID="Result19Narrative" styleCode="pre"><paragraph>CT NECK WITH CONTRAST, 1/16/2014 9:57 PM:</paragraph><paragraph/><paragraph>HISTORY: Painful to swallow, left-sided neck pain. Injury below tongue.</paragraph><paragraph/><paragraph>PROCEDURE: Following the intravenous infusion of 100 cc Isovue 370</paragraph><paragraph>contrast, multidetector CT imaging of the neck was performed from the</paragraph><paragraph>posterior fossa through the thoracic inlet. Coronal and sagittal</paragraph><paragraph>reformatted images were obtained.</paragraph><paragraph/><paragraph>COMPARISON: None.</paragraph><paragraph/><paragraph>FINDINGS: The parotid, submandibular, and thyroid glands are symmetric.</paragraph><paragraph>No pathologic adenopathy is identified in the neck. There is no evidence</paragraph><paragraph>of retropharyngeal abscess or peritonsillar abscess.</paragraph><paragraph/><paragraph>There is a focus of gas just lateral to the left base of tongue, likely a</paragraph><paragraph>soft tissue laceration. Partial effacement of the left perform sinus is</paragraph><paragraph>noted.</paragraph><paragraph/><paragraph>The paranasal sinuses and mastoid air cells are not opacified. Imaged</paragraph><paragraph>portions of the brain parenchyma in the skull base are within normal</paragraph><paragraph>limits. The lung apices are clear.</paragraph><paragraph/><paragraph>Visualized vasculature in the neck is unremarkable. There is no acute</paragraph><paragraph>bony abnormality.</paragraph><paragraph/></td></tr></tbody></table><table><thead><tr><th>Procedure Note</th></tr></thead><tbody><tr><td styleCode="noIndent"><paragraph styleCode="header"/><paragraph><content>CT NECK WITH CONTRAST, 1/16/2014 9:57 PM:</content><br/><br/><content>HISTORY: Painful to swallow, left-sided neck pain. Injury below tongue.</content><br/><br/><content>PROCEDURE: Following the intravenous infusion of 100 cc Isovue 370</content><br/><content>contrast, multidetector CT imaging of the neck was performed from the</content><br/><content>posterior fossa through the thoracic inlet. Coronal and sagittal</content><br/><content>reformatted images were obtained.</content><br/><br/><content>COMPARISON: None.</content><br/><br/><content>FINDINGS: The parotid, submandibular, and thyroid glands are symmetric.</content><br/><content>No pathologic adenopathy is identified in the neck. There is no evidence</content><br/><content>of retropharyngeal abscess or peritonsillar abscess.</content><br/><br/><content>There is a focus of gas just lateral to the left base of tongue, likely</content><content>a</content><br/><content>soft tissue laceration. Partial effacement of the left perform sinus is</content><br/><content>noted.</content><br/><br/><content>The paranasal sinuses and mastoid air cells are not opacified. Imaged</content><br/><content>portions of the brain parenchyma in the skull base are within normal</content><br/><content>limits. The lung apices are clear.</content><br/><br/><content>Visualized vasculature in the neck is unremarkable. There is no acute</content><br/><content>bony abnormality.</content><br/><br/><content>IMPRESSION: Focus of gas and soft tissue swelling lateral to the left</content><br/><content>base of tongue, likely a soft tissue laceration. There is also partial</content><br/><content>effacement of the left performed sinus of one clear etiology. No</content><content>definite</content><br/><content>soft tissue mass is noted in this location.</content><br/><br/><content>Note: During initial intravenous contrast injection, approximately 87 mL</content><br/><content>of Isovue-370 infiltrated into the left antecubital fossa. The</content><br/><content>intravenous line was removed and the line was placed in the right arm.</content><br/><content>Warm compresses were placed on the infiltrate site and the patient</content><content>stated</content><br/><content>that his initial pain had subsided at the time of my examination. The</content><br/><content>patient was instructed that this volume of contrast typically will</content><br/><content>resorb, and he should followup with his primary physician if there is no</content><br/><content>symptomatic improvement over the next 2-3 days.</content><br/></paragraph></td></tr></tbody></table></item>
<item ID="Result21"><caption>O COMPREHEN METABOLIC PANEL (01/16/2014 8:37 PM PST)</caption><table><colgroup><col width="25%"/><col width="50%"/><col width="25%"/></colgroup><thead><tr><th>Component</th><th>Value</th><th>Range</th></tr></thead><tbody><tr ID="Result21Comp1"><td ID="Result21Comp1Name">Na</td><td>141</td><td>135-145 mmol/L</td></tr><tr ID="Result21Comp2"><td ID="Result21Comp2Name">K</td><td><content styleCode="flagData"><content><content>3.4</content></content><content>(L)</content></content></td><td>3.6-5.3 mmol/L</td></tr><tr ID="Result21Comp3"><td ID="Result21Comp3Name">Cl</td><td>105</td><td>98-109 mmol/L</td></tr><tr ID="Result21Comp4"><td ID="Result21Comp4Name">CO2</td><td>23</td><td>21-28 mmol/L</td></tr><tr ID="Result21Comp5"><td ID="Result21Comp5Name">Anion gap w/o K</td><td>13</td><td>7-15</td></tr><tr ID="Result21Comp6"><td ID="Result21Comp6Name">BUN</td><td>12</td><td>8-24 mg/dL</td></tr><tr ID="Result21Comp7"><td ID="Result21Comp7Name">Creatinine</td><td>0.85</td><td>0.7-1.5 mg/dL</td></tr><tr ID="Result21Comp8"><td ID="Result21Comp8Name">GFR non African Amer</td><td>101</td><td>>59 mL/min</td></tr><tr ID="Result21Comp9"><td ID="Result21Comp9Name">GFR African American</td><td>122</td><td>>59 mL/min</td></tr><tr ID="Result21Comp10"><td ID="Result21Comp10Name">Glucose</td><td>117</td><td>65-120 mg/dL</td></tr><tr ID="Result21Comp11"><td ID="Result21Comp11Name">SGOT/AST</td><td>21</td><td>5-40 IU/L</td></tr><tr ID="Result21Comp12"><td ID="Result21Comp12Name">Alk Phos</td><td>78</td><td>38-126 IU/L</td></tr><tr ID="Result21Comp13"><td ID="Result21Comp13Name">SGPT/ALT</td><td>21</td><td>6-60 IU/L</td></tr><tr ID="Result21Comp14"><td ID="Result21Comp14Name">Bilirubin total</td><td>0.3</td><td>0.2-1.4 mg/dL</td></tr><tr ID="Result21Comp15"><td ID="Result21Comp15Name">Protein</td><td>6.5</td><td>6.2-8.0 g/dL</td></tr><tr ID="Result21Comp16"><td ID="Result21Comp16Name">Albumin</td><td>3.4</td><td>3.2-5.0 g/dL</td></tr><tr ID="Result21Comp17"><td ID="Result21Comp17Name">Globulin (calc)</td><td>3.1</td><td>2.0-4.5 g/dL</td></tr><tr ID="Result21Comp18"><td ID="Result21Comp18Name">A:G Ratio</td><td>1.1</td><td>>1.0</td></tr><tr ID="Result21Comp19"><td ID="Result21Comp19Name">Calcium</td><td>9.2</td><td>8.5-10.5 mg/dL</td></tr></tbody></table></item>
<item ID="Result20"><caption>O CBC WITH DIFF (01/16/2014 8:37 PM PST)</caption><table><colgroup><col width="25%"/><col width="50%"/><col width="25%"/></colgroup><thead><tr><th>Component</th><th>Value</th><th>Range</th></tr></thead><tbody><tr ID="Result20Comp1"><td ID="Result20Comp1Name">WBC</td><td>7.90</td><td>4.00-12.00 K/uL</td></tr><tr ID="Result20Comp2"><td ID="Result20Comp2Name">RBC</td><td><content styleCode="flagData"><content><content>4.16</content></content><content>(L)</content></content></td><td>4.50-6.00 mil/uL</td></tr><tr ID="Result20Comp3"><td ID="Result20Comp3Name">Hgb</td><td><content styleCode="flagData"><content><content>12.9</content></content><content>(L)</content></content></td><td>14.0-18.0 g/dL</td></tr><tr ID="Result20Comp4"><td ID="Result20Comp4Name">Hct</td><td><content styleCode="flagData"><content><content>38.3</content></content><content>(L)</content></content></td><td>40-54 %</td></tr><tr ID="Result20Comp5"><td ID="Result20Comp5Name">MCV</td><td>92.1</td><td>80-98 fL</td></tr><tr ID="Result20Comp6"><td ID="Result20Comp6Name">MCH</td><td>31.0</td><td>27-33 pg</td></tr><tr ID="Result20Comp7"><td ID="Result20Comp7Name">MCHC</td><td>33.7</td><td>32-37 g/dL</td></tr><tr ID="Result20Comp8"><td ID="Result20Comp8Name">RDW</td><td>13.2</td><td>11.5-15.0 %</td></tr><tr ID="Result20Comp9"><td ID="Result20Comp9Name">Plt</td><td>195</td><td>150-450 K/uL</td></tr><tr ID="Result20Comp10"><td ID="Result20Comp10Name">Differential type</td><td>Automated</td><td/></tr><tr ID="Result20Comp11"><td ID="Result20Comp11Name">Abs neuts</td><td>4.69</td><td>1.80-7.80 K/uL</td></tr><tr ID="Result20Comp12"><td ID="Result20Comp12Name">Abs immature grans</td><td>0.04</td><td>0.00-0.08 K/uL</td></tr><tr ID="Result20Comp13"><td ID="Result20Comp13Name">Abs lymphs</td><td>2.40</td><td>0.80-3.30 K/uL</td></tr><tr ID="Result20Comp14"><td ID="Result20Comp14Name">Abs monos</td><td>0.55</td><td>0.10-1.00 K/uL</td></tr><tr ID="Result20Comp15"><td ID="Result20Comp15Name">Abs eos</td><td>0.20</td><td>0.00-0.40 K/uL</td></tr><tr ID="Result20Comp16"><td ID="Result20Comp16Name">Abs basos</td><td>0.02</td><td>0.00-0.20 K/uL</td></tr><tr ID="Result20Comp17"><td ID="Result20Comp17Name">Neuts</td><td>59.3</td><td>%</td></tr><tr ID="Result20Comp18"><td ID="Result20Comp18Name">Immature grans</td><td>0.5</td><td>%</td></tr><tr ID="Result20Comp19"><td ID="Result20Comp19Name">Lymphs</td><td>30.4</td><td>%</td></tr><tr ID="Result20Comp20"><td ID="Result20Comp20Name">Monos</td><td>7.0</td><td>%</td></tr><tr ID="Result20Comp21"><td ID="Result20Comp21Name">Eos</td><td>2.5</td><td>%</td></tr><tr ID="Result20Comp22"><td ID="Result20Comp22Name">Basos</td><td>0.3</td><td>%</td></tr></tbody></table></item>
</text>
          <entry typeCode="DRIV">
            <organizer classCode="BATTERY" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.32"/>
              <id root="1.2.840.114350.1.13.60.2.7.2.798268" extension="176231176"/>
              <code code="70491" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="O CT SOFT TISSUE NECK W/ CONTRAST"/>
              <statusCode code="completed"/>
              <effectiveTime value="20140116214721"/>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.2.798268" extension="176231176"/>
                  <code code="261665006" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Unknown"/>
                  <text>
										<reference nullFlavor="UNK" value="#Result19"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116214721">
                    <low value="20140116214721"/>
                  </effectiveTime>
                  <value xsi:type="ED" nullFlavor="NA"/>
                </observation>
              </component>
              <component>
                <procedure classCode="PROC" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.29"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.19"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.17"/>
                  <id root="1.2.840.114350.1.13.60.2.7.2.798268" extension="176231176"/>
                  <code code="70491" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="O CT SOFT TISSUE NECK W/ CONTRAST">
                    <originalText>
											<reference value="#"/>
										</originalText>
                  </code>
                  <text>
										<reference value="#Result19"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116214721">
                    <low value="20140116214721"/>
                  </effectiveTime>
                </procedure>
              </component>
            </organizer>
          </entry>
          <entry typeCode="DRIV">
            <organizer classCode="BATTERY" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.32"/>
              <id root="1.2.840.114350.1.13.60.2.7.2.798268" extension="128833401"/>
              <code code="85025" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="O CBC WITH DIFF"/>
              <statusCode code="completed"/>
              <effectiveTime value="20140116203700"/>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.1"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="WBC"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="7.90" unit="K/uL"/>
                  <referenceRange>
                    <observationRange>
                      <text>4.00-12.00 K/uL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.2"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="RBC"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="4.16" unit="mil/uL"/>
                  <interpretationCode code="L"/>
                  <referenceRange>
                    <observationRange>
                      <text>4.50-6.00 mil/uL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.3"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Hgb"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="12.9" unit="g/dL"/>
                  <interpretationCode code="L"/>
                  <referenceRange>
                    <observationRange>
                      <text>14.0-18.0 g/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.4"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Hct"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="38.3" unit="%"/>
                  <interpretationCode code="L"/>
                  <referenceRange>
                    <observationRange>
                      <text>40-54 %</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.5"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="MCV"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="92.1" unit="fL"/>
                  <referenceRange>
                    <observationRange>
                      <text>80-98 fL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.6"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="MCH"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="31.0" unit="pg"/>
                  <referenceRange>
                    <observationRange>
                      <text>27-33 pg</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.7"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="MCHC"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="33.7" unit="g/dL"/>
                  <referenceRange>
                    <observationRange>
                      <text>32-37 g/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.8"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="RDW"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="13.2" unit="%"/>
                  <referenceRange>
                    <observationRange>
                      <text>11.5-15.0 %</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.9"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Plt"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="195" unit="K/uL"/>
                  <referenceRange>
                    <observationRange>
                      <text>150-450 K/uL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.10"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Differential type"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="ST">Automated</value>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.11"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Abs neuts"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="4.69" unit="K/uL"/>
                  <referenceRange>
                    <observationRange>
                      <text>1.80-7.80 K/uL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.12"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Abs immature grans"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="0.04" unit="K/uL"/>
                  <referenceRange>
                    <observationRange>
                      <text>0.00-0.08 K/uL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.13"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Abs lymphs"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="2.40" unit="K/uL"/>
                  <referenceRange>
                    <observationRange>
                      <text>0.80-3.30 K/uL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.14"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Abs monos"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="0.55" unit="K/uL"/>
                  <referenceRange>
                    <observationRange>
                      <text>0.10-1.00 K/uL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.15"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Abs eos"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="0.20" unit="K/uL"/>
                  <referenceRange>
                    <observationRange>
                      <text>0.00-0.40 K/uL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.16"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Abs basos"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="0.02" unit="K/uL"/>
                  <referenceRange>
                    <observationRange>
                      <text>0.00-0.20 K/uL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.17"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Neuts"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="59.3" unit="%"/>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.18"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Immature grans"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="0.5" unit="%"/>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.19"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Lymphs"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="30.4" unit="%"/>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.20"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Monos"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="7.0" unit="%"/>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.21"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Eos"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="2.5" unit="%"/>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="128833401.22"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Basos"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="0.3" unit="%"/>
                </observation>
              </component>
              <component>
                <procedure classCode="PROC" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.29"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.19"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.17"/>
                  <id root="1.2.840.114350.1.13.60.2.7.2.798268" extension="128833401"/>
                  <code code="85025" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="O CBC WITH DIFF">
                    <originalText>
											<reference value="#"/>
										</originalText>
                  </code>
                  <text>
										<reference value="#Result20"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                </procedure>
              </component>
            </organizer>
          </entry>
          <entry typeCode="DRIV">
            <organizer classCode="BATTERY" moodCode="EVN">
              <templateId root="2.16.840.1.113883.10.20.1.32"/>
              <id root="1.2.840.114350.1.13.60.2.7.2.798268" extension="176231175"/>
              <code code="80053" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="O COMPREHEN METABOLIC PANEL"/>
              <statusCode code="completed"/>
              <effectiveTime value="20140116203700"/>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="176231175.1"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Na"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="141" unit="mmol/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>135-145 mmol/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="176231175.2"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="K"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="3.4" unit="mmol/L"/>
                  <interpretationCode code="L"/>
                  <referenceRange>
                    <observationRange>
                      <text>3.6-5.3 mmol/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="176231175.3"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Cl"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="105" unit="mmol/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>98-109 mmol/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="176231175.4"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="CO2"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="23" unit="mmol/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>21-28 mmol/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="176231175.5"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Anion gap w/o K"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="13"/>
                  <referenceRange>
                    <observationRange>
                      <text>7-15</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="176231175.6"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="BUN"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="12" unit="mg/dL"/>
                  <referenceRange>
                    <observationRange>
                      <text>8-24 mg/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="176231175.7"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Creatinine"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="0.85" unit="mg/dL"/>
                  <referenceRange>
                    <observationRange>
                      <text>0.7-1.5 mg/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="176231175.8"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="GFR non African Amer"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="101" unit="mL/min"/>
                  <referenceRange>
                    <observationRange>
                      <text>>59 mL/min</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="176231175.9"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="GFR African American"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="122" unit="mL/min"/>
                  <referenceRange>
                    <observationRange>
                      <text>>59 mL/min</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="176231175.10"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Glucose"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="117" unit="mg/dL"/>
                  <referenceRange>
                    <observationRange>
                      <text>65-120 mg/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="176231175.11"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="SGOT/AST"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="21" unit="IU/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>5-40 IU/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="176231175.12"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Alk Phos"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="78" unit="IU/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>38-126 IU/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="176231175.13"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="SGPT/ALT"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="21" unit="IU/L"/>
                  <referenceRange>
                    <observationRange>
                      <text>6-60 IU/L</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="176231175.14"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Bilirubin total"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="0.3" unit="mg/dL"/>
                  <referenceRange>
                    <observationRange>
                      <text>0.2-1.4 mg/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="176231175.15"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Protein"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="6.5" unit="g/dL"/>
                  <referenceRange>
                    <observationRange>
                      <text>6.2-8.0 g/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="176231175.16"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Albumin"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="3.4" unit="g/dL"/>
                  <referenceRange>
                    <observationRange>
                      <text>3.2-5.0 g/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="176231175.17"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Globulin (calc)"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="3.1" unit="g/dL"/>
                  <referenceRange>
                    <observationRange>
                      <text>2.0-4.5 g/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="176231175.18"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="A:G Ratio"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="1.1"/>
                  <referenceRange>
                    <observationRange>
                      <text>>1.0</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.15.1"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.6.798268.2000" extension="176231175.19"/>
                  <code nullFlavor="OTH" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Calcium"/>
                  <text>
										<reference value="#"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="9.2" unit="mg/dL"/>
                  <referenceRange>
                    <observationRange>
                      <text>8.5-10.5 mg/dL</text>
                    </observationRange>
                  </referenceRange>
                </observation>
              </component>
              <component>
                <procedure classCode="PROC" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.29"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.19"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.17"/>
                  <id root="1.2.840.114350.1.13.60.2.7.2.798268" extension="176231175"/>
                  <code code="80053" codeSystem="2.16.840.1.113883.6.12" codeSystemName="CPT-4" displayName="O COMPREHEN METABOLIC PANEL">
                    <originalText>
											<reference value="#"/>
										</originalText>
                  </code>
                  <text>
										<reference value="#Result21"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140116203700">
                    <low value="20140116203700"/>
                  </effectiveTime>
                </procedure>
              </component>
            </organizer>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.10.20.1.16"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.25"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.1.5.3.2"/>
          <templateId root="2.16.840.1.113883.3.88.11.83.119"/>
          <code code="8716-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Vital Signs"/>
          <title>Last Filed Vitals</title>
          <text><table ID="_nbVitalSignsComments" border="1" width="100%"><thead><tr><th>Comments</th></tr></thead><tbody/></table><table ID="_nbVitalSigns" border="1" width="100%"><thead><tr><th>Date</th><th>TEMP</th><th>Heart Rate</th><th>Resp Rate</th><th>BP</th><th>Height</th><th>Height-Lying</th><th>Body Mass Index</th><th>Weight</th><th>O2 Sat</th><th>Head Circumf</th><th>Body Surface Area</th><th>Source</th></tr>
</thead><tbody><tr><td>20140117064400+0000</td><td>--</td><td>81 </td><td>18 </td><td>101/55 mm[Hg]</td><td>--</td><td>--</td><td>--</td><td>--</td><td>95 %</td><td>--</td><td>--</td><td>--</td></tr><tr><td>20140117023900+0000</td><td>36.4 Cel</td><td>102 </td><td>18 </td><td>125/69 mm[Hg]</td><td>--</td><td>--</td><td>34.31 kg/m2</td><td>117.935 kg</td><td>96 %</td><td>--</td><td>--</td><td>--</td></tr></tbody></table><content ID="sysBP_5460849840">101</content>
<content ID="diaBP_5460849840">55</content>
<td ID="pulse_5460849840">81</td>
<td ID="temp_5460849840"/>
<td ID="resp_5460849840">18</td>
<td ID="height_5460849840"/>
<td ID="weight_5460849840"/>
<td ID="bmi_5460849840"/>
<td ID="SpO2_5460849840">95%</td>
<content ID="sysBP_5460835140">125</content>
<content ID="diaBP_5460835140">69</content>
<td ID="pulse_5460835140">102</td>
<td ID="temp_5460835140">97.6 F (36.4 C)</td>
<td ID="resp_5460835140">18</td>
<td ID="height_5460835140"/>
<td ID="weight_5460835140">260 lb (117.935 kg)</td>
<td ID="bmi_5460835140">34.31</td>
<td ID="SpO2_5460835140">96%</td>
</text>
          <entry typeCode="DRIV">
            <organizer classCode="CLUSTER" moodCode="EVN">
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.1"/>
              <templateId root="2.16.840.1.113883.10.20.1.32"/>
              <templateId root="2.16.840.1.113883.10.20.1.35"/>
              <id root="1.2.840.114350.1.13.60.2.7.1.2109" extension="5460849840-1315037"/>
              <code code="46680005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Vital signs"/>
              <statusCode code="completed"/>
              <effectiveTime value="20140117064400+0000"/>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.14"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.1.2109.1" extension="5460849840-sysBP-1315037"/>
                  <code code="8480-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="SYSTOLIC BLOOD PRESSURE"/>
                  <text>
										<reference value="#sysBP_5460849840"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140117064400+0000">
                    <low value="20140117064400+0000"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="101" unit="mm[Hg]"/>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.14"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.1.2109.1" extension="5460849840-diaBP-1315037"/>
                  <code code="8462-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="DIASTOLIC BLOOD PRESSURE"/>
                  <text>
										<reference value="#diaBP_5460849840"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140117064400+0000">
                    <low value="20140117064400+0000"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="55" unit="mm[Hg]"/>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.14"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.1.2109.1" extension="5460849840-pulse-1315037"/>
                  <code code="8867-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="HEART RATE"/>
                  <text>
										<reference value="#pulse_5460849840"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140117064400+0000">
                    <low value="20140117064400+0000"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="81"/>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.14"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.1.2109.1" extension="5460849840-resp-1315037"/>
                  <code code="9279-1" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="RESPIRATORY RATE"/>
                  <text>
										<reference value="#resp_5460849840"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140117064400+0000">
                    <low value="20140117064400+0000"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="18"/>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.14"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.1.2109.1" extension="5460849840-SpO2-1315037"/>
                  <code code="2710-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="OXYGEN SATURATION"/>
                  <text>
										<reference value="#SpO2_5460849840"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140117064400+0000">
                    <low value="20140117064400+0000"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="95" unit="%"/>
                </observation>
              </component>
            </organizer>
          </entry>
          <entry typeCode="DRIV">
            <organizer classCode="CLUSTER" moodCode="EVN">
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.1"/>
              <templateId root="2.16.840.1.113883.10.20.1.32"/>
              <templateId root="2.16.840.1.113883.10.20.1.35"/>
              <id root="1.2.840.114350.1.13.60.2.7.1.2109" extension="5460835140-1315037"/>
              <code code="46680005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Vital signs"/>
              <statusCode code="completed"/>
              <effectiveTime value="20140117023900+0000"/>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.14"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.1.2109.1" extension="5460835140-sysBP-1315037"/>
                  <code code="8480-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="SYSTOLIC BLOOD PRESSURE"/>
                  <text>
										<reference value="#sysBP_5460835140"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140117023900+0000">
                    <low value="20140117023900+0000"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="125" unit="mm[Hg]"/>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.14"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.1.2109.1" extension="5460835140-diaBP-1315037"/>
                  <code code="8462-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="DIASTOLIC BLOOD PRESSURE"/>
                  <text>
										<reference value="#diaBP_5460835140"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140117023900+0000">
                    <low value="20140117023900+0000"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="69" unit="mm[Hg]"/>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.14"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.1.2109.1" extension="5460835140-pulse-1315037"/>
                  <code code="8867-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="HEART RATE"/>
                  <text>
										<reference value="#pulse_5460835140"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140117023900+0000">
                    <low value="20140117023900+0000"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="102"/>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.14"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.1.2109.1" extension="5460835140-tempC83-1315037"/>
                  <code code="8310-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="BODY TEMPERATURE"/>
                  <text>
										<reference value="#temp_5460835140"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140117023900+0000">
                    <low value="20140117023900+0000"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="36.4" unit="Cel"/>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.14"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.1.2109.1" extension="5460835140-resp-1315037"/>
                  <code code="9279-1" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="RESPIRATORY RATE"/>
                  <text>
										<reference value="#resp_5460835140"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140117023900+0000">
                    <low value="20140117023900+0000"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="18"/>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.14"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.1.2109.1" extension="5460835140-weightC83-1315037"/>
                  <code code="3141-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="WEIGHT"/>
                  <text>
										<reference value="#weight_5460835140"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140117023900+0000">
                    <low value="20140117023900+0000"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="117.935" unit="kg"/>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.14"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.1.2109.1" extension="5460835140-bmi-1315037"/>
                  <code code="39156-5" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="BODY MASS INDEX"/>
                  <text>
										<reference value="#bmi_5460835140"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140117023900+0000">
                    <low value="20140117023900+0000"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="34.31" unit="kg/m2"/>
                </observation>
              </component>
              <component>
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.31"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.14"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
                  <id root="1.2.840.114350.1.13.60.2.7.1.2109.1" extension="5460835140-SpO2-1315037"/>
                  <code code="2710-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="OXYGEN SATURATION"/>
                  <text>
										<reference value="#SpO2_5460835140"/>
									</text>
                  <statusCode code="completed"/>
                  <effectiveTime value="20140117023900+0000">
                    <low value="20140117023900+0000"/>
                  </effectiveTime>
                  <value xsi:type="PQ" value="96" unit="%"/>
                </observation>
              </component>
            </organizer>
          </entry>
        </section>
      </component>
    </structuredBody>
  </component>
</ClinicalDocument>
