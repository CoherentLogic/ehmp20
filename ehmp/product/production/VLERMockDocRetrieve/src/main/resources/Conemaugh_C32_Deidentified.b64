<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="cda2detail.xsl"?>

<ClinicalDocument xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:hl7-org:v3" xmlns:_ns0="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns2="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:ns3="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:ns4="urn:gov:hhs:fha:nhinc:common:patientcorrelationfacade" classCode="DOCCLIN">
  <realmCode code="US"/>
  <typeId root="2.16.840.1.113883.1.3" extension="POCD_HD000040"/>
  <templateId root="2.16.840.1.113883.10.20.1"/>
  <templateId root="2.16.840.1.113883.3.88.11.32.1"/>
  <templateId root="2.16.840.1.113883.10.20.3"/>
  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.1.1"/>
  <id root="b75c09ad-4285-40ea-a044-7ee8c40a11ef"/>
  <code code="34133-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Summarization of Episode Note"/>
  <title>Summarization of Episode Note</title>
  <effectiveTime value="20130312200612-0000"/>
  <confidentialityCode code="N" codeSystem="2.16.840.1.113883.5.25" displayName="Normal"/>
  <languageCode code="en-US"/>
  <recordTarget>
    <patientRole>
      <id root="2.16.840.1.113883.3.413" extension="0123456789" assigningAuthorityName="Conemaugh Health System NHIN Gateway"/>
      <addr use="HP">
                <streetAddressLine>000 ANY STREET</streetAddressLine>
                <city>ANY CITY</city>
                <state>PA</state>
                <postalCode>15942     </postalCode>
                <country/>
            </addr>
      <telecom value="tel:888-123-4567" use="HP"/>
      <patient>
        <name use="L">
                    <given>FIRSTNAME_PATIENT </given>
                    <family>LASTNAME</family>
                </name>
        <administrativeGenderCode code="M" codeSystem="2.16.840.1.113883.5.1" codeSystemName="AdministrativeGenderCode" displayName="Male"/>
        <birthTime value="19000101"/>
        <maritalStatusCode code="M" codeSystem="2.16.840.1.113883.5.2" codeSystemName="MaritalStatusCode" displayName="Married"/>
        <raceCode code="White" displayName="White"/>
      </patient>
    </patientRole>
  </recordTarget>
  <author>
    <time value="20130312200612-0000"/>
    <assignedAuthor>
      <id root="2.16.840.1.113883.3.413"/>
      <addr>
                <streetAddressLine>000 ANY STREET.</streetAddressLine>
                <city>ANY CITY</city>
                <state>PA</state>
                <postalCode>15905</postalCode>
            </addr>
      <telecom value="tel:+1-888-123-4567"/>
      <assignedPerson>
        <name nullFlavor="UNK"/>
      </assignedPerson>
      <representedOrganization>
        <id root="2.16.840.1.113883.3.413"/>
        <name>Conemaugh Health System</name>
        <telecom value="tel:+1-888-123-4567"/>
        <addr>
                    <streetAddressLine>000 ANY STREET.</streetAddressLine>
                    <city>ANY CITY</city>
                    <state>PA</state>
                    <postalCode>15905</postalCode>
                </addr>
      </representedOrganization>
    </assignedAuthor>
  </author>
  <informant>
    <assignedEntity>
      <id root="2.16.840.1.113883.3.413"/>
      <addr>
                <streetAddressLine>000 ANY STREET.</streetAddressLine>
                <city>ANY CITY</city>
                <state>PA</state>
                <postalCode>15905</postalCode>
            </addr>
      <telecom value="tel:+1-888-123-4567"/>
      <assignedPerson>
        <name nullFlavor="UNK"/>
      </assignedPerson>
      <representedOrganization>
        <id root="2.16.840.1.113883.3.413"/>
        <name>Conemaugh Health System</name>
        <telecom value="tel:+1-888-123-4567"/>
        <addr>
                    <streetAddressLine>000 ANY STREET.</streetAddressLine>
                    <city>ANY CITY</city>
                    <state>PA</state>
                    <postalCode>15905</postalCode>
                </addr>
      </representedOrganization>
    </assignedEntity>
  </informant>
  <custodian>
    <assignedCustodian>
      <representedCustodianOrganization>
        <id root="2.16.840.1.113883.3.413"/>
        <name>Conemaugh Health System</name>
        <telecom value="tel:+1-888-123-4567"/>
        <addr>
                    <streetAddressLine>000 ANY STREET.</streetAddressLine>
                    <city>ANY CITY</city>
                    <state>PA</state>
                    <postalCode>15905</postalCode>
                </addr>
      </representedCustodianOrganization>
    </assignedCustodian>
  </custodian>
  <participant typeCode="IND">
    <templateId root="2.16.840.1.113883.3.88.11.83.3"/>
    <templateId root="1.3.6.1.4.1.19376.1.5.3.1.2.4"/>
    <time nullFlavor="UNK"/>
    <associatedEntity classCode="ECON">
      <addr nullFlavor="UNK"/>
      <telecom value="tel:+1:888-123-4567" use="HP"/>
      <associatedPerson>
        <name use="L">
                    <given>FIRSTNAME_ECON</given>
                    <family>LASTNAME</family>
                </name>
      </associatedPerson>
    </associatedEntity>
  </participant>
  <documentationOf>
    <serviceEvent classCode="PCPR">
      <effectiveTime>
        <low nullFlavor="UNK"/>
        <high nullFlavor="UNK"/>
      </effectiveTime>
    </serviceEvent>
  </documentationOf>
  <component>
    <structuredBody>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.3.88.11.83.102" assigningAuthorityName="HITSP/C83"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.13" assigningAuthorityName="IHE"/>
          <templateId root="2.16.840.1.113883.10.20.1.2" assigningAuthorityName="CCD"/>
          <code code="48765-2" codeSystem="2.16.840.1.113883.6.1"/>
          <title>Allergies and Adverse Reactions</title>
          <text><table ID="_nbAllergy" border="1" width="100%"><thead><tr><th>Allergen</th><th>Reaction</th><th>Severity</th><th>Event Type</th><th>Event Date</th><th>Source</th></tr>
</thead><tbody><tr><td>No Known Allergies</td><td>--</td><td>--</td><td>Non-Drug Allergy</td><td>--</td><td>Conemaugh Health System</td></tr></tbody></table></text>
          <entry typeCode="DRIV">
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.6" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.3" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.27" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <id root="fb7733ca-5fdd-3cf3-b5e6-cdb1cef2b683"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.18" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.10.20.1.28"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
                  <id root="4b77d1ab-98dc-337c-9000-5dce7f56b176"/>
                  <code code="420134006" codeSystem="2.16.840.1.113883.6.96" displayName="Non-Drug Allergy"/>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD"/>
                  <participant typeCode="CSM">
                    <participantRole classCode="MANU">
                      <playingEntity classCode="MMAT">
                        <code nullFlavor="UNK">
                          <originalText nullFlavor="UNK">
                                                        <reference nullFlavor="UNK"/>
                                                    </originalText>
                        </code>
                        <name>No Known Allergies</name>
                      </playingEntity>
                    </participantRole>
                  </participant>
                </observation>
              </entryRelationship>
            </act>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.3.88.11.83.103" assigningAuthorityName="HITSP/C83"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.6" assigningAuthorityName="IHE"/>
          <templateId root="2.16.840.1.113883.10.20.1.11" assigningAuthorityName="CCD"/>
          <code code="11450-4" codeSystem="2.16.840.1.113883.6.1"/>
          <title>Problems</title>
          <text><table ID="_nbConditionProblems" border="1" width="100%"><thead><tr><th>Problem</th><th>Status</th><th>Problem Code</th><th>Problem Type</th><th>Date of Onset</th><th>Date Resolved</th><th>Cause of Death</th><th>Age at Onset</th><th>Age at Death</th><th>Time of Death</th><th>Provider</th><th>Source</th></tr>
</thead><tbody><tr><td ID="#CondID-1">Benign Essential Hypertension</td><td>--</td><td>401.1</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr><tr><td ID="#CondID-2">Coronary Artery Disease</td><td>--</td><td>414.00</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr><tr><td ID="#CondID-3">Hyperlipidemia</td><td>--</td><td>272.4</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr><tr><td ID="#CondID-4">Stroke Syndrome</td><td>--</td><td>436</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr><tr><td ID="#CondID-5">Vascular Dementia</td><td>--</td><td>290.40</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr><tr><td ID="#CondID-6">Gout</td><td>--</td><td>274.00</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr><tr><td ID="#CondID-7">Atrial Fibrillation</td><td>--</td><td>427.31</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr><tr><td ID="#CondID-8">Memory Lapses Or Loss</td><td>--</td><td>780.93</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr><tr><td ID="#CondID-9">Rosacea</td><td>--</td><td>695.3</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr><tr><td ID="#CondID-10">Fatigue</td><td>--</td><td>780.79</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr><tr><td ID="#CondID-11">Normal Routine History And Physical Senior Citizen (65-80)</td><td>--</td><td>V70.0</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr><tr><td ID="#CondID-12">Dysplastic Nevus</td><td>--</td><td>238.2</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td></tr></tbody></table><paragraph ID="CondID-3">Hyperlipidemia</paragraph>
<paragraph ID="CondID-2">Coronary Artery Disease</paragraph>
<paragraph ID="CondID-10">Fatigue</paragraph>
<paragraph ID="CondID-1">Benign Essential Hypertension</paragraph>
<paragraph ID="CondID-7">Atrial Fibrillation</paragraph>
<paragraph ID="CondID-6">Gout</paragraph>
<paragraph ID="CondID-5">Vascular Dementia</paragraph>
<paragraph ID="CondID-4">Stroke Syndrome</paragraph>
<paragraph ID="CondID-9">Rosacea</paragraph>
<paragraph ID="CondID-8">Memory Lapses Or Loss</paragraph>
<paragraph ID="CondID-11">Normal Routine History And Physical Senior Citizen (65-80)</paragraph>
<paragraph ID="CondID-12">Dysplastic Nevus</paragraph>
</text>
          <entry typeCode="DRIV">
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.7" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.27" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <id root="ccf21578-c66d-3239-adf5-ff5d19328b31"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <id root="f45ab039-c163-3caa-8a0b-3851962c0c54"/>
                  <code code="64572001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT"/>
                  <text>
                                        <reference value="#CondID-1"/>
                                    </text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="401.1" codeSystem="2.16.840.1.113883.11.15931" codeSystemName="ICD9" displayName="Benign Essential Hypertension"/>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry typeCode="DRIV">
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.7" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.27" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <id root="803de56a-ee44-3d4c-b609-044ab43b168e"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <id root="39b83ea2-263e-3124-8d2e-96ed2e41ee80"/>
                  <code code="64572001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT"/>
                  <text>
                                        <reference value="#CondID-2"/>
                                    </text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="414.00" codeSystem="2.16.840.1.113883.11.15931" codeSystemName="ICD9" displayName="Coronary Artery Disease"/>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry typeCode="DRIV">
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.7" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.27" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <id root="66262450-3191-3cb4-a05d-2ffceed8c28e"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <id root="fb43af3f-cd60-31a8-a558-c5315bec81dc"/>
                  <code code="64572001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT"/>
                  <text>
                                        <reference value="#CondID-3"/>
                                    </text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="272.4" codeSystem="2.16.840.1.113883.11.15931" codeSystemName="ICD9" displayName="Hyperlipidemia"/>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry typeCode="DRIV">
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.7" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.27" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <id root="f2ac95a8-27be-3b4a-8c8f-552d5e609219"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <id root="447e4d70-4723-39d6-a89a-509d391b0ca1"/>
                  <code code="64572001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT"/>
                  <text>
                                        <reference value="#CondID-4"/>
                                    </text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="436" codeSystem="2.16.840.1.113883.11.15931" codeSystemName="ICD9" displayName="Stroke Syndrome"/>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry typeCode="DRIV">
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.7" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.27" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <id root="4521ac53-b348-37bd-ad59-0f1ebbc75bec"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <id root="9975c1f7-ce82-34fb-88d9-7fccd2ffdb55"/>
                  <code code="64572001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT"/>
                  <text>
                                        <reference value="#CondID-5"/>
                                    </text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="290.40" codeSystem="2.16.840.1.113883.11.15931" codeSystemName="ICD9" displayName="Vascular Dementia"/>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry typeCode="DRIV">
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.7" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.27" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <id root="c0b8b47b-9302-3ded-990b-40986fd6bc97"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <id root="af5198dc-1076-3727-942b-c78233f54041"/>
                  <code code="64572001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT"/>
                  <text>
                                        <reference value="#CondID-6"/>
                                    </text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="274.00" codeSystem="2.16.840.1.113883.11.15931" codeSystemName="ICD9" displayName="Gout"/>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry typeCode="DRIV">
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.7" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.27" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <id root="7edec3ba-b7de-38ca-abe2-c4196943d2e6"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <id root="3f9f4ab7-5204-3c80-a693-22cd37c02e55"/>
                  <code code="64572001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT"/>
                  <text>
                                        <reference value="#CondID-7"/>
                                    </text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="427.31" codeSystem="2.16.840.1.113883.11.15931" codeSystemName="ICD9" displayName="Atrial Fibrillation"/>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry typeCode="DRIV">
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.7" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.27" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <id root="4b5ab1b2-01b0-32a2-8554-fda742321299"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <id root="e869a805-5b98-3331-be32-f3c416187476"/>
                  <code code="64572001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT"/>
                  <text>
                                        <reference value="#CondID-8"/>
                                    </text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="780.93" codeSystem="2.16.840.1.113883.11.15931" codeSystemName="ICD9" displayName="Memory Lapses Or Loss"/>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry typeCode="DRIV">
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.7" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.27" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <id root="a0a16a07-e957-3a36-97f9-84d0b12186b6"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <id root="51ff5b7a-f522-3281-876b-46961c8c9cdc"/>
                  <code code="64572001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT"/>
                  <text>
                                        <reference value="#CondID-9"/>
                                    </text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="695.3" codeSystem="2.16.840.1.113883.11.15931" codeSystemName="ICD9" displayName="Rosacea"/>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry typeCode="DRIV">
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.7" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.27" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <id root="2f4980b2-f01b-36c1-a706-39e3eaa62e43"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <id root="9f75f7e8-8f4e-3c63-8649-90777ab3b10f"/>
                  <code code="64572001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT"/>
                  <text>
                                        <reference value="#CondID-10"/>
                                    </text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="780.79" codeSystem="2.16.840.1.113883.11.15931" codeSystemName="ICD9" displayName="Fatigue"/>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry typeCode="DRIV">
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.7" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.27" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <id root="2aeb82d3-4969-3f96-880f-5468d826fb4d"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <id root="6ca495b9-89d1-3498-a2d5-851df042e785"/>
                  <code code="64572001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT"/>
                  <text>
                                        <reference value="#CondID-11"/>
                                    </text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="V70.0" codeSystem="2.16.840.1.113883.11.15931" codeSystemName="ICD9" displayName="Normal Routine History And Physical Senior Citizen (65-80)"/>
                </observation>
              </entryRelationship>
            </act>
          </entry>
          <entry typeCode="DRIV">
            <act classCode="ACT" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.7" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.27" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
              <id root="10dfab30-39d5-3c21-b7e7-dd3c3d51ccb1"/>
              <code nullFlavor="NA"/>
              <statusCode code="active"/>
              <effectiveTime>
                <low nullFlavor="UNK"/>
              </effectiveTime>
              <entryRelationship typeCode="SUBJ" inversionInd="false">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId root="2.16.840.1.113883.10.20.1.28" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
                  <id root="15461b86-5dc1-3154-a953-c97b5d1e71ef"/>
                  <code code="64572001" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT"/>
                  <text>
                                        <reference value="#CondID-12"/>
                                    </text>
                  <statusCode code="completed"/>
                  <effectiveTime>
                    <low nullFlavor="UNK"/>
                  </effectiveTime>
                  <value xsi:type="CD" code="238.2" codeSystem="2.16.840.1.113883.11.15931" codeSystemName="ICD9" displayName="Dysplastic Nevus"/>
                </observation>
              </entryRelationship>
            </act>
          </entry>
        </section>
      </component>
      <component>
        <section>
          <templateId root="2.16.840.1.113883.3.88.11.83.112" assigningAuthorityName="HITSP/C83"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.19" assigningAuthorityName="IHE"/>
          <templateId root="2.16.840.1.113883.10.20.1.8" assigningAuthorityName="CCD"/>
          <code code="10160-0" codeSystem="2.16.840.1.113883.6.1"/>
          <title>Medications</title>
          <text><table ID="_nbMedications" border="1" width="100%">
	<thead>
<tr><th>Medications</th><th>Medication Brand Name</th><th>Medication Status</th><th>Order Date</th><th>Order Expiration</th><th>Provider (Ordering)</th><th>Prescription #</th><th>Fill Status</th><th>Quantity Dispensed</th><th>Dispense Date</th><th>Sig</th><th>Source</th><th>Reaction</th><th>Indicate Medication Stopped</th><th>Administrative Timing</th><th>Route Code</th><th>Body Site</th><th>Dose Quanity</th><th>Dose Restriction</th><th>Product Form</th><th>Delivery Method</th><th>Drug Manufacture</th><th>Type of Medication</th><th>Indication</th><th>Vehicle</th><th>Dose Indicator</th><th>Order Number</th><th>Total Fills</th><th>FulFillment Instructions</th><th>Dispensing Provider</th><th>Pharmacy Location</th><th>Fill Number</th></tr>
</thead>
<tbody>
<tr><td>--</td><td>MetroNIDAZOLE 0.75 % External Cream</td><td>completed</td><td>20110927</td><td>20120927</td><td>FIRSTNAME_PROVIDER LASTNAME</td><td>--</td><td>--</td><td>--</td><td>--</td><td>MetroNIDAZOLE 0.75 % External Cream; APPLY AND GENTLY MASSAGE INTO AFFECTED AREA(S) TWICE DAILY.</td><td>--</td><td>--</td><td>--</td><td>From: 20110927 To: 20110927 </td><td>External</td><td>--</td><td>0.75 %</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>14831839</td><td>3</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td>--</td><td>HydrALAZINE HCl - 50 MG Oral Tablet</td><td>completed</td><td>20130304</td><td>20140304</td><td>FIRSTNAME_PROVIDER LASTNAME</td><td>--</td><td>--</td><td>--</td><td>--</td><td>HydrALAZINE HCl - 50 MG Oral Tablet; TAKE 1 TABLET 3 TIMES DAILY.</td><td>--</td><td>--</td><td>--</td><td>From: 20130304 To: 20130304 </td><td>Oral</td><td>--</td><td>50 MG</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>65051513</td><td>3</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td>--</td><td>Metoprolol Tartrate 50 MG Oral Tablet</td><td>completed</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Metoprolol Tartrate 50 MG Oral Tablet; TAKE t.i.d</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Oral</td><td>--</td><td>50 MG</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>0</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td>--</td><td>Coumadin 5 MG Oral Tablet</td><td>completed</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Coumadin 5 MG Oral Tablet; TAKE AS DIRECTED.</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Oral</td><td>--</td><td>5 MG</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>0</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td>--</td><td>Digitek 0.25 MG TABS</td><td>completed</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Digitek 0.25 MG TABS; TAKE 1 TABLET DAILY.</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Oral</td><td>--</td><td>0.25 MG</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>0</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td>--</td><td>Aricept 5 MG Oral Tablet</td><td>completed</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Aricept 5 MG Oral Tablet; TAKE 1 TABLET DAILY AS DIRECTED.</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Oral</td><td>--</td><td>5 MG</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>0</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td>--</td><td>Captopril 50 MG Oral Tablet</td><td>completed</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Captopril 50 MG Oral Tablet; TAKE 1 TABLET 3 TIMES DAILY.</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Oral</td><td>--</td><td>50 MG</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>0</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td>--</td><td>Aspirin 81 MG Oral Tablet</td><td>completed</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Aspirin 81 MG Oral Tablet; TAKE 1 TABLET DAILY.</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Oral</td><td>--</td><td>81 MG</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>0</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td>--</td><td>Simvastatin 20 MG Oral Tablet</td><td>completed</td><td>20130128</td><td>20140128</td><td>FIRSTNAME_PROVIDER LASTNAME</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Simvastatin 20 MG Oral Tablet; TAKE 1 TABLET DAILY.</td><td>--</td><td>--</td><td>--</td><td>From: 20130128 To: 20130128 </td><td>Oral</td><td>--</td><td>20 MG</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>60942835</td><td>3</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td>--</td><td>Sulfamethoxazole-TMP DS 800-160 MG Oral Tablet</td><td>completed</td><td>20130304</td><td>20140304</td><td>FIRSTNAME_PROVIDER LASTNAME</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Sulfamethoxazole-TMP DS 800-160 MG Oral Tablet; TAKE 1 TABLET 1-2x  DAILY.</td><td>--</td><td>--</td><td>--</td><td>From: 20130304 To: 20130304 </td><td>Oral</td><td>--</td><td> MG</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>65051580</td><td>0</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
<tr><td>--</td><td>Allopurinol 100 MG Oral Tablet</td><td>completed</td><td>20130304</td><td>20140304</td><td>FIRSTNAME_PROVIDER LASTNAME</td><td>--</td><td>--</td><td>--</td><td>--</td><td>Allopurinol 100 MG Oral Tablet; TAKE 1 TABLET DAILY.</td><td>--</td><td>--</td><td>--</td><td>From: 20130304 To: 20130304 </td><td>Oral</td><td>--</td><td>100 MG</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>--</td><td>65051483</td><td>5</td><td>--</td><td>--</td><td>--</td><td>--</td></tr>
</tbody></table><content ID="Sulfamethoxazole-TMP DS 800-160 MG Oral Tablet">TAKE 1 TABLET 1-2x  DAILY.</content>
<content ID="Captopril 50 MG Oral Tablet">TAKE 1 TABLET 3 TIMES DAILY.</content>
<content ID="Aspirin 81 MG Oral Tablet">TAKE 1 TABLET DAILY.</content>
<content ID="Coumadin 5 MG Oral Tablet">TAKE AS DIRECTED.</content>
<content ID="Simvastatin 20 MG Oral Tablet">TAKE 1 TABLET DAILY.</content>
<content ID="Digitek 0.25 MG TABS">TAKE 1 TABLET DAILY.</content>
<content ID="MetroNIDAZOLE 0.75 % External Cream">APPLY AND GENTLY MASSAGE INTO AFFECTED AREA(S) TWICE DAILY.</content>
<content ID="Allopurinol 100 MG Oral Tablet">TAKE 1 TABLET DAILY.</content>
<content ID="HydrALAZINE HCl - 50 MG Oral Tablet">TAKE 1 TABLET 3 TIMES DAILY.</content>
<content ID="Metoprolol Tartrate 50 MG Oral Tablet">TAKE t.i.d</content>
<content ID="Aricept 5 MG Oral Tablet">TAKE 1 TABLET DAILY AS DIRECTED.</content>
</text>
          <entry typeCode="DRIV">
            <substanceAdministration classCode="SBADM" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.8" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.24" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <id root="f83f2657-14e2-3293-a1ab-31177326e0e6"/>
              <text>MetroNIDAZOLE 0.75 % External Cream; APPLY AND GENTLY MASSAGE INTO AFFECTED AREA(S) TWICE DAILY.</text>
              <statusCode code="completed"/>
              <effectiveTime xsi:type="IVL_TS">
                <low value="20110927"/>
                <high value="20110927"/>
              </effectiveTime>
              <routeCode code="EX" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="AllScripts" displayName="External"/>
              <doseQuantity value="0.75" unit="%"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="2.16.840.1.113883.10.20.1.53" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2" assigningAuthorityName="HITSP/C83"/>
                  <manufacturedMaterial classCode="MMAT" determinerCode="KIND">
                    <code code="67405011045" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NationalDrugCode" displayName="MetroNIDAZOLE 0.75 % External Cream">
                      <originalText>
                                                <reference nullFlavor="UNK"/>
                                            </originalText>
                    </code>
                    <name>MetroNIDAZOLE 0.75 % External Cream</name>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId extension="2.16.840.1.113883.3.88.11.83.8.1" assigningAuthorityName="HITSP/C83"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <supply classCode="SPLY" moodCode="INT">
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.3" assigningAuthorityName="HITSP/C83"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.3" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.10.20.1.34" assigningAuthorityName="CCD"/>
                  <id root="2.16.840.1.113883.3.413" extension="14831839"/>
                  <effectiveTime value="20120927"/>
                  <repeatNumber value="3"/>
                  <quantity value="60" unit="{CREA}"/>
                  <author>
                    <time value="20110927"/>
                    <assignedAuthor>
                      <id root="2.16.840.1.113883.4.6" extension="1427041821" assigningAuthorityName="National Provider ID"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>FIRSTNAME_PROVIDER LASTNAME</name>
                      </assignedPerson>
                    </assignedAuthor>
                  </author>
                </supply>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry typeCode="DRIV">
            <substanceAdministration classCode="SBADM" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.8" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.24" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <id root="81357583-f1b0-3ae7-8ce8-b7d5c6868fc6"/>
              <text>HydrALAZINE HCl - 50 MG Oral Tablet; TAKE 1 TABLET 3 TIMES DAILY.</text>
              <statusCode code="completed"/>
              <effectiveTime xsi:type="IVL_TS">
                <low value="20130304"/>
                <high value="20130304"/>
              </effectiveTime>
              <routeCode code="OR" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="AllScripts" displayName="Oral"/>
              <doseQuantity value="50" unit="MG"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="2.16.840.1.113883.10.20.1.53" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2" assigningAuthorityName="HITSP/C83"/>
                  <manufacturedMaterial classCode="MMAT" determinerCode="KIND">
                    <code code="68462034305" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NationalDrugCode" displayName="HydrALAZINE HCl - 50 MG Oral Tablet">
                      <originalText>
                                                <reference nullFlavor="UNK"/>
                                            </originalText>
                    </code>
                    <name>HydrALAZINE HCl - 50 MG Oral Tablet</name>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId extension="2.16.840.1.113883.3.88.11.83.8.1" assigningAuthorityName="HITSP/C83"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <supply classCode="SPLY" moodCode="INT">
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.3" assigningAuthorityName="HITSP/C83"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.3" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.10.20.1.34" assigningAuthorityName="CCD"/>
                  <id root="2.16.840.1.113883.3.413" extension="65051513"/>
                  <effectiveTime value="20140304"/>
                  <repeatNumber value="3"/>
                  <quantity value="90" unit="{TABS}"/>
                  <author>
                    <time value="20130304"/>
                    <assignedAuthor>
                      <id root="2.16.840.1.113883.4.6" extension="1861519985" assigningAuthorityName="National Provider ID"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>FIRSTNAME_PROVIDER LASTNAME</name>
                      </assignedPerson>
                    </assignedAuthor>
                  </author>
                </supply>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry typeCode="DRIV">
            <substanceAdministration classCode="SBADM" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.8" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.24" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <id root="e285b552-c2be-337f-9fd8-5548f88a20f3"/>
              <text>Metoprolol Tartrate 50 MG Oral Tablet; TAKE t.i.d</text>
              <statusCode code="completed"/>
              <routeCode code="OR" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="AllScripts" displayName="Oral"/>
              <doseQuantity value="50" unit="MG"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="2.16.840.1.113883.10.20.1.53" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2" assigningAuthorityName="HITSP/C83"/>
                  <manufacturedMaterial classCode="MMAT" determinerCode="KIND">
                    <code code="68645019059" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NationalDrugCode" displayName="Metoprolol Tartrate 50 MG Oral Tablet">
                      <originalText>
                                                <reference nullFlavor="UNK"/>
                                            </originalText>
                    </code>
                    <name>Metoprolol Tartrate 50 MG Oral Tablet</name>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId extension="2.16.840.1.113883.3.88.11.83.8.1" assigningAuthorityName="HITSP/C83"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <supply classCode="SPLY" moodCode="INT">
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.3" assigningAuthorityName="HITSP/C83"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.3" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.10.20.1.34" assigningAuthorityName="CCD"/>
                  <id root="2.16.840.1.113883.3.88.11.83.8.3" assigningAuthorityName="HITSP/C83"/>
                  <repeatNumber value="0"/>
                </supply>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry typeCode="DRIV">
            <substanceAdministration classCode="SBADM" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.8" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.24" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <id root="74d1490a-b539-351e-88d7-1523300e4eba"/>
              <text>Coumadin 5 MG Oral Tablet; TAKE AS DIRECTED.</text>
              <statusCode code="completed"/>
              <routeCode code="OR" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="AllScripts" displayName="Oral"/>
              <doseQuantity value="5" unit="MG"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="2.16.840.1.113883.10.20.1.53" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2" assigningAuthorityName="HITSP/C83"/>
                  <manufacturedMaterial classCode="MMAT" determinerCode="KIND">
                    <code code="67544005278" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NationalDrugCode" displayName="Coumadin 5 MG Oral Tablet">
                      <originalText>
                                                <reference nullFlavor="UNK"/>
                                            </originalText>
                    </code>
                    <name>Coumadin 5 MG Oral Tablet</name>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId extension="2.16.840.1.113883.3.88.11.83.8.1" assigningAuthorityName="HITSP/C83"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <supply classCode="SPLY" moodCode="INT">
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.3" assigningAuthorityName="HITSP/C83"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.3" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.10.20.1.34" assigningAuthorityName="CCD"/>
                  <id root="2.16.840.1.113883.3.88.11.83.8.3" assigningAuthorityName="HITSP/C83"/>
                  <repeatNumber value="0"/>
                </supply>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry typeCode="DRIV">
            <substanceAdministration classCode="SBADM" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.8" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.24" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <id root="ee0c82d4-2087-3348-bd5f-38bbf7393a71"/>
              <text>Digitek 0.25 MG TABS; TAKE 1 TABLET DAILY.</text>
              <statusCode code="completed"/>
              <routeCode code="OR" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="AllScripts" displayName="Oral"/>
              <doseQuantity value="0.25" unit="MG"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="2.16.840.1.113883.10.20.1.53" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2" assigningAuthorityName="HITSP/C83"/>
                  <manufacturedMaterial classCode="MMAT" determinerCode="KIND">
                    <code code="62794014656" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NationalDrugCode" displayName="Digitek 0.25 MG TABS">
                      <originalText>
                                                <reference nullFlavor="UNK"/>
                                            </originalText>
                    </code>
                    <name>Digitek 0.25 MG TABS</name>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId extension="2.16.840.1.113883.3.88.11.83.8.1" assigningAuthorityName="HITSP/C83"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <supply classCode="SPLY" moodCode="INT">
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.3" assigningAuthorityName="HITSP/C83"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.3" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.10.20.1.34" assigningAuthorityName="CCD"/>
                  <id root="2.16.840.1.113883.3.88.11.83.8.3" assigningAuthorityName="HITSP/C83"/>
                  <repeatNumber value="0"/>
                </supply>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry typeCode="DRIV">
            <substanceAdministration classCode="SBADM" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.8" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.24" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <id root="12759410-3326-346a-b609-b27c6b74fb94"/>
              <text>Aricept 5 MG Oral Tablet; TAKE 1 TABLET DAILY AS DIRECTED.</text>
              <statusCode code="completed"/>
              <routeCode code="OR" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="AllScripts" displayName="Oral"/>
              <doseQuantity value="5" unit="MG"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="2.16.840.1.113883.10.20.1.53" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2" assigningAuthorityName="HITSP/C83"/>
                  <manufacturedMaterial classCode="MMAT" determinerCode="KIND">
                    <code code="66336056915" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NationalDrugCode" displayName="Aricept 5 MG Oral Tablet">
                      <originalText>
                                                <reference nullFlavor="UNK"/>
                                            </originalText>
                    </code>
                    <name>Aricept 5 MG Oral Tablet</name>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId extension="2.16.840.1.113883.3.88.11.83.8.1" assigningAuthorityName="HITSP/C83"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <supply classCode="SPLY" moodCode="INT">
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.3" assigningAuthorityName="HITSP/C83"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.3" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.10.20.1.34" assigningAuthorityName="CCD"/>
                  <id root="2.16.840.1.113883.3.88.11.83.8.3" assigningAuthorityName="HITSP/C83"/>
                  <repeatNumber value="0"/>
                </supply>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry typeCode="DRIV">
            <substanceAdministration classCode="SBADM" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.8" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.24" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <id root="133a1bba-b45d-3fbf-a2d0-22d68898998f"/>
              <text>Captopril 50 MG Oral Tablet; TAKE 1 TABLET 3 TIMES DAILY.</text>
              <statusCode code="completed"/>
              <routeCode code="OR" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="AllScripts" displayName="Oral"/>
              <doseQuantity value="50" unit="MG"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="2.16.840.1.113883.10.20.1.53" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2" assigningAuthorityName="HITSP/C83"/>
                  <manufacturedMaterial classCode="MMAT" determinerCode="KIND">
                    <code code="68645016259" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NationalDrugCode" displayName="Captopril 50 MG Oral Tablet">
                      <originalText>
                                                <reference nullFlavor="UNK"/>
                                            </originalText>
                    </code>
                    <name>Captopril 50 MG Oral Tablet</name>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId extension="2.16.840.1.113883.3.88.11.83.8.1" assigningAuthorityName="HITSP/C83"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <supply classCode="SPLY" moodCode="INT">
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.3" assigningAuthorityName="HITSP/C83"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.3" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.10.20.1.34" assigningAuthorityName="CCD"/>
                  <id root="2.16.840.1.113883.3.88.11.83.8.3" assigningAuthorityName="HITSP/C83"/>
                  <repeatNumber value="0"/>
                </supply>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry typeCode="DRIV">
            <substanceAdministration classCode="SBADM" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.8" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.24" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <id root="6ff01042-02c2-39bc-bd78-350892d213a6"/>
              <text>Aspirin 81 MG Oral Tablet; TAKE 1 TABLET DAILY.</text>
              <statusCode code="completed"/>
              <routeCode code="OR" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="AllScripts" displayName="Oral"/>
              <doseQuantity value="81" unit="MG"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="2.16.840.1.113883.10.20.1.53" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2" assigningAuthorityName="HITSP/C83"/>
                  <manufacturedMaterial classCode="MMAT" determinerCode="KIND">
                    <code code="49999035930" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NationalDrugCode" displayName="Aspirin 81 MG Oral Tablet">
                      <originalText>
                                                <reference nullFlavor="UNK"/>
                                            </originalText>
                    </code>
                    <name>Aspirin 81 MG Oral Tablet</name>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId extension="2.16.840.1.113883.3.88.11.83.8.1" assigningAuthorityName="HITSP/C83"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <supply classCode="SPLY" moodCode="INT">
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.3" assigningAuthorityName="HITSP/C83"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.3" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.10.20.1.34" assigningAuthorityName="CCD"/>
                  <id root="2.16.840.1.113883.3.88.11.83.8.3" assigningAuthorityName="HITSP/C83"/>
                  <repeatNumber value="0"/>
                </supply>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry typeCode="DRIV">
            <substanceAdministration classCode="SBADM" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.8" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.24" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <id root="db5dcab6-50c7-3b3b-8ead-19c5709bbdcb"/>
              <text>Simvastatin 20 MG Oral Tablet; TAKE 1 TABLET DAILY.</text>
              <statusCode code="completed"/>
              <effectiveTime xsi:type="IVL_TS">
                <low value="20130128"/>
                <high value="20130128"/>
              </effectiveTime>
              <routeCode code="OR" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="AllScripts" displayName="Oral"/>
              <doseQuantity value="20" unit="MG"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="2.16.840.1.113883.10.20.1.53" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2" assigningAuthorityName="HITSP/C83"/>
                  <manufacturedMaterial classCode="MMAT" determinerCode="KIND">
                    <code code="68645026154" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NationalDrugCode" displayName="Simvastatin 20 MG Oral Tablet">
                      <originalText>
                                                <reference nullFlavor="UNK"/>
                                            </originalText>
                    </code>
                    <name>Simvastatin 20 MG Oral Tablet</name>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId extension="2.16.840.1.113883.3.88.11.83.8.1" assigningAuthorityName="HITSP/C83"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <supply classCode="SPLY" moodCode="INT">
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.3" assigningAuthorityName="HITSP/C83"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.3" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.10.20.1.34" assigningAuthorityName="CCD"/>
                  <id root="2.16.840.1.113883.3.413" extension="60942835"/>
                  <effectiveTime value="20140128"/>
                  <repeatNumber value="3"/>
                  <quantity value="90" unit="{TABS}"/>
                  <author>
                    <time value="20130128"/>
                    <assignedAuthor>
                      <id root="2.16.840.1.113883.4.6" extension="1427041821" assigningAuthorityName="National Provider ID"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>FIRSTNAME_PROVIDER LASTNAME</name>
                      </assignedPerson>
                    </assignedAuthor>
                  </author>
                </supply>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry typeCode="DRIV">
            <substanceAdministration classCode="SBADM" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.8" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.24" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <id root="6523ff90-64c8-3432-8a9a-fef171a8adaf"/>
              <text>Sulfamethoxazole-TMP DS 800-160 MG Oral Tablet; TAKE 1 TABLET 1-2x  DAILY.</text>
              <statusCode code="completed"/>
              <effectiveTime xsi:type="IVL_TS">
                <low value="20130304"/>
                <high value="20130304"/>
              </effectiveTime>
              <routeCode code="OR" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="AllScripts" displayName="Oral"/>
              <doseQuantity unit="MG"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="2.16.840.1.113883.10.20.1.53" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2" assigningAuthorityName="HITSP/C83"/>
                  <manufacturedMaterial classCode="MMAT" determinerCode="KIND">
                    <code code="68462034005" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NationalDrugCode" displayName="Sulfamethoxazole-TMP DS 800-160 MG Oral Tablet">
                      <originalText>
                                                <reference nullFlavor="UNK"/>
                                            </originalText>
                    </code>
                    <name>Sulfamethoxazole-TMP DS 800-160 MG Oral Tablet</name>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId extension="2.16.840.1.113883.3.88.11.83.8.1" assigningAuthorityName="HITSP/C83"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <supply classCode="SPLY" moodCode="INT">
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.3" assigningAuthorityName="HITSP/C83"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.3" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.10.20.1.34" assigningAuthorityName="CCD"/>
                  <id root="2.16.840.1.113883.3.413" extension="65051580"/>
                  <effectiveTime value="20140304"/>
                  <repeatNumber value="0"/>
                  <quantity value="60" unit="{TABS}"/>
                  <author>
                    <time value="20130304"/>
                    <assignedAuthor>
                      <id root="2.16.840.1.113883.4.6" extension="1861519985" assigningAuthorityName="National Provider ID"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>FIRSTNAME_PROVIDER LASTNAME</name>
                      </assignedPerson>
                    </assignedAuthor>
                  </author>
                </supply>
              </entryRelationship>
            </substanceAdministration>
          </entry>
          <entry typeCode="DRIV">
            <substanceAdministration classCode="SBADM" moodCode="EVN">
              <templateId root="2.16.840.1.113883.3.88.11.83.8" assigningAuthorityName="HITSP/C83"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7" assigningAuthorityName="IHE"/>
              <templateId root="2.16.840.1.113883.10.20.1.24" assigningAuthorityName="CCD"/>
              <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
              <id root="61dbf3b8-6e77-3ed4-b956-08de7416fc46"/>
              <text>Allopurinol 100 MG Oral Tablet; TAKE 1 TABLET DAILY.</text>
              <statusCode code="completed"/>
              <effectiveTime xsi:type="IVL_TS">
                <low value="20130304"/>
                <high value="20130304"/>
              </effectiveTime>
              <routeCode code="OR" codeSystem="2.16.840.1.113883.3.26.1.1" codeSystemName="AllScripts" displayName="Oral"/>
              <doseQuantity value="100" unit="MG"/>
              <consumable typeCode="CSM">
                <manufacturedProduct classCode="MANU">
                  <templateId root="2.16.840.1.113883.10.20.1.53" assigningAuthorityName="CCD"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.2" assigningAuthorityName="HITSP/C83"/>
                  <manufacturedMaterial classCode="MMAT" determinerCode="KIND">
                    <code code="67877012210" codeSystem="2.16.840.1.113883.6.69" codeSystemName="NationalDrugCode" displayName="Allopurinol 100 MG Oral Tablet">
                      <originalText>
                                                <reference nullFlavor="UNK"/>
                                            </originalText>
                    </code>
                    <name>Allopurinol 100 MG Oral Tablet</name>
                  </manufacturedMaterial>
                </manufacturedProduct>
              </consumable>
              <entryRelationship typeCode="SUBJ">
                <observation classCode="OBS" moodCode="EVN">
                  <templateId extension="2.16.840.1.113883.3.88.11.83.8.1" assigningAuthorityName="HITSP/C83"/>
                  <code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
                  <statusCode code="completed"/>
                </observation>
              </entryRelationship>
              <entryRelationship typeCode="REFR">
                <supply classCode="SPLY" moodCode="INT">
                  <templateId root="2.16.840.1.113883.3.88.11.83.8.3" assigningAuthorityName="HITSP/C83"/>
                  <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.3" assigningAuthorityName="IHE"/>
                  <templateId root="2.16.840.1.113883.10.20.1.34" assigningAuthorityName="CCD"/>
                  <id root="2.16.840.1.113883.3.413" extension="65051483"/>
                  <effectiveTime value="20140304"/>
                  <repeatNumber value="5"/>
                  <quantity value="30" unit="{TABS}"/>
                  <author>
                    <time value="20130304"/>
                    <assignedAuthor>
                      <id root="2.16.840.1.113883.4.6" extension="1992700371" assigningAuthorityName="National Provider ID"/>
                      <addr nullFlavor="UNK"/>
                      <telecom nullFlavor="UNK"/>
                      <assignedPerson>
                        <name>FIRSTNAME_PROVIDER LASTNAME</name>
                      </assignedPerson>
                    </assignedAuthor>
                  </author>
                </supply>
              </entryRelationship>
            </substanceAdministration>
          </entry>
        </section>
      </component>
    </structuredBody>
  </component>
</ClinicalDocument>