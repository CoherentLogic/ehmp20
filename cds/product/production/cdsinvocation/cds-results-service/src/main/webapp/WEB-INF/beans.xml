<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cxf="http://cxf.apache.org/core"
	xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
	http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
	http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:annotation-config />
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
	<!-- doesn't work: debug or delete <import resource="classpath:mongodb-dao-context.xml"/> -->

	<cxf:bus>
		<cxf:features>
			<cxf:logging />
		</cxf:features>
	</cxf:bus>

	<bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />

	<!-- bean class="org.springframework.web.context.support.ServletContextPropertyPlaceholderConfigurer"/ -->
	<!-- bean class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer"/ -->

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				 <value>classpath:cds-results-service.properties</value>
                <value>file:${catalina.home}/shared/classes/cds-results-service.properties</value>
			</list>
		</property>
	</bean>

	<bean id="projectProperties" class="com.cognitive.cds.invocation.ProjectProperties"
		scope="singleton">
		<property name="propertyName" value="classpath:cognitive.cds.config.properties" />
	</bean>

	<!-- Add as a bean reference for Mongo DB access -->
	<bean id="mongoDbDao" class="com.cognitive.cds.invocation.mongo.MongoDbDao">
		<constructor-arg name="mongoDbUrl" value="${mongo-db-url}" />
	</bean>

    <!-- Add as a bean reference for CRS access -->
    <bean id="crsClient" class="com.cognitive.cds.invocation.crs.CRSClient">
        <property name="CRSServer" value="${CRSServer}" />
        <property name="queryPath" value="/ehmp/query" />
    </bean>

    <!-- CRS Resolver -->
    <bean id="crsResolver" class="com.cognitive.cds.invocation.crs.CRSResolver">
        <property name="CRSClient" ref="crsClient" />
    </bean>

	<!-- Default Data Model Handler -->
	<bean id="fhirDataHandler"
		class="com.cognitive.cds.invocation.fhir.FHIRJSONDataModelHandler">
		<lookup-method name="createFhirDataRetriever" bean="retrieveFhirData" />
	</bean>

    <bean id="fhirClient" class="com.cognitive.cds.invocation.fhir.FhirClient" scope="singleton">
        <property name="baseURL" value="${RDK-resource-server}" />
        <property name="authURL" value="${authentication-path}" />
    </bean>

	<bean id="retrieveFhirData" class="com.cognitive.cds.invocation.fhir.FhirDataRetriever"
		scope="prototype">
        <property name="fhirClient" ref="fhirClient" />
	</bean>


	<!-- Patient Features -->

    <bean id="patientFetcher"
        class="com.cognitive.cds.services.cdsexecution.PatientListFetcher">
        <property name="subjectListServerURL" value="${patientListServerURL}" />
                <property name="fhirClient" ref="fhirClient" />
        <property name="patientLookup" ref="patientLookup" />
    </bean>

	<bean id="patientLookup" class="com.cognitive.cds.invocation.mongo.PatientListDao">
		<property name="mongoDbDao" ref="mongoDbDao" />
	</bean>


	<!-- Engine and Intent Features -->

	<bean id="OpenCDS" class="com.cognitive.cds.invocation.engineplugins.OpenCDS">
		<!-- Comment out the line below to use dynamic configuration. (Engine Instance 
			State Service) -->
		<!--property name="endPoint" value="${engineOneUrl}" / -->
	</bean>

	<bean id="engineTwo" class="com.cognitive.cds.invocation.engineplugins.OpenCDS">
		<!-- Comment out the line below to use dynamic configuration. (Engine Instance 
			State Service) -->
		<!--property name="endPoint" value="${engineTwoUrl}" / -->
	</bean>

	<bean id="mockEngine" class="com.cognitive.cds.invocation.engineplugins.MockEngine">
		<property name="baseBundleBuilder">
			<bean class="com.cognitive.cds.services.cdsexecution.MockResultsBundle" />
		</property>
	</bean>

	<bean id="engineLookup" class="com.cognitive.cds.invocation.mongo.EngineInfoDao">
		<property name="mongoDbDao" ref="mongoDbDao" />
	</bean>

	<bean id="intentLookup" class="com.cognitive.cds.invocation.mongo.IntentMappingDao">
		<property name="mongoDbDao" ref="mongoDbDao" />
	</bean>

	<bean id="engineInfoDao" class="com.cognitive.cds.invocation.mongo.EngineInfoDao">
		<property name="mongoDbDao" ref="mongoDbDao" />
	</bean>

	<bean id="engineInstanceStateManager" class="com.cognitive.cds.invocation.EngineInstanceStateManager">
		<property name="engineInfoDao" ref="engineInfoDao" />
	</bean>

	<bean id="repositoryLookup" class="com.cognitive.cds.invocation.RepositoryLookup">
		<property name="intentMappingAgent" ref="intentLookup" />
		<property name="engineInfoAgent" ref="engineLookup" />
		<property name="caching" value="false" />
	</bean>


	<bean id="cdsInvoker" class="com.cognitive.cds.invocation.CDSInvoker">
		<property name="repositoryLookupAgent" ref="repositoryLookup" />
		<property name="dataModelHandlerBeanName" value="fhirDataHandler" />
        <property name="resolver" ref="crsResolver" />
		<property name="enginesMap">
			<map>
				<entry key="OpenCDS">
					<bean class="com.cognitive.cds.invocation.model.EngineInfo">
						<constructor-arg name="engine" ref="OpenCDS" />
						<property name="name" value="OpenCDS" />
						<property name="type" value="OpenCDS" />
						<property name="version" value="2.1.2" />
						<property name="environment" value="" />
					</bean>
				</entry>
				<entry key="engineTwo">
					<bean class="com.cognitive.cds.invocation.model.EngineInfo">
						<constructor-arg name="engine" ref="engineTwo" />
						<property name="name" value="engineTwo" />
						<property name="type" value="OpenCDS" />
						<property name="version" value="2.1.2" />
						<property name="environment" value="" />
					</bean>
				</entry>
				<entry key="mockEngineOne">
					<bean class="com.cognitive.cds.invocation.model.EngineInfo">
						<constructor-arg name="engine" ref="mockEngine" />
						<property name="name" value="mockEngine" />
						<property name="type" value="Mock" />
						<property name="version" value="1" />
						<property name="environment" value="" />
					</bean>
				</entry>
			</map>
		</property>
		<property name="intentsMap">
			<map>
				<entry key="PTConsultScreen">
                    <bean class="com.cognitive.cds.invocation.model.IntentMapping"></bean>
				</entry>
				<entry key="providerInteractiveAdvice">
					<bean class="com.cognitive.cds.invocation.model.IntentMapping">
						<property name="invocations">
							<list>
								<bean class="com.cognitive.cds.invocation.model.InvocationMapping">
									<property name="engineName" value="OpenCDS"></property>
									<property name="rules">
										<list>
											<bean class="com.cognitive.cds.invocation.model.Rule">
												<property name="id" value="genderAgeRule"></property>
												<property name="properties">
													<props>
														<prop key="scopingEntityId">com.cognitive</prop>
														<prop key="businessId">genderAge</prop>
														<prop key="version">1.0.0</prop>
													</props>
												</property>
											</bean>
										</list>
									</property>
									<property name="dataQueries">
										<list>
											<value>patient/##SUBJECT.ID##</value>
										</list>
									</property>
								</bean>
							</list>
						</property>
					</bean>
				</entry>
				<entry key="BounceBack">
					<bean class="com.cognitive.cds.invocation.model.IntentMapping">
						<property name="invocations">
							<list>
								<bean class="com.cognitive.cds.invocation.model.InvocationMapping">
									<property name="engineName" value="OpenCDS"></property>
									<property name="rules">
										<list>
											<bean class="com.cognitive.cds.invocation.model.Rule">
												<property name="id" value="fhirBounceback"></property>
												<property name="properties">
													<props>
														<prop key="scopingEntityId">com.cognitive</prop>
														<prop key="businessId">fhirBounceback</prop>
														<prop key="version">1.0.0</prop>
													</props>
												</property>
											</bean>
										</list>
									</property>
								</bean>
							</list>
						</property>
					</bean>
				</entry>
				<entry key="FitFobtResult">
					<bean class="com.cognitive.cds.invocation.model.IntentMapping">
						<property name="invocations">
							<list>
								<bean class="com.cognitive.cds.invocation.model.InvocationMapping">
									<property name="engineName" value="OpenCDS" />
									<property name="rules">
										<list>
											<bean class="com.cognitive.cds.invocation.model.Rule">
												<property name="id" value="fitFobtResult" />
												<property name="properties">
													<props>
														<prop key="scopingEntityId">com.cognitive</prop>
														<prop key="businessId">colorectal</prop>
														<prop key="version">1.0.0</prop>
													</props>
												</property>
											</bean>
										</list>
									</property>
								</bean>
							</list>
						</property>
					</bean>
				</entry>
				<entry key="VitalsValidation">
					<bean class="com.cognitive.cds.invocation.model.IntentMapping">
						<property name="invocations">
							<list>
								<bean class="com.cognitive.cds.invocation.model.InvocationMapping">
									<property name="engineName" value="OpenCDS"></property>
									<property name="rules">
										<list>
											<bean class="com.cognitive.cds.invocation.model.Rule">
												<property name="id" value="fhirBounceback" />
												<property name="properties">
													<props>
														<prop key="scopingEntityId">com.cognitive</prop>
														<prop key="businessId">validateVitals</prop>
														<prop key="version">1.0.0</prop>
													</props>
												</property>
											</bean>
										</list>
									</property>
									<property name="dataQueries">
                                        <list>
                                            <value>patient/##SUBJECT.ID##</value>
                                            <value>patient/##SUBJECT.ID##/observation?code=8302-2&amp;_sort:dsc=date&amp;_count=1&amp;_tag=vital-signs</value>
                                            <value>patient/##SUBJECT.ID##/observation?code=29463-7&amp;_sort:dsc=date&amp;_count=1&amp;_tag=vital-signs</value>
                                        </list>
									</property>
								</bean>
							</list>
						</property>
					</bean>
				</entry>
				<entry key="ProblemsValidation">
					<bean class="com.cognitive.cds.invocation.model.IntentMapping">
						<property name="invocations">
							<list>
								<bean class="com.cognitive.cds.invocation.model.InvocationMapping">
									<property name="engineName" value="OpenCDS" />
									<property name="rules">
										<list>
											<bean class="com.cognitive.cds.invocation.model.Rule">
												<property name="id" value="fhirBounceback" />
												<property name="properties">
													<props>
														<prop key="scopingEntityId">com.cognitive</prop>
														<!-- this bounce back rule is a placeholder rule until allergy 
															validation rule is written. -->
														<prop key="businessId">fhirBounceback</prop>
														<prop key="version">1.0.0</prop>
													</props>
												</property>
											</bean>
										</list>
									</property>
									<!-- uncomment this when the rule is ready -->
									<!--property name="dataQueries"> <list> <value>patient/##SUBJECT.ID##</value> 
										<value>patient/##SUBJECT.ID##/condition</value> </list> </property -->
								</bean>
							</list>
						</property>
					</bean>
				</entry>
				<entry key="AllergyValidation">
					<bean class="com.cognitive.cds.invocation.model.IntentMapping">
						<property name="invocations">
							<list>
								<bean class="com.cognitive.cds.invocation.model.InvocationMapping">
									<property name="engineName" value="OpenCDS"></property>
									<property name="rules">
										<list>
											<bean class="com.cognitive.cds.invocation.model.Rule">
												<property name="id" value="fhirBounceback" />
												<property name="properties">
													<props>
														<prop key="scopingEntityId">com.cognitive</prop>
														<prop key="businessId">fhirBounceback</prop>
														<!-- this bounce back rule is a placeholder rule until allergy 
															validation rule is written. -->
														<prop key="version">1.0.0</prop>
													</props>
												</property>
											</bean>
										</list>
									</property>
									<!--uncomment this when the rule is ready -->
									<!--property name="dataQueries"> <list> <value>patient/##SUBJECT.ID##</value> 
										<value>allergyintolerance?subject.identifier=##SUBJECT.ID##</value> </list> 
										</property -->
								</bean>
							</list>
						</property>
					</bean>
				</entry>
				<entry key="RheumatologyConsultScreen">
					<bean class="com.cognitive.cds.invocation.model.IntentMapping">
						<property name="invocations">
							<list>
								<bean class="com.cognitive.cds.invocation.model.InvocationMapping">
									<property name="engineName" value="OpenCDS"></property>
									<property name="rules">
										<list>
											<bean class="com.cognitive.cds.invocation.model.Rule">
												<property name="id" value="rheumatologyConsultScreen" />
												<property name="properties">
													<props>
														<prop key="scopingEntityId">com.cognitive</prop>
														<prop key="businessId">rheumatologyConsultScreen</prop>
														<prop key="version">1.0.0</prop>
													</props>
												</property>
											</bean>
										</list>
									</property>
									<property name="dataQueries"> 
									<list>  
										<value>patient/##SUBJECT.ID##/diagnosticreport?domain=lab&amp;date=##dateGreaterThanOrEqual-90d##</value>
									</list> 
									</property>
									<property name="crsResolverRequired">
								        <value type="java.lang.Boolean">true</value>
									</property>
									<property name="prerequisites"> 
									<list>  
                                        <bean class="com.cognitive.cds.invocation.execution.model.Prerequisite">
                                            <!-- isA.sparql points to representation of the defined parametric query -->
                                            <property name="domain" value="lab" />
                                            <property name="display" value="CRP" />
                                            <property name="valueSetQuery" value="valueSet.sparql" />
                                            <property name="remediationQuery" value="orderable.sparql" />
                                            <property name="status" value="active" />
                                            <property name="coding">
                                                <bean class="com.cognitive.cds.invocation.execution.model.Coding" >
                                                    <property name="code" value="55235003"  />
                                                    <property name="system" value="http://snomed.org" />
                                                    <property name="display" value="C Reactive Protein" />
                                                </bean>
                                            </property>
                                            <property name="remediation">
                                                <bean class="com.cognitive.cds.invocation.execution.model.Remediation" >
                                                    <property name="domain" value="lab"  />
                                                    <property name="action" value="order" />
                                                </bean>
                                            </property>
                                        </bean> 
                                        <bean class="com.cognitive.cds.invocation.execution.model.Prerequisite">
                                            <property name="domain" value="lab" />
                                            <property name="display" value="RF" />
                                            <property name="valueSetQuery" value="valueSet.sparql" />
                                            <property name="remediationQuery" value="orderable.sparql" />
                                            <property name="status" value="active" />
                                            <property name="coding">
                                                <bean class="com.cognitive.cds.invocation.execution.model.Coding" >
                                                    <property name="code" value="415301001"  />
                                                    <property name="system" value="http://snomed.org" />
                                                    <property name="display" value="Rheumatoid Factor" />
                                                </bean>
                                            </property>
                                            <property name="remediation">
                                                <bean class="com.cognitive.cds.invocation.execution.model.Remediation" >
                                                    <property name="domain" value="lab"  />
                                                    <property name="action" value="order" />
                                                </bean>
                                            </property>
                                        </bean>
									</list> 
									</property>
								</bean>
							</list>
						</property>
					</bean>
				</entry>
				<entry key="HTN">
					<bean class="com.cognitive.cds.invocation.model.IntentMapping">
						<property name="invocations">
							<list>
								<bean class="com.cognitive.cds.invocation.model.InvocationMapping">
									<property name="engineName" value="OpenCDS"></property>
									<property name="rules">
										<list>
											<bean class="com.cognitive.cds.invocation.model.Rule">
												<property name="id" value="genderAgeRule" />
												<property name="properties">
													<props>
														<prop key="scopingEntityId">com.cognitive</prop>
														<prop key="businessId">hypertension</prop>
														<prop key="version">1.0.0</prop>
													</props>
												</property>
											</bean>
										</list>
									</property>
									<property name="dataQueries">
										<list>
											<value>patient/##SUBJECT.ID##</value>
											<value>patient/##SUBJECT.ID##/observation</value>
											<value>educations?subject.identifier=##SUBJECT.ID##</value>
										</list>
									</property>
								</bean>
							</list>
						</property>
					</bean>
				</entry>
				<entry key="AAA">
					<bean class="com.cognitive.cds.invocation.model.IntentMapping">
						<property name="invocations">
							<list>
								<bean class="com.cognitive.cds.invocation.model.InvocationMapping">
									<property name="engineName" value="OpenCDS"></property>
									<property name="rules">
										<list>
											<bean class="com.cognitive.cds.invocation.model.Rule">
												<property name="id" value="AAA" />
												<property name="properties">
													<props>
														<prop key="scopingEntityId">com.cognitive</prop>
														<prop key="businessId">abdominalAorticAneurysmScreening</prop>
														<prop key="version">1.0.0</prop>
													</props>
												</property>
											</bean>
										</list>
									</property>
									<property name="dataQueries">
										<list>
											<value>patient/##SUBJECT.ID##</value>
                                            <value>patient/##SUBJECT.ID##/observation?_tag=social-history</value>
										</list>
									</property>
								</bean>
							</list>
						</property>
					</bean>
				</entry>
				<entry key="providerBatchAdvice">
					<bean class="com.cognitive.cds.invocation.model.IntentMapping">
						<property name="invocations">
							<list>
								<bean class="com.cognitive.cds.invocation.model.InvocationMapping">
									<property name="engineName" value="OpenCDS"></property>
									<property name="rules">
										<list>
											<bean class="com.cognitive.cds.invocation.model.Rule">
												<property name="id" value="genderAgeRule"></property>
												<property name="properties">
													<props>
														<prop key="scopingEntityId">com.cognitive</prop>
														<prop key="businessId">genderAge</prop>
														<prop key="version">1.0.0</prop>
													</props>
												</property>
											</bean>
										</list>
									</property>
									<property name="dataQueries">
										<list>
											<value>patient/##SUBJECT.ID##</value>
										</list>
									</property>
								</bean>
							</list>
						</property>
					</bean>
				</entry>
				<entry key="mockBatch">
					<!-- This Intent is used for mock Batch requests -->
					<bean class="com.cognitive.cds.invocation.model.IntentMapping">
						<property name="invocations">
							<list>
								<bean class="com.cognitive.cds.invocation.model.InvocationMapping">
									<property name="engineName" value="mockEngineOne" />
									<property name="rules">
										<list>
											<bean class="com.cognitive.cds.invocation.model.Rule">
												<property name="id" value="genderAgeRule" />
												<property name="properties">
													<props>
														<prop key="delay">10</prop>
													</props>
												</property>
											</bean>
										</list>
									</property>
									<property name="dataQueries">
										<list>
											<value>patient/##SUBJECT.ID##</value>
											<value>patient/##SUBJECT.ID##/observation</value>
											<value>educations?subject.identifier=##SUBJECT.ID##</value>
										</list>
									</property>
								</bean>
							</list>
						</property>
					</bean>
				</entry>
				<entry key="OccupationalMedicine">
					<bean class="com.cognitive.cds.invocation.model.IntentMapping">
						<property name="invocations">
							<list>
								<bean class="com.cognitive.cds.invocation.model.InvocationMapping">
									<property name="engineName" value="engineTwo"></property>
									<property name="rules">
										<list>
											<bean class="com.cognitive.cds.invocation.model.Rule">
												<property name="id" value="agentOrangeRule" />
												<property name="properties">
													<props>
														<prop key="scopingEntityId">com.cognitive</prop>
														<prop key="businessId">agentOrange</prop>
														<prop key="version">1.0.0</prop>
													</props>
												</property>
											</bean>
										</list>
									</property>
									<property name="dataQueries">
										<list>
											<value>patient/##SUBJECT.ID##</value>
											<value>patient/##SUBJECT.ID##/observation</value>
											<value>educations?subject.identifier=##SUBJECT.ID##</value>
										</list>
									</property>
								</bean>
							</list>
						</property>
					</bean>
				</entry>
			</map>
		</property>
		<property name="metricCollectors">
			<list>
				<bean
					class="com.cognitive.cds.invocation.metricsplugins.MetricsServicePush">
					<property name="metricsEndpoint"
						value="http://localhost:8080/cds-metrics-service/rest/updateMetrics" />
					<property name="sl4fjLogger" value="invocationsFW" />
				</bean>
				<bean
					class="com.cognitive.cds.invocation.metricsplugins.SimpleMetricsLogger">
					<property name="loggerName" value="invocationMetrics" />
					<property name="sl4fjLogger" value="invocationsFW" />
				</bean>
				<bean class="com.cognitive.cds.invocation.metricsplugins.DoNothing" />
			</list>
		</property>
	</bean>
	<bean id="liveWpManager"
		class="com.cognitive.cds.services.cdsexecution.workproduct.DaoWorkProductManager">
		<property name="workProductDao" ref="workProductDao" />
		<property name="workProductSubscriptionDao" ref="workProductSubscriptionDao" />
	</bean>

	<bean id="workProductDao" class="com.cognitive.cds.invocation.mongo.WorkProductDao">
		<property name="mongoDbDao" ref="mongoDbDao" />
	</bean>

	<bean id="workProductSubscriptionDao"
		class="com.cognitive.cds.invocation.mongo.WorkProductSubscriptionDao">
		<property name="mongoDbDao" ref="mongoDbDao" />
	</bean>

	<bean id="jobDao" class="com.cognitive.cds.invocation.mongo.JobDao">
		<property name="mongoDbDao" ref="mongoDbDao" />
	</bean>

	<jaxrs:server id="services" address="/">
		<jaxrs:serviceBeans>
			<bean id="baseExecutionService"
				class="com.cognitive.cds.services.cdsexecution.ExecutionService">
				<property name="cdsInvoker" ref="cdsInvoker" />
				<property name="jobServerURL" value="" /> <!-- ${JobInfo-server}" /> -->
				<property name="jobDao" ref="jobDao" />
				<property name="workProductPackager">
					<bean
						class="com.cognitive.cds.services.cdsexecution.workproduct.FHIRWorkProductPackager">
						<property name="handlerMap">
							<map>
								<entry key="CommunicationRequest">
									<bean
										class="com.cognitive.cds.services.cdsexecution.workproduct.producers.FHIRCommunicationRequest" />
								</entry>
							</map>
						</property>
					</bean>
				</property>
				<property name="workProductManagement" ref="liveWpManager" />
				<property name="subjectListFetchers">
					<map>
						<entry key="Patient">
							<ref bean="patientFetcher" />
						</entry>
					</map>
				</property>
			</bean>
			<bean id="engineInstanceStateService"
				class="com.cognitive.cds.services.engineinstance.EngineInstanceStateService">
				<property name="engineInfoDao" ref="engineInfoDao" />
			</bean>
			<bean id="cdsAdviceService"
				class="com.cognitive.cds.services.cdsresults.RulesResultsService">
				<constructor-arg name="cdsInvoker" ref="cdsInvoker" />
				<property name="fhirArtifactMap">
					<map>
						<entry key="CommunicationRequest">
							<bean
								class="com.cognitive.cds.services.cdsexecution.workproduct.producers.FHIRCommunicationRequest" />
						</entry>
					</map>
				</property>
			</bean>
			<bean id="intentMappingService"
				class="com.cognitive.cds.services.cdsresults.IntentMappingService">
				<property name="intentLookup" ref="intentLookup" />
			</bean>
			<bean id="genericInvokeService"
				class="com.cognitive.cds.services.cdsinteractive.InvokeService">
				<constructor-arg name="cdsInvoker" ref="cdsInvoker" />
			</bean>
			<bean id="cdsMockInvoke"
				class="com.cognitive.cds.services.cdsinteractive.MockInvokeService" />
		</jaxrs:serviceBeans>
		<jaxrs:providers>
			<!-- bean id="jsonProvider" class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider" 
				/ -->
			<bean class="com.cognitive.cds.invocation.fhir.JsonProviderCDS" />
			<bean class="org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper">
				<property name="addMessageToResponse" value="true" />
			</bean>
			<bean id="jaxbProvider" class="org.apache.cxf.jaxrs.provider.JAXBElementProvider" />
		</jaxrs:providers>
	</jaxrs:server>
</beans>
