ext.set('groupId', 'us.vistacore.workspaceManager')
ext.set('applet', 'workspaceManager')

def localApplet = ['APP_ZIP': "${-> zipworkspaceManager.outputs.files.singleFile.getCanonicalPath()}", 'APPLET' : "workspaceManager"]

ext.set('envVars', localApplet)

buildscript {
  repositories {
      jcenter()
      maven { url 'http://dl.bintray.com/robfletcher/gradle-plugins' }
  }
  dependencies {
      classpath 'com.moowork.gradle:gradle-grunt-plugin:0.5'
  }
}

apply plugin: 'grunt'

task createNodeModulesLink << {
  File link = new File(projectDir, 'node_modules')
  if (!link.exists()) {
   ant.symlink(resource: "${parent.parent.projectDir}/node_modules", link: "${projectDir}/node_modules")
  }
}

task installNpmForworkspaceManager (type: Exec, dependsOn:[createNodeModulesLink] ) {
  commandLine "npm", "install"
  workingDir "../../"
}

task zipworkspaceManager(type: Zip) {
  archiveName = "app.zip"
  destinationDir parent.parent.buildDir
  from('../../test') {
    include = ["screens"]
  }
  from('../../') {
    includes = ["app.json"]
  }
}

task buildworkspaceManager(dependsOn:[installNpmForworkspaceManager, grunt_build]) {
  group 'workspaceManager'
  description 'Installs NPM and uses grunt to build workspaceManager'
}

task testworkspaceManager(dependsOn:[installNpmForworkspaceManager, grunt_test]) {
  group 'workspaceManager'
  description 'Installs NPM and runs grunts tests.'
}

task intTestworkspaceManager(dependsOn: [installNpmForworkspaceManager, grunt_inttest]) {
  group 'workspaceManager'
  description 'Installs NPM and runs grunts integration tests.'
}

task deployworkspaceManager(dependsOn:[zipworkspaceManager, deployApplet]) {
  group 'workspaceManager'
  description 'Locally deploys workspaceManager applet to eHMP-UI app.'
}

task workspaceManagerAcceptanceTest(dependsOn: [bundleInstall, acceptanceTestAll]){
  group "workspaceManager"
  description "Runs the workspaceManager acceptance tests in a FireFox browser"
}

task build {}
task test{}
build.dependsOn buildworkspaceManager
test.dependsOn testworkspaceManager
deployApplet.mustRunAfter zipworkspaceManager
grunt_deploy.mustRunAfter installNpmForworkspaceManager
grunt_build.mustRunAfter installNpmForworkspaceManager
grunt_test.mustRunAfter installNpmForworkspaceManager
grunt_inttest.mustRunAfter installNpmForworkspaceManager
